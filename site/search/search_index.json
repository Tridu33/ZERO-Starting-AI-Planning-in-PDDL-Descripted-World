{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ZERO-Starting AI Planning in PDDL-Descripted World plan-wiki Resources VS code PDDL\u63d2\u4ef6 solver.planning.domains\u89c4\u5212online\u89e3\u51b3\u65b9\u6848 \u89c4\u5212\u5de5\u5177\u4eec Course Materials ThePlanningCommunity Why MkDocs? Project layout ZERO-Starting AI Planning in PDDL-Descripted World \u00b6 \u4ece\u96f6\u5f00\u59cb\u7684PDDL-Descripted\u4e16\u754cAI \u89c4\u5212\u3002 plan-wiki \u00b6 https://github.com/nergmada/planning-wiki Resources \u00b6 Tutorials Getting Started with PDDL https://fareskalaboud.github.io/LearnPDDL/ \u6e90\u7801 https://github.com/fareskalaboud/LearnPDDL https://github.com/jan-dolejsi/pddl-reference https://planning.wiki/extras https://en.wikipedia.org/wiki/Planning_Domain_Definition_Language#De_facto_official_versions_of_PDDL start-process-stop model. marketplace.visualstudio.com/items?itemName=jan-dolejsi.pddl \u6559\u7a0b PDDL-editor\uff08\u57fa\u4e8evs-code\u7684\u7b80\u6613\u89c4\u5212\u5668\uff09 - \u5bfb\u98ce\u8005\u98ce\u5bfb\u7684\u6587\u7ae0 - \u77e5\u4e4e https://zhuanlan.zhihu.com/p/113874556 https://www.zhihu.com/column/pddl-basicnote PDDL\u77e5\u4e4e\u4e13\u680f youtube.com/watch?v=XW0z8Oik6G8 \u7f51\u7ad9 https://planning.wiki/ github\u6709\u6e90\u7801 https://github.com/nergmada/planning-wiki https://github.com/jan-dolejsi/pddl-reference/tree/master/docs \u6709\u5173PDDL\uff0c\u8ba1\u5212\uff0c\u5386\u53f2\u8bb0\u5f55\uff0c\u7528\u6cd5\u548c\u7814\u7a76\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6307\u5357\u3002 \u89c6\u9891\u6559\u7a0b\uff1a Learn PDDL by Fares K. Alaboud Introduction to AI Planning. Part I. (video) Introduction to AI Planning. Part II. (video) http://planning.domains/ api.planning.domains solver.planning.domains \u5f00\u6e90\u6e90\u7801 github.com/jan-dolejsi/vscode-pddl github.com/jan-dolejsi/vscode-pddl-samples VS code PDDL\u63d2\u4ef6 \u00b6 VS code PDDL\u63d2\u4ef6\u6709\u5f88\u591a\u76f8\u5173\u7814\u7a76\u94fe\u63a5 vscode \u63d2\u4ef6pddl :AI Planning and PDDL support in VS Code youtube.com/watch?v=XW0z8Oik6G8&feature=youtu.be Below you can find a collection of resources for writing, learning and using PDDL and planning. For more information on what these tools and resources are and how they can help, please visit the additional resources page. Planning.Domains Planner Tools VAL - The Plan Validator ROSPlan - Planning in ROS PlanSys2 - Planning in ROS2 Eviscerator - The Planner tester Universal Planning Validator (Under Development) https://planning.wiki/extras \u4ecb\u7ecd solver.planning.domains\u89c4\u5212online\u89e3\u51b3\u65b9\u6848 \u00b6 http://solver.planning.domains/ http://planning.domains/ \u5305\u62ec\uff1a api http://api.planning.domains/ api\u67e5\u8be2 https://github.com/AI-Planning/classical-domains PDDL\u6587\u4ef6\u7684\u7b80\u5355\u96c6\u5408\u3002\u5f53\u524d\u4ec5\u5305\u62ec\u7ecf\u5178\u95ee\u9898 planning.domains API\u63d0\u4f9b\u4e86\u5bf9\u5e7f\u6cdb\u7684PDDL\u57fa\u51c6\u57df\u548c\u95ee\u9898\u6587\u4ef6\u7684\u7f16\u7a0b\u8bbf\u95ee\u3002\u6240\u6709\u7269\u7406\u6587\u4ef6\u90fd\u53ef\u4ee5 \u5728GitHub\u7684\u57df\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u514b\u9686\u5b58\u50a8\u5e93\u6216\u4f7f\u7528\u4e0b\u9762\u63cf\u8ff0\u7684\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u6765\u81ea\u5df1\u83b7\u5f97\u4e00\u4efd\u526f\u672c\u3002 \u5982\u679c\u60a8\u5728PDDL\u6587\u4ef6\u4e2d\u53d1\u73b0\u4efb\u4f55\u9519\u8bef\uff08\u4e0d\u5b8c\u6574\u7684\u96c6\uff0c\u4e0d\u826f\u7684\u914d\u65b9\u7b49\uff09\uff0c\u8bf7\u514b\u9686\u5b58\u50a8\u5e93\uff0c\u5e76\u5c06\u60a8\u7684\u4fee\u8ba2\u4f5c\u4e3a\u8bf7\u6c42\u8bf7\u6c42\u63d0\u4ea4\u3002\u5728\u5408\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u5c06\u63a5\u53d7\u5e26\u6709\u5168\u65b0\u57fa\u51c6\u6d4b\u8bd5\u96c6\u7684\u62c9\u53d6\u8bf7\u6c42\uff08\u4f8b\u5982\uff0c\u5728\u65b0\u7684IPC\u7ade\u8d5b\u4e4b\u540e\u6216\u4f5c\u4e3a\u7279\u5b9a\u5957\u4ef6\u7684\u53d1\u5e03\uff09\u3002\u76ee\u524d\uff0c\u4ec5\u63a5\u53d7\u7ecf\u5178\u7684PDDL\u57fa\u51c6\uff08\u4efb\u4f55PDDL\u7ea7\u522b/\u8868\u73b0\u529b\uff09\uff0c\u4f46\u662f\u5c06\u6765\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u6269\u5c55\u5230\u5176\u4ed6\u66f4\u4e30\u5bcc\u7684\u5f62\u5f0f\u4e3b\u4e49\uff08POND\uff0cFOND\uff0cRDDL\u7b49\uff09\u3002 \u6587\u4ef6\u96c6\u5408\u53ea\u662fapi.planning.domains\u7684\u7b2c\u4e00\u4e2a\u7ec4\u4ef6\u3002\u8be5\u670d\u52a1\u7684\u4e3b\u8981\u65b9\u9762\u662f\u63d0\u4f9b\u7528\u4e8e\u67e5\u8be2\uff0c\u67e5\u770b\u548c\u6d4f\u89c8\u73b0\u6709\u57df\u7684\u754c\u9762\u3002\u6211\u4eec\u5b58\u50a8\u5e76\u4e0d\u65ad\u66f4\u65b0\u6bcf\u4e2a\u9886\u57df\u548c\u95ee\u9898\u7684\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u8ba1\u5212\u6210\u672c\u7684\u4e0a\u9650\u548c\u4e0b\u9650\uff0c\u57df\u4e2d\u7684\u8981\u6c42\uff0c\u95ee\u9898\u7684\u7ecf\u5178\u5bbd\u5ea6\u7b49\u3002\u5728\u6b64\u9875\u9762\u4e0a\uff0c\u60a8\u53ef\u4ee5\u627e\u5230api.planning.domains\u63a5\u53e3\u7684\u63cf\u8ff0\u4ee5\u53ca\u6709\u5173\u7684\u8be6\u7ec6\u4fe1\u606f\u7528\u6765\u7b80\u5316\u4e0eAPI\u4ea4\u4e92\u7684\u5de5\u5177/\u5e93\u3002 \u8be5API\u5305\u542b\u4e09\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff1a \u95ee\u9898\uff1a\u6709\u5173\u6bcf\u4e2a\u95ee\u9898\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5176\u6587\u4ef6\uff0c\u76f8\u5e94\u7684\u57df\u6587\u4ef6\uff0c\u95ee\u9898\u7684\u7edf\u8ba1\u4fe1\u606f\u7b49\u3002 \u57df\uff1a\u6bcf\u4e2a\u5355\u72ec\u57df\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5176\u63cf\u8ff0\u548c\u8be5\u57df\u7684\u5404\u79cd\u7edf\u8ba1\u4fe1\u606f\u3002 \u96c6\u5408\uff1a\u57df\u96c6\uff0c\u5305\u62ec\u6bcf\u4e2aIPC\u7684\u96c6\u5408\uff0c\u5355\u4e2a\u8ba1\u5212\u7a0b\u5e8f\u96c6\u5408\u7b49\u3002 \u514d\u8d23\u58f0\u660e\uff1a\u6b64\u523b\uff0cAPI\u5e94\u8be5\u88ab\u8ba4\u4e3a\u5904\u4e8e\u975e\u5e38Alpha\u9636\u6bb5\u3002\u5e0c\u671b\u6700\u7ec8\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7cbe\u786e\u5730\u5f15\u7528\u8bc4\u4f30\u8f6f\u4ef6\u65f6\u4f7f\u7528\u7684\u57fa\u51c6\uff0c\u4f46\u6682\u65f6\u6211\u4eec\u4ecd\u5728\u4fee\u590d\u9886\u57df\uff0c\u66ff\u6362\u95ee\u9898\u96c6\u5e76\u7ea0\u6b63\u5404\u79cd\u7edf\u8ba1\u6570\u636e\u4e2d\u7684\u9519\u8bef\u3002\u5728\u5220\u9664\u6b64\u514d\u8d23\u58f0\u660e\u4e4b\u524d\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u4e0d\u8981\u5c06API\u7528\u4e8e\u516c\u52a1\uff08\u5b66\u672f\u754c\u6216\u5176\u4ed6\u9886\u57df\uff09\u3002 solver http://solver.planning.domains/ \u5728\u7ebfPDDL\u6587\u4ef6\u6c42\u89e3\u5668\u8303\u4f8b\u6559\u7a0b \uff0c \u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u6307\u5411PDDL\u6587\u4ef6\u7684\u94fe\u63a5\u6216\u76f4\u63a5\u4ee5JSON\u683c\u5f0f\u53d1\u9001\u539f\u59cbPDDL\u5185\u5bb9\u6765\u8c03\u7528\u8f6f\u4ef6\uff0c\u4ee5\u68c0\u7d22\u6216\u9a8c\u8bc1\u8ba1\u5212\u3002 Javascript/pytoon\u8fdc\u7a0b\u8c03\u7528\u4f7f\u7528\u8303\u4f8b \u4ee3\u7801 editor http://editor.planning.domains/ \u5728\u7ebfPDDL\u7f16\u8f91/\u6c42\u89e3/\u9a8c\u8bc1\u5668 education http://education.planning.domains/ \u5b66\u4e60\u81ea\u52a8\u6559\u5b66\u8ba1\u5212\u548c\u5efa\u6a21\u6280\u672f\u7684\u8d44\u6e90 PPT\u8bfe\u95f4\u6e90\u7801\u548c\u89c6\u9891\u6559\u7a0b \u89c4\u5212\u5de5\u5177\u4eec \u00b6 VAL-\u8ba1\u5212\u9a8c\u8bc1\u5668 VAL \uff08\u4e5f\u79f0\u4e3a\u9a8c\u8bc1\u5668\uff09\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u7528\u4e8e\u6839\u636e\u539f\u59cb\u57df\u548c\u95ee\u9898\u6587\u4ef6\u9a8c\u8bc1\u8ba1\u5212\u8005\u751f\u6210\u7684\u89e3\u51b3\u65b9\u6848\u3002VAL\u4f7f\u60a8\u53ef\u4ee5\u5728\u6267\u884c\u64cd\u4f5c\u65f6\u9075\u5b88\u8ba1\u5212\u6240\u9700\u7684\u6240\u6709\u524d\u63d0\u6761\u4ef6\uff0c\u540c\u65f6\u68c0\u67e5\u8ba1\u5212\u662f\u5426\u771f\u6b63\u5b9e\u73b0\u4e86\u76ee\u6807\u3002 Eviscerator-\u89c4\u5212\u5668\u6d4b\u8bd5\u5668 Eviscerator \u662f\u4e3a\u6b64PDDL\u53c2\u8003\u6307\u5357\u5f00\u53d1\u7684\u5de5\u5177\uff0c\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u81ea\u52a8\u6d4b\u8bd5\u548c\u8bc6\u522b\u8ba1\u5212\u4eba\u5458\u652f\u6301\u7684PDDL\u8981\u6c42\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u5de5\u5177\uff0c\u968f\u9644\u7528\u4e8eLinux\u7684\u6301\u7eed\u90e8\u7f72\u7684\u9884\u6784\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u5b83\u5e76\u6d4b\u8bd5\u8ba1\u5212\u7a0b\u5e8f\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u7f16\u8bd1\u3002 ROSPlan-ROS\u4e2d\u7684\u8ba1\u5212 ROSPlan \u662f\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff08ROS\uff09\u7684\u6a21\u5757\uff0c\u5141\u8bb8\u5c06AI Planning\u96c6\u6210\u5230\u4f7f\u7528ROS\u7684\u673a\u5668\u4eba\u4e2d\u3002ROSPlan\u5141\u8bb8\u5bf9\u673a\u5668\u4eba\u73af\u5883\u8fdb\u884c\u5efa\u6a21\uff0c\u4ee5\u8ba1\u5212\u548c\u6267\u884c\u4efb\u52a1\u3002 Plansys2-\u5728ROS2\u4e2d\u8fdb\u884c\u89c4\u5212 Plansys2 \u662f\u673a\u5668\u4eba\u4f5c\u4e1a\u7cfb\u7edf\uff0c\u65b0\u7248\u672c\u7684\u4e00\u4e2a\u9879\u76ee**ROS2**\uff0c\u6574\u5408\u89c4\u5212\u548c\u673a\u5668\u4eba\u3002\u5b83\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u4e2a\u6846\u67b6\uff0c\u5728\u5176\u4e2d\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u4e0d\u540c\u7684\u8ba1\u5212\u4eba\u5458\u4ee5\u4f7f\u673a\u5668\u4eba\u6267\u884c\u4efb\u52a1\u3002\u4f7f\u7528 \u884c\u4e3a\u6811 \u6765\u5b9e\u73b0 \u52a8\u4f5c \uff0c\u5e76\u4e14\u5728\u4ed3\u5e93\u4e2d\u6709\u5f88\u591a \u4f8b\u5b50 \u3002 \u901a\u7528\u89c4\u5212\u9a8c\u8bc1\u5668\uff08\u5f00\u53d1\u4e2d\uff09 \u901a\u7528\u8ba1\u5212\u9a8c\u8bc1\u5668\uff08\u5f00\u53d1\u4e2d\uff09 \u662f\u4e00\u79cd\u7528\u4e8e\u9a8c\u8bc1\u8ba1\u5212\u9886\u57df\u548c\u95ee\u9898\u7684\u5de5\u5177\u3002\u5f53\u524d\uff0c\u5b83\u53ea\u80fd\u652f\u6301\u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u548c\u9886\u57df\uff0c\u4f46\u662f\u8be5\u5de5\u5177\u65e8\u5728\u8fdb\u884c\u6269\u5c55\u4ee5\u5305\u62ec\u65f6\u95f4\u57df\u548c\u591a\u4e3b\u4f53\u57df\u3002\u5982\u679c\u60a8\u9700\u8981\u4e00\u4e2a\u652f\u6301\u6bd4\u4f20\u7edf\u8ba1\u5212\u66f4\u591a\u7684PDDL\u9ad8\u7ea7\u529f\u80fd\u7684\u9a8c\u8bc1\u5668\uff0c\u8bf7\u5c1d\u8bd5\u4f7f\u7528VAL\uff08\u8ba1\u5212\u9a8c\u8bc1\u5668\uff09\u4ee3\u66ff\u3002 PDDL Tools Visual Studio Code PDDL Plugin for VSCode Sublime Text Editor MyPDDL Plugin for Sublime Atom Text Editor MyPDDL Plugin for Atom Planning.Domains PDDL Editor Learning Resources Learn PDDL by Fares K. Alaboud Introduction to AI Planning. Part I. (video) Introduction to AI Planning. Part II. (video) http://education.planning.domains/ Course Materials \u00b6 Compiled and source course materials (please contact teacher in this url for access to source materials). Lecture Slides UniBasel AI Group Misc AI and Planning Courses Lecture Slides Foundations of Artificial Intelligence (FAI) Group Misc AI and Planning Courses Lecture Slides Planning Source AI Source Example Assignments Artificial Intelligence (CS) at PUCRS Felipe Meneguzzi, Mauricio Magnaguagno, Leonardo Rosa Amado Planning using Heuristic Search assignment focused on implementing the core functions of an automated planner. Source Code Pacman Capture the Flag in AI Courses Nir Lipovetzky, Sebastian Sardina Competition using the Berkley AI Pacman framework. Students use search algoithms, PDDL, classical replanning, minimax, etc. for their agents. Competition Code ICAPS 2020 Summer School Plan Synthesis Michael Cashmore This training lab is an introduction to modelling planning problems using the Planning Domain Definition Language (PDDL). Lab Details Publicly Available PDDL Domains IPC PDDL Domains Book: An Introduction to the Planning Domain Definition Language ThePlanningCommunity \u00b6 https://app.slack.com/plans/TK9TZPZD3?entry_point=team_messages_limit_meter&feature=unlimited_messages Stack\u6709\u4e00\u4e2aplanning community\u91cc\u9762\u6709\u5f88\u591a\u8d44\u6599 Why MkDocs? \u00b6 I like take notes with markdown opened by Typora & Vnote on my local PC notes system. This document made by mkdocs.org ,because it can directly change my notes into wonderful help documents shown online. mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#zero-starting-ai-planning-in-pddl-descripted-world","text":"\u4ece\u96f6\u5f00\u59cb\u7684PDDL-Descripted\u4e16\u754cAI \u89c4\u5212\u3002","title":"ZERO-Starting AI Planning in PDDL-Descripted World"},{"location":"#plan-wiki","text":"https://github.com/nergmada/planning-wiki","title":"plan-wiki"},{"location":"#resources","text":"Tutorials Getting Started with PDDL https://fareskalaboud.github.io/LearnPDDL/ \u6e90\u7801 https://github.com/fareskalaboud/LearnPDDL https://github.com/jan-dolejsi/pddl-reference https://planning.wiki/extras https://en.wikipedia.org/wiki/Planning_Domain_Definition_Language#De_facto_official_versions_of_PDDL start-process-stop model. marketplace.visualstudio.com/items?itemName=jan-dolejsi.pddl \u6559\u7a0b PDDL-editor\uff08\u57fa\u4e8evs-code\u7684\u7b80\u6613\u89c4\u5212\u5668\uff09 - \u5bfb\u98ce\u8005\u98ce\u5bfb\u7684\u6587\u7ae0 - \u77e5\u4e4e https://zhuanlan.zhihu.com/p/113874556 https://www.zhihu.com/column/pddl-basicnote PDDL\u77e5\u4e4e\u4e13\u680f youtube.com/watch?v=XW0z8Oik6G8 \u7f51\u7ad9 https://planning.wiki/ github\u6709\u6e90\u7801 https://github.com/nergmada/planning-wiki https://github.com/jan-dolejsi/pddl-reference/tree/master/docs \u6709\u5173PDDL\uff0c\u8ba1\u5212\uff0c\u5386\u53f2\u8bb0\u5f55\uff0c\u7528\u6cd5\u548c\u7814\u7a76\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6307\u5357\u3002 \u89c6\u9891\u6559\u7a0b\uff1a Learn PDDL by Fares K. Alaboud Introduction to AI Planning. Part I. (video) Introduction to AI Planning. Part II. (video) http://planning.domains/ api.planning.domains solver.planning.domains \u5f00\u6e90\u6e90\u7801 github.com/jan-dolejsi/vscode-pddl github.com/jan-dolejsi/vscode-pddl-samples","title":"Resources"},{"location":"#vs-code-pddl","text":"VS code PDDL\u63d2\u4ef6\u6709\u5f88\u591a\u76f8\u5173\u7814\u7a76\u94fe\u63a5 vscode \u63d2\u4ef6pddl :AI Planning and PDDL support in VS Code youtube.com/watch?v=XW0z8Oik6G8&feature=youtu.be Below you can find a collection of resources for writing, learning and using PDDL and planning. For more information on what these tools and resources are and how they can help, please visit the additional resources page. Planning.Domains Planner Tools VAL - The Plan Validator ROSPlan - Planning in ROS PlanSys2 - Planning in ROS2 Eviscerator - The Planner tester Universal Planning Validator (Under Development) https://planning.wiki/extras \u4ecb\u7ecd","title":"VS code PDDL\u63d2\u4ef6"},{"location":"#solverplanningdomainsonline","text":"http://solver.planning.domains/ http://planning.domains/ \u5305\u62ec\uff1a api http://api.planning.domains/ api\u67e5\u8be2 https://github.com/AI-Planning/classical-domains PDDL\u6587\u4ef6\u7684\u7b80\u5355\u96c6\u5408\u3002\u5f53\u524d\u4ec5\u5305\u62ec\u7ecf\u5178\u95ee\u9898 planning.domains API\u63d0\u4f9b\u4e86\u5bf9\u5e7f\u6cdb\u7684PDDL\u57fa\u51c6\u57df\u548c\u95ee\u9898\u6587\u4ef6\u7684\u7f16\u7a0b\u8bbf\u95ee\u3002\u6240\u6709\u7269\u7406\u6587\u4ef6\u90fd\u53ef\u4ee5 \u5728GitHub\u7684\u57df\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u514b\u9686\u5b58\u50a8\u5e93\u6216\u4f7f\u7528\u4e0b\u9762\u63cf\u8ff0\u7684\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u6765\u81ea\u5df1\u83b7\u5f97\u4e00\u4efd\u526f\u672c\u3002 \u5982\u679c\u60a8\u5728PDDL\u6587\u4ef6\u4e2d\u53d1\u73b0\u4efb\u4f55\u9519\u8bef\uff08\u4e0d\u5b8c\u6574\u7684\u96c6\uff0c\u4e0d\u826f\u7684\u914d\u65b9\u7b49\uff09\uff0c\u8bf7\u514b\u9686\u5b58\u50a8\u5e93\uff0c\u5e76\u5c06\u60a8\u7684\u4fee\u8ba2\u4f5c\u4e3a\u8bf7\u6c42\u8bf7\u6c42\u63d0\u4ea4\u3002\u5728\u5408\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u5c06\u63a5\u53d7\u5e26\u6709\u5168\u65b0\u57fa\u51c6\u6d4b\u8bd5\u96c6\u7684\u62c9\u53d6\u8bf7\u6c42\uff08\u4f8b\u5982\uff0c\u5728\u65b0\u7684IPC\u7ade\u8d5b\u4e4b\u540e\u6216\u4f5c\u4e3a\u7279\u5b9a\u5957\u4ef6\u7684\u53d1\u5e03\uff09\u3002\u76ee\u524d\uff0c\u4ec5\u63a5\u53d7\u7ecf\u5178\u7684PDDL\u57fa\u51c6\uff08\u4efb\u4f55PDDL\u7ea7\u522b/\u8868\u73b0\u529b\uff09\uff0c\u4f46\u662f\u5c06\u6765\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u6269\u5c55\u5230\u5176\u4ed6\u66f4\u4e30\u5bcc\u7684\u5f62\u5f0f\u4e3b\u4e49\uff08POND\uff0cFOND\uff0cRDDL\u7b49\uff09\u3002 \u6587\u4ef6\u96c6\u5408\u53ea\u662fapi.planning.domains\u7684\u7b2c\u4e00\u4e2a\u7ec4\u4ef6\u3002\u8be5\u670d\u52a1\u7684\u4e3b\u8981\u65b9\u9762\u662f\u63d0\u4f9b\u7528\u4e8e\u67e5\u8be2\uff0c\u67e5\u770b\u548c\u6d4f\u89c8\u73b0\u6709\u57df\u7684\u754c\u9762\u3002\u6211\u4eec\u5b58\u50a8\u5e76\u4e0d\u65ad\u66f4\u65b0\u6bcf\u4e2a\u9886\u57df\u548c\u95ee\u9898\u7684\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u8ba1\u5212\u6210\u672c\u7684\u4e0a\u9650\u548c\u4e0b\u9650\uff0c\u57df\u4e2d\u7684\u8981\u6c42\uff0c\u95ee\u9898\u7684\u7ecf\u5178\u5bbd\u5ea6\u7b49\u3002\u5728\u6b64\u9875\u9762\u4e0a\uff0c\u60a8\u53ef\u4ee5\u627e\u5230api.planning.domains\u63a5\u53e3\u7684\u63cf\u8ff0\u4ee5\u53ca\u6709\u5173\u7684\u8be6\u7ec6\u4fe1\u606f\u7528\u6765\u7b80\u5316\u4e0eAPI\u4ea4\u4e92\u7684\u5de5\u5177/\u5e93\u3002 \u8be5API\u5305\u542b\u4e09\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff1a \u95ee\u9898\uff1a\u6709\u5173\u6bcf\u4e2a\u95ee\u9898\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5176\u6587\u4ef6\uff0c\u76f8\u5e94\u7684\u57df\u6587\u4ef6\uff0c\u95ee\u9898\u7684\u7edf\u8ba1\u4fe1\u606f\u7b49\u3002 \u57df\uff1a\u6bcf\u4e2a\u5355\u72ec\u57df\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5176\u63cf\u8ff0\u548c\u8be5\u57df\u7684\u5404\u79cd\u7edf\u8ba1\u4fe1\u606f\u3002 \u96c6\u5408\uff1a\u57df\u96c6\uff0c\u5305\u62ec\u6bcf\u4e2aIPC\u7684\u96c6\u5408\uff0c\u5355\u4e2a\u8ba1\u5212\u7a0b\u5e8f\u96c6\u5408\u7b49\u3002 \u514d\u8d23\u58f0\u660e\uff1a\u6b64\u523b\uff0cAPI\u5e94\u8be5\u88ab\u8ba4\u4e3a\u5904\u4e8e\u975e\u5e38Alpha\u9636\u6bb5\u3002\u5e0c\u671b\u6700\u7ec8\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7cbe\u786e\u5730\u5f15\u7528\u8bc4\u4f30\u8f6f\u4ef6\u65f6\u4f7f\u7528\u7684\u57fa\u51c6\uff0c\u4f46\u6682\u65f6\u6211\u4eec\u4ecd\u5728\u4fee\u590d\u9886\u57df\uff0c\u66ff\u6362\u95ee\u9898\u96c6\u5e76\u7ea0\u6b63\u5404\u79cd\u7edf\u8ba1\u6570\u636e\u4e2d\u7684\u9519\u8bef\u3002\u5728\u5220\u9664\u6b64\u514d\u8d23\u58f0\u660e\u4e4b\u524d\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u4e0d\u8981\u5c06API\u7528\u4e8e\u516c\u52a1\uff08\u5b66\u672f\u754c\u6216\u5176\u4ed6\u9886\u57df\uff09\u3002 solver http://solver.planning.domains/ \u5728\u7ebfPDDL\u6587\u4ef6\u6c42\u89e3\u5668\u8303\u4f8b\u6559\u7a0b \uff0c \u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u6307\u5411PDDL\u6587\u4ef6\u7684\u94fe\u63a5\u6216\u76f4\u63a5\u4ee5JSON\u683c\u5f0f\u53d1\u9001\u539f\u59cbPDDL\u5185\u5bb9\u6765\u8c03\u7528\u8f6f\u4ef6\uff0c\u4ee5\u68c0\u7d22\u6216\u9a8c\u8bc1\u8ba1\u5212\u3002 Javascript/pytoon\u8fdc\u7a0b\u8c03\u7528\u4f7f\u7528\u8303\u4f8b \u4ee3\u7801 editor http://editor.planning.domains/ \u5728\u7ebfPDDL\u7f16\u8f91/\u6c42\u89e3/\u9a8c\u8bc1\u5668 education http://education.planning.domains/ \u5b66\u4e60\u81ea\u52a8\u6559\u5b66\u8ba1\u5212\u548c\u5efa\u6a21\u6280\u672f\u7684\u8d44\u6e90 PPT\u8bfe\u95f4\u6e90\u7801\u548c\u89c6\u9891\u6559\u7a0b","title":"solver.planning.domains\u89c4\u5212online\u89e3\u51b3\u65b9\u6848"},{"location":"#_1","text":"VAL-\u8ba1\u5212\u9a8c\u8bc1\u5668 VAL \uff08\u4e5f\u79f0\u4e3a\u9a8c\u8bc1\u5668\uff09\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u7528\u4e8e\u6839\u636e\u539f\u59cb\u57df\u548c\u95ee\u9898\u6587\u4ef6\u9a8c\u8bc1\u8ba1\u5212\u8005\u751f\u6210\u7684\u89e3\u51b3\u65b9\u6848\u3002VAL\u4f7f\u60a8\u53ef\u4ee5\u5728\u6267\u884c\u64cd\u4f5c\u65f6\u9075\u5b88\u8ba1\u5212\u6240\u9700\u7684\u6240\u6709\u524d\u63d0\u6761\u4ef6\uff0c\u540c\u65f6\u68c0\u67e5\u8ba1\u5212\u662f\u5426\u771f\u6b63\u5b9e\u73b0\u4e86\u76ee\u6807\u3002 Eviscerator-\u89c4\u5212\u5668\u6d4b\u8bd5\u5668 Eviscerator \u662f\u4e3a\u6b64PDDL\u53c2\u8003\u6307\u5357\u5f00\u53d1\u7684\u5de5\u5177\uff0c\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u81ea\u52a8\u6d4b\u8bd5\u548c\u8bc6\u522b\u8ba1\u5212\u4eba\u5458\u652f\u6301\u7684PDDL\u8981\u6c42\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u5de5\u5177\uff0c\u968f\u9644\u7528\u4e8eLinux\u7684\u6301\u7eed\u90e8\u7f72\u7684\u9884\u6784\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u5b83\u5e76\u6d4b\u8bd5\u8ba1\u5212\u7a0b\u5e8f\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u7f16\u8bd1\u3002 ROSPlan-ROS\u4e2d\u7684\u8ba1\u5212 ROSPlan \u662f\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff08ROS\uff09\u7684\u6a21\u5757\uff0c\u5141\u8bb8\u5c06AI Planning\u96c6\u6210\u5230\u4f7f\u7528ROS\u7684\u673a\u5668\u4eba\u4e2d\u3002ROSPlan\u5141\u8bb8\u5bf9\u673a\u5668\u4eba\u73af\u5883\u8fdb\u884c\u5efa\u6a21\uff0c\u4ee5\u8ba1\u5212\u548c\u6267\u884c\u4efb\u52a1\u3002 Plansys2-\u5728ROS2\u4e2d\u8fdb\u884c\u89c4\u5212 Plansys2 \u662f\u673a\u5668\u4eba\u4f5c\u4e1a\u7cfb\u7edf\uff0c\u65b0\u7248\u672c\u7684\u4e00\u4e2a\u9879\u76ee**ROS2**\uff0c\u6574\u5408\u89c4\u5212\u548c\u673a\u5668\u4eba\u3002\u5b83\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u4e2a\u6846\u67b6\uff0c\u5728\u5176\u4e2d\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u4e0d\u540c\u7684\u8ba1\u5212\u4eba\u5458\u4ee5\u4f7f\u673a\u5668\u4eba\u6267\u884c\u4efb\u52a1\u3002\u4f7f\u7528 \u884c\u4e3a\u6811 \u6765\u5b9e\u73b0 \u52a8\u4f5c \uff0c\u5e76\u4e14\u5728\u4ed3\u5e93\u4e2d\u6709\u5f88\u591a \u4f8b\u5b50 \u3002 \u901a\u7528\u89c4\u5212\u9a8c\u8bc1\u5668\uff08\u5f00\u53d1\u4e2d\uff09 \u901a\u7528\u8ba1\u5212\u9a8c\u8bc1\u5668\uff08\u5f00\u53d1\u4e2d\uff09 \u662f\u4e00\u79cd\u7528\u4e8e\u9a8c\u8bc1\u8ba1\u5212\u9886\u57df\u548c\u95ee\u9898\u7684\u5de5\u5177\u3002\u5f53\u524d\uff0c\u5b83\u53ea\u80fd\u652f\u6301\u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u548c\u9886\u57df\uff0c\u4f46\u662f\u8be5\u5de5\u5177\u65e8\u5728\u8fdb\u884c\u6269\u5c55\u4ee5\u5305\u62ec\u65f6\u95f4\u57df\u548c\u591a\u4e3b\u4f53\u57df\u3002\u5982\u679c\u60a8\u9700\u8981\u4e00\u4e2a\u652f\u6301\u6bd4\u4f20\u7edf\u8ba1\u5212\u66f4\u591a\u7684PDDL\u9ad8\u7ea7\u529f\u80fd\u7684\u9a8c\u8bc1\u5668\uff0c\u8bf7\u5c1d\u8bd5\u4f7f\u7528VAL\uff08\u8ba1\u5212\u9a8c\u8bc1\u5668\uff09\u4ee3\u66ff\u3002 PDDL Tools Visual Studio Code PDDL Plugin for VSCode Sublime Text Editor MyPDDL Plugin for Sublime Atom Text Editor MyPDDL Plugin for Atom Planning.Domains PDDL Editor Learning Resources Learn PDDL by Fares K. Alaboud Introduction to AI Planning. Part I. (video) Introduction to AI Planning. Part II. (video) http://education.planning.domains/","title":"\u89c4\u5212\u5de5\u5177\u4eec"},{"location":"#course-materials","text":"Compiled and source course materials (please contact teacher in this url for access to source materials). Lecture Slides UniBasel AI Group Misc AI and Planning Courses Lecture Slides Foundations of Artificial Intelligence (FAI) Group Misc AI and Planning Courses Lecture Slides Planning Source AI Source Example Assignments Artificial Intelligence (CS) at PUCRS Felipe Meneguzzi, Mauricio Magnaguagno, Leonardo Rosa Amado Planning using Heuristic Search assignment focused on implementing the core functions of an automated planner. Source Code Pacman Capture the Flag in AI Courses Nir Lipovetzky, Sebastian Sardina Competition using the Berkley AI Pacman framework. Students use search algoithms, PDDL, classical replanning, minimax, etc. for their agents. Competition Code ICAPS 2020 Summer School Plan Synthesis Michael Cashmore This training lab is an introduction to modelling planning problems using the Planning Domain Definition Language (PDDL). Lab Details Publicly Available PDDL Domains IPC PDDL Domains Book: An Introduction to the Planning Domain Definition Language","title":"Course Materials"},{"location":"#theplanningcommunity","text":"https://app.slack.com/plans/TK9TZPZD3?entry_point=team_messages_limit_meter&feature=unlimited_messages Stack\u6709\u4e00\u4e2aplanning community\u91cc\u9762\u6709\u5f88\u591a\u8d44\u6599","title":"ThePlanningCommunity"},{"location":"#why-mkdocs","text":"I like take notes with markdown opened by Typora & Vnote on my local PC notes system. This document made by mkdocs.org ,because it can directly change my notes into wonderful help documents shown online. mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Why MkDocs?"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Extensions/AP/PDDL4j_Java%20for%E8%87%AA%E5%8A%A8%E8%A7%84%E5%88%92/","text":"1. PDDL4j \u00b6 https://github.com/pellierd/pddl4j PDDL4J\u7684\u76ee\u7684\u662f\u4fc3\u8fdb\u57fa\u4e8ePDDL\u8bed\u8a00\uff08\u89c4\u5212\u57df\u63cf\u8ff0\u8bed\u8a00\uff09\u7684Java for\u81ea\u52a8\u89c4\u5212\u5de5\u5177\u7684\u5f00\u53d1\u3002","title":"PDDL4j"},{"location":"Extensions/AP/PDDL4j_Java%20for%E8%87%AA%E5%8A%A8%E8%A7%84%E5%88%92/#1-pddl4j","text":"https://github.com/pellierd/pddl4j PDDL4J\u7684\u76ee\u7684\u662f\u4fc3\u8fdb\u57fa\u4e8ePDDL\u8bed\u8a00\uff08\u89c4\u5212\u57df\u63cf\u8ff0\u8bed\u8a00\uff09\u7684Java for\u81ea\u52a8\u89c4\u5212\u5de5\u5177\u7684\u5f00\u53d1\u3002","title":"1. PDDL4j"},{"location":"Extensions/AP/Tarski%20-%20An%20AI%20Planning%20Modeling%20Framework/","text":"\u81ea\u52a8\u5316\u8ba1\u5212\u548c\u8c03\u5ea6\uff0c\u6709\u65f6\u7b80\u79f0\u4e3aAI\u8ba1\u5212 \u00b6 en.wikipedia.org/wiki/Automated_planning_and_scheduling Tarski - An AI Planning Modeling Framework \u00b6 github https://github.com/aig-upf/tarski","title":"Tarski"},{"location":"Extensions/AP/Tarski%20-%20An%20AI%20Planning%20Modeling%20Framework/#ai","text":"en.wikipedia.org/wiki/Automated_planning_and_scheduling","title":"\u81ea\u52a8\u5316\u8ba1\u5212\u548c\u8c03\u5ea6\uff0c\u6709\u65f6\u7b80\u79f0\u4e3aAI\u8ba1\u5212"},{"location":"Extensions/AP/Tarski%20-%20An%20AI%20Planning%20Modeling%20Framework/#tarski-an-ai-planning-modeling-framework","text":"github https://github.com/aig-upf/tarski","title":"Tarski - An AI Planning Modeling Framework"},{"location":"Extensions/AP/%E5%AE%9E%E4%BE%8B%E4%B8%AD%E5%AD%A6%E4%B9%A0QNP%E5%AE%9A%E4%B9%89%E5%AE%9E%E7%8E%B0AP%28AutomatedPlanning%29/","text":"Learn QNP formal definition from examples plans for Automated Planning \u00b6 As we all know, a Qualitative numeric Planning Problem is similar to a generalized plan where the numbers of objects may be unknown and unbounded during planning. There are two knowledge acquisition problems in Automated Planning: a)Learning planning action models automatically, define this problem with formal language;b)make a solver this problem(the method Top-Down or Bottom-Up). What we interesting in here is the first step. How can we learn planning action models automatically? Equivalently, learning the abstract structure which describes the same problem in the real world. Traditionally, we use a tuple QNP = to express such an abstract Structure(an AOE network).Each node is a global state \\(s=F+V\\) ( fluents and variables), and every action is edge linking pre-state with effect-state . Non-deterministic action can link one pre-state with so many effect-states. Along with intuition, the input is so many concrete structures \\(S_n^\\#\\) (example problems) and the corresponding policies solved in a classical planner like FF planner. With the fancy work by Srivastava(2011a), we can learn an abstract structure S, which can describe concrete structure \\(S_n^\\#\\) above. For such an abstract structure S, we can enumerate nodes differently in their fluents and variables, and then we get the definition of F and V. Then states can be distinguished by F and V. I and G are just two S specific nodes. Similarly, enumerate edges as all possible actions, then we get **O. **For now, we already have found a definition of this problem with formal language using a tuple QNP = \\(<F,V,I,G,O>\\) .","title":"QNP2AP"},{"location":"Extensions/AP/%E5%AE%9E%E4%BE%8B%E4%B8%AD%E5%AD%A6%E4%B9%A0QNP%E5%AE%9A%E4%B9%89%E5%AE%9E%E7%8E%B0AP%28AutomatedPlanning%29/#learn-qnp-formal-definition-from-examples-plans-for-automated-planning","text":"As we all know, a Qualitative numeric Planning Problem is similar to a generalized plan where the numbers of objects may be unknown and unbounded during planning. There are two knowledge acquisition problems in Automated Planning: a)Learning planning action models automatically, define this problem with formal language;b)make a solver this problem(the method Top-Down or Bottom-Up). What we interesting in here is the first step. How can we learn planning action models automatically? Equivalently, learning the abstract structure which describes the same problem in the real world. Traditionally, we use a tuple QNP = to express such an abstract Structure(an AOE network).Each node is a global state \\(s=F+V\\) ( fluents and variables), and every action is edge linking pre-state with effect-state . Non-deterministic action can link one pre-state with so many effect-states. Along with intuition, the input is so many concrete structures \\(S_n^\\#\\) (example problems) and the corresponding policies solved in a classical planner like FF planner. With the fancy work by Srivastava(2011a), we can learn an abstract structure S, which can describe concrete structure \\(S_n^\\#\\) above. For such an abstract structure S, we can enumerate nodes differently in their fluents and variables, and then we get the definition of F and V. Then states can be distinguished by F and V. I and G are just two S specific nodes. Similarly, enumerate edges as all possible actions, then we get **O. **For now, we already have found a definition of this problem with formal language using a tuple QNP = \\(<F,V,I,G,O>\\) .","title":"Learn QNP formal definition from examples plans for Automated Planning"},{"location":"Extensions/PDDL-plan-validator/Lisp-pddl-INVAL-validator/","text":"1. Lisp-pddl-DSL \u00b6 https://zh.wikipedia.org/wiki/Scheme Scheme\u7684\u7075\u611f\u6765\u81ea\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684Carl Hewitt\u63d0\u51fa\u7684\u4e00\u79cd\u53eb\u505a\u6f14\u5458\u6a21\u578b\u7684\u6570\u5b66\u6a21\u578b\u3002Hewitt\u5f53\u65f6\u6b63\u5728\u8bd5\u56fe\u5c06**\u6f14\u5458\u6a21\u578b**\u52a0\u5165**Planner**\u8bed\u8a00\uff0c\u800c\u53d7\u5176\u5f71\u54cd\u7684\u53f2\u63d0\u5c14\u4e0e\u8428\u65af\u66fc\u51b3\u5b9a\u5728Maclisp\u4e2d\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301\u6f14\u5458\u6a21\u578b\u7684Lisp\u65b9\u8a00[5]\u3002\u53f2\u63d0\u5c14\u4e0e\u8428\u65af\u66fc\u4e24\u4eba\u5f88\u5feb\u53d1\u73b0\u6f14\u5458\u6a21\u578b\u4e0e\u03bb\u6f14\u7b97\u975e\u5e38\u7c7b\u4f3c\uff0c\u800c\u6240\u8c13\u201c\u6f14\u5458\u201d\u4e0d\u8fc7\u662fPeter J. Landin\u63d0\u51fa\u5e76\u7531Joel Moses\u4e8e1970\u5e74\u53d1\u8868\u7684\u95ed\u5305\u800c\u5df2[6]\u3002\u56e0\u6b64\uff0c\u4e24\u4eba\u5f88\u5feb\u610f\u8bc6\u5230\u8fd9\u662f\u5c06\u8bcd\u6cd5\u53d8\u91cf\u8303\u56f4\u4ecb\u5165\u5230Lisp\u4e2d\u5b9e\u73b0\u7684\u5173\u952e[7]\u3002\u57fa\u4e8e\u8fd9\u4e00\u89c1\u89e3\uff0c\u4e24\u4eba\u5f88\u5feb\u5f00\u53d1\u51fa\u4e86\u4e00\u5957\u7cbe\u7b80\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5e76\u547d\u540d\u4e3a\u201cSchemer\u201d\uff08\u540e\u56e0\u64cd\u4f5c\u7cfb\u7edf\u5b57\u6570\u9650\u5236\u6539\u4e3aScheme\uff09\u3002\u5c3d\u7ba1Hewitt\u8ba4\u4e3aScheme\u62bd\u8c61\u6027\u7684\u4e0d\u8db3\u662f\u4e00\u4e2a\u5012\u9000\uff0c\u5b83\u7b80\u7ea6\u7684\u8bed\u6cd5\u5f88\u5feb\u8d62\u5f97\u5e7f\u6cdb\u63a5\u53d7\uff0c\u5e76\u6210\u4e3a\u6700\u5177\u5f71\u54cd\u529b\u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u4e00\u3002\u5728Scheme\u88ab\u5e7f\u4e3a\u63a5\u53d7\u540e\uff0c\u53f2\u63d0\u5c14\u4e0e\u8428\u65af\u66fc\u66fe\u627f\u8ba4\u4ed6\u4eec\u4e8b\u5b9e\u4e0a\u6ca1\u6709\u523b\u610f\u5b9e\u73b0Scheme\u7684\u7b80\u7ea6\u6027\u3002\u4e24\u4eba\u8ba4\u4e3a\u7b80\u5355\u800c\u5f3a\u5927\u7684\u03bb\u6f14\u7b97\u6700\u7ec8\u4f7f\u5f97Scheme\u5f97\u4ee5\u5b9e\u73b0\u6781\u5ea6\u7684\u7cbe\u7b80\u5316[5]\u3002 https://github.com/patrikhaslum/INVAL INVAL\u662f\u72ec\u7acbPDDL\u8ba1\u5212\u9a8c\u8bc1\u5668\u3002 \u89c4\u5212\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u8868\u8fbeAI\u89c4\u5212\u95ee\u9898\u7684\u5efa\u6a21\u8bed\u8a00\uff0c\u5e76\u7528\u4f5c\u5927\u91cf\u901a\u7528AI\u89c4\u5212\u7cfb\u7edf\u7684\u8f93\u5165\u8bed\u8a00\u3002\u8ba1\u5212\u9a8c\u8bc1\u5668\u7684\u4f5c\u7528\u662f\u6839\u636e\u9886\u57df\u548c\u95ee\u9898\u89c4\u8303\u68c0\u67e5\uff08\u7531AI\u8ba1\u5212\u8005\u751f\u6210\u6216\u624b\u52a8\u7f16\u5199\u7684\uff09\u8ba1\u5212\u662f\u5426\u6709\u6548\u3002\u9a8c\u8bc1\u5668\u662f\u8c03\u8bd5\u57df/\u95ee\u9898\u89c4\u8303\uff0c\u8ba1\u5212\u7a0b\u5e8f\u5b9e\u73b0\u4ee5\u53caPDDL\u672c\u8eab\u89c4\u8303\u7684\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\u3002 \u7531Derek Long\u7b49\u4eba\u521b\u5efa\u7684\u73b0\u6709PDDL\u8ba1\u5212\u9a8c\u8bc1\u5668 VAL \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\uff0c\u4f46\u662f\u50cf\u6240\u6709\u8f6f\u4ef6\u4e00\u6837\uff0c\u5b83\u786e\u5b9e\u5b58\u5728\u9519\u8bef\u3002INVAL\u662f\u4e3a\u4e86\u8865\u5145VAL\uff0c\u800c\u4e0d\u662f\u4ee3\u66ff\u5b83\u3002INVAL\u7684\u76ee\u7684\u662f\u5bf9\u6587\u732e\u4e2d\u5b9a\u4e49\u7684PDDL\u8bed\u4e49\u8fdb\u884c\u7b80\u5355\uff08\u800c\u4e0d\u662f\u529f\u80fd\u5f3a\u5927\u548c\u9ad8\u6548\uff09\u7684\u5b9e\u73b0\u3002\u5f53\u4e24\u4e2a\u9a8c\u8bc1\u8005\u90fd\u540c\u610f\u65f6\uff0c\u60a8\u53ef\u4ee5\u66f4\u6709\u4fe1\u5fc3\u5730\u786e\u5b9a\u5b83\u4eec\u662f\u6b63\u786e\u7684\uff1b\u5426\u5219\uff0c\u60a8\u5c06\u65e0\u6cd5\u786e\u5b9a\u5b83\u4eec\u7684\u6b63\u786e\u6027\u3002\u5f53\u4ed6\u4eec\u4e0d\u540c\u610f\u65f6\uff0c\u8fd9\u8bf4\u660e\u5b83\u4eec\u4e4b\u4e00\u662f\u7f3a\u9677\uff0c\u6216\u8005\u662f\u8bed\u8a00\u89c4\u8303\u4e2d\u7684\u6a21\u68f1\u4e24\u53ef\u3002 \u4e0eVAL\u76f8\u6bd4\uff0cINVAL\u6709\u4e00\u4e9b\u9650\u5236\u3002\u6700 \u8be5\u8f6f\u4ef6\u5305\u8fd8\u5305\u62ec\u4e00\u7ec4\u5176\u4ed6PDDL\u5de5\u5177\uff1a rsk \u662f\u4e00\u4e2a\u57df/\u95ee\u9898\u7f16\u8bd1\u5668\uff0c\u53ef\u5220\u9664\u5bf9\u8c61\u6d41\u5229\uff08PDDL\u7248\u672c3.1\uff09\u3002\u5b83\u53ef\u4ee5\u5b8c\u5168\u7f16\u8bd1\u6389\u5b83\u4eec\uff08\u751f\u6210\u7c7b\u4f3cADL\u7684\u6807\u51c6PDDL\uff09\uff0c\u4e5f\u53ef\u4ee5\u4ec5\u7f16\u8bd1\u5d4c\u5957\u7684\u6d41\u5229\u8bed\u8a00\uff08\u751f\u6210\u7c7b\u4f3c\u4e8eSAS +\u7684\u4e1c\u897f\uff09\u3002 simplify \u662f\u57df/\u95ee\u9898\u7b80\u5316\u7a0b\u5e8f\u3002\u5b83\u8f93\u51fa\u201c\u7b80\u5355ADL\u201d\uff0c\u5b83\u53ef\u80fd\u4ecd\u7136\u5177\u6709\u6761\u4ef6\u4f5c\u7528\uff0c\u4f46\u6ca1\u6709\u91cf\u8bcd\u6216\u6790\u53d6\u8bcd\u3002 nyat \u5c06PDDL\u8f6c\u6362\u4e3aFastDownward\u7684\u5185\u90e8SAS +\u683c\u5f0f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u662fFastDownward\u8f6c\u6362\u5668\u7684\u76f4\u63a5\u66ff\u4ee3\u54c1\u3002\u4e0eFD\u8f6c\u6362\u5668\u76f8\u6bd4\uff0c\u5b83*\u6548\u7387\u4f4e\u5f97\u591a*\uff0c\u5e76\u4e14\u4e0d\u80fd\u4ece\u547d\u9898PDDL\u8868\u793a\u4e2d\u81ea\u52a8\u751f\u6210\u6709\u9650\u57df\u53d8\u91cf\u3002\u800c\u662f\uff08\u4e0eFD\u8f6c\u6362\u5668\u4e0d\u540c\uff09\uff0c\u5b83\u4fdd\u7559\u4e86PDDL\u8f93\u5165\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u6d41\u5229\uff08\u5373SAS +\u53d8\u91cf\uff09\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u6240\u751f\u6210\u7684SAS +\u8868\u793a\u5f62\u5f0f\u3002 vapo \u662f\u5b8c\u5168\u53ef\u89c2\u5bdf\u5230\u7684\u6982\u7387\u89c4\u5212\u7b56\u7565\u7684\uff08\u5404\u79cd\uff09\u9a8c\u8bc1\u5668\u3002\u5b83\u5b9e\u9645\u4e0a\u5e76\u4e0d\u80fd\u9a8c\u8bc1\u7b56\u7565\u662f\u5426\u8fbe\u5230\u76ee\u6807\uff0c\u4f46\u662f\u4f1a\u751f\u6210\u7b56\u7565\u4e0b\u53ef\u8fbe\u5230\u7684\u72b6\u6001\u7a7a\u95f4\u56fe\uff08\u70b9\u683c\u5f0f\uff09\uff0c\u5e76\u7528\u7b56\u7565\u64cd\u4f5c\u6807\u8bb0\u8282\u70b9\uff08\u72b6\u6001\uff09\u3002","title":"INVAL"},{"location":"Extensions/PDDL-plan-validator/Lisp-pddl-INVAL-validator/#1-lisp-pddl-dsl","text":"https://zh.wikipedia.org/wiki/Scheme Scheme\u7684\u7075\u611f\u6765\u81ea\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684Carl Hewitt\u63d0\u51fa\u7684\u4e00\u79cd\u53eb\u505a\u6f14\u5458\u6a21\u578b\u7684\u6570\u5b66\u6a21\u578b\u3002Hewitt\u5f53\u65f6\u6b63\u5728\u8bd5\u56fe\u5c06**\u6f14\u5458\u6a21\u578b**\u52a0\u5165**Planner**\u8bed\u8a00\uff0c\u800c\u53d7\u5176\u5f71\u54cd\u7684\u53f2\u63d0\u5c14\u4e0e\u8428\u65af\u66fc\u51b3\u5b9a\u5728Maclisp\u4e2d\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301\u6f14\u5458\u6a21\u578b\u7684Lisp\u65b9\u8a00[5]\u3002\u53f2\u63d0\u5c14\u4e0e\u8428\u65af\u66fc\u4e24\u4eba\u5f88\u5feb\u53d1\u73b0\u6f14\u5458\u6a21\u578b\u4e0e\u03bb\u6f14\u7b97\u975e\u5e38\u7c7b\u4f3c\uff0c\u800c\u6240\u8c13\u201c\u6f14\u5458\u201d\u4e0d\u8fc7\u662fPeter J. Landin\u63d0\u51fa\u5e76\u7531Joel Moses\u4e8e1970\u5e74\u53d1\u8868\u7684\u95ed\u5305\u800c\u5df2[6]\u3002\u56e0\u6b64\uff0c\u4e24\u4eba\u5f88\u5feb\u610f\u8bc6\u5230\u8fd9\u662f\u5c06\u8bcd\u6cd5\u53d8\u91cf\u8303\u56f4\u4ecb\u5165\u5230Lisp\u4e2d\u5b9e\u73b0\u7684\u5173\u952e[7]\u3002\u57fa\u4e8e\u8fd9\u4e00\u89c1\u89e3\uff0c\u4e24\u4eba\u5f88\u5feb\u5f00\u53d1\u51fa\u4e86\u4e00\u5957\u7cbe\u7b80\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5e76\u547d\u540d\u4e3a\u201cSchemer\u201d\uff08\u540e\u56e0\u64cd\u4f5c\u7cfb\u7edf\u5b57\u6570\u9650\u5236\u6539\u4e3aScheme\uff09\u3002\u5c3d\u7ba1Hewitt\u8ba4\u4e3aScheme\u62bd\u8c61\u6027\u7684\u4e0d\u8db3\u662f\u4e00\u4e2a\u5012\u9000\uff0c\u5b83\u7b80\u7ea6\u7684\u8bed\u6cd5\u5f88\u5feb\u8d62\u5f97\u5e7f\u6cdb\u63a5\u53d7\uff0c\u5e76\u6210\u4e3a\u6700\u5177\u5f71\u54cd\u529b\u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u4e00\u3002\u5728Scheme\u88ab\u5e7f\u4e3a\u63a5\u53d7\u540e\uff0c\u53f2\u63d0\u5c14\u4e0e\u8428\u65af\u66fc\u66fe\u627f\u8ba4\u4ed6\u4eec\u4e8b\u5b9e\u4e0a\u6ca1\u6709\u523b\u610f\u5b9e\u73b0Scheme\u7684\u7b80\u7ea6\u6027\u3002\u4e24\u4eba\u8ba4\u4e3a\u7b80\u5355\u800c\u5f3a\u5927\u7684\u03bb\u6f14\u7b97\u6700\u7ec8\u4f7f\u5f97Scheme\u5f97\u4ee5\u5b9e\u73b0\u6781\u5ea6\u7684\u7cbe\u7b80\u5316[5]\u3002 https://github.com/patrikhaslum/INVAL INVAL\u662f\u72ec\u7acbPDDL\u8ba1\u5212\u9a8c\u8bc1\u5668\u3002 \u89c4\u5212\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u8868\u8fbeAI\u89c4\u5212\u95ee\u9898\u7684\u5efa\u6a21\u8bed\u8a00\uff0c\u5e76\u7528\u4f5c\u5927\u91cf\u901a\u7528AI\u89c4\u5212\u7cfb\u7edf\u7684\u8f93\u5165\u8bed\u8a00\u3002\u8ba1\u5212\u9a8c\u8bc1\u5668\u7684\u4f5c\u7528\u662f\u6839\u636e\u9886\u57df\u548c\u95ee\u9898\u89c4\u8303\u68c0\u67e5\uff08\u7531AI\u8ba1\u5212\u8005\u751f\u6210\u6216\u624b\u52a8\u7f16\u5199\u7684\uff09\u8ba1\u5212\u662f\u5426\u6709\u6548\u3002\u9a8c\u8bc1\u5668\u662f\u8c03\u8bd5\u57df/\u95ee\u9898\u89c4\u8303\uff0c\u8ba1\u5212\u7a0b\u5e8f\u5b9e\u73b0\u4ee5\u53caPDDL\u672c\u8eab\u89c4\u8303\u7684\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\u3002 \u7531Derek Long\u7b49\u4eba\u521b\u5efa\u7684\u73b0\u6709PDDL\u8ba1\u5212\u9a8c\u8bc1\u5668 VAL \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\uff0c\u4f46\u662f\u50cf\u6240\u6709\u8f6f\u4ef6\u4e00\u6837\uff0c\u5b83\u786e\u5b9e\u5b58\u5728\u9519\u8bef\u3002INVAL\u662f\u4e3a\u4e86\u8865\u5145VAL\uff0c\u800c\u4e0d\u662f\u4ee3\u66ff\u5b83\u3002INVAL\u7684\u76ee\u7684\u662f\u5bf9\u6587\u732e\u4e2d\u5b9a\u4e49\u7684PDDL\u8bed\u4e49\u8fdb\u884c\u7b80\u5355\uff08\u800c\u4e0d\u662f\u529f\u80fd\u5f3a\u5927\u548c\u9ad8\u6548\uff09\u7684\u5b9e\u73b0\u3002\u5f53\u4e24\u4e2a\u9a8c\u8bc1\u8005\u90fd\u540c\u610f\u65f6\uff0c\u60a8\u53ef\u4ee5\u66f4\u6709\u4fe1\u5fc3\u5730\u786e\u5b9a\u5b83\u4eec\u662f\u6b63\u786e\u7684\uff1b\u5426\u5219\uff0c\u60a8\u5c06\u65e0\u6cd5\u786e\u5b9a\u5b83\u4eec\u7684\u6b63\u786e\u6027\u3002\u5f53\u4ed6\u4eec\u4e0d\u540c\u610f\u65f6\uff0c\u8fd9\u8bf4\u660e\u5b83\u4eec\u4e4b\u4e00\u662f\u7f3a\u9677\uff0c\u6216\u8005\u662f\u8bed\u8a00\u89c4\u8303\u4e2d\u7684\u6a21\u68f1\u4e24\u53ef\u3002 \u4e0eVAL\u76f8\u6bd4\uff0cINVAL\u6709\u4e00\u4e9b\u9650\u5236\u3002\u6700 \u8be5\u8f6f\u4ef6\u5305\u8fd8\u5305\u62ec\u4e00\u7ec4\u5176\u4ed6PDDL\u5de5\u5177\uff1a rsk \u662f\u4e00\u4e2a\u57df/\u95ee\u9898\u7f16\u8bd1\u5668\uff0c\u53ef\u5220\u9664\u5bf9\u8c61\u6d41\u5229\uff08PDDL\u7248\u672c3.1\uff09\u3002\u5b83\u53ef\u4ee5\u5b8c\u5168\u7f16\u8bd1\u6389\u5b83\u4eec\uff08\u751f\u6210\u7c7b\u4f3cADL\u7684\u6807\u51c6PDDL\uff09\uff0c\u4e5f\u53ef\u4ee5\u4ec5\u7f16\u8bd1\u5d4c\u5957\u7684\u6d41\u5229\u8bed\u8a00\uff08\u751f\u6210\u7c7b\u4f3c\u4e8eSAS +\u7684\u4e1c\u897f\uff09\u3002 simplify \u662f\u57df/\u95ee\u9898\u7b80\u5316\u7a0b\u5e8f\u3002\u5b83\u8f93\u51fa\u201c\u7b80\u5355ADL\u201d\uff0c\u5b83\u53ef\u80fd\u4ecd\u7136\u5177\u6709\u6761\u4ef6\u4f5c\u7528\uff0c\u4f46\u6ca1\u6709\u91cf\u8bcd\u6216\u6790\u53d6\u8bcd\u3002 nyat \u5c06PDDL\u8f6c\u6362\u4e3aFastDownward\u7684\u5185\u90e8SAS +\u683c\u5f0f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u662fFastDownward\u8f6c\u6362\u5668\u7684\u76f4\u63a5\u66ff\u4ee3\u54c1\u3002\u4e0eFD\u8f6c\u6362\u5668\u76f8\u6bd4\uff0c\u5b83*\u6548\u7387\u4f4e\u5f97\u591a*\uff0c\u5e76\u4e14\u4e0d\u80fd\u4ece\u547d\u9898PDDL\u8868\u793a\u4e2d\u81ea\u52a8\u751f\u6210\u6709\u9650\u57df\u53d8\u91cf\u3002\u800c\u662f\uff08\u4e0eFD\u8f6c\u6362\u5668\u4e0d\u540c\uff09\uff0c\u5b83\u4fdd\u7559\u4e86PDDL\u8f93\u5165\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u6d41\u5229\uff08\u5373SAS +\u53d8\u91cf\uff09\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u6240\u751f\u6210\u7684SAS +\u8868\u793a\u5f62\u5f0f\u3002 vapo \u662f\u5b8c\u5168\u53ef\u89c2\u5bdf\u5230\u7684\u6982\u7387\u89c4\u5212\u7b56\u7565\u7684\uff08\u5404\u79cd\uff09\u9a8c\u8bc1\u5668\u3002\u5b83\u5b9e\u9645\u4e0a\u5e76\u4e0d\u80fd\u9a8c\u8bc1\u7b56\u7565\u662f\u5426\u8fbe\u5230\u76ee\u6807\uff0c\u4f46\u662f\u4f1a\u751f\u6210\u7b56\u7565\u4e0b\u53ef\u8fbe\u5230\u7684\u72b6\u6001\u7a7a\u95f4\u56fe\uff08\u70b9\u683c\u5f0f\uff09\uff0c\u5e76\u7528\u7b56\u7565\u64cd\u4f5c\u6807\u8bb0\u8282\u70b9\uff08\u72b6\u6001\uff09\u3002","title":"1. Lisp-pddl-DSL"},{"location":"Extensions/PDDL-plan-validator/PDDL-plan-validator/","text":"Planner Tools \u00b6 VAL - The Plan Validator ROSPlan - Planning in ROS PlanSys2 - Planning in ROS2 Eviscerator - The Planner tester Universal Planning Validator (Under Development) https://planning.wiki/extras \u4ecb\u7ecd \u89c4\u5212\u5de5\u5177 VAL-\u8ba1\u5212\u9a8c\u8bc1\u5668 VAL \uff08\u4e5f\u79f0\u4e3a\u9a8c\u8bc1\u5668\uff09\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u7528\u4e8e\u6839\u636e\u539f\u59cb\u57df\u548c\u95ee\u9898\u6587\u4ef6\u9a8c\u8bc1\u8ba1\u5212\u8005\u751f\u6210\u7684\u89e3\u51b3\u65b9\u6848\u3002VAL\u4f7f\u60a8\u53ef\u4ee5\u5728\u6267\u884c\u64cd\u4f5c\u65f6\u9075\u5b88\u8ba1\u5212\u6240\u9700\u7684\u6240\u6709\u524d\u63d0\u6761\u4ef6\uff0c\u540c\u65f6\u68c0\u67e5\u8ba1\u5212\u662f\u5426\u771f\u6b63\u5b9e\u73b0\u4e86\u76ee\u6807\u3002 Eviscerator-\u89c4\u5212\u5668\u6d4b\u8bd5\u5668 Eviscerator \u662f\u4e3a\u6b64PDDL\u53c2\u8003\u6307\u5357\u5f00\u53d1\u7684\u5de5\u5177\uff0c\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u81ea\u52a8\u6d4b\u8bd5\u548c\u8bc6\u522b\u8ba1\u5212\u4eba\u5458\u652f\u6301\u7684PDDL\u8981\u6c42\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u5de5\u5177\uff0c\u968f\u9644\u7528\u4e8eLinux\u7684\u6301\u7eed\u90e8\u7f72\u7684\u9884\u6784\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u5b83\u5e76\u6d4b\u8bd5\u8ba1\u5212\u7a0b\u5e8f\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u7f16\u8bd1\u3002 ROSPlan-ROS\u4e2d\u7684\u8ba1\u5212 ROSPlan \u662f\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff08ROS\uff09\u7684\u6a21\u5757\uff0c\u5141\u8bb8\u5c06AI Planning\u96c6\u6210\u5230\u4f7f\u7528ROS\u7684\u673a\u5668\u4eba\u4e2d\u3002ROSPlan\u5141\u8bb8\u5bf9\u673a\u5668\u4eba\u73af\u5883\u8fdb\u884c\u5efa\u6a21\uff0c\u4ee5\u8ba1\u5212\u548c\u6267\u884c\u4efb\u52a1\u3002 Plansys2-\u5728ROS2\u4e2d\u8fdb\u884c\u89c4\u5212 Plansys2 \u662f\u673a\u5668\u4eba\u4f5c\u4e1a\u7cfb\u7edf\uff0c\u65b0\u7248\u672c\u7684\u4e00\u4e2a\u9879\u76ee**ROS2**\uff0c\u6574\u5408\u89c4\u5212\u548c\u673a\u5668\u4eba\u3002\u5b83\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u4e2a\u6846\u67b6\uff0c\u5728\u5176\u4e2d\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u4e0d\u540c\u7684\u8ba1\u5212\u4eba\u5458\u4ee5\u4f7f\u673a\u5668\u4eba\u6267\u884c\u4efb\u52a1\u3002\u4f7f\u7528 \u884c\u4e3a\u6811 \u6765\u5b9e\u73b0 \u52a8\u4f5c \uff0c\u5e76\u4e14\u5728\u4ed3\u5e93\u4e2d\u6709\u5f88\u591a \u4f8b\u5b50 \u3002 \u901a\u7528\u89c4\u5212\u9a8c\u8bc1\u5668\uff08\u5f00\u53d1\u4e2d\uff09 \u901a\u7528\u8ba1\u5212\u9a8c\u8bc1\u5668\uff08\u5f00\u53d1\u4e2d\uff09 \u662f\u4e00\u79cd\u7528\u4e8e\u9a8c\u8bc1\u8ba1\u5212\u9886\u57df\u548c\u95ee\u9898\u7684\u5de5\u5177\u3002\u5f53\u524d\uff0c\u5b83\u53ea\u80fd\u652f\u6301\u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u548c\u9886\u57df\uff0c\u4f46\u662f\u8be5\u5de5\u5177\u65e8\u5728\u8fdb\u884c\u6269\u5c55\u4ee5\u5305\u62ec\u65f6\u95f4\u57df\u548c\u591a\u4e3b\u4f53\u57df\u3002\u5982\u679c\u60a8\u9700\u8981\u4e00\u4e2a\u652f\u6301\u6bd4\u4f20\u7edf\u8ba1\u5212\u66f4\u591a\u7684PDDL\u9ad8\u7ea7\u529f\u80fd\u7684\u9a8c\u8bc1\u5668\uff0c\u8bf7\u5c1d\u8bd5\u4f7f\u7528VAL\uff08\u8ba1\u5212\u9a8c\u8bc1\u5668\uff09\u4ee3\u66ff\u3002 https://github.com/aig-upf/universal-planning-validator \u897f\u73ed\u7259\u7ec4\u5927\u4f6c\u4e5f\u6709\u53c2\u4e0e\u5f00\u53d1 https://github.com/KCL-Planning/VAL https://planning.wiki/extras https://github.com/patrikhaslum/INVAL","title":"validators"},{"location":"Extensions/PDDL-plan-validator/PDDL-plan-validator/#planner-tools","text":"VAL - The Plan Validator ROSPlan - Planning in ROS PlanSys2 - Planning in ROS2 Eviscerator - The Planner tester Universal Planning Validator (Under Development) https://planning.wiki/extras \u4ecb\u7ecd \u89c4\u5212\u5de5\u5177 VAL-\u8ba1\u5212\u9a8c\u8bc1\u5668 VAL \uff08\u4e5f\u79f0\u4e3a\u9a8c\u8bc1\u5668\uff09\u662f\u4e00\u79cd\u5de5\u5177\uff0c\u7528\u4e8e\u6839\u636e\u539f\u59cb\u57df\u548c\u95ee\u9898\u6587\u4ef6\u9a8c\u8bc1\u8ba1\u5212\u8005\u751f\u6210\u7684\u89e3\u51b3\u65b9\u6848\u3002VAL\u4f7f\u60a8\u53ef\u4ee5\u5728\u6267\u884c\u64cd\u4f5c\u65f6\u9075\u5b88\u8ba1\u5212\u6240\u9700\u7684\u6240\u6709\u524d\u63d0\u6761\u4ef6\uff0c\u540c\u65f6\u68c0\u67e5\u8ba1\u5212\u662f\u5426\u771f\u6b63\u5b9e\u73b0\u4e86\u76ee\u6807\u3002 Eviscerator-\u89c4\u5212\u5668\u6d4b\u8bd5\u5668 Eviscerator \u662f\u4e3a\u6b64PDDL\u53c2\u8003\u6307\u5357\u5f00\u53d1\u7684\u5de5\u5177\uff0c\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u81ea\u52a8\u6d4b\u8bd5\u548c\u8bc6\u522b\u8ba1\u5212\u4eba\u5458\u652f\u6301\u7684PDDL\u8981\u6c42\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u5de5\u5177\uff0c\u968f\u9644\u7528\u4e8eLinux\u7684\u6301\u7eed\u90e8\u7f72\u7684\u9884\u6784\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4e0b\u8f7d\u5b83\u5e76\u6d4b\u8bd5\u8ba1\u5212\u7a0b\u5e8f\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u7f16\u8bd1\u3002 ROSPlan-ROS\u4e2d\u7684\u8ba1\u5212 ROSPlan \u662f\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff08ROS\uff09\u7684\u6a21\u5757\uff0c\u5141\u8bb8\u5c06AI Planning\u96c6\u6210\u5230\u4f7f\u7528ROS\u7684\u673a\u5668\u4eba\u4e2d\u3002ROSPlan\u5141\u8bb8\u5bf9\u673a\u5668\u4eba\u73af\u5883\u8fdb\u884c\u5efa\u6a21\uff0c\u4ee5\u8ba1\u5212\u548c\u6267\u884c\u4efb\u52a1\u3002 Plansys2-\u5728ROS2\u4e2d\u8fdb\u884c\u89c4\u5212 Plansys2 \u662f\u673a\u5668\u4eba\u4f5c\u4e1a\u7cfb\u7edf\uff0c\u65b0\u7248\u672c\u7684\u4e00\u4e2a\u9879\u76ee**ROS2**\uff0c\u6574\u5408\u89c4\u5212\u548c\u673a\u5668\u4eba\u3002\u5b83\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u4e2a\u6846\u67b6\uff0c\u5728\u5176\u4e2d\u53ef\u4ee5\u8f7b\u677e\u96c6\u6210\u4e0d\u540c\u7684\u8ba1\u5212\u4eba\u5458\u4ee5\u4f7f\u673a\u5668\u4eba\u6267\u884c\u4efb\u52a1\u3002\u4f7f\u7528 \u884c\u4e3a\u6811 \u6765\u5b9e\u73b0 \u52a8\u4f5c \uff0c\u5e76\u4e14\u5728\u4ed3\u5e93\u4e2d\u6709\u5f88\u591a \u4f8b\u5b50 \u3002 \u901a\u7528\u89c4\u5212\u9a8c\u8bc1\u5668\uff08\u5f00\u53d1\u4e2d\uff09 \u901a\u7528\u8ba1\u5212\u9a8c\u8bc1\u5668\uff08\u5f00\u53d1\u4e2d\uff09 \u662f\u4e00\u79cd\u7528\u4e8e\u9a8c\u8bc1\u8ba1\u5212\u9886\u57df\u548c\u95ee\u9898\u7684\u5de5\u5177\u3002\u5f53\u524d\uff0c\u5b83\u53ea\u80fd\u652f\u6301\u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u548c\u9886\u57df\uff0c\u4f46\u662f\u8be5\u5de5\u5177\u65e8\u5728\u8fdb\u884c\u6269\u5c55\u4ee5\u5305\u62ec\u65f6\u95f4\u57df\u548c\u591a\u4e3b\u4f53\u57df\u3002\u5982\u679c\u60a8\u9700\u8981\u4e00\u4e2a\u652f\u6301\u6bd4\u4f20\u7edf\u8ba1\u5212\u66f4\u591a\u7684PDDL\u9ad8\u7ea7\u529f\u80fd\u7684\u9a8c\u8bc1\u5668\uff0c\u8bf7\u5c1d\u8bd5\u4f7f\u7528VAL\uff08\u8ba1\u5212\u9a8c\u8bc1\u5668\uff09\u4ee3\u66ff\u3002 https://github.com/aig-upf/universal-planning-validator \u897f\u73ed\u7259\u7ec4\u5927\u4f6c\u4e5f\u6709\u53c2\u4e0e\u5f00\u53d1 https://github.com/KCL-Planning/VAL https://planning.wiki/extras https://github.com/patrikhaslum/INVAL","title":"Planner Tools"},{"location":"Extensions/PDDL-plan-validator/VScode-PDDL%E6%8F%92%E4%BB%B6VAL/","text":"1. VAL \u00b6 https://github.com/jan-dolejsi/vscode-pddl/wiki/Configuring-the-PDDL-planner \u6e90\u7801 https://github.com/KCL-Planning/VAL \u6e90\u7801 http://solver.planning.domains/solve VScode\u63d2\u4ef6 PDDL\u9a8c\u8bc1\u6587\u4ef6 \u63d2\u4ef6pddl parser c:\\Users\\HUMAN\\AppData\\Roaming\\Code\\User\\globalStorage\\jan-dolejsi.pddl\\val\\Val-20210120.1-win64\\bin\\Parser.exe https://github.com/jan-dolejsi/vscode-pddl/wiki/Configuring-the-PDDL-parser \u63d2\u4ef6\u9a8c\u8bc1\u5668 c:\\Users\\HUMAN\\AppData\\Roaming\\Code\\User\\globalStorage\\jan-dolejsi.pddl\\val\\Val-20210120.1-win64\\bin\\Validate.exe","title":"VAL"},{"location":"Extensions/PDDL-plan-validator/VScode-PDDL%E6%8F%92%E4%BB%B6VAL/#1-val","text":"https://github.com/jan-dolejsi/vscode-pddl/wiki/Configuring-the-PDDL-planner \u6e90\u7801 https://github.com/KCL-Planning/VAL \u6e90\u7801 http://solver.planning.domains/solve VScode\u63d2\u4ef6 PDDL\u9a8c\u8bc1\u6587\u4ef6 \u63d2\u4ef6pddl parser c:\\Users\\HUMAN\\AppData\\Roaming\\Code\\User\\globalStorage\\jan-dolejsi.pddl\\val\\Val-20210120.1-win64\\bin\\Parser.exe https://github.com/jan-dolejsi/vscode-pddl/wiki/Configuring-the-PDDL-parser \u63d2\u4ef6\u9a8c\u8bc1\u5668 c:\\Users\\HUMAN\\AppData\\Roaming\\Code\\User\\globalStorage\\jan-dolejsi.pddl\\val\\Val-20210120.1-win64\\bin\\Validate.exe","title":"1. VAL"},{"location":"Extensions/RL/PDDLGYM/","text":"PDDLGYM PDDLGYM : GYMENVIRONMENTS FROMPDDL PROBLEMS 1\u5f15\u8a00 2.1\u80cc\u666f\uff1aPDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6 2.2\u89c2\u5bdf\u548c\u884c\u52a8\u7a7a\u95f4 2.3\u521d\u59cb\u5316\u548c\u91cd\u7f6e\u73af\u5883 **2.4\u5b9e\u65bd**step\u65b9\u6cd5 2.5\u53d1\u5c55\u72b6\u51b5 3 PDDLGym\u6309\u6570\u5b57 3.1\u73af\u5883\u6982\u8ff0 3.2\u73af\u5883\u96be\u5ea6\u7684\u53d8\u5316 PDDLGYM \u00b6 PDDLGym: Gym Environments from PDDL Problems https://github.com/tomsilver/pddlgym https://github.com/ronuchit/pddlgym_planners PDDLGYM : GYMENVIRONMENTS FROMPDDL PROBLEMS \u00b6 \u9ebb\u7701\u7406\u5de5\u5b66\u9662\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u4eba\u5de5\u667a\u80fd\u5b9e\u9a8c\u5ba4\uff08tslvr\uff0c ronuchitj@mit.edu 2020\u5e749\u670817\u65e5 abstract \u6211\u4eec\u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ecePDDL\u57df\u548c\u95ee\u9898\u81ea\u52a8\u6784\u5efaOpenAI Gym\u73af\u5883\u7684\u6846\u67b6\u3002PDDLGym\u4e2d\u7684\u89c2\u5bdf\u548c\u52a8\u4f5c\u662f\u5173\u7cfb\u6027\u7684\uff0c\u8fd9\u4f7f\u5f97\u8be5\u6846\u67b6\u7279\u522b\u9002\u5408\u4e8e\u5173\u7cfb\u5f3a\u5316\u5b66\u4e60\u548c\u5173\u7cfb\u987a\u5e8f\u51b3\u7b56\u7684\u7814\u7a76\u3002PDDLGym\u8fd8\u53ef\u7528\u4f5c\u901a\u7528\u6846\u67b6\uff0c\u7528\u4e8e\u901a\u8fc7\u7b80\u6d01\uff0c\u719f\u6089\u7684\u89c4\u8303\u8bed\u8a00\u5feb\u901f\u6784\u5efa\u4f17\u591a\u591a\u6837\u7684\u57fa\u51c6\u3002\u6211\u4eec\u8ba8\u8bba\u4e86\u8bbe\u8ba1\u51b3\u7b56\u548c\u5b9e\u65bd\u7ec6\u8282\uff0c\u5e76\u6839\u636e\u89c4\u5212\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\u8bf4\u660e\u4e8620\u79cd\u5185\u7f6e\u73af\u5883\u4e4b\u95f4\u7684\u7ecf\u9a8c\u5dee\u5f02\u3002\u6211\u4eec\u5e0c\u671bPDDLGym\u5c06\u4fc3\u8fdb\u5f3a\u5316\u5b66\u4e60\u793e\u533a\uff08Gym\u7684\u8bde\u751f\uff09\u548cAI\u89c4\u5212\u793e\u533a\uff08\u4ea7\u751fPDDL\uff09\u4e4b\u95f4\u7684\u6865\u6881\u3002 1\u5f15\u8a00 \u00b6 \u57fa\u51c6\u7684\u5efa\u7acb\u5f80\u5f80\u52a0\u901f\u4e86\u4eba\u5de5\u667a\u80fd\u7684\u5404\u4e2a\u5b50\u57df\u7684\u7814\u7a76\u8fdb\u5c55[ 1\uff0c 2\uff0c 3] \u3002\u5728\u987a\u5e8f\u51b3\u7b56\u4efb\u52a1\u4e2d\uff0c\u8bf8\u5982OpenAI Gym [ 4]\u4e2d \u7684\u73af\u5883\u548c\u56fd\u9645\u8ba1\u5212\u5927\u8d5b\uff08IPC\uff09[ 5]\u4e2d \u7684\u8ba1\u5212\u4efb\u52a1\u4e4b\u7c7b\u7684\u57fa\u51c6\u63a8\u52a8\u4e86\u5de8\u5927\u7684\u8fdb\u6b65\u3002Gym\u5b9a\u4e49\u4e86\u4ee3\u7406\u4e0e\u73af\u5883\u4ea4\u4e92\u7684\u6807\u51c6\u5316\u65b9\u6cd5\uff0c\u4ece\u800c\u53ef\u4ee5\u8f7b\u677e\u6bd4\u8f83\u5404\u79cd\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3002IPC\u63d0\u4f9b\u4e86\u4e00\u7ec4\u8ba1\u5212\u57df\u548c\u7528\u8ba1\u5212\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09[ 6] \u7f16\u5199\u7684\u95ee\u9898\uff0c\u4ece\u800c\u53ef\u4ee5\u8f7b\u677e\u6bd4\u8f83\u5404\u79cd\u7b26\u53f7\u8ba1\u5212\u5668\u3002 \u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u5c06Gym\u548cPDDL\u7684\u5143\u7d20\u7ed3\u5408\u5728\u4e00\u8d77\u7684\u5f00\u6e90\u6846\u67b6\u3002 PDDLGym\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef****\u6839\u636e****PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6****\u81ea\u52a8\u521b\u5efaGym\u73af\u5883** \u3002** \u8be5\u5e93\u4f4d\u4e8e https://github.com/tomsilver/pddlgym\u3002 \u62c9\u8bf7\u6c42\u662f\u6b22\u8fce\u7684\uff01 \u4e0eGym\u4e00\u6837\uff0cPDDLGym\u5141\u8bb8\u4ee3\u7406\u4e0e\u73af\u5883\u4e4b\u95f4\u53d1\u751f\u5468\u671f\u6027\u7684\u95ed\u73af\u4ea4\u4e92\u3002\u7279\u5de5\u4f1a\u4ece\u73af\u5883\u4e2d\u63a5\u6536\u5230\u4e00\u4e2a\u89c2\u5bdf\u7ed3\u679c\uff0c\u5e76\u505a\u51fa\u884c\u52a8\uff0c\u91cd\u590d\u6b64\u5faa\u73af\u76f4\u5230\u60c5\u8282\u7ed3\u675f\u3002\u50cf\u5728PDDL\u4e2d\u4e00\u6837\uff0cPDDLGym\u4ece\u6839\u672c\u4e0a\u662f\u76f8\u5173\u7684\uff1a\u89c2\u5bdf\u662f\u5bf9\u8c61\u4e0a\u7684\u5730\u9762\u5173\u7cfb\u96c6\uff08\u4f8b\u5982\uff0c\u5728\uff08\u76d8\u5b50\uff0c\u684c\u5b50\u4e0a\uff09\uff09\uff0c\u52a8\u4f5c\u662f\u4e0e\u5bf9\u8c61\u4e00\u8d77\u63a5\u5730\u7684\u6a21\u677f\uff08\u4f8b\u5982pick\uff08\u76d8\u5b50\uff09\uff09\u3002\u56e0\u6b64\uff0cPDDLGym\u7279\u522b\u9002\u5408\u7528\u4e8e\u5173\u7cfb\u5b66\u4e60\u548c\u987a\u5e8f\u51b3\u7b56\u7814\u7a76\u3002\u6709\u5173\u5f53\u524d\u5728PDDLGym\u4e2d\u5b9e\u73b0\u7684\u67d0\u4e9b\u73af\u5883\u7684\u6e32\u67d3\uff0c\u8bf7\u53c2\u89c1\u56fe 1 \uff1b\u5bf9\u4e8e\u4ee3\u7801\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u56fe 2 \u3002 \u5f3a\u5316\u5b66\u4e60\u4e2d\u4f7f\u7528\u7684Gym API\u5b9a\u4e49\u4e86\u4ee3\u7406\u4e0e\u73af\u5883\u4e4b\u95f4\u7684\u786c\u6027\u754c\u9650\u3002\u7279\u522b\u662f\uff0c\u4ee3\u7406*\u4ec5*\u901a\u8fc7\u91c7\u53d6\u884c\u52a8\u5e76\u63a5\u6536\u89c2\u5bdf\u7ed3\u679c\u6765\u4e0e\u73af\u5883\u4ea4\u4e92\u3002\u73af\u5883\u6267\u884c\u4e00\u4e2a\u529f\u80fd\u6b65\u9aa4\uff0c\u8be5\u529f\u80fd\u6b65\u9aa4\u4f7f\u4ee3\u7406\u8d4b\u4e88\u7684\u64cd\u4f5c\u4f7f\u72b6\u6001\u524d\u8fdb\uff1b\u6b65\u9aa4\u5b9a\u4e49\u73af\u5883\u7684\u8fc7\u6e21\u6a21\u578b\u3002\u540c\u6837\uff0cPDDL\u57df\u901a\u8fc7\u5176\u8fd0\u7b97\u7b26\u5bf9\u8f6c\u6362\u6a21\u578b\u8fdb\u884c\u7f16\u7801\u3002\u4f46\u662f\uff0c\u5728\u5178\u578b\u7528\u6cd5\u4e2d\uff0cPDDL\u88ab\u7406\u89e3\u4e3a\u5b8c\u5168\u5b58\u5728\u4e8e\u4ee3\u7406\u7684\u201c\u601d\u60f3\u201d\u4e2d\u3002\u7136\u540e\uff0c\u4e00\u4e2a\u5355\u72ec\u7684\u8fc7\u7a0b\u8d1f\u8d23\u5c06\u8ba1\u5212\u8f6c\u53d8\u4e3a\u4ee3\u7406\u53ef\u4ee5\u5728\u4e16\u754c\u8303\u56f4\u5185\u6267\u884c\u7684\u52a8\u4f5c\u3002 PDDLGym\u8fdd\u53cd\u4e86\u8fd9\u4e00\u7ea6\u5b9a\uff1a\u5728PDDLGym\u4e2d\uff0cPDDL\u57df\u548c\u95ee\u9898\u7262\u56fa\u5730\u4f4d\u4e8e\u4ee3\u7406\u7a0b\u5e8f-\u73af\u5883\u8fb9\u754c\u7684\u73af\u5883\u4fa7\u3002\u73af\u5883\u4f7f\u7528PDDL\u6587\u4ef6\u6765\u5b9e\u73b0\u6b65\u9aa4\u529f\u80fd\uff0c\u8be5\u529f\u80fd\u53ef\u5728\u7ed9\u5b9a\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u63d0\u5347\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u6700\u597d*\u5c06*PDDLGym\u7406\u89e3\u4e3aPDDL\u7684\u76ee\u7684\u3002\u5728\u5b9e\u73b0\u65b9\u9762\uff0c\u6b64\u7528\u9014\u5177\u6709\u5fae\u5999\u4f46\u91cd\u8981\u7684\u542b\u4e49\uff0c\u5728\uff08 \u00a72.2\uff09\u4e2d\u8fdb\u884c \u4e86\u8ba8\u8bba\u3002 \u56fe1\uff1a**\u5728PDDLGym\u4e2d\u5b9e\u73b0\u7684\u4e00\u4e9b\u73af\u5883\u793a\u4f8b\u3002**\u4ece\u5de6\u4e0a\u65b9\uff1a\u63a8\u7bb1\u5b50\uff0c\u6cb3\u5185\uff0c\u8857\u533a\uff0c\u65c5\u884c\u63a8\u9500\u5458\uff08TSP\uff09\uff0c\u6ed1\u74e6\u548c\u624b\u5de5\u5236\u4f5c\u3002 \u56fe2\uff1a**PDDLGym\u4ee3\u7801\u793a\u4f8b\u3002**PDDLGym\u73af\u5883\u7684\u7279\u5f81\u5728\u4e8ePDDL\u57df\u6587\u4ef6\u548cPDDL\u95ee\u9898\u6587\u4ef6\u5217\u8868\u3002\uff08A\uff09PDDL\u57df\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u64cd\u4f5c\u7b26\u3002\uff08B\uff09\u4e00\u6bb5\u7b80\u5355\u7684PDDL\u95ee\u9898\u6587\u4ef6\u7684\u6458\u5f55\u3002\uff08C\uff09\u5728\u4f7f\u7528PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u6ce8\u518c\u540d\u79f0\u4e3a\u201c PDDLEnvBlocks-v0\u201d\u7684\u73af\u5883\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u9700\u51e0\u884cPython\u5c31\u53ef\u4ee5\u4e0e\u6b64PDDLGym\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u3002 PDDLGym\u5177\u6709\u4e09\u4e2a\u4e3b\u8981\u7528\u9014\uff1a \uff081\uff09\u4fc3\u8fdb\u4e3a\u5173\u7cfb\u57df\u4e2d\u7684\u987a\u5e8f\u51b3\u7b56\u521b\u5efa\u4f17\u591a\u591a\u6837\u7684\u57fa\u51c6\u3002 PDDLGym\u5141\u8bb8\u5728PDDL\u4e2d\u5b9a\u4e49\u4efb\u52a1\uff0c\u4ece\u800c\u6839\u636ePDDL\u6587\u4ef6\u81ea\u52a8\u6784\u5efaGym\u73af\u5883\u3002PDDL\u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u57df\u7684\u7d27\u51d1\u578b\u7b26\u53f7\u8bed\u8a00\uff0c\u5426\u5219\u76f4\u63a5\u901a\u8fc7Gym API\u8fdb\u884c\u5b9a\u4e49\u53ef\u80fd\u4f1a\u5f88\u7e41\u7410\u4e14\u91cd\u590d\u3002 \uff082\uff09 *\u6865\u6881\u52a0\u56fa\u5b66\u4e60\u4e0e\u89c4\u5212\u7814\u7a76\u3002*PDDLGym\u4f7f\u8ba1\u5212\u7814\u7a76\u4eba\u5458\u548c\u673a\u5668\u5b66\u4e60\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u5b8c\u5168\u76f8\u540c\u7684\u4e00\u7ec4\u57fa\u51c6\u4e0a\u6d4b\u8bd5\u4ed6\u4eec\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u53ef\u4ee5\u5229\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u4f18\u52bf\u6765\u5f00\u53d1\u6280\u672f\u3002\u6b64\u5916\uff0c\u7531\u4e8ePDDLGym\u5305\u542b\u5185\u7f6e\u7684\u57df\u548c\u95ee\u9898\uff0c\u56e0\u6b64\u6267\u884cApple\u5230Apple\u7684\u6bd4\u8f83\u5f88\u7b80\u5355\uff0c\u800c\u4e0d\u5fc5\u4ece\u4e0d\u540c\u7684\u6765\u6e90\u6536\u96c6\u7b2c\u4e09\u65b9\u4ee3\u7801\uff08\u53e6\u8bf7\u53c2\u89c1[ 7] \uff09\u3002 \uff083\uff09 *\u4fc3\u8fdb\u5173\u7cfb\u9886\u57df\u4e2d\u987a\u5e8f\u51b3\u7b56\u7684\u7814\u7a76\u3002*\u5728\u6211\u4eec\u81ea\u5df1\u7684\u7814\u7a76\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0PDDLGym\u5728\u7814\u7a76\u63a2\u7d22\u63d0\u5347\u64cd\u4f5c\u5458\u5b66\u4e60[ 8] \uff0c\u5206\u5c42\u76ee\u6807\u6761\u4ef6\u7b56\u7565\u5b66\u4e60[ 9] \u548c\u72b6\u6001\u62bd\u8c61[ 10]\u65f6 \u975e\u5e38\u6709\u7528\u3002\u5176\u5b83\u53ef\u4ee5\u4f7f\u7528PDDLGym\u53d7\u76ca\u5f00\u653e\u7814\u7a76\u7684\u95ee\u9898\u5305\u62ec\uff1a\u5173\u7cfb\u5f3a\u5316\u5b66\u4e60[ 11\uff0c 12\uff0c 13] \uff0c\u5b66\u4e60\u8fd0\u8425\u5546\u7684\u7b26\u53f7\u63cf\u8ff0[ 11\uff0c 14\uff0c 15] \uff0c\u53d1\u73b0\u76f8\u5173\u7684\u8f6c\u6362\u89c4\u5219\u8fdb\u884c\u6709\u6548\u7684\u89c4\u5212[ 16\uff0c 17] \uff0c\u548c\u5b66\u4e60\u53d6\u6d88\u9009\u62e9[ 18\uff0c19 \uff0c 20\uff0c 21] \u3002 \u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u5b89\u6392\u5982\u4e0b\u3002\uff08 \u7b2c2\u8282\uff09 \u8ba8\u8bba\u4e86PDDLGym\u7684\u8bbe\u8ba1\u51b3\u7b56\u548c\u5b9e\u73b0\u7ec6\u8282\u3002\u5728\uff08 \u00a73\uff09\u4e2d \uff0c\u6211\u4eec\u6982\u8ff0\u4e86\u5185\u7f6e\u7684PDDLGym\u57df\uff0c\u5e76\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u7ecf\u9a8c\u7ed3\u679c\uff0c\u4ee5\u8bf4\u660e\u5b83\u4eec\u5728\u89c4\u5212\u548c\u5b66\u4e60\u96be\u5ea6\u65b9\u9762\u7684\u591a\u6837\u6027\u3002\u6700\u540e\uff0c\u5728\uff08 \u00a74\uff09\u4e2d \uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u6269\u5c55\u548c\u6539\u8fdbPDDLGym\u7684\u9014\u5f84\u3002 Gym API\u4f7f\u7528\u4e09\u79cd\u57fa\u672c\u65b9\u6cd5\u5c06\u73af\u5883\u5b9a\u4e49\u4e3aPython\u7c7b\uff1a init \uff0c\u7528\u4e8e\u521d\u59cb\u5316\u73af\u5883\uff1b reset \uff0c\u5f00\u59cb\u65b0\u7684\u60c5\u8282\u5e76\u8fd4\u56de\u89c2\u5bdf\u503c\uff1b step \uff08\u6b65\u9aa41\uff09\uff0c\u5b83\u4ece\u4ee3\u7406\u91c7\u53d6\u884c\u52a8\uff0c\u524d\u8fdb\u5f53\u524d\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u89c2\u5bdf\u503c\uff0c\u5956\u52b1\uff0c\u6307\u793a\u60c5\u8282\u662f\u5426\u5b8c\u6210\u7684\u5e03\u5c14\u503c\u4ee5\u53ca\u53ef\u9009\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 API\u8fd8\u5305\u62ec\u5176\u4ed6\u6b21\u8981\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c\u5904\u7406\u6e32\u67d3\u548c\u968f\u673a\u79cd\u5b50\u3002 \u6700\u540e\uff0c\u9700\u8981\u5728Gym\u73af\u5883\u4e2d\u5b9e\u73b0\u4e00\u4e2a**action_space**\uff08\u4ee3\u8868\u53ef\u80fd\u7684\u52a8\u4f5c\u7684\u7a7a\u95f4\uff09\u548c\u4e00\u4e2a**observation_space**\uff08\u4ee3\u8868\u53ef\u80fd\u7684\u89c2\u5bdf\u7684\u7a7a\u95f4\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u6982\u8ff0PDDL\u6587\u4ef6\uff0c\u7136\u540e\u63cf\u8ff0\u5982\u4f55\u5728PDDLGym\u4e2d\u5b9a\u4e49\u52a8\u4f5c\u548c\u89c2\u5bdf\u7a7a\u95f4\u3002 \u518d\u8005\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u4e09\u79cd\u57fa\u672c\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002\u6709\u5173PDDLGym\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u8bf7\u53c2\u89c1\u4ee3\u7801\u4e2d\u7684**structs.py**\u3002 2.1\u80cc\u666f\uff1aPDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6 \u00b6 PDDL\u6587\u4ef6\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u57df\u6587\u4ef6\u548c\u95ee\u9898\u6587\u4ef6\u3002\u5355\u4e2a*\u57fa\u51c6\u6d4b\u8bd5*\u7684\u7279\u5f81\u662f\u4e00\u4e2a\u57df\u6587\u4ef6\u548c\u591a\u4e2a\u95ee\u9898\u6587\u4ef6\u3002 PDDL\u57df\u6587\u4ef6\u5305\u62ec*\u8c13\u8bcd*\uff08\u5e26\u6709\u5360\u4f4d\u7b26\u53d8\u91cf\uff08\u4f8b\u5982\uff0c\u5728\uff1fx\uff1fy\u4e0a\uff09\u7684\u547d\u540d\u5173\u7cfb\uff09\u548c*\u8fd0\u7b97\u7b26\u3002*\u7b97\u5b50\u7531\u540d\u79f0\uff0c\u53c2\u6570\u5217\u8868\uff0c\u63cf\u8ff0\u7b97\u5b505 s\u524d\u63d0\u7684\u53c2\u6570\u4e0a\u7684\u4e00\u9636\u903b\u8f91\u516c\u5f0f\u548c\u63cf\u8ff0\u7b97\u5b505 s\u6548\u679c\u7684\u53c2\u6570\u4e0a\u7684\u4e00\u9636\u903b\u8f91\u516c\u5f0f\u7ec4\u6210\u3002\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\u516c\u5f0f\u7684\u5f62\u5f0f\u901a\u5e38\u53d7PDDL\u7248\u672c\u7684\u9650\u5236\u3002PDDL\u7684\u65e9\u671f\u7248\u672c\u4ec5\u5141\u8bb8\u5730\u9762\u8c13\u8bcd\u7684\u8fde\u63a5[ 22] \uff1b\u66f4\u9ad8\u7248\u672c\u4e5f\u5141\u8bb8\u6790\u53d6\u548c\u91cf\u8bcd[ 23] \u3002\u6709\u5173PDDL\u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u56fe 2A \u3002 PDDL\u95ee\u9898\u6587\u4ef6\u5305\u62ec\u4e00\u7ec4*\u5bf9\u8c61*\uff08\u547d\u540d\u5b9e\u4f53\uff09\uff0c \u521d\u59cb\u72b6\u6001*\u548c*\u76ee\u6807\u3002*\u521d\u59cb\u72b6\u6001\u662f\u4e00\u7ec4\u5e26\u6709\u5bf9\u8c61\u7684\u8c13\u8bcd\u3002\u6839\u636e\u5c01\u95ed\u4e16\u754c\u7684\u5047\u8bbe\uff0c\u4efb\u4f55\u4e0d\u5728\u72b6\u6001\u4e2d\u7684\u5730\u9762\u8c13\u8bcd\u90fd\u88ab\u5047\u5b9a\u4e3a\u5047\u3002\u76ee\u6807\u662f\u5bf9\u8c61\u4e0a\u7684\u4e00\u9636\u903b\u8f91\u516c\u5f0f\uff08\u76ee\u6807\u7684\u5f62\u5f0f\u53d7PDDL\u7248\u672c\u7684\u9650\u5236\uff0c\u4f8b\u5982\u8fd0\u7b97\u7b26\uff0c\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\uff09\u3002\u8bf7\u6ce8\u610f\uff0cPDDL\uff08\u548cPDDLGym\uff09\u8fd8\u5141\u8bb8*\u952e\u5165*\u5bf9\u8c61\u548c\u53d8\u91cf \u3002*\u6709\u5173PDDL\u95ee\u9898\u6587\u4ef6\u7684\u90e8\u5206\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u56fe 2B \u3002 2.2\u89c2\u5bdf\u548c\u884c\u52a8\u7a7a\u95f4 \u00b6 PDDLGym\u4e2d\u7684\u6bcf\u4e2a\u89c2\u5bdf\u5bf9\u8c61obs\u5177\u6709\u4e09\u4e2a\u7ec4\u4ef6\uff0c\u5b83\u4eec\u955c\u50cf\u4e86PDDL\u95ee\u9898\u6587\u4ef6\u7684\u7ec4\u4ef6\uff1aobs.objects\u662f\u5305\u542b\u95ee\u9898\u4e2d\u5b58\u5728\u7684\u6240\u6709\u5bf9\u8c61\u7684\u96c6\u5408\uff1bobs.goal\u5305\u542b\u95ee\u9898\u76ee\u6807\uff1bobs.literals\u662f\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u4e3atrue\u7684\u6240\u6709\u57fa\u7840\u8c13\u8bcd\u7684\u96c6\u5408\u3002\u8fd9\u4e9b\u89c2\u5bdf\u5b8c\u5168\u5c01\u88c5\u4e86\u73af\u5883\u72b6\u6001\uff0c\u5373\u5b8c\u5168\u89c2\u5bdf\u4e86PDDLGym\u73af\u5883\u3002\u89c2\u5bdf\u7a7a\u95f4\u662f\u6240\u6709\u53ef\u80fd\u7684\u5730\u9762\u8c13\u8bcd\u4ee5\u53ca\u9759\u6001\u5bf9\u8c61\u548c\u76ee\u6807\u7684\u5e42\u96c6\u3002\u8fd9\u79cd\u529f\u7387\u96c6\u901a\u5e38\u662f\u5de8\u5927\u7684\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u8ba1\u7b97\u5b83\u3002\u89c2\u5bdf\u7a7a\u95f4\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u79bb\u6563\u7a7a\u95f4\uff0c\u5176\u5927\u5c0f\u7b49\u4e8e\u6b64\u5e42\u96c6\u7684\u5927\u5c0f\uff1b\u56e0\u4e3a\u8fd9\u4e2a\u7a7a\u95f4\u5f88\u5927\uff0c PDDLGym\u73af\u5883\u7684\u64cd\u4f5c\u7a7a\u95f4\u662f\u6574\u4e2a\u6846\u67b6\u4e2d\u66f4\u5fae\u5999\u7684\u65b9\u9762\u4e4b\u4e00\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u9009\u62e9\u3002\u5728\u8d44\u6e90\u5e93\u4e2d\u63d0\u4f9b\u4e86\u540c\u65f6\u670d\u7528\u9014\u5f84\u8bf4\u660e\uff0c\u81ea\u8ff0\u4e2d\uff0c\u5728\u201c\u7b2c3\u6b65\uff1a\u6ce8\u518c\u5065\u8eab\u623f\u73af\u5883\u201d\u4e00\u8282\u3002 \u5982\u679c\u53ea\u60f3\u5c06\u73b0\u6210\u7684PDDL\u6587\u4ef6\u4e0ePDDLGym\u4e00\u8d77\u4f7f\u7528\uff0c\u5219\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u5408\u9002\u7684\u3002\u53ef\u4ee5\u901a\u8fc7\u5728\u73af\u5883\u6ce8\u518c\u4e2d\u5c06operator_as_actions\u8bbe\u7f6e\u4e3aTrue\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u544a\u8bc9PDDLGym PDDL\u57df\u6587\u4ef6\u4e2d\u5b58\u5728\u7684\u8fd0\u7b97\u7b26\u672c\u8eab\u5e94\u88ab\u89c6\u4e3a\u73af\u5883\u4e2d\u7684\u52a8\u4f5c\uff0c\u5e76\u7531\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u53c2\u6570\u8fdb\u884c\u53c2\u6570\u5316\u3002 \u5efa\u8bae\u4f7f\u7528\u7b2c\u4e8c\u79cd\u9014\u5f84\u8fdb\u884c\u66f4\u8ba4\u771f\u7684\u7814\u7a76\uff0c\u8fd9\u662f\u7531\u4e8e\u7ecf\u5178AI\u8ba1\u5212\u4e2d\u7684\u201c\u64cd\u4f5c\u5458\u201d\u4e0e\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u201c\u52a8\u4f5c\u201d\u4e4b\u95f4\u7684\u8bed\u4e49\u5dee\u5f02\u3002\u5728AI\u89c4\u5212\u4e2d\uff0c\u52a8\u4f5c\u901a\u5e38\u7b49\u540c\u4e8e\u5730\u9762\u64cd\u4f5c\u5458\uff0c\u5373\u5176\u53c2\u6570\u7ed1\u5b9a\u5230\u5bf9\u8c61\u7684\u64cd\u4f5c\u5458\u3002\u4f46\u662f\uff0c\u5728\u5927\u591a\u6570PDDL\u57df\u4e2d\uff0c\u53ea\u6709\u4e00\u4e9b\u64cd\u4f5c\u5458\u53c2\u6570\u662f*\u7a7a\u95f2\u7684*\uff08\u5c31\u63a7\u5236\u4ee3\u7406\u800c\u8a00\uff09\u3002\u5176\u4f59\u53c2\u6570\u5305\u542b\u5728\u8fd0\u7b97\u7b26\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u524d\u63d0\u6761\u4ef6/\u6548\u679c\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u53ef\u4ee5\u4ece\u5f53\u524d\u72b6\u6001\u6216\u81ea\u7531\u53c2\u6570\u7684\u9009\u62e9\u4e2d\u5f97\u51fa\u3002PDDL\u672c\u8eab\u4e0d\u533a\u5206\u81ea\u7531\u53c2\u6570\u548c\u975e\u81ea\u7531\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u8003\u8651\u56fe 3A \u4e2d\u6240\u793a\u7684\u63a8\u7bb1\u5b50\u7684\u8fd0\u8425\u5546\u3002\u6b64\u8fd0\u7b97\u7b26\u8868\u793a\u73a9\u5bb6\uff08\uff1fp\uff09\u4ece\u67d0\u4e2a\u5355\u5143\u683c\uff08\uff1ffrom\uff09\u5411\u53e6\u4e00\u4e2a\u5355\u5143\u683c\uff08\uff1fto\uff09\u6cbf\u67d0\u4e2a\u65b9\u5411\uff08\uff1fdir\uff09\u79fb\u52a8\u7684\u89c4\u5219\u3002\u5728\u771f\u5b9e\u7684\u63a8\u7bb1\u5b50\u6e38\u620f\u4e2d\uff0c\u4ee3\u7406\u5546\u505a\u51fa\u7684\u552f\u4e00\u9009\u62e9\u662f\u79fb\u52a8\u7684\u65b9\u5411-\u53ea\u6709\uff1fdir\u53c2\u6570\u662f\u81ea\u7531\u7684\u3002\u73a9\u5bb6\u7684\uff1fp\u603b\u662f\u76f8\u540c\u7684\uff0c\uff1ffrom\u662f\u7531\u4ee3\u7406\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u4f4d\u7f6e\u5b9a\u4e49\u7684\uff0c\uff1fto\u53ef\u4ee5\u4ece\uff1ffrom\u548c\u4ee3\u7406\u5bf9\uff1fdir\u7684\u9009\u62e9\u4e2d\u5f97\u51fa\u3002\u4e3a\u4e86\u6b63\u786e\u5730\u4e3aPDDLGym\u73af\u5883\u5b9a\u4e49\u52a8\u4f5c\u7a7a\u95f4\uff0c\u6211\u4eec\u5fc5\u987b\u660e\u786e\u5730\u5c06\u81ea\u7531\u53c2\u6570\u4e0enon-free ones\u533a\u5206\u3002 \u56fe3\uff1a**\u5728PDDL\u8fd0\u7b97\u7b26\u4e2d\u590d\u5236free operators\u3002**\u4f20\u7edf\u4e0a\uff0cPDDL\u8fd0\u7b97\u7b26\u5c06\u81ea\u7531\u548c\u975e\u81ea\u7531\u53c2\u6570\u6df7\u5408\u5728\u4e00\u8d77\u3002\u4f8b\u5982\uff0c\u5728\u63a8\u7bb1\u5b50\uff08A\uff09\u7684\u5178\u578b\u79fb\u52a8\u8fd0\u7b97\u7b26\u4e2d\uff0c\u81ea\u7531\u53c2\u6570\uff1fdir\u4e0e\u975e\u81ea\u7531\u53c2\u6570\u4e00\u8d77\u88ab\u5305\u62ec\u5728\u5185\u3002PDDLGym\u5fc5\u987b\u533a\u5206\u81ea\u7531\u53c2\u6570\u4ee5\u6b63\u786e\u5b9a\u4e49\u64cd\u4f5c\u7a7a\u95f4\u3002\u4e00\u79cd\u9009\u62e9\u662f\u8981\u6c42\u6240\u6709\u64cd\u4f5c\u5458\u53c2\u6570\u90fd\u662f\u81ea\u7531\u7684\uff0c\u5e76\u5728\u64cd\u4f5c\u5458\u4e3b\u4f53\u4e2d\u76f8\u5e94\u5730\u5f15\u5165\u91cf\u8bcd\uff08B\uff09\uff1b\u4f46\u662f\uff0c\u8fd9\u5f88\u9ebb\u70e6\uff0c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u7b28\u62d9\uff0c\u6df1\u5ea6\u5d4c\u5957\u7684\u8fd0\u7b97\u7b26\uff0c\u56e0\u6b64\u6211\u4eec*\u4e0d*\u8fd9\u6837\u505a\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u9009\u62e9\u5f15\u5165\u4e0e\u8fd0\u7b97\u7b26\u76f8\u5173\u7684\u65b0\u8c13\u8bcd\uff0c\u5b83\u4eec\u7684\u53c2\u6570\u53ea\u662f\u8fd0\u7b97\u7b26\u7684\u81ea\u7531\u53c2\u6570\uff08C\uff09\u3002\u8fd9\u79cd\u65b0\u8c13\u8bcd\u7684\u793a\u4f8b\u4ee5\u9ec4\u8272\u663e\u793a\uff08\u5df2\u9009\u62e9\u79fb\u52a8\u52a8\u4f5c\uff09\u3002 \u4e00\u79cd\u9009\u62e9\u662f\u8981\u6c42\u64cd\u4f5c\u5458\u53c2\u6570\u5168\u90e8free\u3002\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u91cf\u8bcd\u5c06\u975e\u81ea\u7531\u53c2\u6570\u6298\u53e0\u4e3a\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c[ 23] \uff1b\u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u56fe 3B \u3002\u4f46\u662f\uff0c\u8fd9\u5f88\u9ebb\u70e6\uff0c\u5e76\u4e14\u5bfc\u81f4\u7b28\u62d9\uff0c\u6df1\u5ea6\u5d4c\u5957\u7684\u8fd0\u7b97\u7b26\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u9009\u62e9\u5f15\u5165\u4ee3\u8868\u64cd\u4f5c\u7b26\u7684\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u7684\u53d8\u91cf\u5c31\u662f\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u7684\u81ea\u7531\u53c2\u6570\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u8c13\u8bcd\u5305\u62ec\u5728\u5404\u4e2a\u8fd0\u7b97\u7b26\u7684\u524d\u63d0\u4e2d\uff1b\u89c1\u56fe 3C \u4e3e\u4e2a\u4f8b\u5b50 \u8fd9\u6837\u505a\u53ea\u9700\u8981\u5bf9\u73b0\u6709PDDL\u6587\u4ef6\u8fdb\u884c\u6700\u5c0f\u7684\u66f4\u6539\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u53ef\u8bfb\u6027\uff0c\u4f46\u662f\u9700\u8981\u6dfb\u52a0\u6709\u5173\u4ee3\u7406\u7a0b\u5e8f-\u73af\u5883\u8fb9\u754c\u7684\u57df\u77e5\u8bc6\u3002\u8bf7\u6ce8\u610f\uff0c\u6b64\u9886\u57df\u77e5\u8bc6\u7b49\u540c\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u52a8\u4f5c\u7a7a\u95f4\uff0c\u8fd9\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\u5f88\u5e38\u89c1\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u5047\u8bbe\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPDDLGym\u73af\u5883\u7684\u52a8\u4f5c\u7a7a\u95f4\u662f\u65b0\u5f15\u5165\u8c13\u8bcd\u7684\u6240\u6709\u53ef\u80fd\u57fa\u7840\u4e0a\u7684\u79bb\u6563\u7a7a\u95f4\u3002 \u4ecePDDLGym\u73af\u5883\u7684\u52a8\u4f5c\u7a7a\u95f4\u8fdb\u884c\u91c7\u6837\u65f6\uff0cPDDLGym\u5c06\u4ec5\u81ea\u52a8\u91c7\u6837*\u6709\u6548*\u52a8\u4f5c\uff0c\u5373\u6ee1\u8db3\u67d0\u4e9b\u64cd\u4f5c\u5458\u5148\u51b3\u6761\u4ef6\u7684\u52a8\u4f5c\u3002\u4f7f\u7528Fast Downward\u7684\u7ffb\u8bd1\u5668[ 24] \u8fdb\u884c\u6709\u6548\u6027\u68c0\u67e5\uff0c\u53ef\u4ee5\u5728\u5927\u578b\u95ee\u9898\u5b9e\u4f8b\u4e2d\u589e\u52a0\u4e0d\u53ef\u5ffd\u7565\u7684\u5f00\u9500\u3002 2.3\u521d\u59cb\u5316\u548c\u91cd\u7f6e\u73af\u5883 \u00b6 PDDLGym\u73af\u5883\u7531PDDL\u57df\u6587\u4ef6\u548cPDDL\u95ee\u9898\u6587\u4ef6\u5217\u8868\u6765\u53c2\u6570\u5316\u3002\u4e3a\u4e86\u4fbf\u4e8e\u7814\u7a76\uff0c\u6bcf\u4e2aPDDLGym\u73af\u5883\u90fd\u4e0e\u8be5\u73af\u5883\u7684*\u6d4b\u8bd5*\u7248\u672c\u76f8\u5173\u8054\uff0c\u5176\u4e2d\u57df\u6587\u4ef6\u662f\u76f8\u540c\u7684\uff0c\u4f46\u95ee\u9898\u6587\u4ef6\u662f\u4e0d\u540c\u7684\uff08\u4f8b\u5982\uff0c\u5b83\u4eec\u53ef\u4ee5\u5bf9\u66f4\u590d\u6742\u7684\u8ba1\u5212\u4efb\u52a1\u8fdb\u884c\u7f16\u7801\uff0c\u4ee5\u8861\u91cf\u53ef\u6982\u62ec\u6027\uff09\u3002\u5728\u73af\u5883\u521d\u59cb\u5316\u671f\u95f4\uff0c\u6240\u6709\u7684PDDL\u6587\u4ef6\u90fd\u88ab\u89e3\u6790\u4e3aPython\u5bf9\u8c61\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49PDDL\u89e3\u6790\u5668\u3002\u8c03\u7528reset\u65f6\uff0c\u5c06\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u95ee\u9898\u5b9e\u4f8b \u3002 1 \u8be5\u95ee\u9898\u5b9e\u4f8b\u7684\u521d\u59cb\u72b6\u6001\u662f\u73af\u5883\u7684\u72b6\u6001\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0creset\u8fd8\u8fd4\u56de\uff08\u5728\u8c03\u8bd5\u4fe1\u606f\u4e2d\uff09\u6307\u5411\u5f53\u524d\u60c5\u8282\u7684PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u7684\u8def\u5f84\u3002\u8fd9\u4f7f\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u4f7f\u7528\u7b26\u53f7\u8ba1\u5212\u5668\u5e76\u5728\u73af\u5883\u4e2d\u6267\u884c\u751f\u6210\u7684\u8ba1\u5212\u3002 \u6709\u5173\u4f7f\u7528Fast-Forward [ 25] \u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1PDDLGym Github\u5b58\u50a8\u5e93\u4e2d \u7684\u81ea\u8ff0\u6587\u4ef6 \u3002 **2.4\u5b9e\u65bd**step\u65b9\u6cd5 \u00b6 PDDLGym\u73af\u5883\u7684step\u65b9\u6cd5\u91c7\u53d6\u4e00\u4e2a\u52a8\u4f5c\uff0c\u66f4\u65b0\u73af\u5883\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u89c2\u5bdf\uff0c\u5956\u52b1\uff0c\u5b8c\u6210\u7684\u5e03\u5c14\u503c\u548c\u8c03\u8bd5\u4fe1\u606f\u3002\u4e3a\u4e86\u786e\u5b9a\u72b6\u6001\u66f4\u65b0\uff0cPDDLGym\u68c0\u67e5\u7ed9\u5b9a\u5f53\u524d\u72b6\u6001\u548c\u64cd\u4f5c\u662f\u5426\u6ee1\u8db3\u4efb\u4f55PDDL\u8fd0\u7b97\u7b26\u7684\u5148\u51b3\u6761\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u4e0d\u53ef\u80fd\u201c\u610f\u5916\u5730\u5339\u914d\u201d\u4e0d\u60f3\u8981\u7684\u8fd0\u7b97\u7b26\uff1a\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u5982\u56fe 3C \u6240\u793a\uff0c\u8be5\u524d\u63d0\u6761\u4ef6\u662f\u6839\u636e\u4f20\u5165\u7684\u52a8\u4f5c\u81ea\u52a8\u751f\u6210\u7684\u3002\u7531\u4e8e\u64cd\u4f5c\u4e0e\u8fd0\u7b97\u7b26\u4e0d\u540c\uff08\u7b2c 2.2\u8282\uff09 \uff0c\u56e0\u6b64 precondition satisfaction check is nontrivial\uff1bnon-free parameters must be bound. \u3002\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e24\u4e2a\u63a8\u7406\u540e\u7aef\u6765\u6267\u884c\u6b64\u68c0\u67e5\u3002 \u7b2c\u4e00\u4e2a\u662f\u7c7b\u578b\u5316SLD\u89e3\u6790\u7684Python\u5b9e\u73b0\uff0c\u5f53\u67e5\u8be2\u4ec5\u6d89\u53ca\u8fde\u63a5\u65f6\uff0c\u8fd9\u662f\u9ed8\u8ba4\u9009\u62e9\u3002 \u7b2c\u4e8c\u4e2a\u662fSWI Prolog [ 26] \u7684\u5305\u88c5\uff0c\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u5904\u7406\u6d89\u53ca\u6790\u53d6\u548c\u91cf\u8bcd\u7684\u66f4\u590d\u6742\u7684\u524d\u63d0\u6761\u4ef6\u3002\u540e\u8005\u6bd4\u524d\u8005\u66f4\u6162\uff0c\u4f46\u66f4\u901a\u7528\u3002\u5f53\u6ca1\u6709\u64cd\u4f5c\u5458\u524d\u63d0\u6ee1\u8db3\u7ed9\u5b9a\u64cd\u4f5c\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u72b6\u6001\u4fdd\u6301\u4e0d\u53d8\u3002\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u5148\u51b3\u6761\u4ef6\uff0c\u5219\u53ef\u80fd\u4f1a\u5f15\u53d1\u9519\u8bef\uff1b\u53ef\u9009\u7684\u521d\u59cb\u5316\u53c2\u6570raise_error_on_invalid_action\u5141\u8bb8\u6b64\u884c\u4e3a\u3002 PDDLGym\u4e2d\u7684\u5956\u52b1\u662f\u7a00\u758f\u7684\u548c\u4e8c\u8fdb\u5236\u7684\u3002\u7279\u522b\u5730\uff0c\u5f53\u8fbe\u5230\u95ee\u9898\u76ee\u6807\u65f6\uff0c\u5956\u52b1\u4e3a1.0\uff0c\u5426\u5219\u4e3a0.0\u3002\u540c\u6837\uff0c\u8fbe\u5230\u76ee\u6807\u65f6\uff0c\u5e03\u5c14\u5e03\u5c14\u503c\u4e3aTrue\uff0c\u5426\u5219\u4e3aFalse\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u901a\u5e38\u4f7f\u7528\u6700\u5927\u60c5\u8282\u957f\u5ea6\u3002\uff09 \u5982\u679c\u57fa\u7840\u7684PDDL\u57df\u5177\u6709\u6982\u7387\u6548\u5e94\uff0c\u5982PPDDL [ 27] \uff0c\u5219\u6b65\u8fdb\u65b9\u6cd5\u5c06\u5bf9\u6b64\u8fdb\u884c\u9002\u5f53\u89e3\u6790\uff0c\u5e76\u6839\u636e\u7ed9\u5b9a\u7684\u6982\u7387\u5206\u5e03\u9009\u62e9\u4e00\u79cd\u6548\u5e94\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6982\u7387\u4e4b\u548c\u4e0d\u4e3a1\uff0c\u5219\u4f1a\u6dfb\u52a0\u9ed8\u8ba4\u7684\u7410\u788e\u6548\u679c\u3002 2.5\u53d1\u5c55\u72b6\u51b5 \u00b6 \u5728\u4ee3\u7801\u884c\u65b9\u9762\uff0c\u5927\u90e8\u5206PDDLGym\u4e13\u7528\u4e8ePDDL\u6587\u4ef6\u7684\u89e3\u6790\u548c\u63a8\u65ad\uff08\u5728\u6b65\u9aa4\u4e2d\u4f7f\u7528\uff09\u3002\u6211\u4eec\u5c06\u7ee7\u7eed\u5f00\u53d1\u8fd9\u4e24\u79cd\u529f\u80fd\uff0c\u4ee5\u4fbf\u652f\u6301\u66f4\u5e7f\u6cdb\u7684PDDL\u57df\u3002 PDDLGym\u652f\u6301\u7684PDDL 1.2\u7684\u65b9\u9762\u5305\u62ecSTRIPS\uff0c\u5206\u5c42\u7c7b\u578b\uff0c\u7b49\u5f0f\uff0c\u91cf\u8bcd\uff0c\u5e38\u91cf\u548c\u6d3e\u751f\u8c13\u8bcd\u3002\u4e0d\u652f\u6301\u7684\u503c\u5f97\u6ce8\u610f\u7684\u529f\u80fd\u5305\u62ec\u6761\u4ef6\u6548\u679c\u548c\u64cd\u4f5c\u6210\u672c\u3002\u4e0d\u652f\u6301\u66f4\u9ad8\u7248\u672c\u7684PDDL\uff08\u4f8b\u5982\u6570\u5b57\u6d41\u5229\uff09\u3002 \u6211\u4eec\u7684\u77ed\u671f\u76ee\u6807\u662f\u4e3aPDDL 1.2\u63d0\u4f9b\u5168\u9762\u652f\u6301\u3002\u6211\u4eec\u53d1\u73b0\uff0cPDDLGym\u5df2\u7ecf\u5f88\u597d\u5730\u652f\u6301\u4e86\u8bb8\u591a\u6807\u51c6PDDL\u57df\u3002\u53c2\u89c1\uff08\u7b2c 3 \u8282 \uff09 \u4ee5\u83b7\u5f97\u6982\u8ff0\u3002\u6211\u4eec\u6b22\u8fce\u901a\u8fc7Github\u9875\u9762\u6216\u7535\u5b50\u90ae\u4ef6\u4e0a\u521b\u5efa\u7684\u95ee\u9898\u6765\u8bf7\u6c42\u529f\u80fd\u548c\u6269\u5c55\u3002\u672c\u6587\u9876\u90e8\u63d0\u4f9b\u4e86\u4f5c\u80055\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 3 PDDLGym\u6309\u6570\u5b57 \u00b6 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u4ece\u66f4\u65b0\u672c\u62a5\u544a\u7684\u6700\u540e\u65e5\u671f\uff082020\u5e749\u670817\u65e5\uff09\u5f00\u59cb\uff0c\u6982\u8ff0PDDLGym\u4e2d\u5185\u7f6e\u7684\u57df\u3002\u7136\u540e\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e9b\u5b9e\u9a8c\u7ed3\u679c\uff0c\u4ece\u800c\u6839\u636e\u89c4\u5212\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\u6765\u6df1\u5165\u4e86\u89e3\u8fd9\u4e9b\u9886\u57df\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6240\u6709\u5b9e\u9a8c\u90fd\u662f\u5728\u4e00\u53f0\u5177\u670932GB RAM\u548c2.9GHz Intel Core i9\u5904\u7406\u5668\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fdb\u884c\u7684\u3002 3.1\u73af\u5883\u6982\u8ff0 \u00b6 \u76ee\u524d\uff0cPDDLGym\u4e2d\u5185\u7f6e\u4e8620\u4e2a\u57df\u3002\u5927\u591a\u6570\u57df\u90fd\u6539\u7f16\u81ea\u73b0\u6709\u7684PDDL\u5b58\u50a8\u5e93\uff1b\u5176\u4f59\u7684\u662f\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u7684\u7814\u7a76\u4e2d\u6709\u7528\u7684\u57fa\u51c6\u3002\u6211\u4eec\u5df2\u7ecf\u4e3a11\u4e2a\u57df\u5b9e\u73b0\u4e86\u81ea\u5b9a\u4e49\u5448\u73b0\uff08\u793a\u4f8b\u8bf7\u53c2\u89c1\u56fe 1 \uff09\u3002\u8868 1 \u5217\u51fa\u4e86\u6240\u6709\u73af\u5883\uff0c\u5176\u6765\u6e90\u4ee5\u53ca\u5b83\u4eec\u7684\u6bcf\u79d2\u5e73\u5747\u5e27\u6570\uff08FPS\uff09\u7684\u5217\u8868\uff0c\u8fd9\u4e9b\u6570\u636e\u662f\u901a\u8fc7\u5bf910\u4e2a\u65f6\u95f4\u6b65\u957f\u7684100\u4e2a\u60c5\u8282\u6267\u884c\u968f\u673a\u7b56\u7565\u800c\u8ba1\u7b97\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u6e32\u67d3\u3002 3.2\u73af\u5883\u96be\u5ea6\u7684\u53d8\u5316 \u00b6 \u73b0\u5728\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e9b\u7ed3\u679c\uff0c\u8bf4\u660e\u5185\u7f6e\u5728PDDLGym\u4e2d\u7684\u57df\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6211\u4eec\u7814\u7a76\u4e86\u4e24\u4e2a\u53d8\u5316\u8f74\uff1a\u8ba1\u5212\u96be\u5ea6\u548c\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\u7684\u96be\u5ea6\u3002 \u56fe 4 \uff08\u5de6\uff09\u663e\u793a\u4e86\u5feb\u8fdb[ 25] \u6240\u82b1\u8d39\u7684\u5e73\u5747\u65f6\u95f4\u3002\u5728\u6bcf\u4e2a\u786e\u5b9a\u6027\u73af\u5883\u4e2d\u627e\u5230\u8ba1\u5212\uff0c\u5e76\u5728\u6240\u6709\u95ee\u9898\u5b9e\u4f8b\u4e2d\u5e73\u5747\u3002\u7ed3\u679c\u663e\u793a\u8ba1\u5212\u65f6\u95f4\u8303\u56f4\u5f88\u5927\uff0c\u6700\u56f0\u96be\u7684\u533a\u57df\uff08\u4ed3\u5e93\uff0c\u4e3a\u6e05\u6670\u8d77\u89c1\u4ece\u56fe\u4e2d\u7701\u7565\uff09\u6bd4\u6700\u7b80\u5355\u7684\u533a\u57df\uff08TSP\uff09\u9700\u8981\u4e24\u4e2a\u6570\u91cf\u7ea7\u7684\u65f6\u95f4\u3002\u7ed3\u679c\u8fd8\u8868\u660e\uff0c\u4ece\u73b0\u4ee3\u8ba1\u5212\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8bb8\u591a\u5305\u542b\u7684\u57df\u76f8\u5bf9\u201c\u5bb9\u6613\u201d\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u5728\u8fd9\u4e9b\u7b80\u5355\u7684\u9886\u57df\u4e2d\uff0c\u4e5f\u8981\u89e3\u51b3\u8bb8\u591a\u6709\u8da3\u7684\u6311\u6218\uff0c\u4f8b\u5982\u4ece\u4ea4\u4e92\u6570\u636e\u4e2d\u5b66\u4e60\u771f\u6b63\u7684PDDL\u8fd0\u7b97\u7b26\uff0c\u6216\u8005\u5b9a\u4e49\u9002\u5408\u4e8e\u5b66\u4e60\u7684\u826f\u597d\u72b6\u6001\u62bd\u8c61\u3002\u5982\u679c\u9700\u8981\uff0c\u4eba\u4eec\u603b\u662f\u53ef\u4ee5\u63d0\u51fa\u66f4\u5927\u7684\u95ee\u9898\u5b9e\u4f8b\uff0c\u4ee5\u7a81\u7834\u73b0\u4ee3\u8ba1\u5212\u8005\u7684\u6781\u9650\u3002 \u56fe 4 \uff08\u53f3\uff09\u63d0\u4f9b\u4e86\u5728\u67d0\u4e9b\u73af\u5883\u4e2d\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\u7684\u96be\u5ea6\u7684\u89c1\u89e3\u3002\u5bf9\u4e8e\u6bcf\u79cd\u73af\u5883\uff0c\u4ee3\u7406\u90fd\u4f1a\u9488\u5bf925\u7ea7\u5730\u5e73\u7ebf\u6267\u884c\u968f\u673a\u7b56\u7565\u3002\u89c2\u5bdf\u5230\u7684\u8fc7\u6e21\u5c06\u7528\u4e8e\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\uff0c\u7136\u540e\u5c06\u5176\u7528\u4e8e\u4e00\u7cfb\u5217\u6d4b\u8bd5\u95ee\u9898\u7684\u8ba1\u5212\u3002\u6240\u62a5\u544a\u7684\u5df2\u89e3\u51b3\u6d4b\u8bd5\u95ee\u9898\u7684\u6bd4\u4f8b\u88ab\u62a5\u544a\u4e3a\u5b66\u4e60\u7684\u8fc7\u6e21\u6a21\u578b\u7684\u6307\u6807\u3002\u4e3a\u4e86\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u9636\u903b\u8f91\u51b3\u7b56\u6811\uff08FOLDT\uff09\u5b66\u4e60[ 32] \u3002\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u5bf9\u4e94\u4e2a\u57df\u8fdb\u884c\u4e86\u53ef\u89c6\u5316\uff1b\u5728\u5176\u4f59\u7684\u51e0\u4e2a\u4e2d\uff0c\u53ef\u6bd4\u7684 \u56fe4\uff1a**PDDLGym\u73af\u5883\u4e4b\u95f4\u7684\u5dee\u5f02\u3002**PDDLGym\u4e2d\u5185\u7f6e\u7684PDDL\u57df\u548c\u95ee\u9898\u5728\u8ba1\u5212\u96be\u5ea6\uff08\u5de6\uff09\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\uff08\u53f3\uff09\u65b9\u9762\u6709\u5f88\u5927\u4e0d\u540c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u6587\u672c\u3002\u4e3a\u4e86\u6e05\u6670\u8d77\u89c1\uff0c\u7701\u7565\u4e86\u5176\u4e2d\u4e00\u4e2a\u9886\u57dfDepot\uff0c\u4f46\u6bd4\u6700\u7b80\u5355\u7684\u9886\u57df\uff08TSP\uff09\u9700\u8981\u591a\u4e24\u4e2a\u6570\u91cf\u7ea7\u7684\u8ba1\u5212\u65f6\u95f4\u3002 \u5bf9\u4e8e\u6240\u793a\u7684\u65b9\u6cd5\uff0c\u4f46\u5176\u4ed6\u65b9\u6cd5\uff08\u5305\u62ec\u70d8\u7119\uff0c\u4ed3\u5e93\u548c\u63a8\u7bb1\u5b50\uff09\u5bf9\u4e8e\u6211\u4eec\u7684\u5b66\u4e60\u65b9\u6cd5\u6765\u8bf4\u6bd4\u8f83\u56f0\u96be\uff1aFOLDT\u5b66\u4e60\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u627e\u5230\u9002\u5408\u6570\u636e\u7684\u6a21\u578b\u3002\u5f53\u7136\uff0c\u6a21\u578b\u5b66\u4e60\u7684\u96be\u5ea6\u56e0\u5b66\u4e60\u65b9\u6cd5\u548c\u63a2\u7d22\u7b56\u7565\u7684\u4e0d\u540c\u800c\u6709\u5f88\u5927\u5dee\u5f02\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5b9e\u65bd\u4e86\u7b80\u5355\u7684\u7b56\u7565\u6765\u663e\u793a\u8fd9\u4e9b\u7ed3\u679c\uff0c\u4f46\u662f\u8fd9\u4e9b\u5c06\u6765\u7684\u7814\u7a76\u9014\u5f84\u6b63\u662f\u6211\u4eec\u5e0c\u671b\u901a\u8fc7PDDLGym\u5b9e\u73b0\u7684\u90a3\u79cd\u9014\u5f84\u3002 \u6211\u4eec\u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u7684Python\u6846\u67b6\uff0c\u53ef\u4ee5\u4ecePDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u81ea\u52a8\u521b\u5efaOpenAI Gym\u73af\u5883\u3002\u6211\u4eec\u7684\u7ecf\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u5185\u7f6e\u73af\u5883\u4e4b\u95f4\u5b58\u5728\u76f8\u5f53\u5927\u7684\u5dee\u5f02\u3002\u6211\u4eec\u5728\u5173\u7cfb\u987a\u5e8f\u51b3\u7b56\u548c\u5f3a\u5316\u5b66\u4e60\u7684\u7814\u7a76\u4e2d\u4e00\u76f4\u79ef\u6781\u4f7f\u7528PDDLGym\u3002\u6211\u4eec\u8fd8\u5e0c\u671b\u5c06PDDLGym\u4e0e\u5176\u4ed6\u76f8\u5173\u7684\u5f00\u6e90\u6846\u67b6\uff08\u5c24\u5176\u662fPlanning.domains [ 7]\u4e2d \u7684PDDL\u96c6\u5408\u548c\u5de5\u5177\uff09\u8fdb\u884c\u63a5\u53e3\u8fde\u63a5\uff0c\u4ee5\u4fbf\u7528\u6237\u53ea\u9700\u6307\u5b9a\u6307\u5411PDDL\u6587\u4ef6\u5b58\u50a8\u5e93\u7684URL\uff08\u4ee5\u53ca\u6709\u5173\u81ea\u7531\u53c2\u6570\u7684\u4e00\u4e9b\u7279\u5b9a\u4e8e\u57df\u7684\u4fe1\u606f\uff09\u3002 \u6211\u4eec\u671f\u5f85\u7740\u6536\u96c6\u793e\u533a\u7684\u53cd\u9988\uff0c\u5e76\u76f8\u5e94\u5730\u6269\u5c55\u53ef\u7528\u73af\u5883\u548c\u529f\u80fd\u7684\u96c6\u5408\u3002 \u76f8\u5173 1 \u548c\u6587\u732e 2 \u3002 \u53c2\u8003 GICystems \u21a9 Checking \u21a9","title":"PDDLGYM"},{"location":"Extensions/RL/PDDLGYM/#pddlgym","text":"PDDLGym: Gym Environments from PDDL Problems https://github.com/tomsilver/pddlgym https://github.com/ronuchit/pddlgym_planners","title":"PDDLGYM"},{"location":"Extensions/RL/PDDLGYM/#pddlgym-gymenvironments-frompddl-problems","text":"\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u4eba\u5de5\u667a\u80fd\u5b9e\u9a8c\u5ba4\uff08tslvr\uff0c ronuchitj@mit.edu 2020\u5e749\u670817\u65e5 abstract \u6211\u4eec\u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ecePDDL\u57df\u548c\u95ee\u9898\u81ea\u52a8\u6784\u5efaOpenAI Gym\u73af\u5883\u7684\u6846\u67b6\u3002PDDLGym\u4e2d\u7684\u89c2\u5bdf\u548c\u52a8\u4f5c\u662f\u5173\u7cfb\u6027\u7684\uff0c\u8fd9\u4f7f\u5f97\u8be5\u6846\u67b6\u7279\u522b\u9002\u5408\u4e8e\u5173\u7cfb\u5f3a\u5316\u5b66\u4e60\u548c\u5173\u7cfb\u987a\u5e8f\u51b3\u7b56\u7684\u7814\u7a76\u3002PDDLGym\u8fd8\u53ef\u7528\u4f5c\u901a\u7528\u6846\u67b6\uff0c\u7528\u4e8e\u901a\u8fc7\u7b80\u6d01\uff0c\u719f\u6089\u7684\u89c4\u8303\u8bed\u8a00\u5feb\u901f\u6784\u5efa\u4f17\u591a\u591a\u6837\u7684\u57fa\u51c6\u3002\u6211\u4eec\u8ba8\u8bba\u4e86\u8bbe\u8ba1\u51b3\u7b56\u548c\u5b9e\u65bd\u7ec6\u8282\uff0c\u5e76\u6839\u636e\u89c4\u5212\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\u8bf4\u660e\u4e8620\u79cd\u5185\u7f6e\u73af\u5883\u4e4b\u95f4\u7684\u7ecf\u9a8c\u5dee\u5f02\u3002\u6211\u4eec\u5e0c\u671bPDDLGym\u5c06\u4fc3\u8fdb\u5f3a\u5316\u5b66\u4e60\u793e\u533a\uff08Gym\u7684\u8bde\u751f\uff09\u548cAI\u89c4\u5212\u793e\u533a\uff08\u4ea7\u751fPDDL\uff09\u4e4b\u95f4\u7684\u6865\u6881\u3002","title":"PDDLGYM : GYMENVIRONMENTS FROMPDDL PROBLEMS"},{"location":"Extensions/RL/PDDLGYM/#1","text":"\u57fa\u51c6\u7684\u5efa\u7acb\u5f80\u5f80\u52a0\u901f\u4e86\u4eba\u5de5\u667a\u80fd\u7684\u5404\u4e2a\u5b50\u57df\u7684\u7814\u7a76\u8fdb\u5c55[ 1\uff0c 2\uff0c 3] \u3002\u5728\u987a\u5e8f\u51b3\u7b56\u4efb\u52a1\u4e2d\uff0c\u8bf8\u5982OpenAI Gym [ 4]\u4e2d \u7684\u73af\u5883\u548c\u56fd\u9645\u8ba1\u5212\u5927\u8d5b\uff08IPC\uff09[ 5]\u4e2d \u7684\u8ba1\u5212\u4efb\u52a1\u4e4b\u7c7b\u7684\u57fa\u51c6\u63a8\u52a8\u4e86\u5de8\u5927\u7684\u8fdb\u6b65\u3002Gym\u5b9a\u4e49\u4e86\u4ee3\u7406\u4e0e\u73af\u5883\u4ea4\u4e92\u7684\u6807\u51c6\u5316\u65b9\u6cd5\uff0c\u4ece\u800c\u53ef\u4ee5\u8f7b\u677e\u6bd4\u8f83\u5404\u79cd\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u3002IPC\u63d0\u4f9b\u4e86\u4e00\u7ec4\u8ba1\u5212\u57df\u548c\u7528\u8ba1\u5212\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09[ 6] \u7f16\u5199\u7684\u95ee\u9898\uff0c\u4ece\u800c\u53ef\u4ee5\u8f7b\u677e\u6bd4\u8f83\u5404\u79cd\u7b26\u53f7\u8ba1\u5212\u5668\u3002 \u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u5c06Gym\u548cPDDL\u7684\u5143\u7d20\u7ed3\u5408\u5728\u4e00\u8d77\u7684\u5f00\u6e90\u6846\u67b6\u3002 PDDLGym\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef****\u6839\u636e****PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6****\u81ea\u52a8\u521b\u5efaGym\u73af\u5883** \u3002** \u8be5\u5e93\u4f4d\u4e8e https://github.com/tomsilver/pddlgym\u3002 \u62c9\u8bf7\u6c42\u662f\u6b22\u8fce\u7684\uff01 \u4e0eGym\u4e00\u6837\uff0cPDDLGym\u5141\u8bb8\u4ee3\u7406\u4e0e\u73af\u5883\u4e4b\u95f4\u53d1\u751f\u5468\u671f\u6027\u7684\u95ed\u73af\u4ea4\u4e92\u3002\u7279\u5de5\u4f1a\u4ece\u73af\u5883\u4e2d\u63a5\u6536\u5230\u4e00\u4e2a\u89c2\u5bdf\u7ed3\u679c\uff0c\u5e76\u505a\u51fa\u884c\u52a8\uff0c\u91cd\u590d\u6b64\u5faa\u73af\u76f4\u5230\u60c5\u8282\u7ed3\u675f\u3002\u50cf\u5728PDDL\u4e2d\u4e00\u6837\uff0cPDDLGym\u4ece\u6839\u672c\u4e0a\u662f\u76f8\u5173\u7684\uff1a\u89c2\u5bdf\u662f\u5bf9\u8c61\u4e0a\u7684\u5730\u9762\u5173\u7cfb\u96c6\uff08\u4f8b\u5982\uff0c\u5728\uff08\u76d8\u5b50\uff0c\u684c\u5b50\u4e0a\uff09\uff09\uff0c\u52a8\u4f5c\u662f\u4e0e\u5bf9\u8c61\u4e00\u8d77\u63a5\u5730\u7684\u6a21\u677f\uff08\u4f8b\u5982pick\uff08\u76d8\u5b50\uff09\uff09\u3002\u56e0\u6b64\uff0cPDDLGym\u7279\u522b\u9002\u5408\u7528\u4e8e\u5173\u7cfb\u5b66\u4e60\u548c\u987a\u5e8f\u51b3\u7b56\u7814\u7a76\u3002\u6709\u5173\u5f53\u524d\u5728PDDLGym\u4e2d\u5b9e\u73b0\u7684\u67d0\u4e9b\u73af\u5883\u7684\u6e32\u67d3\uff0c\u8bf7\u53c2\u89c1\u56fe 1 \uff1b\u5bf9\u4e8e\u4ee3\u7801\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u56fe 2 \u3002 \u5f3a\u5316\u5b66\u4e60\u4e2d\u4f7f\u7528\u7684Gym API\u5b9a\u4e49\u4e86\u4ee3\u7406\u4e0e\u73af\u5883\u4e4b\u95f4\u7684\u786c\u6027\u754c\u9650\u3002\u7279\u522b\u662f\uff0c\u4ee3\u7406*\u4ec5*\u901a\u8fc7\u91c7\u53d6\u884c\u52a8\u5e76\u63a5\u6536\u89c2\u5bdf\u7ed3\u679c\u6765\u4e0e\u73af\u5883\u4ea4\u4e92\u3002\u73af\u5883\u6267\u884c\u4e00\u4e2a\u529f\u80fd\u6b65\u9aa4\uff0c\u8be5\u529f\u80fd\u6b65\u9aa4\u4f7f\u4ee3\u7406\u8d4b\u4e88\u7684\u64cd\u4f5c\u4f7f\u72b6\u6001\u524d\u8fdb\uff1b\u6b65\u9aa4\u5b9a\u4e49\u73af\u5883\u7684\u8fc7\u6e21\u6a21\u578b\u3002\u540c\u6837\uff0cPDDL\u57df\u901a\u8fc7\u5176\u8fd0\u7b97\u7b26\u5bf9\u8f6c\u6362\u6a21\u578b\u8fdb\u884c\u7f16\u7801\u3002\u4f46\u662f\uff0c\u5728\u5178\u578b\u7528\u6cd5\u4e2d\uff0cPDDL\u88ab\u7406\u89e3\u4e3a\u5b8c\u5168\u5b58\u5728\u4e8e\u4ee3\u7406\u7684\u201c\u601d\u60f3\u201d\u4e2d\u3002\u7136\u540e\uff0c\u4e00\u4e2a\u5355\u72ec\u7684\u8fc7\u7a0b\u8d1f\u8d23\u5c06\u8ba1\u5212\u8f6c\u53d8\u4e3a\u4ee3\u7406\u53ef\u4ee5\u5728\u4e16\u754c\u8303\u56f4\u5185\u6267\u884c\u7684\u52a8\u4f5c\u3002 PDDLGym\u8fdd\u53cd\u4e86\u8fd9\u4e00\u7ea6\u5b9a\uff1a\u5728PDDLGym\u4e2d\uff0cPDDL\u57df\u548c\u95ee\u9898\u7262\u56fa\u5730\u4f4d\u4e8e\u4ee3\u7406\u7a0b\u5e8f-\u73af\u5883\u8fb9\u754c\u7684\u73af\u5883\u4fa7\u3002\u73af\u5883\u4f7f\u7528PDDL\u6587\u4ef6\u6765\u5b9e\u73b0\u6b65\u9aa4\u529f\u80fd\uff0c\u8be5\u529f\u80fd\u53ef\u5728\u7ed9\u5b9a\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u63d0\u5347\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u6700\u597d*\u5c06*PDDLGym\u7406\u89e3\u4e3aPDDL\u7684\u76ee\u7684\u3002\u5728\u5b9e\u73b0\u65b9\u9762\uff0c\u6b64\u7528\u9014\u5177\u6709\u5fae\u5999\u4f46\u91cd\u8981\u7684\u542b\u4e49\uff0c\u5728\uff08 \u00a72.2\uff09\u4e2d\u8fdb\u884c \u4e86\u8ba8\u8bba\u3002 \u56fe1\uff1a**\u5728PDDLGym\u4e2d\u5b9e\u73b0\u7684\u4e00\u4e9b\u73af\u5883\u793a\u4f8b\u3002**\u4ece\u5de6\u4e0a\u65b9\uff1a\u63a8\u7bb1\u5b50\uff0c\u6cb3\u5185\uff0c\u8857\u533a\uff0c\u65c5\u884c\u63a8\u9500\u5458\uff08TSP\uff09\uff0c\u6ed1\u74e6\u548c\u624b\u5de5\u5236\u4f5c\u3002 \u56fe2\uff1a**PDDLGym\u4ee3\u7801\u793a\u4f8b\u3002**PDDLGym\u73af\u5883\u7684\u7279\u5f81\u5728\u4e8ePDDL\u57df\u6587\u4ef6\u548cPDDL\u95ee\u9898\u6587\u4ef6\u5217\u8868\u3002\uff08A\uff09PDDL\u57df\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u64cd\u4f5c\u7b26\u3002\uff08B\uff09\u4e00\u6bb5\u7b80\u5355\u7684PDDL\u95ee\u9898\u6587\u4ef6\u7684\u6458\u5f55\u3002\uff08C\uff09\u5728\u4f7f\u7528PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u6ce8\u518c\u540d\u79f0\u4e3a\u201c PDDLEnvBlocks-v0\u201d\u7684\u73af\u5883\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u9700\u51e0\u884cPython\u5c31\u53ef\u4ee5\u4e0e\u6b64PDDLGym\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u3002 PDDLGym\u5177\u6709\u4e09\u4e2a\u4e3b\u8981\u7528\u9014\uff1a \uff081\uff09\u4fc3\u8fdb\u4e3a\u5173\u7cfb\u57df\u4e2d\u7684\u987a\u5e8f\u51b3\u7b56\u521b\u5efa\u4f17\u591a\u591a\u6837\u7684\u57fa\u51c6\u3002 PDDLGym\u5141\u8bb8\u5728PDDL\u4e2d\u5b9a\u4e49\u4efb\u52a1\uff0c\u4ece\u800c\u6839\u636ePDDL\u6587\u4ef6\u81ea\u52a8\u6784\u5efaGym\u73af\u5883\u3002PDDL\u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u57df\u7684\u7d27\u51d1\u578b\u7b26\u53f7\u8bed\u8a00\uff0c\u5426\u5219\u76f4\u63a5\u901a\u8fc7Gym API\u8fdb\u884c\u5b9a\u4e49\u53ef\u80fd\u4f1a\u5f88\u7e41\u7410\u4e14\u91cd\u590d\u3002 \uff082\uff09 *\u6865\u6881\u52a0\u56fa\u5b66\u4e60\u4e0e\u89c4\u5212\u7814\u7a76\u3002*PDDLGym\u4f7f\u8ba1\u5212\u7814\u7a76\u4eba\u5458\u548c\u673a\u5668\u5b66\u4e60\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u5b8c\u5168\u76f8\u540c\u7684\u4e00\u7ec4\u57fa\u51c6\u4e0a\u6d4b\u8bd5\u4ed6\u4eec\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u53ef\u4ee5\u5229\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u4f18\u52bf\u6765\u5f00\u53d1\u6280\u672f\u3002\u6b64\u5916\uff0c\u7531\u4e8ePDDLGym\u5305\u542b\u5185\u7f6e\u7684\u57df\u548c\u95ee\u9898\uff0c\u56e0\u6b64\u6267\u884cApple\u5230Apple\u7684\u6bd4\u8f83\u5f88\u7b80\u5355\uff0c\u800c\u4e0d\u5fc5\u4ece\u4e0d\u540c\u7684\u6765\u6e90\u6536\u96c6\u7b2c\u4e09\u65b9\u4ee3\u7801\uff08\u53e6\u8bf7\u53c2\u89c1[ 7] \uff09\u3002 \uff083\uff09 *\u4fc3\u8fdb\u5173\u7cfb\u9886\u57df\u4e2d\u987a\u5e8f\u51b3\u7b56\u7684\u7814\u7a76\u3002*\u5728\u6211\u4eec\u81ea\u5df1\u7684\u7814\u7a76\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0PDDLGym\u5728\u7814\u7a76\u63a2\u7d22\u63d0\u5347\u64cd\u4f5c\u5458\u5b66\u4e60[ 8] \uff0c\u5206\u5c42\u76ee\u6807\u6761\u4ef6\u7b56\u7565\u5b66\u4e60[ 9] \u548c\u72b6\u6001\u62bd\u8c61[ 10]\u65f6 \u975e\u5e38\u6709\u7528\u3002\u5176\u5b83\u53ef\u4ee5\u4f7f\u7528PDDLGym\u53d7\u76ca\u5f00\u653e\u7814\u7a76\u7684\u95ee\u9898\u5305\u62ec\uff1a\u5173\u7cfb\u5f3a\u5316\u5b66\u4e60[ 11\uff0c 12\uff0c 13] \uff0c\u5b66\u4e60\u8fd0\u8425\u5546\u7684\u7b26\u53f7\u63cf\u8ff0[ 11\uff0c 14\uff0c 15] \uff0c\u53d1\u73b0\u76f8\u5173\u7684\u8f6c\u6362\u89c4\u5219\u8fdb\u884c\u6709\u6548\u7684\u89c4\u5212[ 16\uff0c 17] \uff0c\u548c\u5b66\u4e60\u53d6\u6d88\u9009\u62e9[ 18\uff0c19 \uff0c 20\uff0c 21] \u3002 \u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u5b89\u6392\u5982\u4e0b\u3002\uff08 \u7b2c2\u8282\uff09 \u8ba8\u8bba\u4e86PDDLGym\u7684\u8bbe\u8ba1\u51b3\u7b56\u548c\u5b9e\u73b0\u7ec6\u8282\u3002\u5728\uff08 \u00a73\uff09\u4e2d \uff0c\u6211\u4eec\u6982\u8ff0\u4e86\u5185\u7f6e\u7684PDDLGym\u57df\uff0c\u5e76\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u7ecf\u9a8c\u7ed3\u679c\uff0c\u4ee5\u8bf4\u660e\u5b83\u4eec\u5728\u89c4\u5212\u548c\u5b66\u4e60\u96be\u5ea6\u65b9\u9762\u7684\u591a\u6837\u6027\u3002\u6700\u540e\uff0c\u5728\uff08 \u00a74\uff09\u4e2d \uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u6269\u5c55\u548c\u6539\u8fdbPDDLGym\u7684\u9014\u5f84\u3002 Gym API\u4f7f\u7528\u4e09\u79cd\u57fa\u672c\u65b9\u6cd5\u5c06\u73af\u5883\u5b9a\u4e49\u4e3aPython\u7c7b\uff1a init \uff0c\u7528\u4e8e\u521d\u59cb\u5316\u73af\u5883\uff1b reset \uff0c\u5f00\u59cb\u65b0\u7684\u60c5\u8282\u5e76\u8fd4\u56de\u89c2\u5bdf\u503c\uff1b step \uff08\u6b65\u9aa41\uff09\uff0c\u5b83\u4ece\u4ee3\u7406\u91c7\u53d6\u884c\u52a8\uff0c\u524d\u8fdb\u5f53\u524d\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u89c2\u5bdf\u503c\uff0c\u5956\u52b1\uff0c\u6307\u793a\u60c5\u8282\u662f\u5426\u5b8c\u6210\u7684\u5e03\u5c14\u503c\u4ee5\u53ca\u53ef\u9009\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 API\u8fd8\u5305\u62ec\u5176\u4ed6\u6b21\u8981\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c\u5904\u7406\u6e32\u67d3\u548c\u968f\u673a\u79cd\u5b50\u3002 \u6700\u540e\uff0c\u9700\u8981\u5728Gym\u73af\u5883\u4e2d\u5b9e\u73b0\u4e00\u4e2a**action_space**\uff08\u4ee3\u8868\u53ef\u80fd\u7684\u52a8\u4f5c\u7684\u7a7a\u95f4\uff09\u548c\u4e00\u4e2a**observation_space**\uff08\u4ee3\u8868\u53ef\u80fd\u7684\u89c2\u5bdf\u7684\u7a7a\u95f4\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u6982\u8ff0PDDL\u6587\u4ef6\uff0c\u7136\u540e\u63cf\u8ff0\u5982\u4f55\u5728PDDLGym\u4e2d\u5b9a\u4e49\u52a8\u4f5c\u548c\u89c2\u5bdf\u7a7a\u95f4\u3002 \u518d\u8005\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u4e09\u79cd\u57fa\u672c\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002\u6709\u5173PDDLGym\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u8bf7\u53c2\u89c1\u4ee3\u7801\u4e2d\u7684**structs.py**\u3002","title":"1\u5f15\u8a00"},{"location":"Extensions/RL/PDDLGYM/#21pddl","text":"PDDL\u6587\u4ef6\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u57df\u6587\u4ef6\u548c\u95ee\u9898\u6587\u4ef6\u3002\u5355\u4e2a*\u57fa\u51c6\u6d4b\u8bd5*\u7684\u7279\u5f81\u662f\u4e00\u4e2a\u57df\u6587\u4ef6\u548c\u591a\u4e2a\u95ee\u9898\u6587\u4ef6\u3002 PDDL\u57df\u6587\u4ef6\u5305\u62ec*\u8c13\u8bcd*\uff08\u5e26\u6709\u5360\u4f4d\u7b26\u53d8\u91cf\uff08\u4f8b\u5982\uff0c\u5728\uff1fx\uff1fy\u4e0a\uff09\u7684\u547d\u540d\u5173\u7cfb\uff09\u548c*\u8fd0\u7b97\u7b26\u3002*\u7b97\u5b50\u7531\u540d\u79f0\uff0c\u53c2\u6570\u5217\u8868\uff0c\u63cf\u8ff0\u7b97\u5b505 s\u524d\u63d0\u7684\u53c2\u6570\u4e0a\u7684\u4e00\u9636\u903b\u8f91\u516c\u5f0f\u548c\u63cf\u8ff0\u7b97\u5b505 s\u6548\u679c\u7684\u53c2\u6570\u4e0a\u7684\u4e00\u9636\u903b\u8f91\u516c\u5f0f\u7ec4\u6210\u3002\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\u516c\u5f0f\u7684\u5f62\u5f0f\u901a\u5e38\u53d7PDDL\u7248\u672c\u7684\u9650\u5236\u3002PDDL\u7684\u65e9\u671f\u7248\u672c\u4ec5\u5141\u8bb8\u5730\u9762\u8c13\u8bcd\u7684\u8fde\u63a5[ 22] \uff1b\u66f4\u9ad8\u7248\u672c\u4e5f\u5141\u8bb8\u6790\u53d6\u548c\u91cf\u8bcd[ 23] \u3002\u6709\u5173PDDL\u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u56fe 2A \u3002 PDDL\u95ee\u9898\u6587\u4ef6\u5305\u62ec\u4e00\u7ec4*\u5bf9\u8c61*\uff08\u547d\u540d\u5b9e\u4f53\uff09\uff0c \u521d\u59cb\u72b6\u6001*\u548c*\u76ee\u6807\u3002*\u521d\u59cb\u72b6\u6001\u662f\u4e00\u7ec4\u5e26\u6709\u5bf9\u8c61\u7684\u8c13\u8bcd\u3002\u6839\u636e\u5c01\u95ed\u4e16\u754c\u7684\u5047\u8bbe\uff0c\u4efb\u4f55\u4e0d\u5728\u72b6\u6001\u4e2d\u7684\u5730\u9762\u8c13\u8bcd\u90fd\u88ab\u5047\u5b9a\u4e3a\u5047\u3002\u76ee\u6807\u662f\u5bf9\u8c61\u4e0a\u7684\u4e00\u9636\u903b\u8f91\u516c\u5f0f\uff08\u76ee\u6807\u7684\u5f62\u5f0f\u53d7PDDL\u7248\u672c\u7684\u9650\u5236\uff0c\u4f8b\u5982\u8fd0\u7b97\u7b26\uff0c\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\uff09\u3002\u8bf7\u6ce8\u610f\uff0cPDDL\uff08\u548cPDDLGym\uff09\u8fd8\u5141\u8bb8*\u952e\u5165*\u5bf9\u8c61\u548c\u53d8\u91cf \u3002*\u6709\u5173PDDL\u95ee\u9898\u6587\u4ef6\u7684\u90e8\u5206\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u56fe 2B \u3002","title":"2.1\u80cc\u666f\uff1aPDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6"},{"location":"Extensions/RL/PDDLGYM/#22","text":"PDDLGym\u4e2d\u7684\u6bcf\u4e2a\u89c2\u5bdf\u5bf9\u8c61obs\u5177\u6709\u4e09\u4e2a\u7ec4\u4ef6\uff0c\u5b83\u4eec\u955c\u50cf\u4e86PDDL\u95ee\u9898\u6587\u4ef6\u7684\u7ec4\u4ef6\uff1aobs.objects\u662f\u5305\u542b\u95ee\u9898\u4e2d\u5b58\u5728\u7684\u6240\u6709\u5bf9\u8c61\u7684\u96c6\u5408\uff1bobs.goal\u5305\u542b\u95ee\u9898\u76ee\u6807\uff1bobs.literals\u662f\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u4e3atrue\u7684\u6240\u6709\u57fa\u7840\u8c13\u8bcd\u7684\u96c6\u5408\u3002\u8fd9\u4e9b\u89c2\u5bdf\u5b8c\u5168\u5c01\u88c5\u4e86\u73af\u5883\u72b6\u6001\uff0c\u5373\u5b8c\u5168\u89c2\u5bdf\u4e86PDDLGym\u73af\u5883\u3002\u89c2\u5bdf\u7a7a\u95f4\u662f\u6240\u6709\u53ef\u80fd\u7684\u5730\u9762\u8c13\u8bcd\u4ee5\u53ca\u9759\u6001\u5bf9\u8c61\u548c\u76ee\u6807\u7684\u5e42\u96c6\u3002\u8fd9\u79cd\u529f\u7387\u96c6\u901a\u5e38\u662f\u5de8\u5927\u7684\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u8ba1\u7b97\u5b83\u3002\u89c2\u5bdf\u7a7a\u95f4\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u79bb\u6563\u7a7a\u95f4\uff0c\u5176\u5927\u5c0f\u7b49\u4e8e\u6b64\u5e42\u96c6\u7684\u5927\u5c0f\uff1b\u56e0\u4e3a\u8fd9\u4e2a\u7a7a\u95f4\u5f88\u5927\uff0c PDDLGym\u73af\u5883\u7684\u64cd\u4f5c\u7a7a\u95f4\u662f\u6574\u4e2a\u6846\u67b6\u4e2d\u66f4\u5fae\u5999\u7684\u65b9\u9762\u4e4b\u4e00\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u9009\u62e9\u3002\u5728\u8d44\u6e90\u5e93\u4e2d\u63d0\u4f9b\u4e86\u540c\u65f6\u670d\u7528\u9014\u5f84\u8bf4\u660e\uff0c\u81ea\u8ff0\u4e2d\uff0c\u5728\u201c\u7b2c3\u6b65\uff1a\u6ce8\u518c\u5065\u8eab\u623f\u73af\u5883\u201d\u4e00\u8282\u3002 \u5982\u679c\u53ea\u60f3\u5c06\u73b0\u6210\u7684PDDL\u6587\u4ef6\u4e0ePDDLGym\u4e00\u8d77\u4f7f\u7528\uff0c\u5219\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u5408\u9002\u7684\u3002\u53ef\u4ee5\u901a\u8fc7\u5728\u73af\u5883\u6ce8\u518c\u4e2d\u5c06operator_as_actions\u8bbe\u7f6e\u4e3aTrue\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u544a\u8bc9PDDLGym PDDL\u57df\u6587\u4ef6\u4e2d\u5b58\u5728\u7684\u8fd0\u7b97\u7b26\u672c\u8eab\u5e94\u88ab\u89c6\u4e3a\u73af\u5883\u4e2d\u7684\u52a8\u4f5c\uff0c\u5e76\u7531\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u53c2\u6570\u8fdb\u884c\u53c2\u6570\u5316\u3002 \u5efa\u8bae\u4f7f\u7528\u7b2c\u4e8c\u79cd\u9014\u5f84\u8fdb\u884c\u66f4\u8ba4\u771f\u7684\u7814\u7a76\uff0c\u8fd9\u662f\u7531\u4e8e\u7ecf\u5178AI\u8ba1\u5212\u4e2d\u7684\u201c\u64cd\u4f5c\u5458\u201d\u4e0e\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u201c\u52a8\u4f5c\u201d\u4e4b\u95f4\u7684\u8bed\u4e49\u5dee\u5f02\u3002\u5728AI\u89c4\u5212\u4e2d\uff0c\u52a8\u4f5c\u901a\u5e38\u7b49\u540c\u4e8e\u5730\u9762\u64cd\u4f5c\u5458\uff0c\u5373\u5176\u53c2\u6570\u7ed1\u5b9a\u5230\u5bf9\u8c61\u7684\u64cd\u4f5c\u5458\u3002\u4f46\u662f\uff0c\u5728\u5927\u591a\u6570PDDL\u57df\u4e2d\uff0c\u53ea\u6709\u4e00\u4e9b\u64cd\u4f5c\u5458\u53c2\u6570\u662f*\u7a7a\u95f2\u7684*\uff08\u5c31\u63a7\u5236\u4ee3\u7406\u800c\u8a00\uff09\u3002\u5176\u4f59\u53c2\u6570\u5305\u542b\u5728\u8fd0\u7b97\u7b26\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u524d\u63d0\u6761\u4ef6/\u6548\u679c\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u53ef\u4ee5\u4ece\u5f53\u524d\u72b6\u6001\u6216\u81ea\u7531\u53c2\u6570\u7684\u9009\u62e9\u4e2d\u5f97\u51fa\u3002PDDL\u672c\u8eab\u4e0d\u533a\u5206\u81ea\u7531\u53c2\u6570\u548c\u975e\u81ea\u7531\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u8003\u8651\u56fe 3A \u4e2d\u6240\u793a\u7684\u63a8\u7bb1\u5b50\u7684\u8fd0\u8425\u5546\u3002\u6b64\u8fd0\u7b97\u7b26\u8868\u793a\u73a9\u5bb6\uff08\uff1fp\uff09\u4ece\u67d0\u4e2a\u5355\u5143\u683c\uff08\uff1ffrom\uff09\u5411\u53e6\u4e00\u4e2a\u5355\u5143\u683c\uff08\uff1fto\uff09\u6cbf\u67d0\u4e2a\u65b9\u5411\uff08\uff1fdir\uff09\u79fb\u52a8\u7684\u89c4\u5219\u3002\u5728\u771f\u5b9e\u7684\u63a8\u7bb1\u5b50\u6e38\u620f\u4e2d\uff0c\u4ee3\u7406\u5546\u505a\u51fa\u7684\u552f\u4e00\u9009\u62e9\u662f\u79fb\u52a8\u7684\u65b9\u5411-\u53ea\u6709\uff1fdir\u53c2\u6570\u662f\u81ea\u7531\u7684\u3002\u73a9\u5bb6\u7684\uff1fp\u603b\u662f\u76f8\u540c\u7684\uff0c\uff1ffrom\u662f\u7531\u4ee3\u7406\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u4f4d\u7f6e\u5b9a\u4e49\u7684\uff0c\uff1fto\u53ef\u4ee5\u4ece\uff1ffrom\u548c\u4ee3\u7406\u5bf9\uff1fdir\u7684\u9009\u62e9\u4e2d\u5f97\u51fa\u3002\u4e3a\u4e86\u6b63\u786e\u5730\u4e3aPDDLGym\u73af\u5883\u5b9a\u4e49\u52a8\u4f5c\u7a7a\u95f4\uff0c\u6211\u4eec\u5fc5\u987b\u660e\u786e\u5730\u5c06\u81ea\u7531\u53c2\u6570\u4e0enon-free ones\u533a\u5206\u3002 \u56fe3\uff1a**\u5728PDDL\u8fd0\u7b97\u7b26\u4e2d\u590d\u5236free operators\u3002**\u4f20\u7edf\u4e0a\uff0cPDDL\u8fd0\u7b97\u7b26\u5c06\u81ea\u7531\u548c\u975e\u81ea\u7531\u53c2\u6570\u6df7\u5408\u5728\u4e00\u8d77\u3002\u4f8b\u5982\uff0c\u5728\u63a8\u7bb1\u5b50\uff08A\uff09\u7684\u5178\u578b\u79fb\u52a8\u8fd0\u7b97\u7b26\u4e2d\uff0c\u81ea\u7531\u53c2\u6570\uff1fdir\u4e0e\u975e\u81ea\u7531\u53c2\u6570\u4e00\u8d77\u88ab\u5305\u62ec\u5728\u5185\u3002PDDLGym\u5fc5\u987b\u533a\u5206\u81ea\u7531\u53c2\u6570\u4ee5\u6b63\u786e\u5b9a\u4e49\u64cd\u4f5c\u7a7a\u95f4\u3002\u4e00\u79cd\u9009\u62e9\u662f\u8981\u6c42\u6240\u6709\u64cd\u4f5c\u5458\u53c2\u6570\u90fd\u662f\u81ea\u7531\u7684\uff0c\u5e76\u5728\u64cd\u4f5c\u5458\u4e3b\u4f53\u4e2d\u76f8\u5e94\u5730\u5f15\u5165\u91cf\u8bcd\uff08B\uff09\uff1b\u4f46\u662f\uff0c\u8fd9\u5f88\u9ebb\u70e6\uff0c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u7b28\u62d9\uff0c\u6df1\u5ea6\u5d4c\u5957\u7684\u8fd0\u7b97\u7b26\uff0c\u56e0\u6b64\u6211\u4eec*\u4e0d*\u8fd9\u6837\u505a\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u9009\u62e9\u5f15\u5165\u4e0e\u8fd0\u7b97\u7b26\u76f8\u5173\u7684\u65b0\u8c13\u8bcd\uff0c\u5b83\u4eec\u7684\u53c2\u6570\u53ea\u662f\u8fd0\u7b97\u7b26\u7684\u81ea\u7531\u53c2\u6570\uff08C\uff09\u3002\u8fd9\u79cd\u65b0\u8c13\u8bcd\u7684\u793a\u4f8b\u4ee5\u9ec4\u8272\u663e\u793a\uff08\u5df2\u9009\u62e9\u79fb\u52a8\u52a8\u4f5c\uff09\u3002 \u4e00\u79cd\u9009\u62e9\u662f\u8981\u6c42\u64cd\u4f5c\u5458\u53c2\u6570\u5168\u90e8free\u3002\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u91cf\u8bcd\u5c06\u975e\u81ea\u7531\u53c2\u6570\u6298\u53e0\u4e3a\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c[ 23] \uff1b\u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u56fe 3B \u3002\u4f46\u662f\uff0c\u8fd9\u5f88\u9ebb\u70e6\uff0c\u5e76\u4e14\u5bfc\u81f4\u7b28\u62d9\uff0c\u6df1\u5ea6\u5d4c\u5957\u7684\u8fd0\u7b97\u7b26\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u9009\u62e9\u5f15\u5165\u4ee3\u8868\u64cd\u4f5c\u7b26\u7684\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u7684\u53d8\u91cf\u5c31\u662f\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u7684\u81ea\u7531\u53c2\u6570\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u8c13\u8bcd\u5305\u62ec\u5728\u5404\u4e2a\u8fd0\u7b97\u7b26\u7684\u524d\u63d0\u4e2d\uff1b\u89c1\u56fe 3C \u4e3e\u4e2a\u4f8b\u5b50 \u8fd9\u6837\u505a\u53ea\u9700\u8981\u5bf9\u73b0\u6709PDDL\u6587\u4ef6\u8fdb\u884c\u6700\u5c0f\u7684\u66f4\u6539\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u53ef\u8bfb\u6027\uff0c\u4f46\u662f\u9700\u8981\u6dfb\u52a0\u6709\u5173\u4ee3\u7406\u7a0b\u5e8f-\u73af\u5883\u8fb9\u754c\u7684\u57df\u77e5\u8bc6\u3002\u8bf7\u6ce8\u610f\uff0c\u6b64\u9886\u57df\u77e5\u8bc6\u7b49\u540c\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u52a8\u4f5c\u7a7a\u95f4\uff0c\u8fd9\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\u5f88\u5e38\u89c1\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u5047\u8bbe\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPDDLGym\u73af\u5883\u7684\u52a8\u4f5c\u7a7a\u95f4\u662f\u65b0\u5f15\u5165\u8c13\u8bcd\u7684\u6240\u6709\u53ef\u80fd\u57fa\u7840\u4e0a\u7684\u79bb\u6563\u7a7a\u95f4\u3002 \u4ecePDDLGym\u73af\u5883\u7684\u52a8\u4f5c\u7a7a\u95f4\u8fdb\u884c\u91c7\u6837\u65f6\uff0cPDDLGym\u5c06\u4ec5\u81ea\u52a8\u91c7\u6837*\u6709\u6548*\u52a8\u4f5c\uff0c\u5373\u6ee1\u8db3\u67d0\u4e9b\u64cd\u4f5c\u5458\u5148\u51b3\u6761\u4ef6\u7684\u52a8\u4f5c\u3002\u4f7f\u7528Fast Downward\u7684\u7ffb\u8bd1\u5668[ 24] \u8fdb\u884c\u6709\u6548\u6027\u68c0\u67e5\uff0c\u53ef\u4ee5\u5728\u5927\u578b\u95ee\u9898\u5b9e\u4f8b\u4e2d\u589e\u52a0\u4e0d\u53ef\u5ffd\u7565\u7684\u5f00\u9500\u3002","title":"2.2\u89c2\u5bdf\u548c\u884c\u52a8\u7a7a\u95f4"},{"location":"Extensions/RL/PDDLGYM/#23","text":"PDDLGym\u73af\u5883\u7531PDDL\u57df\u6587\u4ef6\u548cPDDL\u95ee\u9898\u6587\u4ef6\u5217\u8868\u6765\u53c2\u6570\u5316\u3002\u4e3a\u4e86\u4fbf\u4e8e\u7814\u7a76\uff0c\u6bcf\u4e2aPDDLGym\u73af\u5883\u90fd\u4e0e\u8be5\u73af\u5883\u7684*\u6d4b\u8bd5*\u7248\u672c\u76f8\u5173\u8054\uff0c\u5176\u4e2d\u57df\u6587\u4ef6\u662f\u76f8\u540c\u7684\uff0c\u4f46\u95ee\u9898\u6587\u4ef6\u662f\u4e0d\u540c\u7684\uff08\u4f8b\u5982\uff0c\u5b83\u4eec\u53ef\u4ee5\u5bf9\u66f4\u590d\u6742\u7684\u8ba1\u5212\u4efb\u52a1\u8fdb\u884c\u7f16\u7801\uff0c\u4ee5\u8861\u91cf\u53ef\u6982\u62ec\u6027\uff09\u3002\u5728\u73af\u5883\u521d\u59cb\u5316\u671f\u95f4\uff0c\u6240\u6709\u7684PDDL\u6587\u4ef6\u90fd\u88ab\u89e3\u6790\u4e3aPython\u5bf9\u8c61\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49PDDL\u89e3\u6790\u5668\u3002\u8c03\u7528reset\u65f6\uff0c\u5c06\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u95ee\u9898\u5b9e\u4f8b \u3002 1 \u8be5\u95ee\u9898\u5b9e\u4f8b\u7684\u521d\u59cb\u72b6\u6001\u662f\u73af\u5883\u7684\u72b6\u6001\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0creset\u8fd8\u8fd4\u56de\uff08\u5728\u8c03\u8bd5\u4fe1\u606f\u4e2d\uff09\u6307\u5411\u5f53\u524d\u60c5\u8282\u7684PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u7684\u8def\u5f84\u3002\u8fd9\u4f7f\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u4f7f\u7528\u7b26\u53f7\u8ba1\u5212\u5668\u5e76\u5728\u73af\u5883\u4e2d\u6267\u884c\u751f\u6210\u7684\u8ba1\u5212\u3002 \u6709\u5173\u4f7f\u7528Fast-Forward [ 25] \u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1PDDLGym Github\u5b58\u50a8\u5e93\u4e2d \u7684\u81ea\u8ff0\u6587\u4ef6 \u3002","title":"2.3\u521d\u59cb\u5316\u548c\u91cd\u7f6e\u73af\u5883"},{"location":"Extensions/RL/PDDLGYM/#24step","text":"PDDLGym\u73af\u5883\u7684step\u65b9\u6cd5\u91c7\u53d6\u4e00\u4e2a\u52a8\u4f5c\uff0c\u66f4\u65b0\u73af\u5883\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u89c2\u5bdf\uff0c\u5956\u52b1\uff0c\u5b8c\u6210\u7684\u5e03\u5c14\u503c\u548c\u8c03\u8bd5\u4fe1\u606f\u3002\u4e3a\u4e86\u786e\u5b9a\u72b6\u6001\u66f4\u65b0\uff0cPDDLGym\u68c0\u67e5\u7ed9\u5b9a\u5f53\u524d\u72b6\u6001\u548c\u64cd\u4f5c\u662f\u5426\u6ee1\u8db3\u4efb\u4f55PDDL\u8fd0\u7b97\u7b26\u7684\u5148\u51b3\u6761\u4ef6\u3002\u8bf7\u6ce8\u610f\uff0c\u4e0d\u53ef\u80fd\u201c\u610f\u5916\u5730\u5339\u914d\u201d\u4e0d\u60f3\u8981\u7684\u8fd0\u7b97\u7b26\uff1a\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u5982\u56fe 3C \u6240\u793a\uff0c\u8be5\u524d\u63d0\u6761\u4ef6\u662f\u6839\u636e\u4f20\u5165\u7684\u52a8\u4f5c\u81ea\u52a8\u751f\u6210\u7684\u3002\u7531\u4e8e\u64cd\u4f5c\u4e0e\u8fd0\u7b97\u7b26\u4e0d\u540c\uff08\u7b2c 2.2\u8282\uff09 \uff0c\u56e0\u6b64 precondition satisfaction check is nontrivial\uff1bnon-free parameters must be bound. \u3002\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e24\u4e2a\u63a8\u7406\u540e\u7aef\u6765\u6267\u884c\u6b64\u68c0\u67e5\u3002 \u7b2c\u4e00\u4e2a\u662f\u7c7b\u578b\u5316SLD\u89e3\u6790\u7684Python\u5b9e\u73b0\uff0c\u5f53\u67e5\u8be2\u4ec5\u6d89\u53ca\u8fde\u63a5\u65f6\uff0c\u8fd9\u662f\u9ed8\u8ba4\u9009\u62e9\u3002 \u7b2c\u4e8c\u4e2a\u662fSWI Prolog [ 26] \u7684\u5305\u88c5\uff0c\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u5904\u7406\u6d89\u53ca\u6790\u53d6\u548c\u91cf\u8bcd\u7684\u66f4\u590d\u6742\u7684\u524d\u63d0\u6761\u4ef6\u3002\u540e\u8005\u6bd4\u524d\u8005\u66f4\u6162\uff0c\u4f46\u66f4\u901a\u7528\u3002\u5f53\u6ca1\u6709\u64cd\u4f5c\u5458\u524d\u63d0\u6ee1\u8db3\u7ed9\u5b9a\u64cd\u4f5c\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u72b6\u6001\u4fdd\u6301\u4e0d\u53d8\u3002\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u5148\u51b3\u6761\u4ef6\uff0c\u5219\u53ef\u80fd\u4f1a\u5f15\u53d1\u9519\u8bef\uff1b\u53ef\u9009\u7684\u521d\u59cb\u5316\u53c2\u6570raise_error_on_invalid_action\u5141\u8bb8\u6b64\u884c\u4e3a\u3002 PDDLGym\u4e2d\u7684\u5956\u52b1\u662f\u7a00\u758f\u7684\u548c\u4e8c\u8fdb\u5236\u7684\u3002\u7279\u522b\u5730\uff0c\u5f53\u8fbe\u5230\u95ee\u9898\u76ee\u6807\u65f6\uff0c\u5956\u52b1\u4e3a1.0\uff0c\u5426\u5219\u4e3a0.0\u3002\u540c\u6837\uff0c\u8fbe\u5230\u76ee\u6807\u65f6\uff0c\u5e03\u5c14\u5e03\u5c14\u503c\u4e3aTrue\uff0c\u5426\u5219\u4e3aFalse\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u901a\u5e38\u4f7f\u7528\u6700\u5927\u60c5\u8282\u957f\u5ea6\u3002\uff09 \u5982\u679c\u57fa\u7840\u7684PDDL\u57df\u5177\u6709\u6982\u7387\u6548\u5e94\uff0c\u5982PPDDL [ 27] \uff0c\u5219\u6b65\u8fdb\u65b9\u6cd5\u5c06\u5bf9\u6b64\u8fdb\u884c\u9002\u5f53\u89e3\u6790\uff0c\u5e76\u6839\u636e\u7ed9\u5b9a\u7684\u6982\u7387\u5206\u5e03\u9009\u62e9\u4e00\u79cd\u6548\u5e94\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6982\u7387\u4e4b\u548c\u4e0d\u4e3a1\uff0c\u5219\u4f1a\u6dfb\u52a0\u9ed8\u8ba4\u7684\u7410\u788e\u6548\u679c\u3002","title":"**2.4\u5b9e\u65bd**step\u65b9\u6cd5"},{"location":"Extensions/RL/PDDLGYM/#25","text":"\u5728\u4ee3\u7801\u884c\u65b9\u9762\uff0c\u5927\u90e8\u5206PDDLGym\u4e13\u7528\u4e8ePDDL\u6587\u4ef6\u7684\u89e3\u6790\u548c\u63a8\u65ad\uff08\u5728\u6b65\u9aa4\u4e2d\u4f7f\u7528\uff09\u3002\u6211\u4eec\u5c06\u7ee7\u7eed\u5f00\u53d1\u8fd9\u4e24\u79cd\u529f\u80fd\uff0c\u4ee5\u4fbf\u652f\u6301\u66f4\u5e7f\u6cdb\u7684PDDL\u57df\u3002 PDDLGym\u652f\u6301\u7684PDDL 1.2\u7684\u65b9\u9762\u5305\u62ecSTRIPS\uff0c\u5206\u5c42\u7c7b\u578b\uff0c\u7b49\u5f0f\uff0c\u91cf\u8bcd\uff0c\u5e38\u91cf\u548c\u6d3e\u751f\u8c13\u8bcd\u3002\u4e0d\u652f\u6301\u7684\u503c\u5f97\u6ce8\u610f\u7684\u529f\u80fd\u5305\u62ec\u6761\u4ef6\u6548\u679c\u548c\u64cd\u4f5c\u6210\u672c\u3002\u4e0d\u652f\u6301\u66f4\u9ad8\u7248\u672c\u7684PDDL\uff08\u4f8b\u5982\u6570\u5b57\u6d41\u5229\uff09\u3002 \u6211\u4eec\u7684\u77ed\u671f\u76ee\u6807\u662f\u4e3aPDDL 1.2\u63d0\u4f9b\u5168\u9762\u652f\u6301\u3002\u6211\u4eec\u53d1\u73b0\uff0cPDDLGym\u5df2\u7ecf\u5f88\u597d\u5730\u652f\u6301\u4e86\u8bb8\u591a\u6807\u51c6PDDL\u57df\u3002\u53c2\u89c1\uff08\u7b2c 3 \u8282 \uff09 \u4ee5\u83b7\u5f97\u6982\u8ff0\u3002\u6211\u4eec\u6b22\u8fce\u901a\u8fc7Github\u9875\u9762\u6216\u7535\u5b50\u90ae\u4ef6\u4e0a\u521b\u5efa\u7684\u95ee\u9898\u6765\u8bf7\u6c42\u529f\u80fd\u548c\u6269\u5c55\u3002\u672c\u6587\u9876\u90e8\u63d0\u4f9b\u4e86\u4f5c\u80055\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002","title":"2.5\u53d1\u5c55\u72b6\u51b5"},{"location":"Extensions/RL/PDDLGYM/#3-pddlgym","text":"\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u4ece\u66f4\u65b0\u672c\u62a5\u544a\u7684\u6700\u540e\u65e5\u671f\uff082020\u5e749\u670817\u65e5\uff09\u5f00\u59cb\uff0c\u6982\u8ff0PDDLGym\u4e2d\u5185\u7f6e\u7684\u57df\u3002\u7136\u540e\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e9b\u5b9e\u9a8c\u7ed3\u679c\uff0c\u4ece\u800c\u6839\u636e\u89c4\u5212\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\u6765\u6df1\u5165\u4e86\u89e3\u8fd9\u4e9b\u9886\u57df\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6240\u6709\u5b9e\u9a8c\u90fd\u662f\u5728\u4e00\u53f0\u5177\u670932GB RAM\u548c2.9GHz Intel Core i9\u5904\u7406\u5668\u7684\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fdb\u884c\u7684\u3002","title":"3 PDDLGym\u6309\u6570\u5b57"},{"location":"Extensions/RL/PDDLGYM/#31","text":"\u76ee\u524d\uff0cPDDLGym\u4e2d\u5185\u7f6e\u4e8620\u4e2a\u57df\u3002\u5927\u591a\u6570\u57df\u90fd\u6539\u7f16\u81ea\u73b0\u6709\u7684PDDL\u5b58\u50a8\u5e93\uff1b\u5176\u4f59\u7684\u662f\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u7684\u7814\u7a76\u4e2d\u6709\u7528\u7684\u57fa\u51c6\u3002\u6211\u4eec\u5df2\u7ecf\u4e3a11\u4e2a\u57df\u5b9e\u73b0\u4e86\u81ea\u5b9a\u4e49\u5448\u73b0\uff08\u793a\u4f8b\u8bf7\u53c2\u89c1\u56fe 1 \uff09\u3002\u8868 1 \u5217\u51fa\u4e86\u6240\u6709\u73af\u5883\uff0c\u5176\u6765\u6e90\u4ee5\u53ca\u5b83\u4eec\u7684\u6bcf\u79d2\u5e73\u5747\u5e27\u6570\uff08FPS\uff09\u7684\u5217\u8868\uff0c\u8fd9\u4e9b\u6570\u636e\u662f\u901a\u8fc7\u5bf910\u4e2a\u65f6\u95f4\u6b65\u957f\u7684100\u4e2a\u60c5\u8282\u6267\u884c\u968f\u673a\u7b56\u7565\u800c\u8ba1\u7b97\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u6e32\u67d3\u3002","title":"3.1\u73af\u5883\u6982\u8ff0"},{"location":"Extensions/RL/PDDLGYM/#32","text":"\u73b0\u5728\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e9b\u7ed3\u679c\uff0c\u8bf4\u660e\u5185\u7f6e\u5728PDDLGym\u4e2d\u7684\u57df\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6211\u4eec\u7814\u7a76\u4e86\u4e24\u4e2a\u53d8\u5316\u8f74\uff1a\u8ba1\u5212\u96be\u5ea6\u548c\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\u7684\u96be\u5ea6\u3002 \u56fe 4 \uff08\u5de6\uff09\u663e\u793a\u4e86\u5feb\u8fdb[ 25] \u6240\u82b1\u8d39\u7684\u5e73\u5747\u65f6\u95f4\u3002\u5728\u6bcf\u4e2a\u786e\u5b9a\u6027\u73af\u5883\u4e2d\u627e\u5230\u8ba1\u5212\uff0c\u5e76\u5728\u6240\u6709\u95ee\u9898\u5b9e\u4f8b\u4e2d\u5e73\u5747\u3002\u7ed3\u679c\u663e\u793a\u8ba1\u5212\u65f6\u95f4\u8303\u56f4\u5f88\u5927\uff0c\u6700\u56f0\u96be\u7684\u533a\u57df\uff08\u4ed3\u5e93\uff0c\u4e3a\u6e05\u6670\u8d77\u89c1\u4ece\u56fe\u4e2d\u7701\u7565\uff09\u6bd4\u6700\u7b80\u5355\u7684\u533a\u57df\uff08TSP\uff09\u9700\u8981\u4e24\u4e2a\u6570\u91cf\u7ea7\u7684\u65f6\u95f4\u3002\u7ed3\u679c\u8fd8\u8868\u660e\uff0c\u4ece\u73b0\u4ee3\u8ba1\u5212\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8bb8\u591a\u5305\u542b\u7684\u57df\u76f8\u5bf9\u201c\u5bb9\u6613\u201d\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u5728\u8fd9\u4e9b\u7b80\u5355\u7684\u9886\u57df\u4e2d\uff0c\u4e5f\u8981\u89e3\u51b3\u8bb8\u591a\u6709\u8da3\u7684\u6311\u6218\uff0c\u4f8b\u5982\u4ece\u4ea4\u4e92\u6570\u636e\u4e2d\u5b66\u4e60\u771f\u6b63\u7684PDDL\u8fd0\u7b97\u7b26\uff0c\u6216\u8005\u5b9a\u4e49\u9002\u5408\u4e8e\u5b66\u4e60\u7684\u826f\u597d\u72b6\u6001\u62bd\u8c61\u3002\u5982\u679c\u9700\u8981\uff0c\u4eba\u4eec\u603b\u662f\u53ef\u4ee5\u63d0\u51fa\u66f4\u5927\u7684\u95ee\u9898\u5b9e\u4f8b\uff0c\u4ee5\u7a81\u7834\u73b0\u4ee3\u8ba1\u5212\u8005\u7684\u6781\u9650\u3002 \u56fe 4 \uff08\u53f3\uff09\u63d0\u4f9b\u4e86\u5728\u67d0\u4e9b\u73af\u5883\u4e2d\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\u7684\u96be\u5ea6\u7684\u89c1\u89e3\u3002\u5bf9\u4e8e\u6bcf\u79cd\u73af\u5883\uff0c\u4ee3\u7406\u90fd\u4f1a\u9488\u5bf925\u7ea7\u5730\u5e73\u7ebf\u6267\u884c\u968f\u673a\u7b56\u7565\u3002\u89c2\u5bdf\u5230\u7684\u8fc7\u6e21\u5c06\u7528\u4e8e\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\uff0c\u7136\u540e\u5c06\u5176\u7528\u4e8e\u4e00\u7cfb\u5217\u6d4b\u8bd5\u95ee\u9898\u7684\u8ba1\u5212\u3002\u6240\u62a5\u544a\u7684\u5df2\u89e3\u51b3\u6d4b\u8bd5\u95ee\u9898\u7684\u6bd4\u4f8b\u88ab\u62a5\u544a\u4e3a\u5b66\u4e60\u7684\u8fc7\u6e21\u6a21\u578b\u7684\u6307\u6807\u3002\u4e3a\u4e86\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u9636\u903b\u8f91\u51b3\u7b56\u6811\uff08FOLDT\uff09\u5b66\u4e60[ 32] \u3002\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u5bf9\u4e94\u4e2a\u57df\u8fdb\u884c\u4e86\u53ef\u89c6\u5316\uff1b\u5728\u5176\u4f59\u7684\u51e0\u4e2a\u4e2d\uff0c\u53ef\u6bd4\u7684 \u56fe4\uff1a**PDDLGym\u73af\u5883\u4e4b\u95f4\u7684\u5dee\u5f02\u3002**PDDLGym\u4e2d\u5185\u7f6e\u7684PDDL\u57df\u548c\u95ee\u9898\u5728\u8ba1\u5212\u96be\u5ea6\uff08\u5de6\uff09\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\uff08\u53f3\uff09\u65b9\u9762\u6709\u5f88\u5927\u4e0d\u540c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u6587\u672c\u3002\u4e3a\u4e86\u6e05\u6670\u8d77\u89c1\uff0c\u7701\u7565\u4e86\u5176\u4e2d\u4e00\u4e2a\u9886\u57dfDepot\uff0c\u4f46\u6bd4\u6700\u7b80\u5355\u7684\u9886\u57df\uff08TSP\uff09\u9700\u8981\u591a\u4e24\u4e2a\u6570\u91cf\u7ea7\u7684\u8ba1\u5212\u65f6\u95f4\u3002 \u5bf9\u4e8e\u6240\u793a\u7684\u65b9\u6cd5\uff0c\u4f46\u5176\u4ed6\u65b9\u6cd5\uff08\u5305\u62ec\u70d8\u7119\uff0c\u4ed3\u5e93\u548c\u63a8\u7bb1\u5b50\uff09\u5bf9\u4e8e\u6211\u4eec\u7684\u5b66\u4e60\u65b9\u6cd5\u6765\u8bf4\u6bd4\u8f83\u56f0\u96be\uff1aFOLDT\u5b66\u4e60\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u627e\u5230\u9002\u5408\u6570\u636e\u7684\u6a21\u578b\u3002\u5f53\u7136\uff0c\u6a21\u578b\u5b66\u4e60\u7684\u96be\u5ea6\u56e0\u5b66\u4e60\u65b9\u6cd5\u548c\u63a2\u7d22\u7b56\u7565\u7684\u4e0d\u540c\u800c\u6709\u5f88\u5927\u5dee\u5f02\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5b9e\u65bd\u4e86\u7b80\u5355\u7684\u7b56\u7565\u6765\u663e\u793a\u8fd9\u4e9b\u7ed3\u679c\uff0c\u4f46\u662f\u8fd9\u4e9b\u5c06\u6765\u7684\u7814\u7a76\u9014\u5f84\u6b63\u662f\u6211\u4eec\u5e0c\u671b\u901a\u8fc7PDDLGym\u5b9e\u73b0\u7684\u90a3\u79cd\u9014\u5f84\u3002 \u6211\u4eec\u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u7684Python\u6846\u67b6\uff0c\u53ef\u4ee5\u4ecePDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u81ea\u52a8\u521b\u5efaOpenAI Gym\u73af\u5883\u3002\u6211\u4eec\u7684\u7ecf\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u5185\u7f6e\u73af\u5883\u4e4b\u95f4\u5b58\u5728\u76f8\u5f53\u5927\u7684\u5dee\u5f02\u3002\u6211\u4eec\u5728\u5173\u7cfb\u987a\u5e8f\u51b3\u7b56\u548c\u5f3a\u5316\u5b66\u4e60\u7684\u7814\u7a76\u4e2d\u4e00\u76f4\u79ef\u6781\u4f7f\u7528PDDLGym\u3002\u6211\u4eec\u8fd8\u5e0c\u671b\u5c06PDDLGym\u4e0e\u5176\u4ed6\u76f8\u5173\u7684\u5f00\u6e90\u6846\u67b6\uff08\u5c24\u5176\u662fPlanning.domains [ 7]\u4e2d \u7684PDDL\u96c6\u5408\u548c\u5de5\u5177\uff09\u8fdb\u884c\u63a5\u53e3\u8fde\u63a5\uff0c\u4ee5\u4fbf\u7528\u6237\u53ea\u9700\u6307\u5b9a\u6307\u5411PDDL\u6587\u4ef6\u5b58\u50a8\u5e93\u7684URL\uff08\u4ee5\u53ca\u6709\u5173\u81ea\u7531\u53c2\u6570\u7684\u4e00\u4e9b\u7279\u5b9a\u4e8e\u57df\u7684\u4fe1\u606f\uff09\u3002 \u6211\u4eec\u671f\u5f85\u7740\u6536\u96c6\u793e\u533a\u7684\u53cd\u9988\uff0c\u5e76\u76f8\u5e94\u5730\u6269\u5c55\u53ef\u7528\u73af\u5883\u548c\u529f\u80fd\u7684\u96c6\u5408\u3002 \u76f8\u5173 1 \u548c\u6587\u732e 2 \u3002 \u53c2\u8003 GICystems \u21a9 Checking \u21a9","title":"3.2\u73af\u5883\u96be\u5ea6\u7684\u53d8\u5316"},{"location":"Extensions/RL/RLPlanPapers/","text":"2. Survey of research literature \u00b6 several recent research papers in that area\uff1a \u5408\u96c6 https://icaps20subpages.icaps-conference.org/workshops/prl/ writing a report summarizing the papers, comparing and contrasting the techniques used, critiquing the results. context and background A review of generalized planning Research papers to be read closely and discussed .Additional research papers to be skimmed and briefly summarized. A Review of Machine Learning for Automated Planning Generalized Planning With Deep Reinforcement Learning PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS PDDLGym: Gym Environments from PDDL Problems https://github.com/tomsilver/pddlgym https://github.com/ronuchit/pddlgym_planners","title":"PDDL+RL\u5f3a\u5316\u5b66\u4e60"},{"location":"Extensions/RL/RLPlanPapers/#2-survey-of-research-literature","text":"several recent research papers in that area\uff1a \u5408\u96c6 https://icaps20subpages.icaps-conference.org/workshops/prl/ writing a report summarizing the papers, comparing and contrasting the techniques used, critiquing the results. context and background A review of generalized planning Research papers to be read closely and discussed .Additional research papers to be skimmed and briefly summarized. A Review of Machine Learning for Automated Planning Generalized Planning With Deep Reinforcement Learning PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS PDDLGym: Gym Environments from PDDL Problems https://github.com/tomsilver/pddlgym https://github.com/ronuchit/pddlgym_planners","title":"2. Survey of research literature"},{"location":"FurtherMore/PDDL-Solver2AST/","text":"1. PDDL-Solver2AST \u00b6 parser","title":"PDDL-Solver2AST"},{"location":"FurtherMore/PDDL-Solver2AST/#1-pddl-solver2ast","text":"parser","title":"1. PDDL-Solver2AST"},{"location":"FurtherMore/TransitionSystemModelCheck/","text":"ModelCheckingQNP \u00b6 \u5bfb\u627e\u4e00\u79cd\u80fd\u63cf\u8ff0\u9a8c\u8bc1\u5305\u62ecbranch\uff0cwhile\u5faa\u73afloop\u8fd9\u7c7b\u7a0b\u5e8f/controllor\u63a7\u5236\u6d41\u56fe\u7684\u201cLogic\u201d,\u5148\u770bIC3_Modelchecking SAT-Based Model Checking without Unrolling IC3 - Flipping the E in ICE Understanding IC3 E\ufb03cient implementation of property directed reachability \u8f6f\u5de5\u65b9\u6cd5\u8bba\u4e4b\u5f62\u5f0f\u5316\u65b9\u6cd5NuSMV\u5b66\u4e60\u7b14\u8bb0","title":"CFG=TransitionSystemModelCheck.md"},{"location":"FurtherMore/TransitionSystemModelCheck/#modelcheckingqnp","text":"\u5bfb\u627e\u4e00\u79cd\u80fd\u63cf\u8ff0\u9a8c\u8bc1\u5305\u62ecbranch\uff0cwhile\u5faa\u73afloop\u8fd9\u7c7b\u7a0b\u5e8f/controllor\u63a7\u5236\u6d41\u56fe\u7684\u201cLogic\u201d,\u5148\u770bIC3_Modelchecking SAT-Based Model Checking without Unrolling IC3 - Flipping the E in ICE Understanding IC3 E\ufb03cient implementation of property directed reachability \u8f6f\u5de5\u65b9\u6cd5\u8bba\u4e4b\u5f62\u5f0f\u5316\u65b9\u6cd5NuSMV\u5b66\u4e60\u7b14\u8bb0","title":"ModelCheckingQNP"},{"location":"FurtherMore/qnp2ast2program/","text":"qnp2ast2program \u00b6 A QNP Problem is an AOV network,like transitive system\u8fc1\u79fb\u7cfb\u7edf.policy \uff1astate\uf0e0 action\u3002 Samillar to turing machine = algorithm. Model checking,descripe it in logic like ATL* . Actually ,many paper use FOND because it is easier. Maybe a new logic. QNP domain.pddl probelm_p.pddl MyND\u4e4b\u7c7b/\u8fa3\u4e2a\u6539\u8fdb\u7684granphplanner solution graph (data flow controllor chart) AST Program Read QNP first paper: LL domain plan problem \uf0df<--->\uf0e0linked list program problem Extended LL Domain c ++ , java\u7b49\u6a21\u677f\u5143\u7f16\u7a0b \uff0c gennerator Imperative programming language Parser tree\uf0e0 LLVM:IR\uf0e0 C-like program Coq-extraction Functional problem :OCAML/HASKELL Why tool CP\u7f16\u8bd1\u539f\u7406\u77e5\u8bc6\u4e2d\uff0c\u5bf9\u89e3\u6790\u5668parser\u4e4b\u540eAST\u62bd\u8c61\u8bed\u6cd5\u6811\uff0c\u8fdb\u884c\u201c\u7c7b\u578b\u68c0\u67e5/\u6709\u6548\u6027\u5206\u6790\u201d\u3002\u751a\u81f3\u73b0\u5728\u5df2\u7ecf\u6709\u7a0b\u5e8f\u7ec8\u6b62\u6027\u6d4b\u8bd5\u8f6f\u4ef6\u3002 Maybe using many technology in IC3/nuSMV,format \u7a0b\u5e8f\u9a8c\u8bc1/program with branches and loop \u7ec8\u6b62\u6027\u6d4b\u8bd5. https://zybuluo.com/sangyy/note/128535 \u5206\u652f\uff1aRL Solver\u4ea4\u4e92\u6c9f\u901a\uff0c\u5c31\u50cfpddlgym\u9879\u76ee\u4e00\u6837\u7684qnpgym\uff1f**Find an path in the AOV network. ** \u4e0b\u56fe\u53ef\u4ee5\u6539\u9020\u4e3a\u7ecf\u5178Gripper\u95ee\u9898 \u9a6c\u5c14\u53ef\u592bmarkov\u65e0\u8bb0\u5fc6\uff0cstate\u2192 action, \u6709\u8bba\u6587\u53ef\u4ee5\u505a\u5230\u6709\u8bb0\u5fc6\u7684trajectory \u2192 action\uff0c\u8bb0\u5fc6\u53d8\u91cf\u5c31\u662fqnp\u7684\u6570\u503c\u53d8\u91cf,\u6bd4\u5982\u300aReinforcement Learning with Non-Markovian Rewards\u300b \u8fd1\u4e24\u5e74\u6765\u6709\u4e00\u4e9b\u5de5\u4f5c\u662f\u628a\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7528\u4e8e\u6c42\u89e3\u89c4\u5212\u95ee\u9898\u7684,2020 ICAPS main page\u3002 https://icaps20subpages.icaps-conference.org/workshops/prl/ \u4ece\u6982\u7387\u63a8\u7406\u7684\u89d2\u5ea6\u7406\u89e3\u5f3a\u5316\u5b66\u4e60\u548c\u63a7\u5236(\u4e00\uff09 - stone\u7684\u6587\u7ae0 https://zhuanlan.zhihu.com/p/339881664 Generalized planning with deep reinforcement learning Symbolic Plans as High-Level Instructions for Reinforcement Learning\u3002 Learning Neural Search Policies for Classical Planning \u8fd1\u4e24\u5e74\u6765\u6709\u4e00\u4e9b\u5de5\u4f5c\u662f\u628a\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7528\u4e8e\u6c42\u89e3\u89c4\u5212\u95ee\u9898\u7684\u3002 \u4eba\u4eec\u666e\u904d\u8ba4\u4e3a\u786e\u5b9a\u6027\u7b56\u7565\u7684RL\u4e0d\u5b58\u5728\uff0c\u76f4\u52302014\u5e74Silver\u5728Derterministic policy gradient algorithm\u4e2d\u63d0\u51fa\u786e\u5b9a\u6027\u7b56\u7565\u3002 2015\uff0cDeepMind+DQN\uf0e0DDPG\u7b97\u6cd5\uff08continuous control with deep reinforcement learning\uff09 \u5206\u652f\uff1aiasabelle,Coq\u8f85\u52a9\u8bc1\u660e|\"\u63a8\u7406\"\u51fa\u7ec8\u6b62\u6027\uff0cmodelchecking\uff0c\u8f6f\u4ef6\u7cfb\u7edf\u53ef\u4fe1\u6027\u90a3\u5957 \u903b\u8f91\u516c\u5f0f\u6f14\u7b97\uff0c\u8c13\u8bcd\u7b49\u5929\u7136\u5f62\u6210\u7684Golog\u7c7b\u4f3c\u903b\u8f91\u5f0f\u547d\u4ee4\u5f0f\u7a0b\u5e8f\u8fd0\u884c\u5728prolog\u4e0a \u903b\u8f91\u516c\u5f0f\u6f14\u7b97\u8fd8\u5929\u7136\u5f62\u6210\u81ea\u7136\u751f\u6210OCAML\u7b49\u201c\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u201d\uff0c\u5177\u4f53\u5df2\u7ecf\u5b9e\u73b0\u7684\u6709\uff1aCoq \u7684Extraction DSL\uff0c\u7f16\u8bd1\u539f\u7406\u524d\u7aef\u7684\u201c\u8bed\u6cd5\u5206\u6790\u8bcd\u6cd5\u5206\u6790\u7b49\u5f62\u6210\u4e2d\u95f4\u8868\u8fbe\u201d\uff0c\u901a\u8fc7AST\u7b49\u6548\u8f6c\u6362\u4e3ac-like \u7a0b\u5e8f\u3002\uff08\u8fd9\u4e2a\u6ca1\u770b\u5230\u5728\u505a\u7684\u8bba\u6587\uff09","title":"qnp2ast2program"},{"location":"FurtherMore/qnp2ast2program/#qnp2ast2program","text":"A QNP Problem is an AOV network,like transitive system\u8fc1\u79fb\u7cfb\u7edf.policy \uff1astate\uf0e0 action\u3002 Samillar to turing machine = algorithm. Model checking,descripe it in logic like ATL* . Actually ,many paper use FOND because it is easier. Maybe a new logic. QNP domain.pddl probelm_p.pddl MyND\u4e4b\u7c7b/\u8fa3\u4e2a\u6539\u8fdb\u7684granphplanner solution graph (data flow controllor chart) AST Program Read QNP first paper: LL domain plan problem \uf0df<--->\uf0e0linked list program problem Extended LL Domain c ++ , java\u7b49\u6a21\u677f\u5143\u7f16\u7a0b \uff0c gennerator Imperative programming language Parser tree\uf0e0 LLVM:IR\uf0e0 C-like program Coq-extraction Functional problem :OCAML/HASKELL Why tool CP\u7f16\u8bd1\u539f\u7406\u77e5\u8bc6\u4e2d\uff0c\u5bf9\u89e3\u6790\u5668parser\u4e4b\u540eAST\u62bd\u8c61\u8bed\u6cd5\u6811\uff0c\u8fdb\u884c\u201c\u7c7b\u578b\u68c0\u67e5/\u6709\u6548\u6027\u5206\u6790\u201d\u3002\u751a\u81f3\u73b0\u5728\u5df2\u7ecf\u6709\u7a0b\u5e8f\u7ec8\u6b62\u6027\u6d4b\u8bd5\u8f6f\u4ef6\u3002 Maybe using many technology in IC3/nuSMV,format \u7a0b\u5e8f\u9a8c\u8bc1/program with branches and loop \u7ec8\u6b62\u6027\u6d4b\u8bd5. https://zybuluo.com/sangyy/note/128535 \u5206\u652f\uff1aRL Solver\u4ea4\u4e92\u6c9f\u901a\uff0c\u5c31\u50cfpddlgym\u9879\u76ee\u4e00\u6837\u7684qnpgym\uff1f**Find an path in the AOV network. ** \u4e0b\u56fe\u53ef\u4ee5\u6539\u9020\u4e3a\u7ecf\u5178Gripper\u95ee\u9898 \u9a6c\u5c14\u53ef\u592bmarkov\u65e0\u8bb0\u5fc6\uff0cstate\u2192 action, \u6709\u8bba\u6587\u53ef\u4ee5\u505a\u5230\u6709\u8bb0\u5fc6\u7684trajectory \u2192 action\uff0c\u8bb0\u5fc6\u53d8\u91cf\u5c31\u662fqnp\u7684\u6570\u503c\u53d8\u91cf,\u6bd4\u5982\u300aReinforcement Learning with Non-Markovian Rewards\u300b \u8fd1\u4e24\u5e74\u6765\u6709\u4e00\u4e9b\u5de5\u4f5c\u662f\u628a\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7528\u4e8e\u6c42\u89e3\u89c4\u5212\u95ee\u9898\u7684,2020 ICAPS main page\u3002 https://icaps20subpages.icaps-conference.org/workshops/prl/ \u4ece\u6982\u7387\u63a8\u7406\u7684\u89d2\u5ea6\u7406\u89e3\u5f3a\u5316\u5b66\u4e60\u548c\u63a7\u5236(\u4e00\uff09 - stone\u7684\u6587\u7ae0 https://zhuanlan.zhihu.com/p/339881664 Generalized planning with deep reinforcement learning Symbolic Plans as High-Level Instructions for Reinforcement Learning\u3002 Learning Neural Search Policies for Classical Planning \u8fd1\u4e24\u5e74\u6765\u6709\u4e00\u4e9b\u5de5\u4f5c\u662f\u628a\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7528\u4e8e\u6c42\u89e3\u89c4\u5212\u95ee\u9898\u7684\u3002 \u4eba\u4eec\u666e\u904d\u8ba4\u4e3a\u786e\u5b9a\u6027\u7b56\u7565\u7684RL\u4e0d\u5b58\u5728\uff0c\u76f4\u52302014\u5e74Silver\u5728Derterministic policy gradient algorithm\u4e2d\u63d0\u51fa\u786e\u5b9a\u6027\u7b56\u7565\u3002 2015\uff0cDeepMind+DQN\uf0e0DDPG\u7b97\u6cd5\uff08continuous control with deep reinforcement learning\uff09 \u5206\u652f\uff1aiasabelle,Coq\u8f85\u52a9\u8bc1\u660e|\"\u63a8\u7406\"\u51fa\u7ec8\u6b62\u6027\uff0cmodelchecking\uff0c\u8f6f\u4ef6\u7cfb\u7edf\u53ef\u4fe1\u6027\u90a3\u5957 \u903b\u8f91\u516c\u5f0f\u6f14\u7b97\uff0c\u8c13\u8bcd\u7b49\u5929\u7136\u5f62\u6210\u7684Golog\u7c7b\u4f3c\u903b\u8f91\u5f0f\u547d\u4ee4\u5f0f\u7a0b\u5e8f\u8fd0\u884c\u5728prolog\u4e0a \u903b\u8f91\u516c\u5f0f\u6f14\u7b97\u8fd8\u5929\u7136\u5f62\u6210\u81ea\u7136\u751f\u6210OCAML\u7b49\u201c\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u201d\uff0c\u5177\u4f53\u5df2\u7ecf\u5b9e\u73b0\u7684\u6709\uff1aCoq \u7684Extraction DSL\uff0c\u7f16\u8bd1\u539f\u7406\u524d\u7aef\u7684\u201c\u8bed\u6cd5\u5206\u6790\u8bcd\u6cd5\u5206\u6790\u7b49\u5f62\u6210\u4e2d\u95f4\u8868\u8fbe\u201d\uff0c\u901a\u8fc7AST\u7b49\u6548\u8f6c\u6362\u4e3ac-like \u7a0b\u5e8f\u3002\uff08\u8fd9\u4e2a\u6ca1\u770b\u5230\u5728\u505a\u7684\u8bba\u6587\uff09","title":"qnp2ast2program"},{"location":"FurtherMore/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%9B%BECFG%E8%AF%AD%E4%B9%89%E7%BD%91%E7%BB%9Cpetri%E8%BF%81%E7%A7%BB%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%B1%95%E5%BA%94%E7%94%A8/","text":"CFG ~TransitionSystem ==> ModelCheck \u00b6 \u8bed\u4e49\u7f51\u7edcpetri\u8fc1\u79fb\u7cfb\u7edf\u6269\u5c55\u5e94\u7528 Curry-Howard correspondence \u4ece\u81ea\u52a8\u673a\u5230\u6587\u6cd5(\u7b26\u53f7\u81ea\u52a8\u673a) Domain Control Knowledge (DCK).\u7f16\u8bd1\u4e3aPDDL \u57df\u63a7\u5236\u77e5\u8bc6\uff08DCK\uff09\u53ef\u901a\u8fc7\u51cf\u5c11\u8ba1\u5212\u7684\u641c\u7d22\u7a7a\u95f4\u6765\u6709\u6548\u5730\u63d0\u9ad8\u8ba1\u5212\u751f\u6210\u7684\u6548\u7387\u3002\u7a0b\u5e8fDCK\u662fDCK\u7684\u4e00\u79cd\u5f15\u4eba\u6ce8\u76ee\u7684\u7c7b\u578b\uff0c\u5b83\u652f\u6301\u8ba1\u5212\u6846\u67b6\u7684\u81ea\u7136\u89c4\u8303\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5927\u591a\u6570\u6700\u65b0\u7684\u8ba1\u5212\u8005\u90fd\u6ca1\u6709\u5229\u7528\u7a0b\u5e8f\u6027DCK\u6240\u5fc5\u9700\u7684\u673a\u5236\u3002\u4e3a\u89e3\u51b3\u6b64\u7f3a\u9677\uff0c\u6211\u4eec\u5efa\u8bae\u5c06\u7a0b\u5e8fDCK\u76f4\u63a5\u7f16\u8bd1\u4e3aPDDL2.1\uff0c\u4ece\u800c\u4f7f\u4efb\u4f55\u4e0ePDDL2.1\u517c\u5bb9\u7684\u8ba1\u5212\u8005\u90fd\u53ef\u4ee5\u5229\u7528\u5b83\u3002\u672c\u6587\u7684\u8d21\u732e\u662f\u4e09\u65b9\u9762\u7684\u3002\u9996\u5148\uff0c\u6211\u4eec\u4e3a\u7c7b\u4f3cAlgol\u7684\u8fc7\u7a0b\u8bed\u8a00\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8ePDDL\u7684\u8bed\u4e49\uff0c\u8be5\u8bed\u8a00\u53ef\u7528\u4e8e\u5728\u8ba1\u5212\u4e2d\u6307\u5b9aDCK\u3002\u5176\u6b21\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u591a\u9879\u5f0f\u7b97\u6cd5\uff0c\u53ef\u5c06ADL\u8ba1\u5212\u5b9e\u4f8b\u548cDCK\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u7b49\u6548\u7684\u65e0\u7a0b\u5e8fPDDL2\u30021\u4e2a\u5b9e\u4f8b\uff0c\u5176\u8ba1\u5212\u4ec5\u662f\u90a3\u4e9b\u9075\u5b88\u8be5\u8ba1\u5212\u7684\u8ba1\u5212\u3002\u7b2c\u4e09\uff0c\u6211\u4eec\u8ba4\u4e3a\u751f\u6210\u7684\u8ba1\u5212\u5b9e\u4f8b\u975e\u5e38\u9002\u5408\u7531\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u8ba1\u5212\u8005\u89e3\u51b3\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e09\u79cd\u65b9\u6cd5\u6765\u4e3a\u6211\u4eec\u7684\u7ffb\u8bd1\u5b9e\u4f8b\u8ba1\u7b97\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u6709\u65f6\u8fd8\u5229\u7528\u6211\u4eec\u7ffb\u8bd1\u7684\u5c5e\u6027\u6765\u6307\u5bfc\u641c\u7d22\u3002\u5728\u5bf9\u719f\u6089\u7684PDDL\u8ba1\u5212\u57fa\u51c6\u8fdb\u884c\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\uff0c\u7a0b\u5e8fDCK\u7684\u62df\u8bae\u7f16\u8bd1\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u5668\u7684\u6027\u80fd\u3002\u6211\u4eec\u7684\u7ffb\u8bd1\u5668\u5df2\u5b9e\u73b0\u5e76\u53ef\u4ee5\u5728\u7f51\u7edc\u4e0a\u627e\u5230\u3002\u6211\u4eec\u63d0\u51fa\u4e86\u4e09\u79cd\u65b9\u6cd5\u6765\u4e3a\u6211\u4eec\u7684\u7ffb\u8bd1\u5b9e\u4f8b\u8ba1\u7b97\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u6709\u65f6\u8fd8\u5229\u7528\u6211\u4eec\u7ffb\u8bd1\u7684\u5c5e\u6027\u6765\u6307\u5bfc\u641c\u7d22\u3002\u5728\u5bf9\u719f\u6089\u7684PDDL\u8ba1\u5212\u57fa\u51c6\u8fdb\u884c\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\uff0c\u7a0b\u5e8fDCK\u7684\u62df\u8bae\u7f16\u8bd1\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u5668\u7684\u6027\u80fd\u3002\u6211\u4eec\u7684\u7ffb\u8bd1\u5668\u5df2\u5b9e\u73b0\u5e76\u53ef\u4ee5\u5728\u7f51\u7edc\u4e0a\u627e\u5230\u3002\u6211\u4eec\u63d0\u51fa\u4e86\u4e09\u79cd\u65b9\u6cd5\u6765\u4e3a\u6211\u4eec\u7684\u7ffb\u8bd1\u5b9e\u4f8b\u8ba1\u7b97\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u6709\u65f6\u8fd8\u5229\u7528\u6211\u4eec\u7ffb\u8bd1\u7684\u5c5e\u6027\u6765\u6307\u5bfc\u641c\u7d22\u3002\u5728\u5bf9\u719f\u6089\u7684PDDL\u8ba1\u5212\u57fa\u51c6\u8fdb\u884c\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\uff0c\u7a0b\u5e8fDCK\u7684\u62df\u8bae\u7f16\u8bd1\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u5668\u7684\u6027\u80fd\u3002\u6211\u4eec\u7684\u7ffb\u8bd1\u5668\u5df2\u5b9e\u73b0\u5e76\u53ef\u4ee5\u5728\u7f51\u7edc\u4e0a\u627e\u5230\u3002 aaai.org/Library/ICAPS/2007/icaps07-004.php https://arxiv.org/abs/1910.04999 \u5e7f\u4e49\u8ba1\u5212\u662f\u751f\u6210\u5bf9\u4e00\u7ec4\u8ba1\u5212\u95ee\u9898\u6709\u6548\u7684\u5355\u4e2a\u89e3\u51b3\u65b9\u6848\u7684\u4efb\u52a1\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u8fc7\u7a0b\u57df\u63a7\u5236\u77e5\u8bc6\uff08DCK\uff09\u6765\u8868\u793a\u548c\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u79cd< it\u5206\u800c\u6cbb\u4e4b>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u9996\u5148\u751f\u6210\u8fc7\u7a0bDCK\uff0c\u4ee5\u89e3\u51b3\u4ee3\u8868\u67d0\u4e9b\u5b50\u4efb\u52a1\u7684\u4e00\u7ec4\u8ba1\u5212\u95ee\u9898\uff0c\u7136\u540e\u5c06\u5176\u7f16\u8bd1\u4e3a\u603b\u4f53\u5e7f\u4e49\u8ba1\u5212\u95ee\u9898\u7684\u53ef\u8c03\u7528\u8fc7\u7a0b\u3002\u6211\u4eec\u7684\u8fc7\u7a0b\u8c03\u7528\u673a\u5236\u5141\u8bb8\u4efb\u610f\u7684\u5d4c\u5957\u548c\u9012\u5f52\u8fc7\u7a0b\u8c03\u7528\uff0c\u5e76\u5728PDDL\u4e2d\u5b9e\u73b0\uff0c\u4ee5\u4fbf\u73b0\u6210\u7684\u8ba1\u5212\u8005\u53ef\u4ee5\u8ba1\u7b97\u548c\u5229\u7528\u8fc7\u7a0bDCK\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u4f7f\u7528\u7a0b\u5e8f\u5316DCK\u4f5c\u4e3a\u53ef\u8c03\u7528\u8fc7\u7a0b\u7684\u73b0\u6210\u7684\u7ecf\u5178\u8ba1\u5212\u5668\u53ef\u4ee5\u5728\u5e7f\u6cdb\u7684\u9886\u57df\uff08\u5305\u62ec\u975e\u5e73\u51e1\u7684\u9886\u57df\uff09\u4e2d\u8ba1\u7b97\u5e7f\u4e49\u7684\u8ba1\u5212\uff0c https://bibbase.org/network/publication/segovia-jimenez-jonsson-generalizedplanningwithproceduraldomaincontrolknowledge","title":"CFG\u8bed\u4e49\u7f51\u7edc"},{"location":"FurtherMore/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%9B%BECFG%E8%AF%AD%E4%B9%89%E7%BD%91%E7%BB%9Cpetri%E8%BF%81%E7%A7%BB%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%B1%95%E5%BA%94%E7%94%A8/#cfg-transitionsystem-modelcheck","text":"\u8bed\u4e49\u7f51\u7edcpetri\u8fc1\u79fb\u7cfb\u7edf\u6269\u5c55\u5e94\u7528 Curry-Howard correspondence \u4ece\u81ea\u52a8\u673a\u5230\u6587\u6cd5(\u7b26\u53f7\u81ea\u52a8\u673a) Domain Control Knowledge (DCK).\u7f16\u8bd1\u4e3aPDDL \u57df\u63a7\u5236\u77e5\u8bc6\uff08DCK\uff09\u53ef\u901a\u8fc7\u51cf\u5c11\u8ba1\u5212\u7684\u641c\u7d22\u7a7a\u95f4\u6765\u6709\u6548\u5730\u63d0\u9ad8\u8ba1\u5212\u751f\u6210\u7684\u6548\u7387\u3002\u7a0b\u5e8fDCK\u662fDCK\u7684\u4e00\u79cd\u5f15\u4eba\u6ce8\u76ee\u7684\u7c7b\u578b\uff0c\u5b83\u652f\u6301\u8ba1\u5212\u6846\u67b6\u7684\u81ea\u7136\u89c4\u8303\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5927\u591a\u6570\u6700\u65b0\u7684\u8ba1\u5212\u8005\u90fd\u6ca1\u6709\u5229\u7528\u7a0b\u5e8f\u6027DCK\u6240\u5fc5\u9700\u7684\u673a\u5236\u3002\u4e3a\u89e3\u51b3\u6b64\u7f3a\u9677\uff0c\u6211\u4eec\u5efa\u8bae\u5c06\u7a0b\u5e8fDCK\u76f4\u63a5\u7f16\u8bd1\u4e3aPDDL2.1\uff0c\u4ece\u800c\u4f7f\u4efb\u4f55\u4e0ePDDL2.1\u517c\u5bb9\u7684\u8ba1\u5212\u8005\u90fd\u53ef\u4ee5\u5229\u7528\u5b83\u3002\u672c\u6587\u7684\u8d21\u732e\u662f\u4e09\u65b9\u9762\u7684\u3002\u9996\u5148\uff0c\u6211\u4eec\u4e3a\u7c7b\u4f3cAlgol\u7684\u8fc7\u7a0b\u8bed\u8a00\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8ePDDL\u7684\u8bed\u4e49\uff0c\u8be5\u8bed\u8a00\u53ef\u7528\u4e8e\u5728\u8ba1\u5212\u4e2d\u6307\u5b9aDCK\u3002\u5176\u6b21\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u591a\u9879\u5f0f\u7b97\u6cd5\uff0c\u53ef\u5c06ADL\u8ba1\u5212\u5b9e\u4f8b\u548cDCK\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u7b49\u6548\u7684\u65e0\u7a0b\u5e8fPDDL2\u30021\u4e2a\u5b9e\u4f8b\uff0c\u5176\u8ba1\u5212\u4ec5\u662f\u90a3\u4e9b\u9075\u5b88\u8be5\u8ba1\u5212\u7684\u8ba1\u5212\u3002\u7b2c\u4e09\uff0c\u6211\u4eec\u8ba4\u4e3a\u751f\u6210\u7684\u8ba1\u5212\u5b9e\u4f8b\u975e\u5e38\u9002\u5408\u7531\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u8ba1\u5212\u8005\u89e3\u51b3\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e09\u79cd\u65b9\u6cd5\u6765\u4e3a\u6211\u4eec\u7684\u7ffb\u8bd1\u5b9e\u4f8b\u8ba1\u7b97\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u6709\u65f6\u8fd8\u5229\u7528\u6211\u4eec\u7ffb\u8bd1\u7684\u5c5e\u6027\u6765\u6307\u5bfc\u641c\u7d22\u3002\u5728\u5bf9\u719f\u6089\u7684PDDL\u8ba1\u5212\u57fa\u51c6\u8fdb\u884c\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\uff0c\u7a0b\u5e8fDCK\u7684\u62df\u8bae\u7f16\u8bd1\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u5668\u7684\u6027\u80fd\u3002\u6211\u4eec\u7684\u7ffb\u8bd1\u5668\u5df2\u5b9e\u73b0\u5e76\u53ef\u4ee5\u5728\u7f51\u7edc\u4e0a\u627e\u5230\u3002\u6211\u4eec\u63d0\u51fa\u4e86\u4e09\u79cd\u65b9\u6cd5\u6765\u4e3a\u6211\u4eec\u7684\u7ffb\u8bd1\u5b9e\u4f8b\u8ba1\u7b97\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u6709\u65f6\u8fd8\u5229\u7528\u6211\u4eec\u7ffb\u8bd1\u7684\u5c5e\u6027\u6765\u6307\u5bfc\u641c\u7d22\u3002\u5728\u5bf9\u719f\u6089\u7684PDDL\u8ba1\u5212\u57fa\u51c6\u8fdb\u884c\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\uff0c\u7a0b\u5e8fDCK\u7684\u62df\u8bae\u7f16\u8bd1\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u5668\u7684\u6027\u80fd\u3002\u6211\u4eec\u7684\u7ffb\u8bd1\u5668\u5df2\u5b9e\u73b0\u5e76\u53ef\u4ee5\u5728\u7f51\u7edc\u4e0a\u627e\u5230\u3002\u6211\u4eec\u63d0\u51fa\u4e86\u4e09\u79cd\u65b9\u6cd5\u6765\u4e3a\u6211\u4eec\u7684\u7ffb\u8bd1\u5b9e\u4f8b\u8ba1\u7b97\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u6709\u65f6\u8fd8\u5229\u7528\u6211\u4eec\u7ffb\u8bd1\u7684\u5c5e\u6027\u6765\u6307\u5bfc\u641c\u7d22\u3002\u5728\u5bf9\u719f\u6089\u7684PDDL\u8ba1\u5212\u57fa\u51c6\u8fdb\u884c\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\uff0c\u7a0b\u5e8fDCK\u7684\u62df\u8bae\u7f16\u8bd1\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u5668\u7684\u6027\u80fd\u3002\u6211\u4eec\u7684\u7ffb\u8bd1\u5668\u5df2\u5b9e\u73b0\u5e76\u53ef\u4ee5\u5728\u7f51\u7edc\u4e0a\u627e\u5230\u3002 aaai.org/Library/ICAPS/2007/icaps07-004.php https://arxiv.org/abs/1910.04999 \u5e7f\u4e49\u8ba1\u5212\u662f\u751f\u6210\u5bf9\u4e00\u7ec4\u8ba1\u5212\u95ee\u9898\u6709\u6548\u7684\u5355\u4e2a\u89e3\u51b3\u65b9\u6848\u7684\u4efb\u52a1\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u8fc7\u7a0b\u57df\u63a7\u5236\u77e5\u8bc6\uff08DCK\uff09\u6765\u8868\u793a\u548c\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u79cd< it\u5206\u800c\u6cbb\u4e4b>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u9996\u5148\u751f\u6210\u8fc7\u7a0bDCK\uff0c\u4ee5\u89e3\u51b3\u4ee3\u8868\u67d0\u4e9b\u5b50\u4efb\u52a1\u7684\u4e00\u7ec4\u8ba1\u5212\u95ee\u9898\uff0c\u7136\u540e\u5c06\u5176\u7f16\u8bd1\u4e3a\u603b\u4f53\u5e7f\u4e49\u8ba1\u5212\u95ee\u9898\u7684\u53ef\u8c03\u7528\u8fc7\u7a0b\u3002\u6211\u4eec\u7684\u8fc7\u7a0b\u8c03\u7528\u673a\u5236\u5141\u8bb8\u4efb\u610f\u7684\u5d4c\u5957\u548c\u9012\u5f52\u8fc7\u7a0b\u8c03\u7528\uff0c\u5e76\u5728PDDL\u4e2d\u5b9e\u73b0\uff0c\u4ee5\u4fbf\u73b0\u6210\u7684\u8ba1\u5212\u8005\u53ef\u4ee5\u8ba1\u7b97\u548c\u5229\u7528\u8fc7\u7a0bDCK\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u4f7f\u7528\u7a0b\u5e8f\u5316DCK\u4f5c\u4e3a\u53ef\u8c03\u7528\u8fc7\u7a0b\u7684\u73b0\u6210\u7684\u7ecf\u5178\u8ba1\u5212\u5668\u53ef\u4ee5\u5728\u5e7f\u6cdb\u7684\u9886\u57df\uff08\u5305\u62ec\u975e\u5e73\u51e1\u7684\u9886\u57df\uff09\u4e2d\u8ba1\u7b97\u5e7f\u4e49\u7684\u8ba1\u5212\uff0c https://bibbase.org/network/publication/segovia-jimenez-jonsson-generalizedplanningwithproceduraldomaincontrolknowledge","title":"CFG ~TransitionSystem ==&gt; ModelCheck"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/","text":"A Review of Machine Learning for Automated Planning \u5b66\u4e60\u8ba1\u5212\u884c\u52a8\u6a21\u578b Learning Planning Search Control Knowledge \u5b66\u4e60\u89c4\u5212\u56fe\u7684\u63a7\u5236\u7ed3\u6784\u77e5\u8bc6(\u7c7b\u6bd4tf\u8ba1\u7b97\u56fe) \u5b66\u4e60macro-actions \u5b9e\u73b0macro-action Generalized Policies \u5b9e\u73b0Generalized Policies Generalized Heuristics \u5b9e\u73b0**Generalized Heuristics** Decomposition Methods \u5b9e\u73b0**Decomposition Methods** Learning Planning Search Control in Domains with Uncertainty Reinforcement Learning Model-Based and Model-Free RL implementations Discussion Conclution https://www.icaps-conference.org/competitions/ IPC,\u6709\u5173Planning\u7684\u56fd\u9645\u89c4\u5212\u5927\u8d5b A Review of Machine Learning for Automated Planning \u00b6 \u81ea\u52a8\u5316\u8ba1\u5212\uff08AP\uff09\u662f\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u8d1f\u8d23\u7814\u7a76\u6267\u884c\u7ed9\u5b9a\u4efb\u52a1\u7684\u6709\u5e8f\u884c\u52a8\u96c6\u5408\u7684\u8ba1\u7b97\u7efc\u5408\u3002AP\u4e8e50\u5e74\u4ee3\u672b\u51fa\u73b0\uff0c\u662f\u5bf9\u72b6\u6001\u7a7a\u95f4\u641c\u7d22\uff0c\u5b9a\u7406\u8bc1\u660e\u548c\u63a7\u5236\u7406\u8bba\u8fdb\u884c\u7814\u7a76\u7684\u7ed3\u679c\uff0c\u65e8\u5728\u89e3\u51b3\u673a\u5668\u4eba\u6280\u672f\u548c\u81ea\u52a8\u6f14\u7ece\u7684\u5b9e\u9645\u9700\u6c42\u3002\u65af\u5766\u798f\u5b66\u9662\u7684\u95ee\u9898\u6c42\u89e3\u5668STRIPS\uff08Fikes\u548cNilsson\uff0c1971\u5e74\uff09\u53d1\u5c55\u6210\u4e3a\u63a7\u5236\u81ea\u4e3b\u673a\u5668\u4ebaShakey\u7684\u8ba1\u5212\u7ec4\u6210\u90e8\u5206\uff08Nilsson\uff0c1984\u5e74\uff09\uff0c\u5b8c\u7f8e\u5730\u8bf4\u660e\u4e86\u8fd9\u4e9b\u5f71\u54cd\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u4eceShakey\u65f6\u4ee3\u5230\u73b0\u5728\uff0cAP\u5df2\u7ecf\u4ea7\u751f\u4e86\u4ee3\u8868\u8ba1\u5212\u4efb\u52a1\u7684\u516c\u8ba4\u6807\u51c6\u4ee5\u53ca\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6709\u6548\u7b97\u6cd5\uff08Ghallab\u7b49\uff0c2004\uff09\u3002 \uff081\uff09\u5b66\u4e60\u8ba1\u5212**\u884c\u52a8\u6a21\u578b** \u81ea\u52a8\u8ba1\u5212\u5458\u9700\u8981\u5bf9\u8ba1\u5212\u4efb\u52a1\u8fdb\u884c\u51c6\u786e\u7684\u63cf\u8ff0\u3002\u8fd9\u4e9b\u63cf\u8ff0\u5305\u62ec\u5728\u73af\u5883\u4e2d\u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\u7684\u6a21\u578b\uff0c\u73af\u5883\u72b6\u6001\u7684\u89c4\u8303\u4ee5\u53ca\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u6267\u884c\u67d0\u4e2a\u52a8\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bb8\u591a\u7ed3\u679c\uff0c\u5bf9\u73af\u5883\u72b6\u6001\u7684\u4e86\u89e3\u53ef\u80fd\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u800c\u76ee\u6807\u53ef\u80fd\u6ca1\u6709\u5b8c\u5168\u5b9a\u4e49\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5b9e\u9645\u95ee\u9898\uff0c\u63d0\u524d\u751f\u6210\u8ba1\u5212\u4efb\u52a1\u7684\u7cbe\u786e\u5b9a\u4e49\u662f\u4e0d\u53ef\u884c\u7684\u3002 \uff082\uff09\u5b66\u4e60**\u641c\u7d22\u63a7\u5236**\u3002 \u2022\u73b0\u6210\u7684\u8ba1\u5212\u8005\u901a\u5e38\u65e0\u6cd5\u6269\u5927\u89c4\u6a21\u6216\u65e0\u6cd5\u63d0\u4f9b\u9ad8\u8d28\u91cf\u7684\u89e3\u51b3\u65b9\u6848\u3002\u901a\u5e38\uff0c\u5728AP\u4e2d\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\u7684\u8fc7\u7a0b\u662f*PSpace-complete*\u95ee\u9898\uff08Bylander\uff0c1991\uff0c1994\uff09\u3002\u5f53\u524d\u6700\u5148\u8fdb\u7684\u8ba1\u5212\u8005\u8bd5\u56fe\u901a\u8fc7\uff081\uff09\u63a5\u5730\u64cd\u4f5c\u548c\uff082\uff09\u5728\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u6307\u5bfc\u4e0b\u6267\u884c\u641c\u7d22\u8fc7\u7a0b\u6765\u901a\u8fc7\u53ef\u8fbe\u6027\u5206\u6790\u6765\u5e94\u5bf9\u8fd9\u79cd\u590d\u6742\u6027\u3002\u4f46\u662f\uff0c\u5f53\u5bf9\u8c61\u6570\u91cf\u5f88\u5927\u65f6\uff0c\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u904d\u5386\u751f\u6210\u7684\u5730\u9762\u641c\u7d22\u6811\u3002\u6b64\u5916\uff0c\u5728\u542f\u53d1\u5f0f\u4fe1\u606f\u77e5\u4e4b\u751a\u5c11\u7684\u60c5\u51b5\u4e0b\uff08\u4f8b\u5982\u67d0\u4e9b\u5b50\u76ee\u6807\u4e4b\u95f4\u5177\u6709\u5f3a\u5927\u4ea4\u4e92\u4f5c\u7528\u7684\u57df\uff09\uff0c\u8fd9\u79cd\u5206\u6790\u4f1a\u4ea7\u751f\u8bef\u5bfc\u3002\u7279\u5b9a\u9886\u57df\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u5df2\u88ab\u8bc1\u660e\u53ef\u4ee5\u6539\u5584\u89c4\u5212\u4eba\u5458\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\u7684\u53ef\u6269\u5c55\u6027\uff08Bacchus\u548cKabanza\uff0c2000\uff1b Nau\u7b49\uff0c2003\uff09\u3002\u5b9a\u4e49\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u901a\u5e38\u6bd4\u5b9a\u4e49\u8ba1\u5212\u4efb\u52a1\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u9700\u8981\u89e3\u51b3\u4efb\u52a1\uff0c\u8fd8\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\uff0c \u81ea\u4eceAP\u7814\u7a76\u5f00\u59cb\u4ee5\u6765\uff0c\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u4e00\u76f4\u662f\u514b\u670d\u8fd9\u4e24\u4e2a\u77e5\u8bc6\u83b7\u53d6\u95ee\u9898\u7684\u6709\u7528\u5de5\u5177\u3002\u53ef\u4ee5\u5728\uff08Zimmerman\u548cKambhampati\uff0c2003\uff09\u4e2d\u627e\u5230\u5bf9\u53d7\u76ca\u4e8eML\u7684AP\u7cfb\u7edf\u7684\u5168\u9762\u8c03\u67e5\u3002 \u76ee\u524d\uff0c\u4eba\u4eec\u5bf9\u4f7f\u7528ML\u6539\u8fdb\u8ba1\u5212\u6709\u4e86\u65b0\u7684\u5174\u8da3\u30022005\u5e74\u4e3e\u884c\u4e86\u9996\u5c4a\u56fd\u9645\u8ba1\u5212\u7cfb\u7edf\u77e5\u8bc6\u5de5\u7a0b\u7ade\u8d5b\uff08ICKEPS\uff09\uff0c\u5e76\u4e8e2008\u5e74\u5728**\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b\uff08IPC\uff09**\u4e2d\u5f00\u8bbe\u4e86\u4ee5Learning\u4e3a\u57fa\u7840\u7684\u8ba1\u5212\u4eba\u5458\u7ade\u8d5b\u4e4b\u8def\u3002\u6b64\u5916\uff0c\u5728\u56fd\u9645\u81ea\u52a8\u8ba1\u5212\u548c\u8c03\u5ea6\u4f1a\u8bae\uff08ICAPS\uff09\u5185\u5b9a\u671f\u4e3e\u529e\u4e86\u6709\u5173\u8ba1\u5212\u548c\u5b66\u4e60\u7684\u8bb2\u4e60\u73ed\u3002\u5373\u4f7f\u6b64\u5ba1\u67e5\u5305\u62ec\u7528\u4e8e\u8ba1\u5212\u548c\u5b66\u4e60\u7684\u7ecf\u5178\u7cfb\u7edf\uff0c\u4e3b\u8981\u8fd8\u662f\u7740\u91cd\u4e8e\u4ecb\u7ecdAP\u673a\u5668\u5b66\u4e60\u7684\u6700\u65b0\u65b9\u6cd5\u3002 AP\u7684\u76ee\u6807\u662f\u751f\u4ea7\u51fa\u5728\u9047\u5230\u4e0d\u540c\u7c7b\u578b\u95ee\u9898\u65f6\u53ef\u4ee5\u9009\u62e9\u7684\u6c42\u89e3\u5668\u3002AP\u751f\u6210\u6c42\u89e3\u5668\uff0c\u8fd9\u4e9b\u6c42\u89e3\u5668\u5229\u7528\u73af\u5883\u52a8\u529b\u5b66\u6a21\u578b\u6765\u63a8\u7406\u4e0d\u540c\u73af\u5883\u4e2d\u7684\u4e0d\u540c\u4efb\u52a1\u3002AP\u4efb\u52a1\u7531\u4e24\u4e2a\u5143\u7d20\u5b9a\u4e49\uff1a \u2022The domain, that consists of the set of states of the environmentStogether with the set of actionsAthat indicates the transitions between these states. \u2022The problem, that consists of the set of factss0\u2208Sthat indicates the initial state of the environmentand the set of factsG\u2286Sthat indicates the goals of the AP task. \u6b63\u786e\u5b9a\u4e49AP\u4efb\u52a1\u540e\uff0c\u770b\u8d77\u6765\u5e94\u8be5\u5f88\u5bb9\u6613\u901a\u8fc7\u5728\u72b6\u6001\u8f6c\u6362\u56fe\u4e2d\u641c\u7d22\u8def\u5f84\u6765\u89e3\u51b3\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u8fc7\u5145\u5206\u7814\u7a76\u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5728AP\u4e2d\uff0c\u6b64**state-transition graph**\u72b6\u6001\u8f6c\u6362\u56fe\u901a\u5e38\u4f1a\u53d8\u5f97\u5f88\u5927\uff0c\u4ee5\u81f3\u4e8e\u96be\u4ee5\u8fdb\u884c\u641c\u7d22\u3002\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684\u7b97\u6cd5\u7684\u590d\u6742\u6027\u968f\u72b6\u6001\u6570\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u72b6\u6001\u6570\u4e0e\u95ee\u9898\u53d8\u91cf\u7684\u6570\u76ee\uff08\u95ee\u9898\u7684\u5bf9\u8c61\u548c\u8c13\u8bcd\u7684\u6570\u76ee\uff09\u6210\u6307\u6570\u5173\u7cfb\u3002\u572890\u5e74\u4ee3\u4e2d\u671f5\u4e4b\u524d\uff0c\u8ba1\u5212\u8005\u65e0\u6cd5\u5728\u53ef\u63a5\u53d7\u7684\u65f6\u95f4\u5185\u5408\u6210\u5177\u6709\u5341\u591a\u4e2a\u52a8\u4f5c\u7684\u8ba1\u5212\u3002 \u572890\u5e74\u4ee3\u540e\u671f\uff0c\u7531\u4e8e reachability planning graph \uff08Blum\u548cFurst\uff0c1995\uff09\u53ef\u5230\u8fbe\u6027\u89c4\u5212\u56fe\u7684\u51fa\u73b0\uff0c\u89c4\u5212\u53d1\u751f\u4e86\u663e\u7740\u7684\u6269\u5927\u3002\u8fd9\u4e00\u53d1\u73b0\u5141\u8bb8\u5f00\u53d1\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8ba1\u7b97\u7684\u5f3a\u5927\u7684\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u7b97\u6cd5\uff08Hofmann\u548cNebel\uff0c2001a\uff1b Bonet\u548cGef ^ er\uff0c2001\uff09\u3002\u6700\u8fd1\u7684\u53d1\u73b0\uff0c\u4f8b\u5982\u641c\u7d22\u5730\u6807\u7684\u81ea\u52a8\u63d0\u53d6\uff08Porteous\u548cSebastia\uff0c2004\u5e74\uff09\u548c\u7b26\u53f7\u6a21\u5f0f\u6570\u636e\u5e93\u7684\u81ea\u52a8\u6784\u5efa\uff08Edelkamp\uff0c2002\u5e74\uff09\uff0c\u63d0\u9ad8\u4e86\u8ba1\u5212\u8005\uff0c\u901f\u5ea6\u548c\u8d28\u91cf\u6027\u80fd\u3002\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u7684\u89c4\u5212\u4eba\u5458\u901a\u5e38\u53ef\u4ee5\u5728\u51e0\u79d2\u949f\u5185\u5408\u6210\u4e00\u767e\u4e2a\u884c\u52a8\u8ba1\u5212\uff0c\u4f46\u662f\u53ef\u6269\u5c55\u6027\u9650\u5236\u4ecd\u7136\u5b58\u5728\u4e8eAP\u751a\u81f3\u662f\u7ecf\u8fc7\u6df1\u5165\u7814\u7a76\u7684\u9886\u57df\uff08\u4f8b\u5982*Blocksworld\uff09*. \u5f53\u5bf9\u8c61\u76f8\u5bf9\u8f83\u591a\u65f6\uff0c\u5bf9\u4e8e\u8ba1\u5212\u4eba\u5458\u800c\u8a00\u5c31\u53d8\u5f97\u5145\u6ee1\u6311\u6218\u3002 \u4e00\u65b9\u9762\uff0c\u5f53\u524d\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u7b97\u6cd5\u8ba1\u7b97\u8d77\u6765\u5f88\u6602\u8d35\u3002\u5728\u542f\u53d1\u5f0f\u65b9\u6cd5\u5177\u6709\u8bef\u5bfc\u6027\u7684\u9886\u57df\u4e2d\uff0c\u8fd9\u79cd\u6548\u679c\u66f4\u52a0\u660e\u663e\u3002\u5728\u8fd9\u4e9b\u9886\u57df\u4e2d\uff0c\u8ba1\u5212\u4eba\u5458\u82b1\u8d39\u5927\u90e8\u5206\u8ba1\u5212\u65f6\u95f4\u6765\u8ba1\u7b97\u65e0\u7528\u7684\u8282\u70b9\u8bc4\u4f30\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u9274\u4e8e\u8fd9\u4e9b\u4e0e\u9886\u57df\u65e0\u5173\u7684\u6280\u672f\u662f\u57fa\u4e8e\u884c\u52a8\u57fa\u7840\u7684\uff0c\u56e0\u6b64\u8ba1\u5212\u8005\u5f53\u95ee\u9898\u5bf9\u8c61**and/or**\u548c/\u6216\u64cd\u4f5c\u53c2\u6570\u7684\u6570\u91cf\u8fbe\u5230\u4e00\u5b9a\u5927\u5c0f\u65f6\uff0c\u641c\u7d22\u6811\u5c06\u53d8\u5f97\u68d8\u624b\u3002\u8fd9\u4e9b\u95ee\u9898\u4f7f\u4e0e\u9886\u57df\u65e0\u5173\u7684\u8ba1\u5212\u8005\u96be\u4ee5\u5e94\u7528\u4e8e\u5404\u79cd\u5b9e\u9645\u95ee\u9898\u3002 \u7269\u6d41\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e0e\u6570\u767e\u4e2a\u8f66\u8f86\u548c\u4f4d\u7f6e\u540c\u65f6\u5904\u7406\u6570\u767e\u4e2a\u5bf9\u8c61\uff08Florez\u7b49\uff0c2010\uff09\uff0c\u8fd9\u4f7f\u5f97\u5728\u6bcf\u4e2a\u641c\u7d22\u8282\u70b9\u4e2d\u8ba1\u7b97\u8bc4\u4f30\u529f\u80fd\u53d8\u5f97\u4e0d\u53ef\u884c\u3002 ML has a role to play in capturing useful control knowledge(\u6355\u83b7\u6709\u7528\u7684policy\u6240\u5bf9\u5e94\u63a7\u5236\u7ed3\u6784) skipped by the domain-independent techniques\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cML\u5728\u6355\u83b7\u7531\u72ec\u7acb\u4e8e\u57df\u7684\u6280\u672f\u8df3\u8fc7\u7684\u6709\u7528\u63a7\u5236\u77e5\u8bc6\u4e2d\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\u3002 *\u77e5\u8bc6\u8868\u793a\u3002*\u9996\u5148\uff0c\u5fc5\u987b\u5b9a\u4e49\u673a\u5668\u5b66\u4e60\u8fc7\u7a0b\u5c06\u5b66\u4e60\u7684\u77e5\u8bc6\u7c7b\u578b\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u4e86AP\u7684ML\u7684\u4e24\u4e2a\u4e0d\u540c\u76ee\u6807\uff0c\u5373\u4e3a\u8ba1\u5212\u8005\u63d0\u4f9b\u670d\u52a1\u7684\u52a8\u4f5c\u6a21\u578b\u548c\u6307\u5bfc\u8ba1\u5212\u8005\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\u7684\u641c\u7d22\u63a7\u5236\u3002\u5176\u6b21\uff0c\u5fc5\u987b\u51b3\u5b9a\u5982\u4f55\u8868\u793a\u6240\u5b66\u77e5\u8bc6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u505a\u51fa\u4e24\u4e2a\u4ee3\u8868\u51b3\u5b9a\uff1a \uff08a\uff09 *\u4ee3\u8868\u8bed\u8a00\u3002*\u7528\u4e8e\u5bf9\u76ee\u6807\u6982\u5ff5\u548c\u4f53\u9a8c\u8fdb\u884c\u7f16\u7801\u7684\u4e00\u79cd\u8868\u793a\u6cd5\u3002\u56e0\u4e3aAP\u4efb\u52a1\u901a\u5e38\u4ee5\u8c13\u8bcd\u903b\u8f91\u63cf\u8ff0\uff0c\u6240\u4ee5\u8fd9\u662f\u7528\u4e8e\u7f16\u7801AP\u6982\u5ff5\u7684\u6700\u5e38\u7528\u7684\u8868\u793a\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136\u7a0b\u5ea6\u8f83\u5c0f\uff0c\u4f46\u4e5f\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\uff0c\u4f8b\u5982\u63cf\u8ff0\u903b\u8f91\u6216\u65f6\u95f4\u903b\u8f91\u3002 \uff08b\uff09 *\u529f\u80fd\u7a7a\u95f4\u3002*ML\u7b97\u6cd5\u8003\u8651\u5b66\u4e60\u76ee\u6807\u6982\u5ff5\u7684\u4e00\u7ec4\u529f\u80fd\u3002\u5728AP\u4e2d\uff0c\u8fd9\u4e9b\u529f\u80fd\u901a\u5e38\u662f\u7528\u4e8e\u5b9a\u4e49AP\u4efb\u52a1\u7684\u52a8\u4f5c\uff0c\u72b6\u6001\u548c\u76ee\u6807\u7684\u57df\u8c13\u8bcd\u3002 *\u6c72\u53d6\u7ecf\u9a8c\u3002*\u5982\u4f55\u6536\u96c6\u5b66\u4e60\u793a\u4f8b\u3002\u5728AP\u7684\u60c5\u51b5\u4e0b\uff0c\u5b66\u4e60\u793a\u4f8b\u53ef\u4ee5\u7531\u8ba1\u5212\u7cfb\u7edf\u81ea\u4e3b\u6536\u96c6\uff0c\u4e5f\u53ef\u4ee5\u7531\u5916\u90e8\u4ee3\u7406\uff08\u4f8b\u5982\u4eba\u7c7b\u4e13\u5bb6\uff09\u63d0\u4f9b\u3002\u5b9e\u73b0\u4e00\u79cd\u81ea\u4e3b\u6536\u96c6\u5b66\u4e60\u793a\u4f8b\u7684\u673a\u5236\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\u3002\u4f7f\u7528\u8ba1\u5212\u8005\u6536\u96c6\u7ecf\u9a8c\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u8981\u786e\u4fdd\u4f7f\u7528\u7ed9\u5b9a\u7684\u57df\u6a21\u578b\u6765\u89e3\u51b3AP\u95ee\u9898\u7684\u53ef\u89e3\u51b3\u6027\u4e0e\u539f\u59cbAP\u4efb\u52a1\u4e00\u6837\u56f0\u96be\u3002\u968f\u673a\u63a2\u7d22\u7ecf\u5e38\u4f7fAP\u4efb\u52a1\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u91c7\u6837\u4e0d\u8db3\u3002AP\u52a8\u4f5c\u901a\u5e38\u4f1a\u63d0\u4f9b\u524d\u63d0\u6761\u4ef6\uff0c\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u53ea\u80fd\u7531\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u6765\u6ee1\u8db3\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u5076\u7136\u88ab\u9009\u62e9\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\u3002 *\u5b66\u4e60\u7b97\u6cd5\u3002*\u5982\u4f55\u4ece\u6536\u96c6\u7684\u7ecf\u9a8c\u4e2d\u6355\u83b7\u6a21\u5f0f\u3002\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u63d0\u53d6\u8fd9\u4e9b\u6a21\u5f0f\u3002\u5f52\u7eb3\u5b66\u4e60\u901a\u8fc7\u5bf9\u89c2\u5bdf\u5230\u7684\u4f8b\u5b50\u8fdb\u884c\u6982\u62ec\u6765\u6784\u5efa\u6a21\u5f0f\u3002\u5206\u6790\u5b66\u4e60\u4f7f\u7528\u5148\u9a8c\u77e5\u8bc6\u548c\u6f14\u7ece\u63a8\u7406\u6765\u6784\u5efa\u6a21\u5f0f\uff0c\u4ee5\u89e3\u91ca\u5b66\u4e60\u793a\u4f8b\u4e2d\u7684\u4fe1\u606f\u3002\u6df7\u5408\u5f52\u7eb3\u5206\u6790\u5b66\u4e60\u7ed3\u5408\u4e86\u4e24\u79cd\u5148\u524d\u7684\u5b66\u4e60\u6280\u672f\uff0c\u4ece\u800c\u83b7\u5f97\u4e86\u4e24\u8005\u7684\u597d\u5904\uff1a\u5f53\u53ef\u83b7\u5f97\u5148\u9a8c\u77e5\u8bc6\u65f6\uff0c\u6cdb\u5316\u7684\u51c6\u786e\u6027\u66f4\u9ad8\uff1b\u4f7f\u7528\u89c2\u6d4b\u5230\u7684\u5b66\u4e60\u6570\u636e\u6765\u514b\u670d\u5148\u9a8c\u77e5\u8bc6\u7684\u4e0d\u8db3\u3002\u5728\u8bbe\u8ba1\u7528\u4e8eAP\u5f52\u7eb3\u5b66\u4e60\u7684\u5b66\u4e60\u7b97\u6cd5\u65f6\uff0c\u6700\u5e38\u7528\u7684\u6280\u672f\u662f\uff0c\u4f46\u662f\u57fa\u4e8eAP\u4efb\u52a1\u7684domain\u5b9a\u4e49\uff0c\u4e5f\u4f7f\u7528\u5206\u6790\u548c\u6df7\u5408\u65b9\u6cd5\u6765\u6784\u5efa\u5bf9\u6536\u96c6\u7684\u5b66\u4e60\u793a\u4f8b\u7684\u89e3\u91ca\u3002 \u5f00\u53d1\u6240\u5b66\u77e5\u8bc6 \u3002\u81ea\u52a8\u7cfb\u7edf\u5982\u4f55\u4ece\u5b66\u5230\u7684\u77e5\u8bc6\u4e2d\u53d7\u76ca\u3002\u5bf9\u524d\u4e09\u4e2a\u95ee\u9898\u4e2d\u7684\u6bcf\u4e00\u4e2a\u505a\u51fa\u7684\u51b3\u5b9a\u90fd\u4f1a\u5f71\u54cd\u6240\u5b66\u77e5\u8bc6\u3002\u5982\u679c\u5b66\u5230\u7684\u77e5\u8bc6\u4e0d\u5b8c\u5584\uff0c\u5219\u5fc5\u987b\u901a\u8fc7\u4fdd\u8bc1\u53ef\u9760\u5229\u7528\u7684\u673a\u5236\u52a0\u4ee5\u5e94\u7528\u3002\u5bf9\u4e8eAP\uff0c\u77e5\u8bc6\u7684\u4e0d\u5b8c\u5584\u53ef\u80fd\u662f\u591a\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\uff1a\u67d0\u4e9b\u8868\u793a\u9009\u62e9\u53ef\u80fd\u4e0d\u8db3\u4ee5\u8868\u8fbe\u7ed9\u5b9a\u6761\u4ef6\u7684\u76f8\u5173\u77e5\u8bc6\u3002 \u57df; \u6536\u96c6\u5b66\u4e60\u7ecf\u9a8c\u7684\u7b56\u7565\u53ef\u80fd\u4f1a\u9057\u6f0f\u76ee\u6807\u77e5\u8bc6\u7684\u5927\u91cf\u793a\u4f8b\uff1b\u5426\u5219\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u6216\u8005\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u548c\u5185\u5b58\u8981\u6c42\u5185\u6355\u83b7\u76ee\u6807\u77e5\u8bc6\u7684\u6a21\u5f0f\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u4f7f\u7528\u6240\u5b66\u77e5\u8bc6\u53ef\u80fd\u4f1a\u7834\u574f\u8ba1\u5212\u8fc7\u7a0b\u3002\u89c4\u5212\u548c\u5b66\u4e60\u7cfb\u7edf\u9700\u8981\u914d\u5907\u5404\u79cd\u673a\u5236\uff0c\u4ee5\u4f7f\u5c3d\u7ba1\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u5b58\u5728\u7f3a\u9677\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5f3a\u5927\u5730\u8fdb\u884c\u89c4\u5212\u3002 \u5b66\u4e60\u8ba1\u5212\u884c\u52a8\u6a21\u578b \u00b6 AP\u7b97\u6cd5\u9700\u8981\u6b63\u786e\u548c\u5b8c\u6574\u7684\u52a8\u4f5c\u6a21\u578b\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u6a21\u578b\u6307\u793a\u4e86\u4e16\u754c\u7684\u72b6\u6001\u8f6c\u6362\u3002\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u8ba1\u5212\u884c\u52a8\u6a21\u578b\u65e2\u56f0\u96be\u53c8\u8017\u65f6\uff0c\u5373\u4f7f\u5bf9\u4e8eAP\u4e13\u5bb6\u800c\u8a00\u4e5f\u662f\u5982\u6b64\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528ML\uff0c\u8fd9\u6837\u4eba\u4eec\u5c31\u4e0d\u5fc5\u624b\u52a8\u7f16\u5199\u52a8\u4f5c\u6a21\u578b\u4e86\u3002\u672c\u8282\u56de\u987e\u4e86\u7528\u4e8e\u81ea\u52a8\u5b9a\u4e49AP\u52a8\u4f5c\u6a21\u578b\u7684ML\u6280\u672f\u3002\u7efc\u8ff0\u901a\u8fc7\u52a8\u4f5c\u6548\u679c\u7684\u968f\u673a\u6027\u548c\u73af\u5883\u72b6\u6001\u7684\u53ef\u89c2\u5bdf\u6027\u5bf9\u6280\u672f\u8fdb\u884c\u4e86\u5206\u7c7b\u3002 *\u52a8\u4f5c\u6548\u679c\u3002*\u5728\u8bb8\u591a\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u65e0\u6cd5\u5047\u8bbe\u786e\u5b9a\u6027\u7684\u4e16\u754c\u52a8\u6001\u3002\u5728\u89c4\u5212\u9886\u57df\u4e2d\uff0c\u5305\u62ec\u968f\u673a\u8fc7\u7a0b\uff08\u4f8b\u5982\u6295\u63b7\u786c\u5e01\u6216\u63b7\u9ab0\u5b50\uff09\u6216\u4e0d\u786e\u5b9a\u6027\u7ed3\u679c\uff08\u4f8b\u5982\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u673a\u5668\u4eba\u5bfc\u822a\uff09\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\u3002 *state\u53ef\u89c2\u5bdf\u6027\u3002*\u5728\u8bb8\u591a\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u5904\u7406\u5b8c\u6574\uff0c\u51c6\u786e\u7684\u73af\u5883\u72b6\u6001\u63cf\u8ff0\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\u3002\u7531\u4e8e\u4f20\u611f\u5668\u7684\u6545\u969c\u6216\u65e0\u6cd5\u5b8c\u5168\u611f\u77e5\u4e16\u754c\uff0c\u5f53\u524d\u72b6\u6001\u7684\u67d0\u4e9b\u90e8\u5206\u53ef\u80fd\u4f1a\u6df7\u4e71\u6216\u4e22\u5931\u3002\u4f8b\u5982\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u63a7\u5236\u673a\u5668\u4eba\u65f6\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u4e3aAP\u5efa\u6a21\u5b9a\u4e49\u4e86\u56db\u7c7b\uff1a \u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u64cd\u4f5c\uff1b \u5728\u90e8\u5206\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u52a8\u4f5c\uff1b \u5728\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c\uff1b \u53ef\u89c2\u5bdf\u90e8\u5206\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c\u3002 \u5c3d\u7ba1\u5b58\u5728\u5176\u4ed6\u5206\u7c7b\u7684\u53ef\u80fd\uff0c\u4f8b\u5982\u6839\u636e\u5b66\u4e60\u76ee\u6807\u8fdb\u884c\u5206\u7ec4\uff08\u524d\u63d0\u6761\u4ef6\uff0c\u6548\u679c\uff0c\u6548\u679c\u6761\u4ef6\uff0c\u7ed3\u679c\u7684\u6982\u7387...\uff09\uff0c\u4f46\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e00\u5206\u7c7b\u5bf9\u4e8e\u8ba1\u5212\u76ee\u7684\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u8303\u5f0f\u3002\u56fe\u901a\u8fc7\u7ed9\u51fa\u4e00\u4e9b\u793a\u4f8b\u5b9e\u73b0\u603b\u7ed3\u4e86\u8ba1\u5212\u884c\u52a8\u5efa\u6a21\u7cfb\u7edf\u7684\u5206\u7c7b\u3002\u8be5\u8868\u5e76\u4e0d\u662f\u8be6\u5c3d\u7684\u5217\u4e3e\uff0c\u56e0\u6b64\u8868\u4e2d\u7684\u7cfb\u7edf\u4ec5\u662f\u793a\u4f8b\u3002 \u6a21\u578b \u7279\u5f81 \u5b9e\u65bd\u65b9\u5f0f \u957f\u5904 \u5f31\u70b9 **\u786e\u5b9a\u6027**\u5f71\u54cd**\u5b8c\u6574\u7684**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u5b66\u4e60\u590d\u6742\u6027\u5728\u7406\u8bba\u4e0a\u662f\u6709\u9650\u7684 \u2022\u9ad8\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 \u2022\u5b8c\u6574\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b \u2022\u8868\u73b0\u529b\u5dee LIVE\uff08Shen and Simon\uff0c1989\uff09\uff0cEXPO\uff08Gil\uff0c1992\uff09\uff0cOBSERVER\uff08Wang\uff0c1994\uff09 **\u786e\u5b9a\u6027**\u5f71\u54cd**\u90e8\u5206**\u72b6\u6001\u7684\u53ef\u89c2\u5bdf\u6027 \u2022\u5b8c\u6574\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b \u2022\u8868\u73b0\u529b\u5dee \u2022\u4f4e\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 ARMS\uff08Yang\u7b49\uff0c2007\uff09\uff0c\uff08Amir and Chang\uff0c2008\uff09\uff0c\uff08Mourao\u7b49\uff0c2008\uff09\uff0cLOCM\uff08Cresswell\u7b49\uff0c2009\uff09 **\u6982\u7387**\u6548\u5e94**\u5b8c\u5168**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u4e30\u5bcc\u7684\u8868\u73b0\u529b\u2022\u9ad8\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 \u2022\u4e0d\u5b58\u5728\u7684\u5728\u7ebf\u5b66\u4e60 \uff08Oates and Cohen\uff0c1996\uff09\uff0cTRAIL\uff08Benson\uff0c1997\uff09\uff0cLOPE\uff08Garcla-Martlnez and Borrajo\uff0c2000\uff09\uff0c\uff08Pasula et al\u3002\uff0c2007\uff09\uff0cPELA\uff08Jimenez\u7b49\uff0c2008\uff09 **\u6982\u7387**\u6548\u5e94**\u90e8\u5206**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u5bcc\u6709\u8868\u73b0\u529b \u2022\u9ad8\u8ba1\u5212\u548c\u5b66\u4e60\u590d\u6742\u6027 \uff08Yoon\u548cKambhampati\uff0c2007\u5e74\uff09 **\u56fe**\u7528\u4e8e\u8ba1\u5212\u52a8\u4f5c\u5efa\u6a21\u7684\u7cfb\u7edf\u7684\u5b9e\u73b0\u3002 \u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u64cd\u4f5c(The learning task+mplementations)\uff1b \u91cd\u8981\uff01\u548c\u7a0b\u5e8f\u751f\u6210\u6709\u5173\uff0cQNP\u4e4b\u7c7b\u7684\u4e5f\u662f\u786e\u5b9a\u6027\u89c4\u5212\uff0c\u95ee\u9898\u5047\u8bbe\u6761\u4ef6\u5df2\u7ecf\u7ed9\u5b8c\u6574\uff0c\u4e0d\u9700\u8981sensor\u63a2\u6d4b\u4e0d\u65ad\u6269\u5145\uff0c\u4e0d\u9700\u8981\u63a2\u7d22\uff0c\u4e0d\u9700\u8981\u8d70\u4e00\u6b65\u770b\u4e00\u6b65\u3002\u5c31\u50cf\u56f4\u68cb\u4e00\u6837\u89c4\u5219\u5df2\u7ecf\u5b9a\u4e0b\u6765\u3002 \u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u4f8b\u4e2d\u5b66\u4e60\u62bd\u8c61\u901a\u7528\u65b9\u6cd5\uff0c\u91cd\u7528\u5df2\u6709\u7684\u4e0d\u65ad\u6269\u5145 \u5728\u90e8\u5206\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u52a8\u4f5c(The learning task+mplementations)\uff1b \u4e0d\u5173\u5fc3 \u5728\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c(The learning task+mplementations)\uff1b \u4e0d\u5173\u5fc3 \u53ef\u89c2\u5bdf\u90e8\u5206\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c(The learning task+mplementations) \u4e0d\u5173\u5fc3 Learning Planning Search Control Knowledge \u5b66\u4e60\u89c4\u5212\u56fe\u7684\u63a7\u5236\u7ed3\u6784\u77e5\u8bc6(\u7c7b\u6bd4tf\u8ba1\u7b97\u56fe) \u00b6 \u5b66\u4e60AP\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u7684\u56db\u79cd\u4e0d\u540c\u65b9\u6cd5\uff08\u5b8f\u52a8\u4f5c\uff0c\u5e7f\u4e49\u7b56\u7565\uff0c\u5e7f\u4e49\u542f\u53d1\u5f0f\u51fd\u6570\u548c\u5c42\u6b21\u5206\u89e3\u65b9\u6cd5\uff09 \u5b66\u4e60macro-actions \u00b6 1.\u77e5\u8bc6\u8868\u793a\u3002\u5b8f\u52a8\u4f5c\u88ab\u8868\u793a\u4e3a\u52a8\u4f5c\u6a21\u578b\u7684\u65b0\u52a8\u4f5c\uff0c\u56e0\u6b64\u5b83\u4eec\u9075\u5faaAP\u52a8\u4f5c\u7684*\u8c13\u8bcd\u903b\u8f91*\u8868\u793a\u3002\u52a8\u4f5c*ai* \u548c*aj* \u7ec4\u5408\u4e3a\u4e00\u4e2a\u5b8f\u52a8\u4f5c 2.\u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u662f\u89e3\u51b3\u65b9\u6848\u8ba1\u5212p\uff0c\u8be5\u8ba1\u5212\u8ba1\u5212\u7531\u5b9e\u4f8b\u5316\u64cd\u4f5c\u5e8f\u5217\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5316\u64cd\u4f5c\u5bf9\u5e94\u4e8e\u72b6\u6001\u8f6c\u6362\u5e8f\u5217,\u4ece\u800cI\u2192 G \u6a21\u578b \u7279\u5f81 \u5b9e\u65bd\u65b9\u5f0f \u957f\u5904 \u5f31\u70b9 Macro-actions \u2022\u5bf9\u9519\u8bef\u7684\u5b66\u4e60\u77e5\u8bc6\u6709\u8f83\u5f3a\u7684\u628a\u63e1 \u2022\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u8005 \u2022Utility problem REFLECT\uff08Dawson and Silklossly\uff0c1977\uff09\uff0cMORRIS\uff08Korf\uff0c1985\uff09\uff0cMacroFF\uff08Botea\u7b49\uff0c2005a\uff09\uff0cMarvin\uff08Coles and Smith\uff0c2007\uff09\uff0c\uff08Newton et al\u3002\uff0c2007\uff09 Generalized Policies \u2022\u6807\u51c6\u5173\u7cfb\u5206\u7c7b\u7b97\u6cd5 \u2022Engineering effort to\u6574\u5408\u4e0d\u540c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5 \uff08Minton\uff0c1988\u5e74\uff09\uff0cPRIAR\uff08Kambhampati and Hendler\uff0c1992\uff09\uff0cHAMLET\uff08Borrajo and Veloso\uff0c1997\uff09\uff0c\uff08Khardon\uff0c1999\uff09\uff0c\uff08Martin and Geffner\uff0c2000\uff09\uff0cDISTILL\uff08WinnerandVeloso\uff0c2003\uff09\uff0cOBTUSEWEDGE\uff08Yoon\u7b49\u4eba\uff0c2007\uff09\uff0cCABALA\uff08de la Rosa\u7b49\u4eba\uff0c2007\uff09\uff0cROLLER\uff08de la Rosa\u7b49\u4eba\uff0c2008\uff09 Generalized Heuristics \u2022\u6807\u51c6\u5173\u7cfb\u56de\u5f52\u7b97\u6cd5 \u2022\u8f7b\u677e\u96c6\u6210\u4e0d\u540c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5 \u2022\u53ef\u8bfb\u6027\u5dee \uff08Yoon\u7b49\uff0c2006\uff09\uff0c\uff08Xu\u7b49\uff0c2007\uff09 Decomposition Methods \u2022\u5bcc\u6709\u8868\u73b0\u529b \u2022\u65e0\u9700\u5168\u81ea\u52a8\u5b66\u4e60 CAMEL\uff08Ilghami\u7b49\uff0c2002\uff09\uff0cHDL\uff08Ilghami\u7b49\uff0c2006\uff09\uff0cHTNMAKER\uff08Hogg\u7b49\uff0c2008\uff09 Overview of AP systems that benefit from ML for the extraction of domain-specific search control 3.\u5b66\u4e60\u7b97\u6cd5\u3002\u5b66\u4e60\u5b8f\u52a8\u4f5c\u7684\u7b97\u6cd5\u4ece\u89e3\u51b3\u65b9\u6848\u4e2d\u63d0\u53d6\u52a8\u4f5c\u5b50\u5e8f\u5217\uff0c\u5e76\u5bf9\u5b83\u4eec\u7684\u51fa\u73b0\u8fdb\u884c\u8ba1\u6570\u4ee5\u6355\u83b7\u6700\u6709\u7528\u7684\u5b50\u5e8f\u5217\u3002\u901a\u5e38\uff0c\u63d0\u53d6\u52a8\u4f5c\u5b50\u5e8f\u5217\u7684\u8fc7\u7a0b\u5b9a\u4e49\u4e86\u4e24\u4e2a\u53c2\u6570\uff1a \u2022 *l\uff0c*\u5b8f\u52a8\u4f5c\u7684\u957f\u5ea6\u3002l\u7684\u6700\u5c0f\u503c\u662fl = 2\uff0c\u56e0\u4e3a\u5b8f\u52a8\u4f5c\u5e94\u81f3\u5c11\u5177\u6709\u4e24\u4e2a\u52a8\u4f5c\u3002l\u7684\u6700\u5927\u503c\u662f\u5b66\u4e60\u793a\u4f8b\u4e2d\u6700\u957f\u89e3\u51b3\u65b9\u6848\u7684\u957f\u5ea6\u3002\u5b9e\u9645\u4e0a\uff0c\u8be5\u503c\u5fc5\u987b\u8f83\u5c0f\u624d\u80fd\u6709\u7528\u3002 \u2022 *k\uff0c*\u53ef\u4ee5\u4ece\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u4e2d\u8df3\u8fc7\u7684\u64cd\u4f5c\u6570\u3002\u8be5\u53c2\u6570\u5141\u8bb8\u5b66\u4e60\u7cfb\u7edf\u63d0\u53d6\u5b8f\u89c2\u884c\u52a8\uff0c\u800c\u5b8f\u89c2\u884c\u52a8\u6700\u591a\u53ea\u80fd\u4ece\u89e3\u51b3\u65b9\u6848\u4e2d\u5ffd\u7565*k\u4e2a*\u4e0d\u76f8\u5173\u7684\u4e2d\u95f4\u884c\u52a8\u3002\u5b9e\u9645\u4e0a\uff0ck\u7684\u8f83\u5c0f\u503c\u4f1a\u51cf\u5c11\u5b8f\u52a8\u4f5c\u7684\u6570\u91cf\uff0c\u4f46\u662fk\u503c\u592a\u5c0f\u53ef\u80fd\u4f1a\u8df3\u8fc7\u6709\u7528\u7684\u5b8f\u52a8\u4f5c\u53d1\u751f\u3002 \u5bf9\u4e8e\u8fd9\u4e9b\u53c2\u6570\uff0c\u4ece\u5177\u6709*n\u4e2a*\u52a8\u4f5c\u7684\u8ba1\u5212\u4e2d\u63d0\u53d6\u957f\u5ea6\u4e3al\u7684\u5b8f\u52a8\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a\uff08W\u7b2c\u4e00\u4e2a\u56e0\u7d20\u662f\u5728al + k\u5927\u5c0f\u7684\u7a97\u53e3\u5185\u679a\u4e3e\u957f\u5ea6\u4e3al\u7684\u5b8f\u52a8\u4f5c\u7684\u6210\u672c\u3002\u7b2c\u4e8c\u4e2a\u56e0\u7d20\u662f\u6210\u672c\u6cbf\u7740\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u6ed1\u52a8\u7a97\u53e3\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u4ece\u90e8\u5206\u6709\u5e8f\u8ba1\u5212\u4e2d\u63d0\u53d6\u5b8f\u89c2\u4f5c\u7528\uff08Botea\u7b49\u4eba\uff0c2005b\uff09\u3002 4.\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002\u5b8f\u52a8\u4f5c\u53ef\u4ee5\u7531\u4efb\u4f55\u73b0\u6210\u7684\u8ba1\u5212\u8005\u7acb\u5373\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b8f\u52a8\u4f5c\u53ef\u4ee5\u4f5c\u4e3a\u6807\u51c6\u52a8\u4f5c\u5305\u542b\u5728\u52a8\u4f5c\u6a21\u578b\u4e2d\u3002\u5305\u542b\u5b8f\u52a8\u4f5c\u53ef\u80fd\u4f1a\u7834\u574f\u539f\u59cb\u52a8\u4f5c\u6a21\u578b\u7684\u65f6\u95f4\u548c\u8d28\u91cf\u6027\u80fd\u3002\u5f53\u5b8f\u52a8\u4f5c\u5bfc\u81f4\u641c\u7d22\u6df1\u5ea6\u51cf\u5c0f\u800c\u4e0d\u80fd\u5f25\u8865\u5206\u652f\u56e0\u5b50\u7684\u589e\u52a0\uff08the utility problem\uff09 \u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5 \u3002\u5f53\u524d\u7684\u5b66\u4e60\u5b8f\u52a8\u4f5c\u7684\u7cfb\u7edf\u901a\u8fc7\u5b9e\u9a8c\u8bc4\u4f30\u6b64\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u5b9a\u4e49\u4e86\u4e00\u7ec4\u4e0e\u76ee\u6807\u95ee\u9898\u7c7b\u4f3c\u7684AP\u95ee\u9898\uff0c\u5e76\u4e14\u5982\u679c\u5b66\u4e60\u5230\u7684\u5b8f\u89c2\u884c\u52a8\u53ef\u4ee5\u6539\u5584\u8ba1\u5212\u8005\u5728\u8fd9\u4e9b\u95ee\u9898\u4e0a\u7684\u8868\u73b0\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3a\u586b\u5145\u884c\u52a8\u6a21\u578b\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\u8fd9\u79cd\u89e3\u51b3 theutility problem\u95ee\u9898\u7684\u65b9\u6cd5 \u6700\u521d\u662f\u5728\u5b66\u4e60\u63a7\u5236\u89c4\u5219\u7684\u7cfb\u7edf\u4e2d\u5f15\u5165\u7684\uff08Minton\uff0c1988\uff09\u3002 \u5b9e\u73b0macro-action \u00b6 \u81ea\u4eceAP\u5f00\u59cb\u4ee5\u6765\uff0c\u5c31\u5e7f\u6cdb\u5730\u4f7f\u7528\u4e86\u5b8f\u52a8\u4f5c\u3002\u7b2c\u4e00\u4e2a\u5b8f\u89c2\u52a8\u4f5c\u5b66\u4e60\u7cfb\u7edf\u662fSTRIPS\uff08Fikes\u7b49\uff0c1972\uff09\u3002\u5b83\u4f7f\u7528\u4ee5\u524d\u7684\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u4f5c\u4e3a\u5b8f\u89c2\u884c\u52a8\u6765\u89e3\u51b3\u968f\u540e\u7684\u95ee\u9898\uff0c\u5e76\u76d1\u89c6\u73b0\u5b9e\u4e16\u754c\u4e2d\u8ba1\u5212\u7684\u6267\u884c\u60c5\u51b5\u3002\u540e\u6765\uff0cMORRIS\uff08Korf\uff0c1985\u5e74\uff09\u901a\u8fc7\u6dfb\u52a0\u8fc7\u6ee4\u8bd5\u63a2\u6cd5\u6765\u4fee\u526a\u751f\u6210\u7684\u5b8f\u52a8\u4f5c\u96c6\uff0c\u4ece\u800c\u6269\u5c55\u4e86\u8fd9\u79cd\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u533a\u5206\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u5b8f\u52a8\u4f5c\uff1a\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u9891\u7e41\u53d1\u751f\u7684S\u5b8f\u548c\u5728\u5b8f\u4e8b\u4ef6\u4e2d\u53d1\u751f\u4e0d\u591a\u7684T\u5b8f\uff0c\u4f46\u662f\u5728\u542f\u53d1\u5f0f\u7b97\u6cd5\u4e2d\u5efa\u7acb\u4e86\u4e00\u4e9b\u5f31\u70b9\u3002REFLECT\u7cfb\u7edf\uff08Dawson\u548cSilklossly\uff0c1977\uff09\u91c7\u7528\u4e86\u57fa\u4e8e\u57df\u9884\u5904\u7406\u751f\u6210\u5b8f\u52a8\u4f5c\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u6240\u6709\u5408\u7406\u7684\u52a8\u4f5c\u7ec4\u5408\u90fd\u88ab\u89c6\u4e3a\u5b8f\u52a8\u4f5c\uff0c\u5e76\u901a\u8fc7\u57fa\u672c\u4fee\u526a\u89c4\u5219\u8fdb\u884c\u4e86\u8fc7\u6ee4\u3002 \u4f20\u7edf\u4e0a\uff0c\u5b8f\u52a8\u4f5c\u7cfb\u7edf\u5728\u4f7f\u7528\u5b8f\u52a8\u4f5c\u4e4b\u524d\u5148\u4f7f\u7528\u79bb\u7ebf\u65b9\u6cd5\u6765\u751f\u6210\u548c\u8fc7\u6ee4\u5b8f\u52a8\u4f5c\uff0c\u4f46\u662f\u4e00\u4e9b\u7cfb\u7edf\u5df2\u5c1d\u8bd5\u4f7f\u7528ML\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u8fc7\u6ee4\u5b8f\u52a8\u4f5c\u3002\u5728\uff08McCluskey\uff0c1987\uff09\u4e2d\uff0c\u4f5c\u8005\u4f7f\u7528\u4e86\u5757\uff1b\u5728\uff08Garcia-Duran\u7b49\uff0c2006\uff09\u4e2d\uff0c\u4ed6\u4eec\u4f7f\u7528\u4e86\u63a7\u5236\u89c4\u5219\u6765\u51b3\u5b9a\u4f55\u65f6\u5e94\u7528\u5b8f\u52a8\u4f5c\u3002 \u6700\u8fd1\u7684\u5de5\u4f5c\u6210\u529f\u5730\u5c06\u5b8f\u4e0e\u6700\u65b0\u7684\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u5668\u96c6\u6210\u5728\u4e00\u8d77\u3002\u8fd9\u4e9b\u4f5c\u54c1\u5305\u62ecIPC-2004\u7684\u7ade\u4e89\u5bf9\u624bM acro FF\uff08Botea\u7b49\uff0c2005a\uff0c2007\uff09\u3002\u5728\u8fd9\u91cc\uff0c\u901a\u8fc7\u8bc6\u522b\u9759\u6001\u8fde\u63a5\u7684\u62bd\u8c61\u7ec4\u4ef6\u6765\u63d0\u53d6\u90e8\u5206\u6392\u5e8f\u7684\u5b8f\u52a8\u4f5c\uff0c\u7136\u540e\u4f7f\u7528\u79bb\u7ebf\u8fc7\u6ee4\u6280\u672f\u6765\u4fee\u526a\u5b8f\u52a8\u4f5c\u5217\u8868\u3002 Marvin \uff08Coles and Smith\uff0c2007\uff09\uff0c\u4e5f\u662fIPC-2004\u7684\u53c2\u4e0e\u8005\uff0c\u4f7f\u7528\u52a8\u4f5c\u5e8f\u5217\u8bb0\u5fc6\u6280\u672f\u5728\u7ebf\u751f\u6210\u5b8f\u52a8\u4f5c\uff0c\u4f7f\u8ba1\u5212\u8005\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u63a2\u7d22\u5373\u53ef\u4ece\u9ad8\u539f\u9003\u8131\u3002\u5411\u5bfc\uff08Newton et al\u3002\uff0c2007\uff09\u4f7f\u7528\u9057\u4f20\u7b97\u6cd5\u6765\u751f\u6210\u548c\u8fc7\u6ee4\u72ec\u7acb\u4e8e\u57fa\u7ebf\u8ba1\u5212\u7a0b\u5e8f\u7684\u5b8f\u52a8\u4f5c\u96c6\u5408\u3002\u7b97\u6cd5*\u6b63\u514b* \u6700\u8fd1\uff0c\u5206\u6790\u6cd5\u4e5f\u5df2\u7528\u4e8e\u5b66\u4e60\u542f\u53d1\u5f0f\u8ba1\u5212\u7a0b\u5e8fFF\u7684\u5b8f\u52a8\u4f5c\uff08Muise\u7b49\uff0c2009\uff09\u3002 Generalized Policies \u00b6 \u901a\u7528\u7b56\u7565\u662f\u5c06\u8ba1\u5212\u4e0a\u4e0b\u6587\uff08\u6709\u65f6\u4e5f\u79f0\u4e3a\u5143\u72b6\u6001\uff09\u6620\u5c04\u5230\u8981\u5728\u4e0a\u4e0b\u6587\u4e2d\u5e94\u7528\u7684\u9996\u9009\u64cd\u4f5c\u3002\u8ba1\u5212\u4e0a\u4e0b\u6587\u901a\u5e38\u5305\u62ec\u5f53\u524d\u72b6\u6001\u4ee5\u53ca\u76ee\u6807\u96c6\u3002\u901a\u8fc7\u9488\u5bf9\u6bcf\u4e2a\u8ba1\u5212\u4e0a\u4e0b\u6587\u91cd\u590d\u5e94\u7528\u9996\u9009\u64cd\u4f5c\uff0c\u51c6\u786e\u7684\u901a\u7528\u7b56\u7565\u53ef\u4ee5\u89e3\u51b3\u7ed9\u5b9a\u57df\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u641c\u7d22\u3002 \u00b6 \u5b66\u4e60\u901a\u7528\u7b56\u7565 \u2022 \u77e5\u8bc6\u8868\u793a\u3002\u8868\u793a\u8ba1\u5212\u4e0a\u4e0b\u6587\u65f6\u7684\u5173\u952e\u95ee\u9898\u662f\u9009\u62e9*\u8981\u7d20\u7a7a\u95f4\u3002 \u7279\u5f81\u7a7a\u95f4\u662f\u7528\u4e8e\u5b66\u4e60\u8fc7\u7a0b\u7684\u8c13\u8bcd\u96c6\u3002\u8be5\u96c6\u5408\u5fc5\u987b\u8db3\u591f\u901a\u7528\u4ee5\u6355\u83b7\u9886\u57df5\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5e76\u4e14\u5fc5\u987b\u8db3\u591f\u5177\u4f53\u4ee5\u4f7f\u5b66\u4e60\u53d8\u5f97\u5bb9\u6613\u3002\u5728AP\u4e2d\uff0c\u7279\u5f81\u7a7a\u95f4\u901a\u5e38\u7531\u8c13\u8bcd\u7ec4\u6210\uff0c\u7528\u4ee5\u63cf\u8ff0\u8ba1\u5212\u4efb\u52a1\u7684\u5f53\u524d\u72b6\u6001\u548c\u76ee\u6807\u3002\u6240\u8ff0PRODIGY\u7cfb\u7edf\u5bcc\u542b\u989d\u5916\u8c13\u8bcd\uff0c\u79f0\u4e3a\u7279\u5f81\u7a7a\u95f4*metapredicates \uff08\u660e\u987f\uff0c1988\uff09\u3002*\u5143\u8c13\u8bcd*\u6355\u83b7\u6709\u5173\u8ba1\u5212\u4e0a\u4e0b\u6587\u7684\u6709\u7528\u77e5\u8bc6\uff0c\u4f8b\u5982\u5f53\u524d\u9002\u7528\u7684\u8fd0\u8425\u5546\u6216\u4ecd\u9700\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u3002\u5b66\u4e60\u63a8\u5e7f\u653f\u7b56\u7684\u6700\u65b0\u4f5c\u54c1\u5df2\u7ecf\u6269\u5c55metapredicates\u7684\u5b9a\u4e49\uff0c\u5305\u62ec\u4ece\u542f\u53d1\u5f0f\u7684\u89c4\u5212\u7406\u5ff5\uff0c\u597d\u50cfmetapredicates\u7528\u4e8e\u6355\u6349*\u5bbd\u677e\u8ba1\u5212\u7684\u884c\u52a8*\u5728\u5f53\u524d\u72b6\u6001\uff08Yoon\u7b49\uff0c2008\uff09\u6216\u6355\u83b7\u7ec4\u7684*\u6709\u76ca\u884c\u52a8*\u4e2d\u5f53\u524d\u72b6\u6001\uff08de la Rosa\u7b49\uff0c2008\uff09\u3002 \u4ee3\u8868\u5e7f\u4e49\u7b56\u7565\u7684\u4e3b\u8981\u65b9\u6cd5\u6709\u4e24\u79cd\u3002 \u901a\u7528\u7b56\u7565\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u7ec4\u89c4\u5219\uff0c\u8fd9\u4e9b\u89c4\u5219\u6355\u83b7\u4e86\u8981\u5728\u7ed9\u5b9a\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u5e94\u7528\u7684\u9996\u9009\u64cd\u4f5c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e7f\u4e49\u7b56\u7565\u88ab\u6b63\u5f0f\u5b9a\u4e49\u4e3a\u5143\u7ec4n *= \uff0c*\u5176\u4e2d -L\u7528\u4e8e\u63cf\u8ff0\u4e0d\u540c\u8ba1\u5212\u73af\u5883\u7684\u4e00\u7ec4\u6587\u5b57\u3002\u5b83\u5b9a\u4e49\u4e86\u5b66\u4e60\u671f\u95f4\u4f7f\u7528\u7684\u7279\u5f81\u7a7a\u95f4\u3002 -R\u662f\u4e00\u7ec4\u89c4\u5219\uff0c\u5176\u4e2d\u89c4\u5219\u7684\u6807\u9898\u662f\u8981\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u800c\u4e3b\u4f53\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u63cf\u8ff0\u4e86\u5e94\u5728\u5176\u4e2d\u5e94\u7528\u64cd\u4f5c\u7684\u8ba1\u5212\u73af\u5883\u3002 \u901a\u7528\u7b56\u7565\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u7ec4\u5177\u6709\u8ddd\u79bb\u5ea6\u91cf\u7684\u68c0\u7d22\u5b9e\u4f8b\uff0c\u4ee5\u68c0\u7d22\u76f8\u4f3c\u5b9e\u4f8b\u3002\u8fd9\u662fCBR\uff08\u57fa\u4e8e\u6848\u4f8b\u7684\u63a8\u7406\uff09\u8ba1\u5212\u8005\u9075\u5faa\u7684\u8868\u793a\u65b9\u6cd5\u3002\u5373\u4f7f\u8be5\u8868\u793a\u80fd\u591f\u6355\u83b7\u66f4\u591a\u7279\u5b9a\u7684\u57df\u89c4\u5219\u6027\uff0c\u4e5f\u5177\u6709\u9700\u8981\u9002\u5f53\u7684\u76f8\u4f3c\u6027\u5ea6\u91cf\u7684\u4e25\u91cd\u7f3a\u9677\u3002\u5904\u7406\u5927\u91cf\u51b3\u7b56\u5b9e\u4f8b\u96c6\u5408\u65f6\uff0c\u6548\u7528\u4e5f\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u968f\u7740\u96c6\u5408\u53d8\u5927\uff0c\u641c\u7d22\u76f8\u4f3c\u5b9e\u4f8b\u6240\u9700\u7684\u65f6\u95f4\u4e5f\u4f1a\u589e\u52a0\u3002 \u5e7f\u4e49\u7b56\u7565\u7684\u7b2c\u4e8c\u79cd\u8868\u793a\u5f62\u5f0f\u88ab\u6b63\u5f0f\u5b9a\u4e49\u4e3a\u5143\u7ec4n = < L\uff0cI\uff0cD> \uff0c\u5176\u4e2d\uff1a -L\u7528\u4e8e\u63cf\u8ff0\u8ba1\u5212\u73af\u5883\u7684\u4e00\u7ec4\u6587\u5b57\u3002\u5b83\u5b9a\u4e49\u4e86*\u7279\u5f81\u7a7a\u95f4\u3002* -I\u662f\u4e00\u7ec4\u5143\u7ec4\uff0ci = \uff0c\u5176\u4e2dci\u662f\u5b9e\u4f8b\u5316\u7684\u8ba1\u5212\u4e0a\u4e0b\u6587\uff0cai\u662f\u5728*ci\u4e2d*\u5e94\u7528\u7684\u5b9e\u4f8b\u5316\u64cd\u4f5c*\u3002* -D is a distance metric that computes the distance between two different planning contexts. Givena new planning contextc, the policy decides the actionaito execute incby computing the closesttuple inIand returning its associated actionai, as shown in: \\(\\pi(c) = arg_{a_i} \\mathop{min}\\limits_{<c_i,a_i>\\in I} D(c,c_i)\\) \u4e24\u79cd\u65b9\u6cd5\u901a\u5e38\u4ee5\u8c13\u8bcd\u903b\u8f91\u8868\u793a\u8ba1\u5212\u4e0a\u4e0b\u6587\uff0c\u56e0\u4e3a\u8fd9\u662fAP\u4efb\u52a1\u7684\u81ea\u7136\u7f16\u7801\u3002\u8c13\u8bcd\u903b\u8f91\u63d0\u4f9b\u4e86\u5b9a\u4e49\u989d\u5916\u8c13\u8bcd\u7684\u673a\u5236\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u53ef\u4ee5\u4e30\u5bcc\u8ba1\u5212\u73af\u5883\u3002\u4f5c\u4e3a\u8fd9\u4e9b\u989d\u5916\u8c13\u8bcd\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u56fe14\u663e\u793a\u4e86 Blocksworld\u7684wellplaced\uff08Block\uff09\u8c13\u8bcd\u7684*\u5b9a\u4e49*\uff08Khardon\uff0c1999\uff09\u3002\u8fd9\u4e2a\u6982\u5ff5\u4e0d\u5728 Blocksworld \u57df\u7684\u539f\u59cb\u7f16\u7801\u4e2d\uff0c\u4f46\u662f\u5b9a\u4e49\u7d27\u51d1\u7684\u5e7f\u4e49\u7b56\u7565\u5f88\u6709\u7528. \u5728\u8c13\u8bcd\u903b\u8f91\u4e2d\u5b66\u4e60\u8fd9\u7c7b\u8c13\u8bcd\u4ecd\u7136\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u624b\u5de5\u7f16\u7801\u3002\u8ba1\u5212\u7cfb\u7edf\u4f7f\u7528\u4e86\u5176\u4ed6\u8868\u793a\u8bed\u8a00\uff0c\u53ef\u4ee5\u6210\u529f\u5730\u5b66\u4e60\u8fd9\u4e9b\u6982\u5ff5\u3002\u5df2\u7ecf\u663e\u793a\u51fa\u7528\u4e8e\u63cf\u8ff0\u5bf9\u8c61\u7c7b\u7684\u8bed\u8a00\u4e3a\u5b66\u4e60\u8fd9\u4e9b\u6982\u5ff5\u63d0\u4f9b\u4e86\u6709\u7528\u7684\u504f\u89c1\u3002\u8fd9\u4e9b\u8bed\u8a00\u5305\u62ec*\u6982\u5ff5\u8bed\u8a00*\uff08Martin\u548cGe ^ ner\uff0c2000\uff09\u548c \u5206\u7c7b\u8bed\u6cd5 \uff08Mcallester\u548cGivan\uff0c1989\uff09\uff0c\u5b83\u4eec\u63d0\u4f9b\u8fd0\u7b97\u7b26\u6765\u5b9a\u4e49\u8c13\u8bcd\u4e0a\u7684\u9012\u5f52\u6982\u5ff5\uff0c\u4f8b\u5982* \u8fd0\u7b97\u7b26\u3002*\u4f8b\u5982\uff0c\u5728*Blocksworld \u57df\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u8bed\u8a00\u4ee5\u975e\u5e38\u7d27\u51d1\u7684\u65b9\u5f0f\u5b9a\u4e49*\u653e\u7f6e*\u9002\u5f53\u7684\u5757\u7684\u6709\u7528\u6982\u5ff5. \u7528*\u65f6\u95f4\u903b\u8f91*\u8868\u8fbe\u8ba1\u5212\u77e5\u8bc6\u4e5f\u88ab\u8bc1\u660e\u662f\u6709\u7528\u7684\u3002TLPLAN\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\uff08Bacchus\u548cKabanza\uff0c2000\u5e74\uff09\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b66\u4e60*\u65f6\u95f4\u903b\u8f91\u4e2d\u7684*\u8ba1\u5212\u77e5\u8bc6\u5c1a\u672a\u89e3\u51b3\u3002 \u2022 \u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u662f\u9488\u5bf9\u57f9\u8bad\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5b66\u4e60\u793a\u4f8b\u5305\u62ec\u5143\u7ec4< ci \uff0c \u3007i + i> \uff0c\u5176\u4e2d*ci* \u662f\u8ba1\u5212\u4e0a\u4e0b\u6587\uff0c\u800c*\u3007i* + i \u662f\u5728\u4e0a\u4e0b\u6587*ci\u4e0a*\u5e94\u7528\u7684\u64cd\u4f5c*\u3002* \u2022 \u5b66\u4e60\u7b97\u6cd5\u3002\u5f53\u7b56\u7565\u7531\u4e00\u7ec4\u89c4\u5219\u7ec4\u6210\u65f6\uff0c\u5b66\u4e60\u4efb\u52a1\u4e0eILP\u4efb\u52a1\u975e\u5e38\u76f8\u5173\u3002\u5b66\u4e60\u901a\u7528\u7b56\u7565\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u5bf9\u57df\u4e2d\u6bcf\u4e2a\u52a8\u4f5c\u7684\u903b\u8f91\u7a0b\u5e8f\u7684\u5f52\u7eb3\u3002\u8be5\u903b\u8f91\u7a0b\u5e8f\u6355\u83b7\u4f55\u65f6\u5e94\u7528\u8be5\u52a8\u4f5c\u3002\u8be5\u903b\u8f91\u7a0b\u5e8f\u4e2d\u89c4\u5219\u7684\u5934\u7531\u52a8\u4f5c\u540d\u79f0\u548c\u53c2\u6570\u7ec4\u6210\uff0c\u4e3b\u4f53\u662f\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u6700\u80fd\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b\u7684\u6587\u5b57\u7684\u5b50\u96c6\u3002\u53ef\u4ee5\u901a\u8fc7\u5b66\u4e60\u793a\u4f8b\u7684\u8986\u76d6\u8303\u56f4\u5c06\u8fd9\u79cd\u5b66\u4e60\u4efb\u52a1\u5b9e\u73b0\u4e3a\u542f\u53d1\u5f0f\u641c\u7d22\u3002\u5f53\u7b56\u7565\u7531\u4e00\u7ec4\u76f8\u5173\u5b9e\u4f8b\u7ec4\u6210\u65f6\uff0c\u5b66\u4e60\u4efb\u52a1\u5c06\u5b58\u50a8\u548c\u7ba1\u7406\u8be5\u7ec4\u5b9e\u4f8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b66\u4e60\u5927\u91cf\u5b9e\u4f8b\u5b9e\u9645\u4e0a\u53ef\u80fd\u9002\u5f97\u5176\u53cd\uff0c\u56e0\u4e3a\u96be\u4ee5\u5b58\u50a8\u548c\u7ba1\u7406\u5b83\u4eec\uff0c\u5e76\u4e14\u7531\u4e8e\u5728\u786e\u5b9a\u4f7f\u7528\u54ea\u4e2a\u5b9e\u4f8b\u6765\u89e3\u51b3\u7279\u5b9a\u95ee\u9898\u65b9\u9762\u6d89\u53ca\u56f0\u96be\u3002\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u5bf9\u5b58\u50a8\u7684\u5b9e\u4f8b\u8fdb\u884c\u540e\u5904\u7406\uff0c\u4ee5\u4ec5\u7ba1\u7406\u6700\u76f8\u5173\u7684\u5b9e\u4f8b\u3002\u4f8b\u5982REPLICA\uff08Garcia-Duran\u7b49\uff0cress\uff09\u4ece\u5b9e\u4f8b\u4e2d\u63d0\u53d6\u4e00\u7ec4\u539f\u578b\uff0c\u6216DISTILL\uff08Winner\u548cVeloso\uff0c2003\uff09\uff0c\u901a\u8fc7\u5f52\u7eb3\u548c\u5408\u5e76\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u6765\u6784\u5efa\u9ad8\u5ea6\u538b\u7f29\u7684\u5b9e\u4f8b\u5e93\u3002 \u2022\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002\u901a\u7528\u7b56\u7565\u53ef\u7528\u4e8e\u76f4\u63a5\u9009\u62e9\u8981\u5e94\u7528\u4e8e\u7ed9\u5b9a\u8ba1\u5212\u4e0a\u4e0b\u6587\u7684\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u5f53\u5b66\u5230\u7684\u901a\u7528\u7b56\u7565\u4e0d\u5b8c\u5584\u65f6\uff0c\u5176\u5e94\u7528\u53ef\u80fd\u65e0\u6cd5\u89e3\u51b3\u6b64\u7c7b\u65e9\u671f\u7cfb\u7edf\u4e2d\u7684\u95ee\u9898\u3002\u8fd9\u4e9b\u7cfb\u7edf\u5b66\u4e60\u4e86\u63a7\u5236\u89c4\u5219\uff0c\u4ee5\u6307\u5bfc\u63a2\u7d22\u641c\u7d22\u6811\u7684\u8ba1\u5212\u3002\u63a7\u5236\u89c4\u5219\u662fIF-THEN\u89c4\u5219\uff0c\u5b83\u5efa\u8bae\u5728\u6811\u63a2\u7d22\u671f\u95f4\u8fdb\u884c\u8282\u70b9\u9009\u62e9\uff0c\u4fee\u526a\u6216\u6392\u5e8f\u3002\u4e00\u7ec4\u63a7\u5236\u89c4\u5219\u53ef\u4ee5\u770b\u4f5c\u662f*\u90e8\u5206*\u901a\u7528\u653f\u7b56\uff0c\u56e0\u4e3a\u5b83\u4eec\u672a\u9488\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u89c4\u5212\u73af\u5883\u63d0\u4f9b\u884c\u52a8\u5efa\u8bae\u3002\u5f53\u7ed9\u5b9a\u7684\u63a7\u5236\u89c4\u5219\u5efa\u8bae\u4e0d\u5b8c\u5584\u65f6\uff0c\u901a\u5e38\u4f1a\u963b\u6b62\u8ba1\u5212\u8005\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002\u4e3a\u4e86\u66f4\u6709\u6548\u5730\u5229\u7528\u901a\u7528\u7b56\u7565\uff0c\u6700\u8fd1\u7684\u5de5\u4f5c\u5df2\u5c06\u5b66\u4e60\u5230\u7684\u7b56\u7565\u7528\u4f5cBeam-Search\u6216Limited Discrepency Search\u7b49\u641c\u7d22\u7b97\u6cd5\u4e2d\u7684\u8bc4\u4f30\u529f\u80fd\u3002\u8fd9\u4e9b\u641c\u7d22\u7b97\u6cd5\u5141\u8bb8\u8ba1\u5212\u5c06\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u63d0\u4f9b\u7684\u6307\u5bfc\u4e0e\u5176\u4ed6\u5efa\u8bae\u6765\u6e90\uff08\u4f8b\u5982\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff09\u76f8\u7ed3\u5408\u3002 \u5b9e\u73b0Generalized Policies \u00b6 \u6709\u4e00\u7ec4\u7cfb\u7edf\u53ef\u4ee5\u5f52\u7eb3\u5b66\u4e60\u63a7\u5236\u89c4\u5219\u3002\u5176\u4e2d\u5f52\u7eb3\u5b66\u4e60\u7f16\u7a0b\uff08ILP\uff09\u662f\u6700\u6d41\u884c\u7684\u5b66\u4e60\u6280\u672f\u3002G rasshopper \u7cfb\u7edf\uff08Leckie\u548cZukerman\uff0c1991\uff09\u4f7f\u7528F \u6cb9\uff08Quinlan\u548cCameron-Jones\uff0c1995\uff09\u6765\u5b66\u4e60\u6307\u5bfc\u795e\u7ae5\u8ba1\u5212\u8005\u7684\u63a7\u5236\u89c4\u5219 \u3002\u4e5f\u6709\u5206\u6790\u7cfb\u7edf\uff1a\u795e\u7ae5/ EBL \u6a21\u5757\uff08\u660e\u987f\uff0c1988\u5e74\uff09\u4e86\u89e3\u5230\u641c\u7d22\u63a7\u5236\u89c4\u5219\u7684PRODIGY \u4ece\u6b63\u786e\u548c\u9519\u8bef\u51b3\u7b56\u7684\u51e0\u4e2a\u4f8b\u5b50\u89c4\u5212\u5e08\u3002\u5c0f\u53f7tatic\uff08Etzioni\uff0c1993\uff09\u83b7\u5f97\u63a7\u5236\u89c4\u5219\u800c\u6ca1\u6709\u89e3\u51b3\u4efb\u4f55\u95ee\u9898\u3002\u5b83\u4ec5\u4f7f\u7528\u57fa\u4e8e\u89e3\u91ca\u7684\u5b66\u4e60\uff08EBL\uff09\u6765\u5206\u6790\u52a8\u4f5c\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u4e3a\u4e86\u514b\u670d\u7eaf\u5f52\u7eb3\u6cd5\u548c\u7eaf\u5206\u6790\u6cd5\u7684\u5c40\u9650\u6027\uff0c\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u5c06\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\uff1a\u57fa\u4e8e\u8be5\u539f\u7406\u7684\u5f00\u62d3\u6027\u7cfb\u7edf\u662fLEX-2\uff08Mitchell\u7b49\uff0c1982\uff09\u548cM eta -L ex \uff08Keller\uff0c1987\uff09\u3002 \uff09\u3002A x A-EBL\uff08Cohen\uff0c1990\uff09\u7ed3\u5408\u4e86EBL\u548c\u5f52\u7eb3\u6cd5\u3002\u5b83\u9996\u5148\u4f7f\u7528EBG\u5b66\u4e60\u63a7\u5236\u89c4\u5219\uff0c\u7136\u540e\u901a\u8fc7\u5b66\u4e60\u793a\u4f8b\u5bf9\u5176\u8fdb\u884c\u5b8c\u5584\u3002D olphin \uff08Zelle and Mooney\uff0c1993; Estlin and Mooney\uff0c1996\uff09\u662fA x A-EBL \u7684\u6269\u5c55\uff0c\u5b83\u4f7f\u7528F \u6cb9\u4f5c\u4e3a\u5f52\u7eb3\u5b66\u4e60\u6a21\u5757\u3002H amlet \uff08Borrajo\u548cVeloso\uff0c1997\uff09\u7cfb\u7edf\u5c06\u6f14\u7ece\u548c\u5f52\u7eb3\u76f8\u7ed3\u5408\u3002\u9996\u5148\uff0c\u5b83\u4f7f\u7528EBL\u5b66\u4e60\u901a\u5e38\u8fc7\u4e8e\u5177\u4f53\u6216\u7b3c\u7edf\u7684\u63a7\u5236\u89c4\u5219\uff0c\u7136\u540e\u4f7f\u7528\u5f52\u7eb3\u6cd5\u5bf9\u89c4\u5219\u8fdb\u884c\u6cdb\u5316\u548c\u4e13\u95e8\u5316\u3002E vo CK\uff08Aler et al\u3002\uff0c2002\uff09\u4f7f\u7528*\u9057\u4f20\u7f16\u7a0b*\u6765\u53d1\u5c55H amlet \u5b66\u4e60\u7684\u89c4\u5219\u5e76\u4ea7\u751f\u66f4\u6709\u6548\u7684\u641c\u7d22\u63a7\u5236\u3002 \u5b66\u4e60\u5e7f\u4e49\u7b56\u7565\u7684\u95ee\u9898\u6700\u65e9\u7531Roni Khardon\u7814\u7a76\u3002Khardon\u7684L2A CT \uff08Khardon\uff0c1999\u5e74\uff09\u901a\u8fc7\u5c06\u51b3\u7b56\u5217\u8868\u5b66\u4e60\u7b97\u6cd5\uff08Rivest\uff0c1987\u5e74\uff09\u6269\u5c55\u5230\u5173\u7cfb\u73af\u5883\uff0c\u4e3a*Blocksworld* \u548c*Logistics* \u9886\u57df\u5f15\u5165\u4e86\u901a\u7528\u7b56\u7565\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5b58\u5728\u4e24\u4e2a\u91cd\u8981\u7684\u5f31\u70b9\uff1a\uff081 \uff09\u5b83\u4f9d\u9760\u4eba\u7c7b\u5b9a\u4e49\u7684\u80cc\u666f\u77e5\u8bc6\u6765\u8868\u8fbe\u5173\u952e\u7279\u5f81\u8f6f\u57df\uff0c\u4f8b\u5982Blocksworld\u4e0a\u7684\u8c13\u8bcd\uff08block1\uff0cblock2\uff09\u6216i ^ place\uff08block\uff09\uff0c\u4ee5\u53ca\uff082\uff09\u5b66\u4e60\u7684\u7b56\u7565\u6ca1\u6709\u5f53\u95ee\u9898\u7684\u89c4\u6a21\u589e\u52a0\u65f6\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u6982\u62ec\u3002Martin\u548cGeffner\u89e3\u51b3\u4e86*Blocksworld\u4e2d\u7684*\u8fd9\u4e9b\u9650\u5236\u901a\u8fc7\u5c06\u5e7f\u4e49\u7b56\u7565\u7684\u8868\u793a\u8bed\u8a00\u4ece\u8c13\u8bcd\u903b\u8f91\u66f4\u6539\u4e3a*\u6982\u5ff5\u8bed\u8a00*\u6765\u5b66\u4e60\u9012\u5f52\u6982\u5ff5\uff08Martin and Gef ^ er\uff0c2000\uff09\u3002 \u6700\u8fd1\uff0c\u5e7f\u4e49\u7b56\u7565\u5b66\u4e60\u7684\u8303\u56f4\u5df2\u5728\u591a\u4e2a\u9886\u57df\u4e2d\u589e\u52a0\uff0c\u4ece\u800c\u4f7f\u8be5\u65b9\u6cd5\u53ef\u4e0e\u6700\u65b0\u7684\u8ba1\u5212\u8005\u7ade\u4e89\u3002\u8fd9\u4e00\u6210\u5c31\u5f52\u529f\u4e8e\u4e24\u4e2a\u65b0\u601d\u60f3\uff1a\uff081\uff09\u7b56\u7565\u8868\u793a\u8bed\u8a00\u4e2d\u5305\u542b\u4e86\u989d\u5916\u7684\u8c13\u8bcd\uff0c\u53ef\u4ee5\u6355\u83b7\u66f4\u6709\u6548\u7684\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\uff1b\uff082 \uff09\u5b66\u4e60\u7b56\u7565\u4e0d\u662f\u8d2a\u5a6a\u5730\u5e94\u7528\uff0c\u800c\u662f\u5728\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5\u7684\u6846\u67b6\u5185\u5e94\u7528\u3002\u4e00\u4e2a\u7a81\u51fa\u7684\u4f8b\u5b50\u662fO btuse W \u8fb9\u7f18\u7cfb\u7edf\uff08Yoon\u7b49\uff0c2007\uff09\uff0c\u5b83\u662fIPC-2008\u5b66\u4e60\u8f68\u8ff9\u7684\u6700\u4f73\u5b66\u4e60\u8005\u3002\u8be5\u7cfb\u7edf\u901a\u8fc7\u5bbd\u677e\u7684\u8ba1\u5212\u56fe\u4e30\u5bcc\u4e86\u5f53\u524d\u72b6\u6001\u7684\u77e5\u8bc6\uff0c\u5e76\u4f7f\u7528\u5b66\u4e60\u5230\u7684\u7b56\u7565\u5728\u201c\u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d\u4e2d\u751f\u6210\u8d85\u524d\u72b6\u6001\u3002[R \u5965\u52d2\uff08de la Rosa\u7b49\uff0c2008\uff09\u5c06\u5b66\u4e60\u5e7f\u4e49\u7b56\u7565\u7684\u95ee\u9898\u5b9a\u4e49\u4e3a\u4e24\u6b65\u6807\u51c6\u5206\u7c7b\u8fc7\u7a0b\u3002\u7b2c\u4e00\u6b65\uff0c\u5206\u7c7b\u5668\u6355\u83b7\u8981\u5728\u4e0d\u540c\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u5e94\u7528\u7684\u9996\u9009\u8fd0\u7b97\u7b26\u3002\u5728\u7b2c\u4e8c\u4e2a\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5206\u7c7b\u5668\u5728\u7ed9\u5b9a\u57df5\u7684\u4e0d\u540c\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u6355\u83b7\u6bcf\u4e2a\u64cd\u4f5c\u5458\u7684\u9996\u9009\u7ed1\u5b9a\u3002\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u7531\u4ece\u7ed9\u5b9a\u72b6\u6001\u7684\u5bbd\u677e\u8ba1\u5212\u56fe\u4e2d\u63d0\u53d6\u7684\u6709\u7528\u64cd\u4f5c\u96c6\uff0c\u4ecd\u672a\u5b9e\u73b0\u7684\u76ee\u6807\u4ee5\u53ca\u8ba1\u5212\u4efb\u52a15\u7684\u9759\u6001\u8c13\u8bcd\u5b9a\u4e49\u3002 \u8fd8\u5b58\u5728\u901a\u8fc7\u89c4\u5212\u5b9e\u4f8b\u7684\u96c6\u5408\u8868\u793a\u5e7f\u4e49\u7b56\u7565\u7684\u7cfb\u7edf\uff0c\u5982AP\u7684CBR\u7cfb\u7edf\u3002\u57fa\u4e8e\u5b9e\u4f8b\u7684AP\u7cfb\u7edf\u901a\u5e38\u5728\u5404\u79cd\u57df\u4e2d\u90fd\u4e0d\u5177\u6709\u7ade\u4e89\u529b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b58\u5728\u5fc5\u987b\u5b9a\u4e49\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u57df\u4e2d\u90fd\u80fd\u5f88\u597d\u5de5\u4f5c\u7684\u9002\u5f53\u76f8\u4f3c\u6027\u5ea6\u91cf\u7684\u7f3a\u70b9\u3002PRIAR\u7cfb\u7edf\uff08Kambhampati\u548cHendler\uff0c1992\uff09\u5efa\u8bae\u5c06\u8ba1\u5212\u7684\u4fee\u6539\u4e0e\u751f\u6210\u8ba1\u5212\u7ed3\u5408\u8d77\u6765\u3002OBTUSEWEDGE/ ANALOGY\uff08Veloso and Carbonell\uff0c1993\uff09\u4ecb\u7ecd\u4e86\u5c06\u63a8\u5bfc\u7c7b\u6bd4\u5e94\u7528\u4e8e\u89c4\u5212\u3002\u5b83\u5b58\u50a8\u4e86\u8ba1\u5212\u8ddf\u8e2a\uff0c\u4ee5\u907f\u514d\u5728\u5c06\u6765\u89e3\u51b3\u95ee\u9898\u65f6\u51fa\u73b0\u6545\u969c\u8def\u5f84\u3002\u8981\u68c0\u7d22\u7c7b\u4f3c\u7684\u8ba1\u5212\u75d5\u8ff9\uff0cOBTUSEWEDGE/ ANALOGY \u4f7f\u7528\u6700\u5c0f\u524d\u63d0\u6761\u4ef6\u4e3a\u5b83\u4eec\u5efa\u7acb\u7d22\u5f15\uff0c\u4ee5\u5b9e\u73b0\u4e00\u7ec4\u76ee\u6807\u3002\u57fa\u4e8e\u6848\u4f8b\u7684\u8ba1\u5212\u7cfb\u7edfPARIS\uff08Bergmann\u548cWilke\uff0c1996\uff09\u63d0\u51fa\u5f15\u5165\u62bd\u8c61\u6280\u672f\u6765\u5c06\u6848\u4f8b\u7ec4\u7ec7\u8d77\u6765\u5b58\u50a8\u5728\u5206\u5c42\u5b58\u50a8\u5668\u4e2d\u3002\u8be5\u6280\u672f\u63d0\u9ad8\u4e86\u6848\u4ef6\u4fee\u6539\u7684\u7075\u6d3b\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u5355\u4e2a\u6848\u4ef6\u7684\u8986\u76d6\u8303\u56f4\u3002DISTILL\uff08Winner\u548cVeloso\uff0c2003\u5e74\uff09\u5c06\u793a\u4f8b\u8ba1\u5212\u5408\u5e76\u5230\u79f0\u4e3a*dsPlanner* \u7684\u7ed3\u6784\u4e2d*\u3002 DISTILL\u5c06\u8ba1\u5212\u8f6c\u6362\u4e3a\u53c2\u6570\u5316\u7684if\u8bed\u53e5\uff0c\u5e76\u641c\u7d22\u5df2\u7ecf\u5b58\u50a8\u5728*dsPlanner \u4e2d\u7684\u6bcf\u4e2aif\u8bed\u53e5\u4ee5\u5408\u5e76\u5b83\u4eec\u3002\u5982\u679c\u5b66\u5230\u7684*dsPlanner* \u662f\u51c6\u786e\u7684\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u6765\u89e3\u51b3\u57df\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u641c\u7d22\u3002\u5361\u5df4\u62c9\uff08\u5fb7\u62c9\u7f57\u838e\u7b49\u4eba\uff0c2007\uff09\u4f7f\u7528\u542f\u53d1\u5f0f\u8ba1\u5212\u4e2d\u7684\u8ba1\u5212\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\uff08\u79f0\u4e3a\u7c7b\u578b\u5e8f\u5217\uff09\u5bf9\u8282\u70b9\u8fdb\u884c\u6392\u5e8f\u3002\u53e6\u4e00\u4f4d\u57fa\u4e8e\u5b9e\u4f8b\u7684\u5b66\u4e60\u8005REPLICA \u4f7f\u7528\u53d7\u5173\u7cfb\u6570\u636e\u6316\u6398\u4e2d\u4f7f\u7528\u7684\u5ea6\u91cf\u542f\u53d1\u7684\u5173\u7cfb\u8ddd\u79bb\uff0c\u5b9e\u73b0\u4e86\u201c \u6700\u8fd1\u539f\u578b\u5b66\u4e60\u201d \uff08Garcia-Duran\u7b49\u4eba\uff0cress\uff09\u3002OAKPlan\uff08Serina\uff0c2010\u5e74\uff09\u4f7f\u7528\u7d27\u51d1\u7684\u56fe\u5f62\u7ed3\u6784\u6765\u7f16\u7801\u89c4\u5212\u95ee\u9898\u3002\u8be5\u7ed3\u6784\u63d0\u4f9b\u4e86\u89c4\u5212\u95ee\u9898\u62d3\u6251\u7684\u8be6\u7ec6\u63cf\u8ff0\uff0c\u5e76\u5141\u8bb8\u5b66\u4e60\u8005\u57fa\u4e8e\u5185\u6838\u529f\u80fd\u5b9a\u4e49\u9009\u62e9\u6027\u68c0\u7d22\u8fc7\u7a0b\u3002 \u5728\uff08de la Rosa\u7b49\u4eba\uff0c2009\uff09\u4e2d\uff0c\u6700\u8fd1\u63cf\u8ff0\u4e86\u4e00\u79cd\u8ba1\u5212\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u80fd\u591f\u4ece\u4e24\u79cd\u65b9\u6cd5\uff08\u89c4\u5219\u6216\u5b9e\u4f8b\uff09\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u6240\u4ee3\u8868\u7684\u5e7f\u4e49\u653f\u7b56\u4e2d\u53d7\u76ca\u3002\u8be5\u7cfb\u7edf\u67e5\u8be2\u7528\u4e8e\u4fee\u590d*\u5bbd\u677e\u8ba1\u5212*\u7f3a\u9677\u7684\u7b56\u7565*\uff0c \u7136\u540e\u5c06\u6700\u7ec8\u653e\u677e\u7684\u8ba1\u5212\u7528\u4f5c\u201c *\u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d \u4e2d\u7684\u57fa\u7840\u5b8f\u64cd\u4f5c*\u3002* Generalized Heuristics \u00b6 \u5728AP\u4e2d\u4f7f\u7528\u542f\u53d1\u5f0f\u529f\u80fd\u5c06\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u7684\u641c\u7d22\u96c6\u4e2d\u5728\u770b\u8d77\u6765\u6700\u6709\u524d\u9014\u7684\u641c\u7d22\u8282\u70b9\u4e0a\u3002\u7528\u4e8eAP\u7684\u542f\u53d1\u5f0f\u51fd\u6570\u8ba1\u7b97\u4ece\u7ed9\u5b9a\u641c\u7d22\u8282\u70b9\u5230\u6ee1\u8db3\u76ee\u6807\u7684\u8282\u70b9\u7684\u8ddd\u79bb\u7684\u4f30\u8ba1\u3002\u53ef\u4ece\u8f7b\u677e\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u6210\u672c\u4e2d\u76f4\u63a5\u5f97\u51faAP\u7684\u4e0e\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u529f\u80fd\u3002 AP\u4efb\u52a1\u6700\u5e38\u89c1\u7684\u653e\u677e\u65b9\u6cd5\u662f**\u5ffd\u7565\u64cd\u4f5c\u7684\u5220\u9664\u6548\u679c**\u3002\u5982\u4eca\uff0c\u5927\u591a\u6570\u542f\u53d1\u5f0f\u8ba1\u5212\u8005\u90fd\u4f9d\u8d56\u6b64\u60f3\u6cd5\u6765\u5b9e\u65bd\u4ed6\u4eec\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u7531\u4e8e\u6b64\u65b9\u6cd5\u4e0e\u9886\u57df\u65e0\u5173\uff0c\u56e0\u6b64\u65e0\u6cd5\u6355\u83b7\u89c4\u5212\u9886\u57df\u7684\u5947\u5f02\u4e4b\u5904\u3002 \u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u83b7\u53d6\u4f7f\u7528ML\u6355\u83b7\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\u7684AP\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u5b83\u7740\u91cd\u4e8e\u542f\u53d1\u5f0f\u7b97\u6cd5\uff0c\u4ee5\u5bfb\u627eAP\u4e2d\u6700\u6d41\u884c\u7684\u641c\u7d22\u65b9\u6cd5\uff0c\u5373**\u524d\u5411\u72b6\u6001\u7a7a\u95f4**\u641c\u7d22\u3002 \u5b66\u4e60\u5e7f\u4e49\u542f\u53d1\u5f0f\u51fd\u6570 \u2022 \u77e5\u8bc6\u8868\u793a\u3002\u5b83\u4eec\u662f\u72b6\u6001s\u7684\u51fd\u6570*H\uff08s; A; G\uff09 \uff0c\u52a8\u4f5c\u6a21\u578b*A \u548c\u76ee\u6807\u96c6*G\uff0c \u5b83\u4eec\u4f30\u8ba1\u4eces\u5f00\u59cb\u5e76\u4f7f\u7528A\u7684\u52a8\u4f5c\u6765\u5b9e\u73b0\u76ee\u6807*G \u7684\u6210\u672c\u3002 \u8c13\u8bcd\u903b\u8f91*\u662f\u81ea\u7136\u7684\u7f16\u7801AP\u542f\u53d1\u5f0f\u529f\u80fd\uff0c\u56e0\u4e3a\u5b83\u4eec\u8868\u8fbe\u4e86\u6709\u5173AP\u4efb\u52a1\u7684\u5f53\u524d\u72b6\u6001\uff0c\u76ee\u6807\u548c\u64cd\u4f5c\u7684\u77e5\u8bc6\u3002\u8fd8\u4f7f\u7528\u4e86\u96c6\u4e2d\u4e8e\u5bf9\u8c61\u5c5e\u6027\u7684\u8868\u793a\u8bed\u8a00\uff0c\u4f8b\u5982*\u5206\u7c7b\u8bed\u6cd5 \u3002 \u5b9e\u73b0**Generalized Heuristics** \u00b6 \u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u7531\u5143\u7ec4 \u7ec4\u6210\uff0c\u5176\u4e2dsi\u662f\u5f53\u524d\u72b6\u6001 \u548c*CI* \u662f\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\u7684\u5b9e\u9645\u6210\u672c*GI* \u4ece\u56fd\u5bb6*SI\u3002* \u2022\u5b66\u4e60\u7b97\u6cd5\u3002\u5b66\u4e60\u7b97\u6cd5\u7684\u76ee\u7684\u662f\u6982\u62ec\u5b66\u4e60\u793a\u4f8b\u4e2d\u6355\u83b7\u7684\u6210\u672c\u503c\u3002\u7531\u4e8e\u8981\u4ece\u5b66\u4e60\u793a\u4f8b\u4e2d\u6982\u62ec\u7684\u76ee\u6807\u6982\u5ff5\u662f\u6570\u5b57\uff0c\u56e0\u6b64\u8be5\u5b66\u4e60\u4efb\u52a1\u5bf9\u5e94\u4e8e\u56de\u5f52\u4efb\u52a1\u3002\u5f53\u5b66\u4e60\u5b9e\u4f8b\u4ee5\u8c13\u8bcd\u903b\u8f91\u8868\u793a\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u7684\u5173\u7cfb\u56de\u5f52\u7b97\u6cd5\uff0c\u4f8b\u5982\u5b66\u4e60\u5173\u7cfb\u56de\u5f52\u6811\uff08Blockeel\u7b49\uff0c1998\uff09\u3002 \u2022\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u4e3b\u8981\u4f18\u70b9\u662f\uff0c\u53ef\u4ee5\u5c06\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u76f4\u63a5\u4e0eAP\u7684\u5176\u4ed6\u6807\u51c6\u6307\u5bfc\u8d44\u6e90\uff08\u4f8b\u5982\uff0c\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff09\u7ec4\u5408\u3002\u6240\u5b66\u7684\u77e5\u8bc6\u662f\u4eba\u7c7b\u96be\u4ee5\u7406\u89e3\u7684\u3002 \u5728\uff08Yoon\u7b49\u4eba\uff0c2006\uff09\u4e2d\uff0c\u4f5c\u8005\u901a\u8fc7\u7ebf\u6027\u56de\u5f52\u5efa\u7acb\u4e86\u5e7f\u4e49\u542f\u53d1\u5f0f\u51fd\u6570\u3002\u4ed6\u4eec\u5b66\u4e60\u9488\u5bf9\u7279\u5b9a\u9886\u57df\u7684\u6821\u6b63 \\(\\Delta (s;A;G) =\\sum_i w_i * f_i(s;A;G)\\) \u5230*\u8f7b\u677e\u8ba1\u5212\u7684\u542f\u53d1\u5f0f* FF\u8ba1\u5212\u8005\u4ecb\u7ecd\u4e86 \\(RPH\uff08s; A; G\uff09\\) \uff08Hoffmann and Nebel\uff0c2001b\uff09\u3002\u8fd9\u4e9b\u6821\u6b63\u8868\u793a\u4e3a\u8981\u7d20\u7684\u52a0\u6743\u7ebf\u6027\u7ec4\u5408\uff0c\u5176\u4e2dwi\u662f\u6743\u91cd\uff0cfi\u8868\u793a\u8ba1\u5212\u4e0a\u4e0b\u6587\u7684\u4e0d\u540c\u8981\u7d20\u3002\u56de\u5f52\u793a\u4f8b\u5305\u62ec\u5bf9\u901a\u8fc7FF\u8ba1\u5212\u5668\u83b7\u5f97\u7684\u4e0d\u540c\u72b6\u6001\u5230\u76ee\u6807\u7684\u771f\u5b9e\u8ddd\u79bb\u7684\u89c2\u5bdf\u3002\u7531\u6b64\u4ea7\u751f\u7684\u542f\u53d1\u5f0f\u529f\u80fd\uff0c \\(H\uff08s; A; G\uff09= RPH\uff08s; A; G\uff09+ \\Delta\uff08s; A; G\uff09\\) \u63d0\u4f9b\u66f4\u51c6\u786e\u7684\u4f30\u8ba1\uff0c\u4ee5\u6355\u83b7\u7279\u5b9a\u4e8e\u57df\u7684\u89c4\u5219\u3002 \u4ee5\u524d\u7684\u65b9\u6cd5\u5728\u641c\u7d22\u7b97\u6cd5\u4e2d\u4f7f\u7528\u65f6\u4f1a\u5ffd\u7565\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u5b9e\u9645\u6027\u80fd\u3002\u5373\u4f7f\u5b83\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u6307\u5bfc\uff0c\u5b83\u4e5f\u53ef\u80fd\u5c1d\u8bd5\u5b66\u4e60\u542f\u53d1\u5f0f\u7684\u6821\u6b63\u3002\u5728\uff08Xu et al\u3002\uff0c2007\uff09\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4ec5\u5728\u542f\u53d1\u5f0f\u8bef\u5bfc\u7ed9\u5b9a\u641c\u7d22\u7b56\u7565\u65f6\u624d\u8003\u8651\u5b66\u4e60\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u5b66\u5230\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5 \\(H(s; A; G)= \\sum_i w_i * f_i(s; A; G\uff09\\) \u4ec5\u5c1d\u8bd5\u5f88\u597d\u5730\u533a\u5206\u597d\u72b6\u6001\u548c\u574f\u72b6\u6001\uff0c\u4ee5\u5728\u201c \u6ce2\u675f\u641c\u7d22\u201d \u8fc7\u7a0b\u4e2d\u627e\u5230\u76ee\u6807\uff0c\u800c\u4e0d\u662f\u5c1d\u8bd5\u7cbe\u786e\u5efa\u6a21\u5230\u76ee\u6807\u7684\u8ddd\u79bb\u3002\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u73b0\u4e86\u4ee5\u4e0b\u6743\u91cd\u5b66\u4e60\u7b56\u7565\u3002\u5bf9\u4e8e\u5b66\u4e60\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u6bcf\u4e2a\u72b6\u6001*sj* \uff0c\u5982\u679csj\u4e0d\u5305\u542b\u5728\u641c\u7d22\u7684beamj\u4e2d\uff0c\u5219\u5b58\u5728\u641c\u7d22\u9519\u8bef\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6743\u91cd\u50cf\u611f\u77e5\u7684\u6743\u91cd\u4e00\u6837\u88ab\u66f4\u65b0\uff0c\u56e0\u6b64\u72b6\u6001sj\u5c06\u88ab\u542f\u53d1\u5f0f\u65b9\u6cd5\u4f18\u5148\u4f7f\u7528\uff0c\u5e76\u4fdd\u7559\u5728\u672a\u6765\u7684\u641c\u7d22\u60c5\u8282\u4e2d\u7684Beamj\u4e2d\u3002 Decomposition Methods \u00b6 \u5c42\u6b21\u5206\u89e3\u65b9\u6cd5 \u89e3\u51b3\u95ee\u9898\u590d\u6742\u6027\u7684\u6269\u5c55\u7b56\u7565\u662f\u5c06\u95ee\u9898\u5206\u89e3\u4e3a\u66f4\u7b80\u5355\u7684\u5b50\u95ee\u9898\u3002\u5f53\u627e\u5230\u6709\u6548\u7684\u5206\u89e3\u65f6\uff0c\u89e3\u51b3\u5b50\u95ee\u9898\u7684\u6210\u672c\u4e4b\u548c\u5c0f\u4e8e\u76f4\u63a5\u89e3\u51b3\u539f\u59cb\u95ee\u9898\u7684\u6210\u672c\u3002\u5206\u5c42\u4efb\u52a1\u7f51\u7edc\uff08HTN\uff09\u662f\u5bf9AP\u4efb\u52a1\u5206\u89e3\u5efa\u6a21\u7684\u6700\u4f73\u7814\u7a76\u65b9\u6cd5\u4e4b\u4e00\u3002HTN\u65b9\u6cd5\u7ed3\u5408\u4e86\u89c4\u5212\u4efb\u52a1\u7684\u5206\u5c42\u7279\u5b9a\u4e8e\u57df\u7684\u8868\u793a\u5f62\u5f0f\u548c\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u72ec\u7acb\u4e8e\u57df\u7684\u641c\u7d22\u7b56\u7565\u3002 HTN\u8ba1\u5212\u8005\u7684\u8f93\u5165\u5305\u62ec\u4e00\u4e2a\u52a8\u4f5c\u6a21\u578b\uff0c\u8be5\u52a8\u4f5c\u6a21\u578b\u5bf9\u4e00\u7ec4*\u539f\u59cb\u52a8\u4f5c\u8fdb\u884c*\u7f16\u7801\uff0c\u8be5*\u52a8\u4f5c*\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u8ba1\u5212\u4e2d\u4f7f\u7528\u7684STRIPS\u52a8\u4f5c\u548c*\u4efb\u52a1\u6a21\u578b\u3002 \u4efb\u52a1\u6a21\u578b\u5b9a\u4e49\u4e86\u4e00\u7ec4*\u65b9\u6cd5 \uff0c\u8fd9\u4e9b*\u65b9\u6cd5* \u63cf\u8ff0\u4e86\u5e94\u5982\u4f55\u5c06\u4efb\u52a1\u5206\u89e3\u4e3a\u7279\u5b9a\u57df\u4e2d\u7684\u5b50\u4efb\u52a1\u3002HTN\u8ba1\u5212\u8005\u7684\u5de5\u4f5c\u5305\u62ec\u5229\u7528\u4efb\u52a1\u6a21\u578b\u5c06\u7ed9\u5b9a\u7684\u8ba1\u5212\u4efb\u52a1\u5206\u89e3\u4e3a\u66f4\u7b80\u5355\u7684\u5b50\u4efb\u52a1\uff0c\u76f4\u5230\u751f\u6210\u4e00\u7cfb\u5217\u539f\u59cb\u64cd\u4f5c\u4e3a\u6b62\u3002\u56fe17\u663e\u793a\u4e86\u6765\u81ea*Blocksworld* \u57df\u7684HTN\u63cf\u8ff0\u4e2d\u7684\u539f\u59cb\u52a8\u4f5c\u5806\u6808\u548c\u7528\u4e8e\u4efb\u52a1\u79fb\u52a8\u5757\u7684\u65b9\u6cd5\u3002\u6b64\u65b9\u6cd5\u901a\u8fc7\u5b9a\u4e49\u4e24\u4e2a\u5b50\u4efb\u52a1\u5c06\u4e00\u4e2a\u5757\u79fb\u52a8\u5230\u5176\u6700\u7ec8\u4f4d\u7f6e\uff1a\u5c06x\u4ecey\u79fb\u5230z\uff0c\u4ece\u800c\u5c06\u5757*x* \u5806\u53e0\u4ece*y\u5f00\u59cb\uff0c \u4ee5\u4fbf\u5c06*x \u5806\u53e0\u5728z\u4e0a\uff0c\u7136\u540e\u5c06x\u4ece\u8868\u79fb\u52a8\u5230z\uff0c\u4ece\u800c\u4ece\u8868\u4e2d\u62fe\u53d6\u5757*x* \u5e76\u5c06\u5176\u5806\u53e0\u5728z\u4e0a\u3002\u5728\u8fd9\u4e24\u4e2a\u5b50\u4efb\u52a1\u4e2d\uff0c\u8be5\u65b9\u6cd5\u90fd\u4f1a*\u68c0\u67e5*\u5757*x\u662f\u5426*\u53ef\u4ee5\u76f4\u63a5\u79fb\u52a8\u5230\u5176\u6700\u7ec8\u4f4d\u7f6e\uff08\u539f\u59cb\u52a8\u4f5c*check\uff0ccheck2* \u548c*checkS\uff09*\uff0c\u5e76\u786e\u4fdd\u5c06\u6765\u4e0d\u4f1a\u79fb\u52a8x\u3002 \u5f53\u524d\u7684HTN\u8ba1\u5212\u8005\uff0c\u4f8b\u5982SHOP2\uff08Nau\u7b49\u4eba\uff0c2003\uff09\uff0c\u53ef\u4ee5\u80dc\u8fc7\u6700\u65b0\u7684\u9886\u57df\u72ec\u7acb\u8ba1\u5212\u8005\uff0c\u5e76\u4e3a\u8bf8\u5982\u706d\u706b\u4e4b\u7c7b\u7684\u8bb8\u591a\u5b9e\u9645\u5e94\u7528\u63d0\u4f9b\u81ea\u7136\u7684\u5efa\u6a21\u6846\u67b6\uff08Castillo\u7b49\u4eba\uff0c 2006\u5e74\uff09\uff0c\u758f\u6563\u8ba1\u5212\uff08Muiioz-Avila\u7b49\uff0c1999\uff09\u6216\u6e38\u620f\uff08Nau\u7b49\uff0c1998\uff09\u3002\u5b9a\u4e49\u6709\u6548\u7684*\u5206\u89e3\u65b9\u6cd5*\u4ecd\u7136\u5f88\u590d\u6742\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u53cd\u6620\u4e86\u8be5\u9886\u57df\u7684\u6df1\u5165\u77e5\u8bc6\u3002\u56fe17\u6240\u793a\u7684\u7b97\u5b50\u548c\u65b9\u6cd5\u5c5e\u4e8e\u5757\u5806\u53e0\u7b97\u6cd5\u7684HTN\u8868\u793a\uff08Erol\u7b49\uff0c1992\uff09\u3002\u4e0b\u9762\u6211\u4eec\u56de\u987e\u4e00\u4e9b\u5728HTN\u89c4\u5212\u8303\u5f0f\u4e2d\u81ea\u52a8\u5b9a\u4e49\u5206\u89e3\u65b9\u6cd5\u7684\u5b66\u4e60\u65b9\u6cd5\u3002 \u5b66\u4e60\u5206\u5c42\u5206\u89e3\u65b9\u6cd5 1.\u77e5\u8bc6\u8868\u793a\u3002\u4e00\u4e2aHTN\u65b9\u6cd5\u662f\u63cf\u8ff0\u5982\u4f55\u5206\u89e3\u4e00\u4e2a\u8fc7\u7a0b*\u975e\u539f\u59cb*\u4efb\u52a1\u4e3a*\u57fa\u672c*\u4efb\u52a1\u6216\u7b80\u5355\u7684*\u975e\u539f\u59cb*\u4efb\u52a1\u3002\u4e00\u79cd\u65b9\u6cd5\uff0c\u7c73\u6b63\u5f0f\u901a\u8fc7\u4e09\u7c73\u5b9a\u4e49*= <\u5934\uff0cpreconds\uff0c\u5b50\u4efb\u52a1>\uff0c \u5176\u4e2d*\u5934*\u8868\u793a\u7684\u540d\u79f0\u548c\u4ee5\u5206\u89e3\u4efb\u52a1\u7684\u53c2\u6570\uff0c*preconds \u662f\u4e00\u4e2a\u903b\u8f91\u5f0f\u8868\u793a\u7684\u65b9\u6cd5\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u4ee5\u53ca*\u5b50\u4efb\u52a1*\u662f\u7684\u5c40\u90e8\u6709\u5e8f\u5e8f\u5217\u5b50\u4efb\u52a1\u3002\u5982\u679c*head\uff08m\uff09* \u5339\u914d*t* \u5e76\u4e14*preconds\uff08m\uff09 \uff0c\u5219\u65b9\u6cd5m\u9002\u7528\u4e8e\u72b6\u6001s\u548c\u4efb\u52a1t\u5bf9\u611f\u5230\u6ee1\u610f\u3002\u5c06\u65b9\u6cd5m\u5e94\u7528\u4e8e\u72b6\u6001s\u548c\u4efb\u52a1*t\u7684\u7ed3\u679c*\u662f\u5b50*\u4efb\u52a1subtasks\uff08m\uff09*\u7684\u5e8f\u5217 \u3002* 2.\u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u5305\u62ec\u4e00\u7ec4\u8ba1\u5212\u95ee\u9898\uff0c\u5373\u4e00\u7ec4 \\(< s_0\uff0cG>\\) \u5bf9 \uff0c*\u5176\u4e2ds\u3007\u662f\u521d\u59cb\u72b6\u6001\uff0c*G \u662f\u4e00\u7ec4\u76ee\u6807\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u89e3\u51b3\u65b9\u6848 \\(p =\uff08a_1,a_2 ,...a_n\uff09\\) \u3002\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u53ef\u4ee5\u7531\u4eba\u4e3a\u63d0\u4f9b\uff0c\u4e5f\u53ef\u4ee5\u7531\u7ecf\u5178\u8ba1\u5212\u8005\u751f\u6210\u3002 3.\u5b66\u4e60\u7b97\u6cd5\u3002\u7b2c3\u8282\u4e2d\u4ecb\u7ecd\u7684\u5b66\u4e60\u52a8\u4f5c\u6a21\u578b\u524d\u63d0\u6761\u4ef6\u7684\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u5e94\u7528\u4e8e\u5b66\u4e60HTN\u65b9\u6cd5\u524d\u63d0\u6761\u4ef6\u3002\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5b8f\u7684\u5206\u5c42\u5c42\u6765\u7b80\u5316HTN\u65b9\u6cd5\u5206\u89e3\u7684\u7248\u672c\u3002\u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\u5f15\u8d77\u7684\u5206\u89e3\u4e0d\u4f1a\u5229\u7528HTN\u7684\u5168\u90e8\u8868\u8fbe\u80fd\u529b\uff0c\u5305\u62ec\u66ff\u4ee3\u5206\u89e3\uff0c\u9012\u5f52\u6982\u5ff5\u6216\u5faa\u73af\u7684\u5b9a\u4e49\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u8fd8\u6ca1\u6709\u7528\u4e8e\u4eceHTN\u7684\u5b8c\u6574\u8868\u8fbe\u80fd\u529b\u4e2d\u53d7\u76ca\u7684\u7528\u4e8e\u5b66\u4e60\u5b50\u4efb\u52a1\u5206\u89e3\u7684\u5168\u81ea\u52a8\u7b97\u6cd5\u3002\u4e00\u4e9b\u7b97\u6cd5\u9700\u8981\u4ece\u4eba\u7c7b\u90e8\u5206\u6307\u5b9a\u7684*\u5206\u89e3\u65b9\u6cd5*\u5f00\u59cb\uff0c\u53e6\u4e00\u4e9b\u9700\u8981\u5c42\u6b21\u8ba1\u5212\uff08\u8fd9\u610f\u5473\u7740\u4ee5\u524d\u6307\u5b9a\u7684\u65b9\u6cd5\uff09\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u9700\u8981\u67d0\u4e9b\u4efb\u52a1\uff0c\u79f0\u4e3a\u5e26*\u6ce8\u91ca\u7684\u4efb\u52a1*\u89c4\u5b9a\u5728AP\u95ee\u9898\u7684\u7ecf\u5178\u7248\u672c\u4e2d\u5b9a\u4e49HTN\u4efb\u52a1\u548c\u76ee\u6807\u96c6*G* \u7684\u7b49\u4ef7\u5173\u7cfb\u3002 4.\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002\u5b66\u4e60\u7684\u77e5\u8bc6\u7684\u666e\u904d\u6027\u6c34\u5e73\u662f\u4f7f\u7ed9\u5b9a\u7684HTN\u63cf\u8ff0\u9009\u4fee\u7684\u5173\u952e\u95ee\u9898\u3002\u5b66\u4e60\u8fc7\u4e8e\u901a\u7528\u7684\u5206\u89e3\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5728\u89e3\u51b3\u95ee\u9898\u65f6\u4ea7\u751f\u65e0\u9650\u9012\u5f52\uff0c\u4ece\u800c\u964d\u4f4e\u4e86HTN\u89c4\u5212\u76f8\u5bf9\u4e8e\u4f20\u7edf\u89c4\u5212\u7684\u4f18\u52bf\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5b66\u4e60\u8fc7\u4e8e\u5177\u4f53\u7684HTN\u65b9\u6cd5\u4e0d\u592a\u53ef\u80fd\u6709\u6548\u5730\u5206\u89e3\u65b0\u95ee\u9898\u3002\u89e3\u51b3\u8fd9\u79cd\u6298\u8877\u7684\u5f53\u524d\u65b9\u6cd5\u662f\u57fa\u4e8e\u9488\u5bf9\u4e00\u7cfb\u5217\u6d4b\u8bd5\u95ee\u9898\u6d4b\u91cf\u5b66\u4e60\u6a21\u578b\u7684\u6027\u80fd\u3002 \u5b9e\u73b0**Decomposition Methods** \u00b6 CAMEL\uff08Ilghami et al\u3002\uff0c2002\uff09\u4f7f\u7528version space*\u7248\u672c\u7a7a\u95f4*\u7b97\u6cd5\uff08Mitchell\uff0c1997\uff09\u5b66\u4e60\u4e86HTN *\u5206\u89e3\u65b9\u6cd5*\u548c\u5bf9\u5e73\u9762\u8ff9\u7ebf\u7684\u89c2\u5bdf\u7684\u524d\u63d0\u6761\u4ef6\u3002CAMEL\u88ab\u8bbe\u8ba1\u7528\u4e8e\u89c4\u5212\u5668\u63a5\u6536\u6bcf\u4e2a\u4efb\u52a1\u7684\u591a\u4e2a\u65b9\u6cd5\u7ed3\u6784\u57df\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u5148\u51b3\u6761\u4ef6\u3002\u6b64\u5904\u7684\u5c42\u6b21\u7ed3\u6784\u662f\u4e8b\u5148\u5df2\u77e5\u7684\uff0c\u5b66\u4e60\u4efb\u52a1\u4f1a\u5c1d\u8bd5\u786e\u5b9a\u4e0d\u540c\u7684\u5c42\u6b21\u7ed3\u6784\u5728\u54ea\u4e9b\u6761\u4ef6\u4e0b\u9002\u7528\u3002\u6b64\u65b9\u6cd5\u9700\u8981\u8bb8\u591a\u8ba1\u5212\u8ddf\u8e2a\u624d\u80fd\u5b8c\u5168\u6536\u655b\uff08\u5b8c\u5168\u786e\u5b9a\u6240\u6709\u65b9\u6cd5\u7684\u5148\u51b3\u6761\u4ef6\uff09\u3002CAMEL++\uff08Ilghami\u7b49\u4eba\uff0c2005\uff09\u4f7f\u8ba1\u5212\u4eba\u5458\u53ef\u4ee5\u5728\u5b8c\u5168\u4e86\u89e3\u65b9\u6cd5\u524d\u63d0\u4e4b\u524d\u5f00\u59cb\u8fdb\u884c\u8ba1\u5212\u3002\u8fd9\u6837\uff0c\u8ba1\u5212\u8005\u53ef\u4ee5\u4f7f\u7528\u8f83\u5c11\u7684\u57f9\u8bad\u793a\u4f8b\u6765\u5f00\u59cb\u89e3\u51b3\u8ba1\u5212\u95ee\u9898\u3002CAMEL\u548cCAMEL++\u90fd\u8981\u6c42\u6bcf\u4e2a\u8f93\u5165\u8ba1\u5212\u8ddf\u8e2a\u90fd\u9700\u8981\u5305\u542b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5b66\u4e60\u8005\u53ef\u4ee5\u83b7\u53d6\u6a21\u578b\u3002\u5728\u8ba1\u5212\u8ddf\u8e2a\u7684\u6bcf\u4e2a\u5206\u89e3\u70b9\uff0c\u5b66\u4e60\u8005\u9700\u8981\u62e5\u6709\u6240\u6709\u9002\u7528\u7684\u65b9\u6cd5\u5b9e\u4f8b\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5b9e\u9645\u4f7f\u7528\u7684\u65b9\u6cd5\u5b9e\u4f8b\u3002 HTN\u57df\u5b66\u4e60\uff08HDL\uff09\u7b97\u6cd5\uff08Ilghami\u7b49\uff0c2006\uff09\u5728\u5f00\u59cb\u65f6\u6ca1\u6709\u6709\u5173\u8be5\u65b9\u6cd5\u7684\u4efb\u4f55\u5148\u9a8c\u4fe1\u606f\u3002\u5b83\u68c0\u67e5\u7531\u4e13\u5bb6\u95ee\u9898\u89e3\u51b3\u8005\u4ea7\u751f\u7684\u5206\u5c42\u8ba1\u5212\u8ddf\u8e2a\u3002\u5bf9\u4e8e\u8ddf\u8e2a\u4e2d\u7684\u6bcf\u4e2a\u5206\u89e3\u70b9\uff0cHDL\u4f1a\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8d1f\u8d23\u7684\u65b9\u6cd5\u3002\u5426\u5219\uff0cHDL\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u65b9\u6cd5\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u65b0*\u7248\u672c\u7a7a\u95f4*\u4ee5\u6355\u83b7\u5176\u5148\u51b3\u6761\u4ef6\u3002\u5b9e\u9645\u7528\u4e8e\u5206\u89e3\u76f8\u5e94\u4efb\u52a1\u7684\u65b9\u6cd5\u7528\u4f5c\u80af\u5b9a\u793a\u4f8b\uff0c\u800c\u4e0e\u8be5\u4efb\u52a1\u5339\u914d\u4f46\u524d\u63d0\u6761\u4ef6\u5931\u8d25\u7684\u65b9\u6cd5\u5219\u4f5c\u4e3a\u76f8\u5e94\u7248\u672c\u7a7a\u95f4\u7684\u5426\u5b9a\u793a\u4f8b\u3002 HTN-Maker\uff08Hogg\u7b49\u4eba\uff0c2008\uff09\u4eceSTRIPS\u57df\u6a21\u578b\uff0cSTRIPS\u8ba1\u5212\u7a0b\u5e8f\u751f\u6210\u7684\u8ba1\u5212*p* \u7684\u96c6\u5408\u4ee5\u53ca\u5e26*\u6ce8\u91ca\u7684\u4efb\u52a1*\u7684\u96c6\u5408\u4e2d\u751f\u6210HTN\u9886\u57df\u6a21\u578b*\u3002 \u5e26*\u6ce8\u91ca\u7684\u4efb\u52a1*\u662f\u4e00\u4e2a\u4e09\u5143\u7ec4 \uff08n\uff0cPre\uff0cEffects\uff09 \uff0c\u5176\u4e2d*n \u662f\u4efb\u52a1\uff0c Pre \u662f\u4e00\u7ec4\u539f\u5b50\uff0c\u79f0\u4e3a\u524d\u63d0\u6761\u4ef6\uff0c Eff \u662f\u4e00\u7ec4\u539f\u5b50\uff0c\u79f0\u4e3a\u6548\u679c\u3002HTN-Maker\u9996\u5148\u901a\u8fc7\u4ece\u521d\u59cb\u72b6\u6001s\u3007\u5f00\u59cb\u5e94\u7528\u8ba1\u5212p\u4e2d\u7684\u52a8\u4f5c\u6765\u751f\u6210\u72b6\u6001\u5217\u8868 \\(s=\uff08s_0\uff0c...\uff0cs_n)\\) \u3002\u7136\u540e\uff0c\u5b83\u904d\u5386\u8fd9\u4e9b\u72b6\u6001\uff0c\u5e76\u4e14\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5e26\u6ce8\u91ca\u7684\u4efb\u52a1\uff0c\u5176\u5f71\u54cd\u5339\u914d\u72b6\u6001si + n\u548c\u5176\u5148\u51b3\u6761\u4ef6\u76f8\u5339\u914d\u7684\u72b6\u6001 \\(s_{i+n}\\) \uff0c\u5b83\u901a\u8fc7\uff08\u5012\u9000\u6ce8\u91ca\u4efb\u52a1\u7684\u5f71\u54cd1 \uff09\u5148\u524d\u5b66\u4e60\u7684\u65b9\u6cd5\u6216\uff082 \uff09\u5982\u679c\u6ca1\u6709\u4ee5\u524d\u5b66\u4e60\u8fc7\u7684\u65b9\u6cd5\uff0c\u5219\u6267\u884c\u539f\u59cb\u4efb\u52a1\u3002 Learning Planning Search Control in Domains with Uncertainty \u00b6 \u7528\u4e0d\u4e0a Reinforcement Learning \u00b6 RL\u4ee3\u7406\u4e0e\u73af\u5883\u4ea4\u4e92\u4ee5\u6536\u96c6\u7ecf\u9a8c\uff0c\u5e76\u4f7f\u7528\u9002\u5f53\u7684\u7b97\u6cd5\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u4ee5\u751f\u6210\u6700\u4f73\u7b56\u7565\uff08Kaelbling\u7b49\uff0c1996\uff1b Sutton\u548cBarto\uff0c1998\uff09\u3002\u5efa\u7acbRL\u4ee3\u7406\u6d89\u53ca\u7684\u51b3\u7b56\u4e0eAP\u5b66\u4e60\u4e2d\u7684\u51b3\u7b56\u7c7b\u4f3c\uff1a\u8868\u793a\uff08\u5982\u4f55\u5bf9\u4ee3\u7406\u7684\u73af\u5883\u548c\u884c\u4e3a\u8fdb\u884c\u7f16\u7801\uff09\uff1b\u5b66\u4e60\u5b9e\u4f8b\uff08\u4ee3\u7406\u5546\u6536\u96c6\u7ecf\u9a8c\u7684\u7b56\u7565\uff09\uff1b\u5b66\u4e60\u7b97\u6cd5\uff08\u54ea\u79cd\u7b97\u6cd5\u5728\u6307\u5b9a\u4efb\u52a1\u4e0a\u8868\u73b0\u6700\u4f73\uff09\uff1b\u4ee5\u53ca\u5bf9\u6240\u5b66\u77e5\u8bc6\u7684\u5229\u7528\uff08\u4ee3\u7406\u5982\u4f55\u4ece\u6240\u5b66\u77e5\u8bc6\u4e2d\u53d7\u76ca\uff09\u3002\u4e0e\u5927\u591a\u6570\u9488\u5bf9AP\u65b9\u6cd5\u7684\u5b66\u4e60\u4e0d\u540c\uff0cRL\u4e3a\u77e5\u8bc6\u83b7\u53d6\u548c\u77e5\u8bc6\u5f00\u53d1\u63d0\u4f9b\u4e86\u7d27\u5bc6\u96c6\u6210\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u4e9b\u96c6\u6210\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u5173\u952e\u95ee\u9898\u662f\u786e\u5b9a\u4f55\u65f6\u5c1d\u8bd5\u65b0\u52a8\u4f5c\u4ee5\u53ca\u4f55\u65f6\u4f7f\u7528\u5df2\u77e5\u52a8\u4f5c\u3002exploration-exploitation dilemma\uff0c\u5176\u4e2d exploration\u5b9a\u4e49\u4e3a\u5c1d\u8bd5\u65b0\u7684\u52a8\u4f5c\u548cexploitation\u88ab\u5b9a\u4e49\u4e3a\u5e94\u7528\u5728\u8fc7\u53bb\u5df2\u7ecf\u6210\u529f\u8fc7\u7684\u884c\u52a8\u3002 \u603b\u4f53\u800c\u8a00\uff0c\u5bf9exploration-exploitation dilemma\u7684\u826f\u597d\u7b54\u6848\u8981\u8003\u8651\u5141\u8bb8\u7684\u8bd5\u9a8c\u6b21\u6570\u3002\u8bd5\u9a8c\u6b21\u6570\u8d8a\u591a\uff0c\u8fc7\u65e9\u6536\u655b\u5230\u5df2\u77e5\u64cd\u4f5c\u7684\u6548\u679c\u5c31\u8d8a\u5dee\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u4e0d\u662f\u6700\u4f73\u7684\u3002\u6709\u5173\u6709\u6548exploration-exploitationstrategies\u7684\u8c03\u67e5\uff0c\u8bf7\u53c2\u89c1\uff08Wiering\uff0c1999\uff1b Reynolds\uff0c2002\uff09\u3002 Model-Based and Model-Free RL \u00b6 L\u4e3b\u8981\u5173\u6ce8\u5728\u73af\u5883\u6a21\u578b\u672a\u77e5\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u6700\u4f73\u7b56\u7565\uff0c\u4f46\u5b9e\u9645\u4e0a\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8fdb\u884c\u3002 \u57fa\u4e8e\u6a21\u578b\u7684*RL\u9700\u8981\u7531\u8fc7\u6e21\u548c\u5956\u52b1\u6a21\u578b\u7ec4\u6210\u7684\u73af\u5883\u6a21\u578b\u3002*\u57fa\u4e8e\u6a21\u578b\u7684*RL\u901a\u5e38\u4f9d\u8d56\u4e8e\u6807\u51c6*\u52a8\u6001\u89c4\u5212*\u7b97\u6cd5\uff08Bellman\u548cKalaba\uff0c1965\uff1b Bertsekas\uff0c1995\uff09\u6765\u627e\u5230\u63d0\u4f9b\u6700\u4f18\u7b56\u7565\u7684\u4ef7\u503c/\u542f\u53d1\u5f0f\u51fd\u6570\u3002\u5728*\u57fa\u4e8e\u6a21\u578b\u7684*RL\u4e2d\u7684\u5b66\u4e60\u88ab\u7406\u89e3\u4e3a*\u5b9e\u65f6\u542f\u53d1\u5f0f\u641c\u7d22 \uff08Korf\uff0c1990\uff1b Bulitko\u548cLee\uff0c2006\uff1b Hernandez\u548cMeseguer\uff0c2007\uff09\uff0c\u5373\u4f7f\u7528\u4ece\u4eff\u771f\u4e2d\u83b7\u5f97\u7684\u4fe1\u606f\u5bf9\u4ef7\u503c/\u542f\u53d1\u5f0f\u51fd\u6570\u8fdb\u884c\u5c40\u90e8\u66f4\u65b0\u3002 *\u65e0\u6a21\u578b*RL\u4e0d\u9700\u8981\u73af\u5883\u6a21\u578b\u3002\u4e0b\u9762\uff0c\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u65e0*\u6a21\u578b*RL\u4efb\u52a1Reinforcement Learning *\u5c06\u5b66\u4e60\u884c\u52a8\u6a21\u578b\u4e0e\u57fa\u4e8e\u6a21\u578b\u7684RL\u76f8\u7ed3\u5408\u3002*\u8fd9\u79cd\u65b9\u6cd5\u5b66\u4e60\u73af\u5883\u7684\u8f6c\u6362\u6a21\u578b\uff0c\u5e76\u5e94\u7528\u6807\u51c6\u7684*\u52a8\u6001\u7f16\u7a0b*\u7b97\u6cd5\u6765\u627e\u5230\u597d\u7684\u7b56\u7565\u3002 \u2022 \u7eaf\u65e0\u6a21\u578b\u7684RL\u3002*\u5728\u4e0d\u786e\u5b9a\u6027\u8f83\u5927\u7684\u9886\u57df\u4e2d\uff0c\u5b66\u4e60\u5b9e\u73b0\u76ee\u6807\u8981\u6bd4\u5b66\u4e60\u73af\u5883\u6a21\u578b\u5bb9\u6613\u3002*\u65e0\u7eaf\u6a21\u578b\u7684RL \u7b97\u6cd5\u4e0d\u4f1a\u5c06\u51b3\u7b56\u5efa\u6a21\u4e3a\u72b6\u6001\u7684\u51fd\u6570\uff08\u5982*\u503c/\u542f\u53d1\u5f0f\u51fd\u6570\uff09 \uff0c\u800c\u662f\u4f7f\u7528\u6210\u5bf9\u7684< *\u72b6\u6001\uff0c\u52a8\u4f5c> \u51fd\u6570\uff08*\u79f0\u4e3a*\u52a8\u4f5c\u503c\u51fd\u6570\uff09\u3002*\u7684*Q\u51fd\u6570\uff0c*\u5176\u63d0\u4f9b\u7528\u4e8e\u91c7\u53d6\u52a8\u4f5c\u7684\u9884\u671f\u56de\u62a5\u7684\u91cf\u5ea6*\u4e00\u4e2a*\u5728\u72b6\u6001s\uff0c\u662f\u4e00\u4e2a\u7684\u4f8b\u5b50*\u52a8\u4f5c\u503c\u51fd\u6570\u3002Q\u5b66\u4e60 \uff08Watkins\uff0c1989\uff09\u662f\u4e00\u79cd\u8457\u540d\u7684\u65e0*\u7eaf\u6a21\u578b*RL\u7b97\u6cd5\uff0c\u5b83\u66f4\u65b0\u4e86*Q\u51fd\u6570*\u4e0e\u6bcf\u4e2a\u89c2\u5bdf\u5230\u7684\u5143\u7ec4 \\(<s\uff0ca\uff0cs'\uff0cr>\\) \uff08 \\(s'\\) \u4ee3\u8868\u65b0\u72b6\u6001\uff0cr\u4ee3\u8868\u83b7\u5f97\u7684\u5956\u52b1\uff09\u3002 Q\u5b66\u4e60*\u4f7f\u7528**\u8d1d\u5c14\u66fc\u65b9\u7a0b**\u5b8c\u6210*Q\u51fd\u6570*\u7684\u66f4\u65b0\uff0c\u5176\u4e2d\uff0ca\u662f\u5b66\u4e60\u7387\uff0c\u5b83\u786e\u5b9a\u65b0\u83b7\u53d6\u7684\u4fe1\u606f\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u8986\u76d6\u65e7\u4fe1\u606f\u3002\u5f53a = 0\u65f6\uff0c\u4ee3\u7406\u4e0d\u5b66\u4e60\u4efb\u4f55\u4fe1\u606f\uff0c\u800c\u5f53a = 1\u65f6\uff0c\u4ee3\u7406\u4ec5\u8003\u8651\u6700\u65b0\u4fe1\u606f\u30027 \u662f\u786e\u5b9a\u672a\u6765\u5956\u52b1\u91cd\u8981\u6027\u7684\u6298\u6263\u56e0\u5b50\u30027 = 0\u7684\u56e0\u5b50\u4f1a\u4f7f\u4ee3\u7406\u53d8\u5f97*\u8d2a\u5a6a \uff08\u4ee3\u7406\u53ea\u8003\u8651\u5f53\u524d\u7684\u5956\u52b1\uff09\uff0c\u800c\u63a5\u8fd11\u7684\u56e0\u5b50\u4f1a\u4f7f\u4ee3\u7406\u52aa\u529b\u4e89\u53d6\u957f\u671f\u7684\u9ad8\u56de\u62a5\u3002 *\u7eaf\u65e0\u6a21\u578b\u7684*RL\u4e5f\u5305\u62ec*\u8499\u7279\u5361\u6d1b*\u65b9\u6cd5\uff08Barto\u548cDuff\uff0c1994\uff09\u3002\u5927\u90e8\u5206\u65e0*\u6a21\u578b*RL\u65b9\u6cd5\u53ef\u4ee5\u786e\u4fdd\u627e\u5230\u6700\u4f73\u7b56\u7565\uff0c\u5e76\u4e14\u6bcf\u6b21\u89c2\u5bdf\u53ea\u9700\u8981\u5f88\u5c11\u7684\u8ba1\u7b97\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u901a\u5e38\u65e0\u6cd5\u6709\u6548\u5229\u7528\u6240\u6536\u96c6\u7684\u89c2\u6d4b\u503c\uff0c\u5e76\u4e14\u9700\u8981\u4e30\u5bcc\u7684\u7ecf\u9a8c\u624d\u80fd\u5b9e\u73b0\u826f\u597d\u7684\u6027\u80fd\u3002 \u8003\u8651\u5230RRL\u4f7f\u7528\u7684\u77e5\u8bc6\u8868\u793a\u7c7b\u4f3c\u4e8eAP\u5b66\u4e60\u4e2d\u7684\u77e5\u8bc6\u8868\u793a\uff0c\u672c\u8282\u5c06\u56de\u987e\u5173\u7cfb\u589e\u5f3a\u5b66\u4e60\uff08RRL\uff09\uff08Dzeroski\u7b49\u4eba\uff0c2001\uff1b Otterlo\uff0c2009\uff09\u3002\u672c\u8282\u4e13\u6ce8\u4e8e*\u65e0\u6a21\u578b\u7684\u7eaf*RRL\uff0c\u56e0\u4e3a\u5728\u7b2c3\u8282\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5b66\u4e60\u5173\u7cfb\u884c\u4e3a\u6a21\u578b\u7684\u6280\u672f\u3002\u6709\u5173\u57fa\u4e8e\u6a21\u578b\u7684RRL\u7684\u66f4\u591a\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1\uff08Boutilier\u7b49\uff0c2001\uff1b Wang\u7b49\uff0c2007\uff1b Sanner\u548cKersting\uff0c2010\u5e74\uff09\u4e5f\u79f0\u4e3a\u5173\u7cfb\uff0c\u7b26\u53f7\u6216\u4e00\u9636\u52a8\u6001\u89c4\u5212\u3002 1.\u77e5\u8bc6\u8868\u793a\u3002\u5b66\u5230\u7684\u77e5\u8bc6\u4ee5*\u4e00\u9636\u7b56\u7565n\uff1aS ^ A* \u7684\u5f62\u5f0f\u8868\u793a\uff0c\u8be5*\u7b56\u7565*\u5c06\u4ee5\u8c13\u8bcd\u903b\u8f91\u7f16\u7801\u7684\u5173\u7cfb\u72b6\u6001\u6620\u5c04\u5230\u9996\u9009\u52a8\u4f5c\uff0c\u7136\u540e\u518d\u5e94\u7528\u8be5\u52a8\u4f5c\u6765\u5b9e\u73b0\u4e00\u7ec4*\u4e00\u9636\u76ee\u6807\u3002 \u4e0e\u9488\u5bf9AP\u7684\u901a\u7528\u7b56\u7565\uff08\u7b2c4\u8282\uff09\u4e0d\u540c\uff0cRRL\u7b56\u7565\u4e0d\u5305\u542b\u6709\u5173\u4e0d\u540c\u76ee\u6807\u7684\u4fe1\u606f\u3002RRL\u7b56\u7565\u4ec5\u6355\u83b7\u5982\u4f55\u89e3\u51b3\u7279\u5b9a\u4efb\u52a1\u6216\u4e00\u7ec4\u7279\u5b9a\u4efb\u52a1\uff0c\u4f8b\u5982\u5177\u6709\u4e0d\u540c\u5bf9\u8c61\u6570\u7684\u540c\u4e00\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u5f53\u76ee\u6807\u7684\u6027\u8d28\u53d1\u751f\u53d8\u5316\u65f6\uff0cRRL\u8981\u6c42\u4ece\u5934\u5f00\u59cb\u5b66\u4e60\uff0c\u6216\u8005\u81f3\u5c11\u9700\u8981\u67d0\u79cd*\u8f6c\u79fb\u5b66\u4e60 \uff08Taylor\u548cStone\uff0c2007\uff1b Mehta\u7b49\uff0c2008\uff09\u3002 \u8f6c\u79fb\u5b66\u4e60 \u5b9a\u4e49\u4e3a\u5229\u7528\u6765\u81ea\u4e00\u4e2a\u6216\u591a\u4e2a\u6e90\u4efb\u52a1\u7684\u6570\u636e\u6765\u63d0\u9ad8\u53e6\u4e00\u76ee\u6807\u4efb\u52a1\u7684\u5b66\u4e60\u6027\u80fd\u3002 \u7532*\u9636\u7b56\u7565*\u53ef\u4ee5\u88ab\u9690\u5f0f\u5730\u8868\u793a\u4e3a*\u4e00\u9636Q\u51fd\u6570Q\uff08 \uff09= R* \u8be5\u6620\u5c04\u5bf9\u72b6\u6001-\u52a8\u4f5c*\u7684S -\u7532*\u5230\u5176\u9884\u671f\u56de\u62a5*R.* \u8fd9\u79cd\u8868\u793a\u662f\u5bc6\u5207\u76f8\u5173\u7684\u542f\u53d1\u5f0f\u7684\u6982\u5ff5AP\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u72b6\u6001\u6620\u5c04\u4e3a\u5b9e\u73b0\u76ee\u6807\u6240\u9700\u652f\u4ed8\u7684\u8d39\u7528\uff08\u8d1f\u56de\u62a5\uff09\u7684\u4f30\u7b97\u503c\u3002\u5728AP\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5ffd\u7565\u64cd\u4f5c\u7684*\u5220\u9664*\u6548\u679c\u4ece\u95ee\u9898\u8868\u793a\u4e2d\u81ea\u52a8\u63d0\u53d6\u6b64\u6210\u672c\u4f30\u7b97\u3002 2.\u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u7531\u5143\u7ec4 \u7ec4\u6210\uff0c\u5176\u4e2dai\u662f\u5728\u72b6\u6001s ^\u5904\u65bd\u52a0\u7684\u52a8\u4f5c\uff0cs ^ + i\u662f\u7ed3\u679c\u72b6\u6001\uff0c ri \u662f\u83b7\u5f97\u7684\u5956\u52b1\u3002RRL\u4e2d\u7684\u5b66\u4e60\u793a\u4f8b\u901a\u5e38\u662f\u4ece\u968f\u673a\u63a2\u7d22\u4e2d\u751f\u6210\u7684\u3002 3.\u5b66\u4e60\u7b97\u6cd5\u3002Model- ^ ee RRL\u6709\u4e0d\u540c\u7684\u65b9\u6cd5\uff1a \u2022 q\u503c\u51fd\u6570\u7684\u5173\u7cfb\u5b66\u4e60\u3002*\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7528\u5173\u7cfb\u56de\u5f52\u6765\u6982\u62ec\u503c\u51fd\u6570\u3002\u56fe18\u663e\u793a\u4e86\u4e00\u4e2a\u5173\u7cfb\u56de\u5f52\u6811\uff0c\u5f53\u5728\u4e09\u4e2a\u5757\u7684*Blocksworld\u4e2d*\u6c42\u89e3*on\uff08Block\uff0cBlock\uff09*\u4e0a\u7684\u4e00 \u7ec4\u4efb\u52a1\u65f6 \uff0c \u8be5\u6811\u6355\u83b7\u4e86\u52a8\u4f5c*move\uff08Block\uff0cBlock\uff09*\u7684*q\u503c \u2022 \u6700\u4f73\u7b56\u7565\u7684\u5173\u7cfb\u5b66\u4e60\u3002*\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u76f4\u63a5\u5b66\u4e60\u8be5\u7b56\u7565\u3002\u8fd9\u79cd\u65b9\u6cd5\u9700\u8981**\u5173\u7cfb\u5206\u7c7b(PONG\u7684\u52a8\u4f5c\u5206\u7c7b\u7f51\u7edc)**\u800c\u4e0d\u662f**\u5173\u7cfb\u56de\u5f52* \u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u901a\u5e38\uff0c\u4e0e\u7406\u89e3\u7ed3\u6784\u5316\u57df\u7684\u4ef7\u503c\u529f\u80fd\u76f8\u6bd4\uff0c\u7406\u89e3\u7b56\u7565\u8981\u5bb9\u6613\u5f97\u591a\u3002\u56fe19\u663e\u793a\u4e86\u4e00\u4e2aRRL\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u6355\u83b7\u4f55\u65f6\u9009\u62e9\u52a8\u4f5c*move\uff08Block\uff0cBlock\uff09 \u6765\u89e3\u51b3\u4e09\u4e2a*Blocksworld \u57df\u4e2d*on\uff08Block\uff0cBlock\uff09*\u4e0a\u7684\u4e00\u7ec4\u4efb\u52a1\u662f\u6700\u4f73\u7684\u3002 implementations \u00b6 \u5173\u4e8e\u5b66\u4e60\u5173\u7cfb*Q\u51fd\u6570\uff0c*\u5df2\u7ecf\u5c1d\u8bd5\u4e86\u4e0d\u540c\u7684\u5173\u7cfb\u56de\u5f52\u7b97\u6cd5\uff1a \u2022\u5173\u7cfb\u56de\u5f52\u6811\uff08Dzeroski\u7b49\uff0c2001\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5bf9*\uff08\u52a8\u4f5c\uff0c\u5173\u7cfb\u76ee\u6807\uff09\uff0c \u4ece\u4e00\u7ec4\u5f62\u5f0f\u4e3a \uff08state\uff0cq-value\uff09*\u7684\u793a\u4f8b\u4e2d\u6784\u5efa\u56de\u5f52\u6811\u3002\u6811\u7684\u53f6\u8282\u70b9\u8868\u793a*q\u503c*\u7684\u9884\u6d4b\u3002\u6811\u7684\u6d4b\u8bd5\u8282\u70b9\u8868\u793a\u8981\u5b9e\u73b0\u9884\u6d4b\u6240\u5fc5\u987b\u5177\u5907\u7684\u4e8b\u5b9e\u3002 \u2022\u5177\u6709\u5173\u7cfb\u8ddd\u79bb\u7684\u57fa\u4e8e\u5b9e\u4f8b\u7684\u7b97\u6cd5\uff08Driessens\u548cRamon\uff0c2003\u5e74\uff09\u3002\u8fd9\u9879\u5de5\u4f5c\u5b9e\u73b0\u4e86k\u8fd1\u90bb\u9884\u6d4b\u3002\u8be5\u9884\u6d4b\u4e3a\u6536\u96c6\u7684\u793a\u4f8b\u7684*q\u503c* \u8ba1\u7b97\u52a0\u6743\u5e73\u5747\u503c\u3002\u7528\u4e8e\u9884\u6d4b\u7684\u6743\u91cd\u4e0e\u5230\u793a\u4f8b\u7684\u8ddd\u79bb\u6210\u53cd\u6bd4\u3002\u4f7f\u7528\u7684\u8ddd\u79bb\u53ef\u4ee5\u5904\u7406\u72b6\u6001\u548c\u52a8\u4f5c\u7684\u5173\u7cfb\u8868\u793a\u3002 \u2022\u5173\u7cfb\u6838\u65b9\u6cd5\uff08Gartner\u7b49\uff0c2003\uff09\u3002\u8fd9\u4e9b\u65b9\u6cd5\u4f7f\u7528\u53ef\u589e\u91cf\u5b66\u4e60\u7684 \u9ad8\u65af\u8fc7\u7a0b*\u8fdb\u884c\u8d1d\u53f6\u65af\u56de\u5f52\uff0c\u4ee5\u5c06 \uff08\u72b6\u6001\uff0c\u52a8\u4f5c\uff09 \u5bf9\u6620\u5c04\u4e3a*q\u503c \u3002\u56fe\u5185\u6838\u88ab\u7528\u4f5c\u72b6\u6001\u52a8\u4f5c\u5bf9\u4e4b\u95f4\u7684\u534f\u65b9\u5dee\u51fd\u6570\uff0c\u4ee5\u5728\u5173\u7cfb\u8bbe\u7f6e\u4e2d\u91c7\u7528*\u9ad8\u65af\u8fc7\u7a0b*\u3002 \u5bf9\u4e8e\u76f4\u63a5\u5b66\u4e60\u76f8\u5173\u7684\u653f\u7b56\uff0c\uff08Dzeroski\u7b49\uff0c2001\uff09\u91c7\u7528\u5173\u7cfb\u51b3\u7b56\u6811\u6765\u786e\u5b9a\u54ea\u4e9b\u884c\u4e3a\u662f\u5728\u4e0d\u540c\u7684\u73af\u5883\u6700\u4f18\uff0c\u5b9e\u73b0\u7279\u5b9a\u4efb\u52a1\u65f6S\u72b6\u6001\u3002 RL\u7684\u76ee\u7684\u4e0eAP\u7684\u5b66\u4e60\u76ee\u7684\u7d27\u5bc6\u76f8\u5173\u3002\u4f46\u662f\uff0cRL\u5728\u89e3\u51b3AP\u95ee\u9898\u65f6\u901a\u5e38\u8868\u73b0\u51fa\u4e24\u79cd\u7f3a\u70b9\uff1a \u2022 \u53ef\u4f38\u7f29\u6027\u3002*\u8c61\u5f81\u6027\u89c4\u5212\u95ee\u9898\u7684\u7a7a\u95f4\u72b6\u6001\u901a\u5e38\u5f88\u5927\u3002\u8fd9\u4e2a\u7a7a\u95f4\u968f\u7740\u5bf9\u8c61\u548c\u8c13\u8bcd\u6570\u91cf\u7684\u589e\u957f\u800c\u5448\u6307\u6570\u589e\u957f\u3002\u8bb8\u591aRL\u7b97\u6cd5\uff08\u4f8b\u5982 *Q\u5b66\u4e60\uff09*\u90fd\u9700\u8981\u4e00\u5f20\u8868 \uff0c*\u8be5\u8868\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u4e3a\u6bcf\u4e2a\u72b6\u6001\u63d0\u4f9b\u4e00\u4e2a\u6761\u76ee\uff0c\u4ece\u800c\u9650\u5236\u4e86\u5b83\u4eec\u5bf9AP\u95ee\u9898\u7684\u9002\u7528\u6027\u3002\u89e3\u51b3\u6b64\u9650\u5236\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5173\u7cfb\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u91c7\u7528\u4e0e\u7b26\u53f7\u8ba1\u5212\u76f8\u540c\u7684\u72b6\u6001\u8868\u793a\u5f62\u5f0f\uff0c\u5c31\u50cf\u5728RRL\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002 \u2022 *\u6cdb\u5316\u3002*RL\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u7279\u5b9a\u76ee\u6807\u7684\u5b66\u4e60\u3002\u6bcf\u6b21\u76ee\u6807\u66f4\u6539\u65f6\uff0cRL\u4ee3\u7406\u90fd\u9700\u8981\u4ece\u5934\u5f00\u59cb\u5b66\u4e60\uff0c\u6216\u8005\u81f3\u5c11\u8981\u5b66\u4e60*\u8fc1\u79fb\u5b66\u4e60*\u8fc7\u7a0b\u3002RRL\u5e76\u975e\u5b8c\u5168\u5982\u6b64\u3002\u5047\u5b9aRRL\u4f7f\u7528\u4e00\u9636\u8c13\u8bcd\u8868\u793a\u76ee\u6807\uff0c\u5219RRL\u4ee3\u7406\u53ef\u4ee5\u5728\u5177\u6709\u5176\u4ed6\u5bf9\u8c61\u7684\u4efb\u52a1\u4e2d\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u8c03\u6574\u5176\u5b66\u4e60\u7684\u7b56\u7565\uff0c\u5c3d\u7ba1\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u57f9\u8bad\u624d\u80fd\u83b7\u5f97\u6700\u4f73\uff08\u751a\u81f3\u53ef\u63a5\u53d7\u7684\uff09\u6027\u80fd\u6c34\u5e73\u3002\u751a\u81f3\u5728*\u57fa\u4e8e\u6a21\u578b\u7684*RL \u7684\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u8fd8\u5b66\u4e60\u73af\u5883\u6a21\u578b\u5e76\u5229\u7528\u5b83\u6765\u66f4\u6709\u6548\u5730\u5b66\u4e60\u7b56\u7565\u3002\u4e60\u5f97\u7684\u6a21\u578b\u901a\u5e38\u7528\u4e8e\u751f\u6210\u6709\u5173\u5982\u4f55\u63a2\u7d22\u6216\u8ba1\u5212\u8f68\u8ff9\u7684\u5efa\u8bae\uff0c\u4ee5\u4fbf\u4ee3\u7406\u53ef\u4ee5\u83b7\u53d6\u66f4\u9ad8\u7684\u56de\u62a5\u3002\u4ec0\u4e48\u65f6\u5019*\u57fa\u4e8e\u6a21\u578b\u7684*\u6280\u672f\u5e94\u7528\u4e8eRRL\uff08Croonenborghs\u7b49\uff0c2007b\uff09\uff0c\u5b83\u4eec\u4ea7\u751f\u7684\u7b26\u53f7\u52a8\u4f5c\u6a21\u578b\u4e0eAP\u4e2d\u5b66\u4e60\u7684\u76f8\u4f3c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u4ee5\u4e0b\u4e8b\u5b9e\uff1aAP\u7528\u6807\u51c6\u7684\u8ba1\u5212\u8868\u793a\u8bed\u8a00\u5b66\u4e60\u52a8\u4f5c\u6a21\u578b\uff0c\u800c\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u5219\u7531\u73b0\u6210\u7684\u8ba1\u5212\u8005\u5b8c\u6210\u3002 \u5c3d\u7ba1RRL\u53d6\u5f97\u4e86\u8fdb\u6b65\uff0c\u4f46\u5c06RRL\u5e94\u7528\u4e8e\u8ba1\u5212\u95ee\u9898\u4ecd\u7136\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002\u5728\u50cf*Blocksworld* \u8fd9\u6837\u7684\u590d\u6742\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0cRRL\u4ee3\u7406\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u63a2\u7d22\u52a8\u4f5c\uff0c\u5374\u6ca1\u6709\u5b66\u5230\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3a\u6ca1\u6709\u9047\u5230\u4efb\u4f55\u5956\u52b1\uff08\u76ee\u6807\u72b6\u6001\uff09\u3002\u76ee\u524d\uff0c\u901a\u8fc7\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7f13\u89e3RRL\u4e2d\u968f\u673a\u63a2\u7d22\u7684\u5c40\u9650\u6027\u3002\u7b2c\u4e00\u4e2a\u4f7f\u7528\u4eba\u7c7b\u5b9a\u4e49\u7684*\u5408\u7406\u653f\u7b56\u7684*\u75d5\u8ff9\u4e3a\u5b66\u4e60\u63d0\u4f9b\u4e86\u4e00\u4e9b\u79ef\u6781\u7684\u5956\u52b1\uff08Driessens\u548cMatwin\uff0c2004\uff09\u3002\u7b2c\u4e8c\u79cd\u5c06\u8f6c\u79fb\u5b66\u4e60\u5e94\u7528\u4e8e\u5173\u7cfb\u73af\u5883\uff08Croonenborghs\u7b49\uff0c2007a\uff09\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0cRRL\u4e13\u6ce8\u4e8e\u9488\u5bf9\u7279\u5b9a\u76ee\u6807\u7684\u5b66\u4e60\u7b56\u7565\uff0c\u4f8b\u5982*Blocksworld\u7684**on\uff08X\uff0cY\uff09 \uff0c\u4f46*\u65e0\u6cd5\u89e3\u51b3*\u5fc5\u987b\u5b9e\u73b0\u4ea4\u4e92\u76ee\u6807\u7684\u95ee\u9898\uff0c\u4f8b\u5982*\u5728\uff08X\uff0c Y\uff09\uff0con\uff08Y\uff0cZ\uff09\uff0con\uff08Z\uff0cW\uff09\u3002*\u5728\u4f20\u7edf\u4e0a\u5728AP\u4e2d\u89e3\u51b3\u7684\u8fd9\u7c7b\u95ee\u9898\u4e2d\uff0c\u7279\u5b9a\u76ee\u6807\u7684\u5b9e\u73b0\u53ef\u80fd\u4f1a\u4f7f\u4ee5\u524d\u6ee1\u8db3\u7684\u76ee\u6807\u65e0\u6cd5\u5b9e\u73b0\u3002\u5fc5\u987b\u4ee5\u7279\u5b9a\u7684\u987a\u5e8f\u5b9e\u73b0\u8fd9\u79cd\u76ee\u6807\uff08\u5c31\u50cf*Sussman\u5f02\u5e38\u4e2d*\u6240\u53d1\u751f\u7684\u90a3\u6837 \uff09\u3002*\u636e\u6211\u4eec\u6240\u77e5\uff0c\u6ca1\u6709\u4e00\u4e2a\u62a5\u544a\u7684RRL\u65b9\u6cd5\u5177\u6709\u81ea\u52a8\u6355\u83b7\u6709\u5173\u76ee\u6807\u4ea4\u4e92\u7684\u77e5\u8bc6\u7684\u673a\u5236\u3002 Discussion \u00b6 \u572890\u5e74\u4ee3\u4e2d\u671f\u524d5\u5c0f\u53f7\u7684ML\u5c3d\u6570\u7528\u4e8eAP\u83b7\u6089\u63d0\u9ad8\u89c4\u5212\u8005\u7684\u6027\u80fd\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u3002\u5728\u6b64\u671f\u95f4\uff0c\u8ba1\u5212\u4eba\u5458\u5b9e\u65bd\u4e86\u4e0d\u4e86\u89e3\u60c5\u51b5\u7684\u641c\u7d22\u7b97\u6cd5\uff0c\u56e0\u6b64ML\u5e2e\u52a9\u8ba1\u5212\u4eba\u5458\u5728\u8bb8\u591a\u9886\u57df\u4e2d\u5b9e\u73b0\u4e86\u66f4\u597d\u7684\u6027\u80fd\u3002\u572890\u5e74\u4ee3\u540e\u671f\uff0c\u89c4\u5212\u754c\u5bf9ML\u7684\u5174\u8da3\u4e0b\u964d\u4e86\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\u3002\u5f3a\u5927\u7684\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u51fa\u73b0\u63d0\u9ad8\u4e86\u8ba1\u5212\u8005\u7684\u7ee9\u6548\u3002\u7a81\u7136\u4e4b\u95f4\uff0c\u8bc4\u4f30ML\u6536\u76ca\u7684\u57fa\u51c6\u53d1\u751f\u4e86\u5de8\u5927\u53d8\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u73b0\u6709\u7684\u5173\u7cfb\u5b66\u4e60\u7b97\u6cd5\u6548\u7387\u4f4e\u4e0b\uff0c\u5e76\u4e14\u5728\u591a\u4e2a\u9886\u57df\u4e2d\u7684\u8868\u73b0\u90fd\u5f88\u5dee\u3002 \u5982\u4eca\uff0c\u53d7AP\u5728\u5b9e\u9645\u95ee\u9898\u4e2d\u7684\u5e94\u7528\u4ee5\u53ca\u5173\u7cfb\u5b66\u4e60\u7684\u6210\u719f\u6240\u9f13\u821e\uff0c\u4eba\u4eec\u5bf9\u8ba1\u5212\u5b66\u4e60\u7684\u5174\u8da3\u518d\u6b21\u5174\u8d77\u30022005\u5e74\uff0c\u56fd\u9645\u89c4\u5212\u7cfb\u7edf\u77e5\u8bc6\u5de5\u7a0b\u7ade\u8d5b\uff08ICKEPS\uff09\u5f00\u59cb\u4e86\uff0c2008\u5e74\uff0cIPC\u5f00\u8bbe\u4e86\u5b66\u4e60\u8def\u5f84\u3002\u5728\u81ea\u52a8\u89c4\u5212\u548c\u65e5\u7a0b\u5b89\u6392\u56fd\u9645\u4f1a\u8bae\u4e0a\u5b9a\u671f\u4e3e\u529e\u4e86\u6709\u5173\u89c4\u5212\u548c\u5b66\u4e60\u7684\u8bb2\u4e60\u73ed\u3002ML\u4f3c\u4e4e\u518d\u6b21\u6210\u4e3a\u5e94\u5bf9AP\u6311\u6218\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u3002 Conclution \u00b6 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u91cd\u70b9\u4ecb\u7ecd\u4e86AP\u9762\u4e34\u7684\u4e24\u4e2a\u6311\u6218\uff1a\u5b9a\u4e49\u6709\u6548\u7684AP\u884c\u4e3a\u6a21\u578b\u548c\u5b9a\u4e49\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u4ee5\u63d0\u9ad8\u89c4\u5212\u4eba\u5458\u7684\u7ee9\u6548\u3002\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6311\u6218\uff0c\u6211\u4eec\u56de\u987e\u4e86\u5b66\u4e60\u5177\u6709\u591a\u79cd\u5f62\u5f0f\u7684\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\u7684\u884c\u52a8\u6a21\u578b\u7684\u7cfb\u7edf\u3002\u8fd9\u4e9b\u7cfb\u7edf\u901a\u5e38\u63d0\u4f9b\u5728\u6536\u96c6\u9002\u5f53\u7684\u5b66\u4e60\u793a\u4f8b\u65f6\u6709\u6548\u7684\u5b66\u4e60\u7b97\u6cd5\uff0c\u5c3d\u7ba1\u4ecd\u4e0d\u6e05\u695a\u5982\u4f55\u5728AP\u4e2d\u81ea\u52a8\u6536\u96c6\u826f\u597d\u7684\u5b66\u4e60\u793a\u4f8b\u96c6\u3002\u5f53\u5b66\u4e60\u5bfc\u81f4\u52a8\u4f5c\u6a21\u578b\u4e0d\u5b8c\u5584\u65f6\uff0c\u51e0\u4e4e\u6ca1\u6709\u673a\u5236\u53ef\u4ee5\u8bca\u65ad\u6a21\u578b\u6216\u7b97\u6cd5\u7684\u7f3a\u9677\u4ee5\u5bf9\u5176\u8fdb\u884c\u5065\u58ee\u7684\u8ba1\u5212\u3002 \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u6311\u6218\uff0c\u6211\u4eec\u56de\u987e\u4e86\u4e0d\u540c\u5f62\u5f0f\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\uff0c\u4ee5\u6539\u8fdb\u73b0\u6210\u7684\u8ba1\u5212\u8005\u3002\u5df2\u7ecf\u663e\u793a\u51fa\u8fd9\u79cd\u77e5\u8bc6\u53ef\u4ee5\u63d0\u9ad8\u7279\u5b9a\u9886\u57df\u89c4\u5212\u4eba\u5458\u7684\u8868\u73b0\u3002\u7531\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u9886\u57df\u53ef\u80fd\u5448\u73b0\u51fa\u622a\u7136\u4e0d\u540c\u7684\u7ed3\u6784\uff0c\u56e0\u6b64\u5728\u4e00\u7cfb\u5217\u9886\u57df\u4e2d\u5b66\u4e60\u6709\u6548\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u4ecd\u7136\u5177\u6709\u6311\u6218\u6027\u3002\u6211\u4eec\u8fd8\u56de\u987e\u4e86\u9488\u5bf9HTN\u8ba1\u5212\u8005\u7684\u5b66\u4e60\u641c\u7d22\u63a7\u5236\uff0c\u8fd9\u662f\u63a7\u5236\u77e5\u8bc6\u7684\u4e00\u79cd\u66f4\u5177\u8868\u8fbe\u6027\u7684\u5f62\u5f0f\uff0c\u5b83\u4f7f\u7528\u57fa\u4e8e\u7279\u5b9a\u9886\u57df\u95ee\u9898\u5206\u89e3\u7684\u4e0d\u540c\u8ba1\u5212\u8303\u5f0f\u3002\u5728\u8fd9\u79cd\u8ba1\u5212\u8303\u5f0f\u4e2d\uff0c\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u548c\u52a8\u4f5c\u6a21\u578b\u6ca1\u6709\u5728\u9886\u57df\u7406\u8bba\u7684\u5b9a\u4e49\u4e2d\u5206\u5f00\u3002 \u672c\u6587\u8fd8\u56de\u987e\u4e86RRL\u7684\u6280\u672f\uff0cRRL\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8eAP\u7684RL\u5f62\u5f0f\uff0c\u5b83\u4f7f\u7528\u8c13\u8bcd\u903b\u8f91\u6765\u8868\u793a\u72b6\u6001\u548c\u52a8\u4f5c\u3002\u5c3d\u7ba1\u5f53\u524d\u7684RRL\u6280\u672f\u53ef\u4ee5\u89e3\u51b3\u5173\u7cfb\u4efb\u52a1\uff0c\u4f46\u4e0eAP\u6280\u672f\u7684\u5b66\u4e60\u76f8\u6bd4\uff0c\u5b83\u4eec\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u4e00\u7ec4\u7279\u5b9a\u7684\u76ee\u6807\u5e76\u5b58\u5728\u666e\u904d\u6027\u5c40\u9650\u6027\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u5728\u89e3\u51b3\u590d\u6742\u4efb\u52a1\uff08\u5982AP\u4e2d\u4f20\u7edf\u89e3\u51b3\u7684\u4efb\u52a1\uff09\u65b9\u9762\u79ef\u7d2f\u4e86\u5927\u91cf\u7ecf\u9a8c\u65b9\u9762\u5b58\u5728\u95ee\u9898\uff0c\u5728\u8fd9\u4e9b\u4efb\u52a1\u4e2d\uff0c\u5b9e\u73b0\u7279\u5b9a\u76ee\u6807\u53ef\u80fd\u4f1a\u4f7f\u4ee5\u524d\u8fbe\u5230\u7684\u76ee\u6807\u65e0\u6cd5\u5b9e\u73b0\u3002 6.2\u672a\u89e3\u51b3\u7684\u95ee\u9898 \u4e0b\u9762\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4efd\u6e05\u5355\uff0c\u5217\u51fa\u4e86\u6211\u4eec\u8ba4\u4e3a\u662fAP\u5b66\u4e60\u7684\u672a\u89e3\u51b3\u95ee\u9898\u6216\u672a\u6765\u9014\u5f84\u3002\u6211\u4eec\u6839\u636e\u672c\u6587\u7684\u56db\u4e2a\u4e3b\u8981\u4e3b\u9898\u5bf9\u8fd9\u4e9b\u95ee\u9898\u8fdb\u884c\u5212\u5206\uff1a\u77e5\u8bc6\u8868\u793a\uff0c\u5b66\u4e60\u793a\u4f8b\uff0c\u5b66\u4e60\u7b97\u6cd5\u548c\u5bf9\u6240\u5b66\u77e5\u8bc6\u7684\u5229\u7528\uff1a \u2022\u77e5\u8bc6\u8868\u793a\u3002 \u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u67e5\u627eAP\u7684\u9009\u4fee\u77e5\u8bc6\u8868\u793a\u5f62\u5f0f Domain \u4ecd\u7136\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002\u5982\u679c\u6240\u9009\u7684\u8868\u793a\u5f62\u5f0f\u65e0\u6cd5\u5728\u7ed9\u5b9a\u7684\u9886\u57df\u4e2d\u8868\u8fbe\u5173\u952e\u77e5\u8bc6\uff0c\u5219\u5b66\u4e60\u7b97\u6cd5\u5c06\u4e0d\u4f1a\u4e3a\u8be5\u9886\u57df\u751f\u6210\u6709\u6548\u7684AP\u77e5\u8bc6\u3002\u4f8b\u5982\uff0c\u5728*Blocksworld* \u9886\u57df\u4e2d*\u653e\u7f6e**\u9002\u5f53\u7684*\u533a\u5757\u7684\u6982\u5ff5\u6216\u5728*Logistics\u4e2d**\u6700\u7ec8\u57ce\u5e02\u7684*\u6982\u5ff5\u5c31\u662f\u8fd9\u79cd\u5173\u952e\u77e5\u8bc6\u7684\u4f8b\u5b50\u57df\uff08Khardon\uff0c1999\uff09\u3002\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\u9700\u8981\u5f52\u7eb3\u51fa\u7ed9\u5b9a\u9886\u57df\u7684\u5173\u952e\u77e5\u8bc6\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u8868\u8fbe\u5b83\u7684\u5408\u9002\u8868\u793a\u5f62\u5f0f\u3002\u5728\u8fd9\u65b9\u9762\uff0c\uff08Yoon\u7b49\u4eba\uff0c2008\uff09\u4e2d\u63d0\u51fa\u7684\u5de5\u4f5c\u4f7f\u7528\u4e86\u4e00\u7cfb\u5217\u6d4b\u8bd5\u95ee\u9898\uff0c\u4ee5\u5728\u5b66\u4e60\u901a\u7528\u653f\u7b56\u65f6\u8bc4\u4f30\u89c4\u5212\u73af\u5883\u4e0d\u540c\u7279\u5f81\u7684\u6548\u7528\u3002 \u53e6\u4e00\u4e2a\u6f5c\u5728\u76f8\u5173\u7684\u65b9\u9762\u662f\u8868\u793a\u8bed\u8a00\u5982\u4f55\u5f71\u54cd\u5b66\u4e60\u6709\u6548\u77e5\u8bc6\u7684\u80fd\u529b\u3002\u5728\uff08Martin\u548cGeffner\uff0c2000\uff1b Cresswell\u7b49\u4eba\uff0c2009\uff09\u4e2d\uff0c\u4f5c\u8005\u5c55\u793a\u4e86\u4f7f\u7528\u5bf9\u8c61\u4e2d\u5fc3\u8868\u793a\u8fdb\u884cAP\u5b66\u4e60\u7684\u5f71\u54cd\uff0c\u4f46\u5c1a\u672a\u4f7f\u7528\u8bf8\u5982SAS +\uff08Helmert\uff0c2009\uff09\u7b49**\u65b0\u7684\u6807\u51c6\u8868\u793a\u4ee3\u66ffPDDL**\u3002\u8be6\u7ec6\u7814\u7a76\u3002 \u66f4\u5177\u8868\u8fbe\u6027\u7684\u5f62\u5f0f\u5316\u8868\u793a\u5f62\u5f0f\uff0c\u4f8b\u5982**\u7a0b\u5e8f**\uff0c\u5df2\u7ecf\u663e\u793a\u4e86\u65f6\u95f4\u516c\u5f0f\u6216\u5c42\u6b21\u8868\u793a\u5f62\u5f0f\u6765\u63cf\u8ff0\u62bd\u8c61\u7ed3\u6784\uff0c\u4f8b\u5982\u4ee3\u8868\u8bb8\u591aAP\u57df\u6709\u6548\u77e5\u8bc6\u7684\u5faa\u73af\u6216\u5c42\u6b21\u7ed3\u6784\u3002\u7136\u800c\uff0c\u5b66\u4e60\u8fd9\u4e9b\u8868\u793a\u7684\u5927\u591a\u6570\u65b9\u6cd5\u90fd\u9700\u8981\u989d\u5916\u7684\u6807\u7b7e\uff0c\u4f8b\u5982\u6807\u8bb0\u62bd\u8c61\u4efb\u52a1\u7684\u6ce8\u91ca\uff0c\u5faa\u73af\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u7ed3\u675f\u6761\u4ef6\u7b49\u3002\u8fd9\u79cd\u6807\u7b7e\u4e0d\u80fd\u8f7b\u6613\u5730\u4ece\u89c2\u5bdf\u5230\u7684\u6267\u884c\u4e2d\u81ea\u52a8\u83b7\u5f97\u3002\u73b0\u6210\u7684\u8ba1\u5212\u8005\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u6b64\u77e5\u8bc6\uff0c\u9700\u8981\u80fd\u591f\u5229\u7528\u8fd9\u79cd\u77e5\u8bc6\u7684\u201c\u4e34\u65f6\u201d\u8ba1\u5212\u7cfb\u7edf\u3002\u9700\u8981\u8fdb\u4e00\u6b65\u5b66\u4e60\u548c\u4e3a\u73b0\u6210\u7684\u8ba1\u5212\u8005\u8fdb\u884c\u6c47\u7f16\u3002 \u2022 \u5b66\u4e60\u5b9e\u4f8b \u3002 \u5b9e\u65bd\u673a\u5236\u4ee5\u81ea\u52a8\u6536\u96c6AP\u7684\u5b66\u4e60\u793a\u4f8b\u4ecd\u7136\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\u968f\u673a\u63a2\u7d22\u901a\u5e38\u4f1a\u5bf9AP\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u8fdb\u884c\u6b20\u91c7\u6837\u3002AP\u52a8\u4f5c\u5448\u73b0\u7684\u524d\u63d0\u6761\u4ef6\u53ea\u6709\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u624d\u80fd\u6ee1\u8db3\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u5076\u7136\u88ab\u9009\u62e9\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\u3002\u53ef\u4ee5\u4eceAP\u57f9\u8bad\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\u63d0\u53d6\u5b66\u4e60\u793a\u4f8b\u3002\u4f20\u7edf\u4e0a\uff0c\u8fd9\u4e9b\u8bad\u7ec3\u95ee\u9898\u662f\u7531\u5e26\u6709\u4e00\u4e9b\u53c2\u6570\u7684\u968f\u673a\u751f\u6210\u5668\u83b7\u5f97\u7684\uff0c\u4ee5\u8c03\u6574\u95ee\u9898\u7684\u96be\u5ea6\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e24\u4e2a\u5c40\u9650\u6027\u3002 \uff081\uff09\u4fdd\u8bc1AP\u95ee\u9898\u7684\u53ef\u89e3\u51b3\u6027\u5e76\u975e\u6613\u4e8b\u3002\u8868\u660e\u4ece\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u53ef\u4ee5\u8fbe\u5230\u76ee\u6807\u4e0e\u89e3\u51b3\u539f\u59cbAP\u4efb\u52a1\u4e00\u6837\u56f0\u96be\u3002 \uff082\uff09AP\u95ee\u9898\u751f\u6210\u5668\u7684\u53c2\u6570\u662f\u7279\u5b9a\u4e8e\u57df\u7684\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684AP\u57df\uff0c\u4e16\u754c\u5bf9\u8c61\u7684\u6570\u91cf\u548c\u7c7b\u578b\u662f\u4e0d\u540c\u7684\uff0c\u5e76\u4e14\u8c03\u6574\u8fd9\u4e9b\u53c2\u6570\u4ee5\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u5b66\u4e60\u793a\u4f8b\u610f\u5473\u7740\u57df\u7684\u4e13\u4e1a\u77e5\u8bc6\u3002 \u5728\uff08Fern\u7b49\u4eba\uff0c2004\uff09\u4e2d\uff0cRandom Walks\u88ab\u5f15\u5165\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u5fc5\u5177\u6709\u9886\u57df\u4e13\u4e1a\u77e5\u8bc6\u5c31\u80fd\u83b7\u5f97\u826f\u597d\u7684\u5b66\u4e60\u5b9e\u4f8b\u3002\u968f\u673a\u6e38\u8d70\u662f\u4e00\u79cd\u81ea\u52a8\u4e14\u72ec\u7acb\u4e8e\u57df\u7684\u7b56\u7565\uff0c\u7528\u4e8e\u81ea\u52a8\u751f\u6210\u9010\u6e10\u589e\u52a0\u6e38\u8d70\u957f\u5ea6\u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5728\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u4e16\u754c\u5bf9\u8c61\u6570\u91cf\u7684\u57df\u4e2d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e0d\u591f\u7684\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u4ece\u5148\u524d\u72b6\u6001\u5f00\u59cb\u7684\u4e3b\u52a8\u5b66\u4e60\u65b9\u6cd5\u6765\u4ea7\u751f\u8bad\u7ec3\u95ee\u9898\uff08Fuentetaja\u548cBorrajo\uff0c2006\u5e74\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b66\u4e60\u8fc7\u7a0b\u4f1a\u53d7\u5230\u4e0a\u8ff0\u95ee\u9898\u7684\u5f71\u54cd\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u5bf9\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u4e16\u754c\u5bf9\u8c61\u6570\u91cf\u7684\u9886\u57df\u4e2d\u96be\u5ea6\u4e0d\u65ad\u589e\u52a0\u7684\u95ee\u9898\u8fdb\u884c\u968f\u673a\u63a2\u7d22\u3002\u9274\u4e8e\u57df\u662f\u975e\u5bf9\u79f0\u7684\uff0c\u540e\u4e00\u79cd\u65b9\u6cd5\u53ef\u80fd\u4f1a\u4ea7\u751f\u65e0\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u56e0\u6b64\uff0c\u8fd9\u4e2a\u95ee\u9898\u4ecd\u7136\u5b58\u5728\u3002\u5fc5\u987b\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\u4ee5\u63d0\u51fa\u66f4\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u2022\u5b66\u4e60\u7b97\u6cd5\u3002 AP\u7684\u65b0ML\u7b97\u6cd5\u7684\u5e94\u7528\u548c\u7ec4\u5408\u4ecd\u7136\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002ML\u4e0d\u65ad\u5f00\u53d1\u65b0\u7684\u5b66\u4e60\u7b97\u6cd5\uff0c\u5e76\u5c06\u5176\u6f5c\u5728\u5730\u5e94\u7528\u4e8eAP\u3002\u5728\u5173\u7cfb\u5b66\u4e60\u7684\u60c5\u51b5\u4e0b\uff0cAP\u4ec5\u53d7\u76ca\u4e8e**\u5206\u7c7b\u548c\u56de\u5f52**\u7b97\u6cd5\uff0c\u4f46\u662f\u73b0\u6709\u7684\u5173\u7cfb\u5b66\u4e60\u7b97\u6cd5\u51e0\u4e4e\u6db5\u76d6\u4e86\u6240\u6709\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u3002\u5728AP\u4e2d\u5c1a\u672a\u63a2\u7d22\u7528\u4e8e**\u5173\u7cfb\u805a\u7c7b\u6216\u63a8\u65ad\u5173\u8054\u89c4\u5219**\u7684\u7b97\u6cd5\uff08Raedt\uff0c2008\u5e74\uff09\u3002\u547d\u9898\u6570\u636e\u7684ML\u7b97\u6cd5\u53ef\u4ee5\u9002\u5e94AP\u4e2d\u4f7f\u7528\u7684\u5173\u7cfb\u8bbe\u7f6e\uff08Mourao\u7b49\uff0c2010\uff09\u3002 \u5c06\u65b0\u7684ML\u7b97\u6cd5\u5e94\u7528\u4e8eAP\u7684\u53e6\u4e00\u4e2a\u793a\u4f8b\u662f\u4f7f\u7528\u5185\u6838\u51fd\u6570\u6709\u6548\u5730\u5339\u914d\u8ba1\u5212\u5b9e\u4f8b\uff08Serina\uff0c2010\u5e74\uff09\u3002\u5c3d\u7ba1\u6709\u6240\u6709\u8fd9\u4e9b\u65b0\u7684ML\u6280\u672f\uff0c\u5b66\u4e60\u7b97\u6cd5\u5b58\u5728\u5f71\u54cd\u5b66\u4e60\u8fc7\u7a0b\u7684\u504f\u89c1\u3002\u7528\u4e8eAP\u7684ML\u7814\u7a76\u53ef\u4ee5\u91c7\u53d6\u65b0\u7684\u7814\u7a76\u65b9\u5411\u6765\u7814\u7a76\u4e0d\u540c\u5b66\u4e60\u7b97\u6cd5\u7684\u7ec4\u5408\uff0c\u4ee5\u51cf\u5c11\u7ed9\u5b9a\u7b97\u6cd5\u504f\u5dee\u7684\u8d1f\u9762\u5f71\u54cd\uff08Kittler\uff0c1998\uff09\u3002 \u2022\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002 AP\u5b66\u4e60\u4e2d\u7684\u8fd9\u4e9b\u5f00\u653e\u6027\u95ee\u9898\u7ecf\u5e38\u5bfc\u81f4\u5b66\u4e60\u77e5\u8bc6\u7684\u4e0d\u5b8c\u5584\u3002\u5982IPC-2008\u5b66\u4e60\u8f68\u8ff9\u6240\u793a\uff0c\u76f4\u63a5\u5e94\u7528\u6709\u7f3a\u9677\u7684\u5b66\u4e60\u77e5\u8bc6\u53ef\u80fd\u4f1a\u635f\u5bb3AP\u7684\u8fc7\u7a0b\u6027\u80fd\u3002\u6240\u5b66\u77e5\u8bc6\u7684\u5e94\u7528\u8d8a\u8d2a\u5a6a\uff0c\u5219AP\u7b97\u6cd5\u5bf9\u6240\u5b66\u77e5\u8bc6\u7684\u7f3a\u9677\u8d8a\u654f\u611f\u3002\u5728\u89c4\u5212\u548c\u5b66\u4e60\u7cfb\u7edf\u7684\u5f00\u53d1\u65b9\u9762\uff0c\u6700\u8fd1\u6709\u4e00\u6761\u5de5\u4f5c\u7ebf\uff0c\u65e8\u5728\u5efa\u7acb\u5373\u4f7f\u5728\u5b66\u4e60\u5230\u6709\u5bb3\u77e5\u8bc6\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u786e\u4fdd\u8fdb\u884c\u53ef\u9760\u89c4\u5212\u7684\u673a\u5236\u3002\u8fd9\u4e9b\u7cfb\u7edf\u4e0d\u4ec5\u4e13\u6ce8\u4e8e\u5b66\u4e60\u8fc7\u7a0b\uff0c\u800c\u4e14\u4e13\u6ce8\u4e8e\u6240\u5b66\u77e5\u8bc6\u7684\u5f3a\u5927\u5e94\u7528\u3002\u5c06\u5b66\u5230\u7684\u77e5\u8bc6\u4e0e\u72ec\u7acb\u4e8e\u9886\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u76f8\u7ed3\u5408\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u8ba1\u5212\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5728\u4f17\u591a\u9886\u57df\u4e2d\u90fd\u4e0e\u6700\u65b0\u7684\u8ba1\u5212\u8005\u7ade\u4e89\uff08Yoon\u7b49\u4eba\uff0c2007\uff0c2008\uff09\u3002\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u7814\u7a76\u9886\u57df\u662f\u8bc4\u4f30\u6240\u5b66\u57df\u63a7\u5236\u77e5\u8bc6\u7684\u8d28\u91cf\u7684\u673a\u5236\u7684\u5f00\u53d1\u3002\u8fd9\u6837\u7684\u673a\u5236\u5bf9\u4e8e\u5b9a\u4e49\u4e0d\u540c\u7684\u5229\u7528\u7b56\u7565\u53ef\u80fd\u662f\u6709\u7528\u7684\u3002\u5f53\u524d\u53ef\u7528\u4e8e\u5b66\u4e60\u7684\u77e5\u8bc6\u7684\u552f\u4e00\u8bc4\u4f30\u673a\u5236\u662f\u7ecf\u9a8c\u6027\u7684\uff0c\u5305\u62ec\u4f7f\u7528\u5b66\u4e60\u7684\u77e5\u8bc6\u6765\u89e3\u51b3\u4e00\u7ec4\u8bad\u7ec3\u793a\u4f8b\u4ee5\u4f30\u8ba1\u5176\u6027\u80fd\u3002\u9664\u7ade\u4e89\u5916\uff0c\u5728AP\u4e2d\u5229\u7528\u5df2\u5b66\u77e5\u8bc6\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4e0e\u6700\u7ec8\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u3002\u6df7\u5408\u4e3b\u52a8\u8ba1\u5212\u7cfb\u7edf\uff08Ferguson\u7b49\uff0c1996\uff1b Bresina\u7b49\uff0c2005\uff1b Cortellessa\u548cCesta\uff0c \u8fd9\u6b21\u5ba1\u67e5\u7684\u91cd\u70b9\u662f\u5b66\u4e60AP\u8fc7\u7a0b\u7684\u4e24\u4e2a\u8f93\u5165\uff0c \u52a8\u4f5c\u6a21\u578b\u548c\u641c\u7d22\u63a7\u5236\u77e5\u8bc6 \u3002\u6709\u5168\u5957\u6280\u672f\u65e8\u5728\u6355\u83b7\u6709\u5173AP\u8fdb\u7a0b\u7684\u7b2c\u4e09\u4e2a\u8f93\u5165\u4fe1\u606f\u7684\u4fe1\u606f\u3002\u8ba1\u5212\u8bc6\u522b\u6280\u672f\uff08Charniak\u548cGoldman\uff0c1993\uff1b Bui\u7b49\uff0c2002\uff09\u8bd5\u56fe\u901a\u8fc7\u89c2\u5bdf\u4ee3\u74065\u7684\u884c\u4e3a\u6765\u63a8\u65ad\u4ee3\u74065\u7684\u76ee\u6807\u548c\u8ba1\u5212\u3002\u4f20\u7edf\u4e0a\uff0c\u8ba1\u5212\u8bc6\u522b\u4efb\u52a1\u5047\u5b9a\u5b58\u5728\u4e00\u4e2a\u5177\u6709\u53ef\u80fd\u88ab\u8bc6\u522b\u7684\u8ba1\u5212\u7684\u7a7a\u95f4\u7684\u5e93\uff0c\u4f46\u662f\u6700\u8fd1\u7684\u5de5\u4f5c\u4e0d\u9700\u8981\u4f7f\u7528\u8be5\u5e93\u3002\u8fd9\u4e9b\u4f5c\u54c1\uff08Ram \uff0cirez\u548cGeffner\uff0c2009\u5e74\uff1bRamirez\u548cGeffner\uff0c2010\uff09\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7565\u5fae\u4fee\u6539\u7684\u89c4\u5212\u7b97\u6cd5\u6765\u8ba1\u7b97\u89c2\u5bdf\u5230\u7684\u793a\u4f8b\u7684\u76ee\u6807\u3002\u9700\u8981\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\uff0c\u4ee5\u5206\u6790\u8ba1\u5212\u8bc6\u522b\u6280\u672f\u4e0eAP\u7684\u5b66\u4e60\u6280\u672f\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u53c2\u8003 temp 1 \u548c\u6587\u732e 2 \u3002 Relational reinforcement learning(RRL) (Dzeroskietal.,2001),used Q-learning with a relational function approximator, and demonstrated good empirical results in the Blocksworld. G \u21a9 C \u21a9","title":"ReviewOfMLforAP"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#a-review-of-machine-learning-for-automated-planning","text":"\u81ea\u52a8\u5316\u8ba1\u5212\uff08AP\uff09\u662f\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u8d1f\u8d23\u7814\u7a76\u6267\u884c\u7ed9\u5b9a\u4efb\u52a1\u7684\u6709\u5e8f\u884c\u52a8\u96c6\u5408\u7684\u8ba1\u7b97\u7efc\u5408\u3002AP\u4e8e50\u5e74\u4ee3\u672b\u51fa\u73b0\uff0c\u662f\u5bf9\u72b6\u6001\u7a7a\u95f4\u641c\u7d22\uff0c\u5b9a\u7406\u8bc1\u660e\u548c\u63a7\u5236\u7406\u8bba\u8fdb\u884c\u7814\u7a76\u7684\u7ed3\u679c\uff0c\u65e8\u5728\u89e3\u51b3\u673a\u5668\u4eba\u6280\u672f\u548c\u81ea\u52a8\u6f14\u7ece\u7684\u5b9e\u9645\u9700\u6c42\u3002\u65af\u5766\u798f\u5b66\u9662\u7684\u95ee\u9898\u6c42\u89e3\u5668STRIPS\uff08Fikes\u548cNilsson\uff0c1971\u5e74\uff09\u53d1\u5c55\u6210\u4e3a\u63a7\u5236\u81ea\u4e3b\u673a\u5668\u4ebaShakey\u7684\u8ba1\u5212\u7ec4\u6210\u90e8\u5206\uff08Nilsson\uff0c1984\u5e74\uff09\uff0c\u5b8c\u7f8e\u5730\u8bf4\u660e\u4e86\u8fd9\u4e9b\u5f71\u54cd\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u4eceShakey\u65f6\u4ee3\u5230\u73b0\u5728\uff0cAP\u5df2\u7ecf\u4ea7\u751f\u4e86\u4ee3\u8868\u8ba1\u5212\u4efb\u52a1\u7684\u516c\u8ba4\u6807\u51c6\u4ee5\u53ca\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6709\u6548\u7b97\u6cd5\uff08Ghallab\u7b49\uff0c2004\uff09\u3002 \uff081\uff09\u5b66\u4e60\u8ba1\u5212**\u884c\u52a8\u6a21\u578b** \u81ea\u52a8\u8ba1\u5212\u5458\u9700\u8981\u5bf9\u8ba1\u5212\u4efb\u52a1\u8fdb\u884c\u51c6\u786e\u7684\u63cf\u8ff0\u3002\u8fd9\u4e9b\u63cf\u8ff0\u5305\u62ec\u5728\u73af\u5883\u4e2d\u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\u7684\u6a21\u578b\uff0c\u73af\u5883\u72b6\u6001\u7684\u89c4\u8303\u4ee5\u53ca\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u6267\u884c\u67d0\u4e2a\u52a8\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bb8\u591a\u7ed3\u679c\uff0c\u5bf9\u73af\u5883\u72b6\u6001\u7684\u4e86\u89e3\u53ef\u80fd\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u800c\u76ee\u6807\u53ef\u80fd\u6ca1\u6709\u5b8c\u5168\u5b9a\u4e49\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5b9e\u9645\u95ee\u9898\uff0c\u63d0\u524d\u751f\u6210\u8ba1\u5212\u4efb\u52a1\u7684\u7cbe\u786e\u5b9a\u4e49\u662f\u4e0d\u53ef\u884c\u7684\u3002 \uff082\uff09\u5b66\u4e60**\u641c\u7d22\u63a7\u5236**\u3002 \u2022\u73b0\u6210\u7684\u8ba1\u5212\u8005\u901a\u5e38\u65e0\u6cd5\u6269\u5927\u89c4\u6a21\u6216\u65e0\u6cd5\u63d0\u4f9b\u9ad8\u8d28\u91cf\u7684\u89e3\u51b3\u65b9\u6848\u3002\u901a\u5e38\uff0c\u5728AP\u4e2d\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\u7684\u8fc7\u7a0b\u662f*PSpace-complete*\u95ee\u9898\uff08Bylander\uff0c1991\uff0c1994\uff09\u3002\u5f53\u524d\u6700\u5148\u8fdb\u7684\u8ba1\u5212\u8005\u8bd5\u56fe\u901a\u8fc7\uff081\uff09\u63a5\u5730\u64cd\u4f5c\u548c\uff082\uff09\u5728\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u6307\u5bfc\u4e0b\u6267\u884c\u641c\u7d22\u8fc7\u7a0b\u6765\u901a\u8fc7\u53ef\u8fbe\u6027\u5206\u6790\u6765\u5e94\u5bf9\u8fd9\u79cd\u590d\u6742\u6027\u3002\u4f46\u662f\uff0c\u5f53\u5bf9\u8c61\u6570\u91cf\u5f88\u5927\u65f6\uff0c\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u904d\u5386\u751f\u6210\u7684\u5730\u9762\u641c\u7d22\u6811\u3002\u6b64\u5916\uff0c\u5728\u542f\u53d1\u5f0f\u4fe1\u606f\u77e5\u4e4b\u751a\u5c11\u7684\u60c5\u51b5\u4e0b\uff08\u4f8b\u5982\u67d0\u4e9b\u5b50\u76ee\u6807\u4e4b\u95f4\u5177\u6709\u5f3a\u5927\u4ea4\u4e92\u4f5c\u7528\u7684\u57df\uff09\uff0c\u8fd9\u79cd\u5206\u6790\u4f1a\u4ea7\u751f\u8bef\u5bfc\u3002\u7279\u5b9a\u9886\u57df\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u5df2\u88ab\u8bc1\u660e\u53ef\u4ee5\u6539\u5584\u89c4\u5212\u4eba\u5458\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\u7684\u53ef\u6269\u5c55\u6027\uff08Bacchus\u548cKabanza\uff0c2000\uff1b Nau\u7b49\uff0c2003\uff09\u3002\u5b9a\u4e49\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u901a\u5e38\u6bd4\u5b9a\u4e49\u8ba1\u5212\u4efb\u52a1\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u9700\u8981\u89e3\u51b3\u4efb\u52a1\uff0c\u8fd8\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\uff0c \u81ea\u4eceAP\u7814\u7a76\u5f00\u59cb\u4ee5\u6765\uff0c\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u4e00\u76f4\u662f\u514b\u670d\u8fd9\u4e24\u4e2a\u77e5\u8bc6\u83b7\u53d6\u95ee\u9898\u7684\u6709\u7528\u5de5\u5177\u3002\u53ef\u4ee5\u5728\uff08Zimmerman\u548cKambhampati\uff0c2003\uff09\u4e2d\u627e\u5230\u5bf9\u53d7\u76ca\u4e8eML\u7684AP\u7cfb\u7edf\u7684\u5168\u9762\u8c03\u67e5\u3002 \u76ee\u524d\uff0c\u4eba\u4eec\u5bf9\u4f7f\u7528ML\u6539\u8fdb\u8ba1\u5212\u6709\u4e86\u65b0\u7684\u5174\u8da3\u30022005\u5e74\u4e3e\u884c\u4e86\u9996\u5c4a\u56fd\u9645\u8ba1\u5212\u7cfb\u7edf\u77e5\u8bc6\u5de5\u7a0b\u7ade\u8d5b\uff08ICKEPS\uff09\uff0c\u5e76\u4e8e2008\u5e74\u5728**\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b\uff08IPC\uff09**\u4e2d\u5f00\u8bbe\u4e86\u4ee5Learning\u4e3a\u57fa\u7840\u7684\u8ba1\u5212\u4eba\u5458\u7ade\u8d5b\u4e4b\u8def\u3002\u6b64\u5916\uff0c\u5728\u56fd\u9645\u81ea\u52a8\u8ba1\u5212\u548c\u8c03\u5ea6\u4f1a\u8bae\uff08ICAPS\uff09\u5185\u5b9a\u671f\u4e3e\u529e\u4e86\u6709\u5173\u8ba1\u5212\u548c\u5b66\u4e60\u7684\u8bb2\u4e60\u73ed\u3002\u5373\u4f7f\u6b64\u5ba1\u67e5\u5305\u62ec\u7528\u4e8e\u8ba1\u5212\u548c\u5b66\u4e60\u7684\u7ecf\u5178\u7cfb\u7edf\uff0c\u4e3b\u8981\u8fd8\u662f\u7740\u91cd\u4e8e\u4ecb\u7ecdAP\u673a\u5668\u5b66\u4e60\u7684\u6700\u65b0\u65b9\u6cd5\u3002 AP\u7684\u76ee\u6807\u662f\u751f\u4ea7\u51fa\u5728\u9047\u5230\u4e0d\u540c\u7c7b\u578b\u95ee\u9898\u65f6\u53ef\u4ee5\u9009\u62e9\u7684\u6c42\u89e3\u5668\u3002AP\u751f\u6210\u6c42\u89e3\u5668\uff0c\u8fd9\u4e9b\u6c42\u89e3\u5668\u5229\u7528\u73af\u5883\u52a8\u529b\u5b66\u6a21\u578b\u6765\u63a8\u7406\u4e0d\u540c\u73af\u5883\u4e2d\u7684\u4e0d\u540c\u4efb\u52a1\u3002AP\u4efb\u52a1\u7531\u4e24\u4e2a\u5143\u7d20\u5b9a\u4e49\uff1a \u2022The domain, that consists of the set of states of the environmentStogether with the set of actionsAthat indicates the transitions between these states. \u2022The problem, that consists of the set of factss0\u2208Sthat indicates the initial state of the environmentand the set of factsG\u2286Sthat indicates the goals of the AP task. \u6b63\u786e\u5b9a\u4e49AP\u4efb\u52a1\u540e\uff0c\u770b\u8d77\u6765\u5e94\u8be5\u5f88\u5bb9\u6613\u901a\u8fc7\u5728\u72b6\u6001\u8f6c\u6362\u56fe\u4e2d\u641c\u7d22\u8def\u5f84\u6765\u89e3\u51b3\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u8fc7\u5145\u5206\u7814\u7a76\u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5728AP\u4e2d\uff0c\u6b64**state-transition graph**\u72b6\u6001\u8f6c\u6362\u56fe\u901a\u5e38\u4f1a\u53d8\u5f97\u5f88\u5927\uff0c\u4ee5\u81f3\u4e8e\u96be\u4ee5\u8fdb\u884c\u641c\u7d22\u3002\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684\u7b97\u6cd5\u7684\u590d\u6742\u6027\u968f\u72b6\u6001\u6570\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u72b6\u6001\u6570\u4e0e\u95ee\u9898\u53d8\u91cf\u7684\u6570\u76ee\uff08\u95ee\u9898\u7684\u5bf9\u8c61\u548c\u8c13\u8bcd\u7684\u6570\u76ee\uff09\u6210\u6307\u6570\u5173\u7cfb\u3002\u572890\u5e74\u4ee3\u4e2d\u671f5\u4e4b\u524d\uff0c\u8ba1\u5212\u8005\u65e0\u6cd5\u5728\u53ef\u63a5\u53d7\u7684\u65f6\u95f4\u5185\u5408\u6210\u5177\u6709\u5341\u591a\u4e2a\u52a8\u4f5c\u7684\u8ba1\u5212\u3002 \u572890\u5e74\u4ee3\u540e\u671f\uff0c\u7531\u4e8e reachability planning graph \uff08Blum\u548cFurst\uff0c1995\uff09\u53ef\u5230\u8fbe\u6027\u89c4\u5212\u56fe\u7684\u51fa\u73b0\uff0c\u89c4\u5212\u53d1\u751f\u4e86\u663e\u7740\u7684\u6269\u5927\u3002\u8fd9\u4e00\u53d1\u73b0\u5141\u8bb8\u5f00\u53d1\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8ba1\u7b97\u7684\u5f3a\u5927\u7684\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u7b97\u6cd5\uff08Hofmann\u548cNebel\uff0c2001a\uff1b Bonet\u548cGef ^ er\uff0c2001\uff09\u3002\u6700\u8fd1\u7684\u53d1\u73b0\uff0c\u4f8b\u5982\u641c\u7d22\u5730\u6807\u7684\u81ea\u52a8\u63d0\u53d6\uff08Porteous\u548cSebastia\uff0c2004\u5e74\uff09\u548c\u7b26\u53f7\u6a21\u5f0f\u6570\u636e\u5e93\u7684\u81ea\u52a8\u6784\u5efa\uff08Edelkamp\uff0c2002\u5e74\uff09\uff0c\u63d0\u9ad8\u4e86\u8ba1\u5212\u8005\uff0c\u901f\u5ea6\u548c\u8d28\u91cf\u6027\u80fd\u3002\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u7684\u89c4\u5212\u4eba\u5458\u901a\u5e38\u53ef\u4ee5\u5728\u51e0\u79d2\u949f\u5185\u5408\u6210\u4e00\u767e\u4e2a\u884c\u52a8\u8ba1\u5212\uff0c\u4f46\u662f\u53ef\u6269\u5c55\u6027\u9650\u5236\u4ecd\u7136\u5b58\u5728\u4e8eAP\u751a\u81f3\u662f\u7ecf\u8fc7\u6df1\u5165\u7814\u7a76\u7684\u9886\u57df\uff08\u4f8b\u5982*Blocksworld\uff09*. \u5f53\u5bf9\u8c61\u76f8\u5bf9\u8f83\u591a\u65f6\uff0c\u5bf9\u4e8e\u8ba1\u5212\u4eba\u5458\u800c\u8a00\u5c31\u53d8\u5f97\u5145\u6ee1\u6311\u6218\u3002 \u4e00\u65b9\u9762\uff0c\u5f53\u524d\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u7b97\u6cd5\u8ba1\u7b97\u8d77\u6765\u5f88\u6602\u8d35\u3002\u5728\u542f\u53d1\u5f0f\u65b9\u6cd5\u5177\u6709\u8bef\u5bfc\u6027\u7684\u9886\u57df\u4e2d\uff0c\u8fd9\u79cd\u6548\u679c\u66f4\u52a0\u660e\u663e\u3002\u5728\u8fd9\u4e9b\u9886\u57df\u4e2d\uff0c\u8ba1\u5212\u4eba\u5458\u82b1\u8d39\u5927\u90e8\u5206\u8ba1\u5212\u65f6\u95f4\u6765\u8ba1\u7b97\u65e0\u7528\u7684\u8282\u70b9\u8bc4\u4f30\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u9274\u4e8e\u8fd9\u4e9b\u4e0e\u9886\u57df\u65e0\u5173\u7684\u6280\u672f\u662f\u57fa\u4e8e\u884c\u52a8\u57fa\u7840\u7684\uff0c\u56e0\u6b64\u8ba1\u5212\u8005\u5f53\u95ee\u9898\u5bf9\u8c61**and/or**\u548c/\u6216\u64cd\u4f5c\u53c2\u6570\u7684\u6570\u91cf\u8fbe\u5230\u4e00\u5b9a\u5927\u5c0f\u65f6\uff0c\u641c\u7d22\u6811\u5c06\u53d8\u5f97\u68d8\u624b\u3002\u8fd9\u4e9b\u95ee\u9898\u4f7f\u4e0e\u9886\u57df\u65e0\u5173\u7684\u8ba1\u5212\u8005\u96be\u4ee5\u5e94\u7528\u4e8e\u5404\u79cd\u5b9e\u9645\u95ee\u9898\u3002 \u7269\u6d41\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e0e\u6570\u767e\u4e2a\u8f66\u8f86\u548c\u4f4d\u7f6e\u540c\u65f6\u5904\u7406\u6570\u767e\u4e2a\u5bf9\u8c61\uff08Florez\u7b49\uff0c2010\uff09\uff0c\u8fd9\u4f7f\u5f97\u5728\u6bcf\u4e2a\u641c\u7d22\u8282\u70b9\u4e2d\u8ba1\u7b97\u8bc4\u4f30\u529f\u80fd\u53d8\u5f97\u4e0d\u53ef\u884c\u3002 ML has a role to play in capturing useful control knowledge(\u6355\u83b7\u6709\u7528\u7684policy\u6240\u5bf9\u5e94\u63a7\u5236\u7ed3\u6784) skipped by the domain-independent techniques\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cML\u5728\u6355\u83b7\u7531\u72ec\u7acb\u4e8e\u57df\u7684\u6280\u672f\u8df3\u8fc7\u7684\u6709\u7528\u63a7\u5236\u77e5\u8bc6\u4e2d\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\u3002 *\u77e5\u8bc6\u8868\u793a\u3002*\u9996\u5148\uff0c\u5fc5\u987b\u5b9a\u4e49\u673a\u5668\u5b66\u4e60\u8fc7\u7a0b\u5c06\u5b66\u4e60\u7684\u77e5\u8bc6\u7c7b\u578b\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u4e86AP\u7684ML\u7684\u4e24\u4e2a\u4e0d\u540c\u76ee\u6807\uff0c\u5373\u4e3a\u8ba1\u5212\u8005\u63d0\u4f9b\u670d\u52a1\u7684\u52a8\u4f5c\u6a21\u578b\u548c\u6307\u5bfc\u8ba1\u5212\u8005\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\u7684\u641c\u7d22\u63a7\u5236\u3002\u5176\u6b21\uff0c\u5fc5\u987b\u51b3\u5b9a\u5982\u4f55\u8868\u793a\u6240\u5b66\u77e5\u8bc6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u505a\u51fa\u4e24\u4e2a\u4ee3\u8868\u51b3\u5b9a\uff1a \uff08a\uff09 *\u4ee3\u8868\u8bed\u8a00\u3002*\u7528\u4e8e\u5bf9\u76ee\u6807\u6982\u5ff5\u548c\u4f53\u9a8c\u8fdb\u884c\u7f16\u7801\u7684\u4e00\u79cd\u8868\u793a\u6cd5\u3002\u56e0\u4e3aAP\u4efb\u52a1\u901a\u5e38\u4ee5\u8c13\u8bcd\u903b\u8f91\u63cf\u8ff0\uff0c\u6240\u4ee5\u8fd9\u662f\u7528\u4e8e\u7f16\u7801AP\u6982\u5ff5\u7684\u6700\u5e38\u7528\u7684\u8868\u793a\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136\u7a0b\u5ea6\u8f83\u5c0f\uff0c\u4f46\u4e5f\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\uff0c\u4f8b\u5982\u63cf\u8ff0\u903b\u8f91\u6216\u65f6\u95f4\u903b\u8f91\u3002 \uff08b\uff09 *\u529f\u80fd\u7a7a\u95f4\u3002*ML\u7b97\u6cd5\u8003\u8651\u5b66\u4e60\u76ee\u6807\u6982\u5ff5\u7684\u4e00\u7ec4\u529f\u80fd\u3002\u5728AP\u4e2d\uff0c\u8fd9\u4e9b\u529f\u80fd\u901a\u5e38\u662f\u7528\u4e8e\u5b9a\u4e49AP\u4efb\u52a1\u7684\u52a8\u4f5c\uff0c\u72b6\u6001\u548c\u76ee\u6807\u7684\u57df\u8c13\u8bcd\u3002 *\u6c72\u53d6\u7ecf\u9a8c\u3002*\u5982\u4f55\u6536\u96c6\u5b66\u4e60\u793a\u4f8b\u3002\u5728AP\u7684\u60c5\u51b5\u4e0b\uff0c\u5b66\u4e60\u793a\u4f8b\u53ef\u4ee5\u7531\u8ba1\u5212\u7cfb\u7edf\u81ea\u4e3b\u6536\u96c6\uff0c\u4e5f\u53ef\u4ee5\u7531\u5916\u90e8\u4ee3\u7406\uff08\u4f8b\u5982\u4eba\u7c7b\u4e13\u5bb6\uff09\u63d0\u4f9b\u3002\u5b9e\u73b0\u4e00\u79cd\u81ea\u4e3b\u6536\u96c6\u5b66\u4e60\u793a\u4f8b\u7684\u673a\u5236\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\u3002\u4f7f\u7528\u8ba1\u5212\u8005\u6536\u96c6\u7ecf\u9a8c\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u8981\u786e\u4fdd\u4f7f\u7528\u7ed9\u5b9a\u7684\u57df\u6a21\u578b\u6765\u89e3\u51b3AP\u95ee\u9898\u7684\u53ef\u89e3\u51b3\u6027\u4e0e\u539f\u59cbAP\u4efb\u52a1\u4e00\u6837\u56f0\u96be\u3002\u968f\u673a\u63a2\u7d22\u7ecf\u5e38\u4f7fAP\u4efb\u52a1\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u91c7\u6837\u4e0d\u8db3\u3002AP\u52a8\u4f5c\u901a\u5e38\u4f1a\u63d0\u4f9b\u524d\u63d0\u6761\u4ef6\uff0c\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u53ea\u80fd\u7531\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u6765\u6ee1\u8db3\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u5076\u7136\u88ab\u9009\u62e9\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\u3002 *\u5b66\u4e60\u7b97\u6cd5\u3002*\u5982\u4f55\u4ece\u6536\u96c6\u7684\u7ecf\u9a8c\u4e2d\u6355\u83b7\u6a21\u5f0f\u3002\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u63d0\u53d6\u8fd9\u4e9b\u6a21\u5f0f\u3002\u5f52\u7eb3\u5b66\u4e60\u901a\u8fc7\u5bf9\u89c2\u5bdf\u5230\u7684\u4f8b\u5b50\u8fdb\u884c\u6982\u62ec\u6765\u6784\u5efa\u6a21\u5f0f\u3002\u5206\u6790\u5b66\u4e60\u4f7f\u7528\u5148\u9a8c\u77e5\u8bc6\u548c\u6f14\u7ece\u63a8\u7406\u6765\u6784\u5efa\u6a21\u5f0f\uff0c\u4ee5\u89e3\u91ca\u5b66\u4e60\u793a\u4f8b\u4e2d\u7684\u4fe1\u606f\u3002\u6df7\u5408\u5f52\u7eb3\u5206\u6790\u5b66\u4e60\u7ed3\u5408\u4e86\u4e24\u79cd\u5148\u524d\u7684\u5b66\u4e60\u6280\u672f\uff0c\u4ece\u800c\u83b7\u5f97\u4e86\u4e24\u8005\u7684\u597d\u5904\uff1a\u5f53\u53ef\u83b7\u5f97\u5148\u9a8c\u77e5\u8bc6\u65f6\uff0c\u6cdb\u5316\u7684\u51c6\u786e\u6027\u66f4\u9ad8\uff1b\u4f7f\u7528\u89c2\u6d4b\u5230\u7684\u5b66\u4e60\u6570\u636e\u6765\u514b\u670d\u5148\u9a8c\u77e5\u8bc6\u7684\u4e0d\u8db3\u3002\u5728\u8bbe\u8ba1\u7528\u4e8eAP\u5f52\u7eb3\u5b66\u4e60\u7684\u5b66\u4e60\u7b97\u6cd5\u65f6\uff0c\u6700\u5e38\u7528\u7684\u6280\u672f\u662f\uff0c\u4f46\u662f\u57fa\u4e8eAP\u4efb\u52a1\u7684domain\u5b9a\u4e49\uff0c\u4e5f\u4f7f\u7528\u5206\u6790\u548c\u6df7\u5408\u65b9\u6cd5\u6765\u6784\u5efa\u5bf9\u6536\u96c6\u7684\u5b66\u4e60\u793a\u4f8b\u7684\u89e3\u91ca\u3002 \u5f00\u53d1\u6240\u5b66\u77e5\u8bc6 \u3002\u81ea\u52a8\u7cfb\u7edf\u5982\u4f55\u4ece\u5b66\u5230\u7684\u77e5\u8bc6\u4e2d\u53d7\u76ca\u3002\u5bf9\u524d\u4e09\u4e2a\u95ee\u9898\u4e2d\u7684\u6bcf\u4e00\u4e2a\u505a\u51fa\u7684\u51b3\u5b9a\u90fd\u4f1a\u5f71\u54cd\u6240\u5b66\u77e5\u8bc6\u3002\u5982\u679c\u5b66\u5230\u7684\u77e5\u8bc6\u4e0d\u5b8c\u5584\uff0c\u5219\u5fc5\u987b\u901a\u8fc7\u4fdd\u8bc1\u53ef\u9760\u5229\u7528\u7684\u673a\u5236\u52a0\u4ee5\u5e94\u7528\u3002\u5bf9\u4e8eAP\uff0c\u77e5\u8bc6\u7684\u4e0d\u5b8c\u5584\u53ef\u80fd\u662f\u591a\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\uff1a\u67d0\u4e9b\u8868\u793a\u9009\u62e9\u53ef\u80fd\u4e0d\u8db3\u4ee5\u8868\u8fbe\u7ed9\u5b9a\u6761\u4ef6\u7684\u76f8\u5173\u77e5\u8bc6\u3002 \u57df; \u6536\u96c6\u5b66\u4e60\u7ecf\u9a8c\u7684\u7b56\u7565\u53ef\u80fd\u4f1a\u9057\u6f0f\u76ee\u6807\u77e5\u8bc6\u7684\u5927\u91cf\u793a\u4f8b\uff1b\u5426\u5219\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u6216\u8005\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u548c\u5185\u5b58\u8981\u6c42\u5185\u6355\u83b7\u76ee\u6807\u77e5\u8bc6\u7684\u6a21\u5f0f\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u4f7f\u7528\u6240\u5b66\u77e5\u8bc6\u53ef\u80fd\u4f1a\u7834\u574f\u8ba1\u5212\u8fc7\u7a0b\u3002\u89c4\u5212\u548c\u5b66\u4e60\u7cfb\u7edf\u9700\u8981\u914d\u5907\u5404\u79cd\u673a\u5236\uff0c\u4ee5\u4f7f\u5c3d\u7ba1\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u5b58\u5728\u7f3a\u9677\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5f3a\u5927\u5730\u8fdb\u884c\u89c4\u5212\u3002","title":"A Review of Machine Learning for Automated Planning"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#_1","text":"AP\u7b97\u6cd5\u9700\u8981\u6b63\u786e\u548c\u5b8c\u6574\u7684\u52a8\u4f5c\u6a21\u578b\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u6a21\u578b\u6307\u793a\u4e86\u4e16\u754c\u7684\u72b6\u6001\u8f6c\u6362\u3002\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u8ba1\u5212\u884c\u52a8\u6a21\u578b\u65e2\u56f0\u96be\u53c8\u8017\u65f6\uff0c\u5373\u4f7f\u5bf9\u4e8eAP\u4e13\u5bb6\u800c\u8a00\u4e5f\u662f\u5982\u6b64\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528ML\uff0c\u8fd9\u6837\u4eba\u4eec\u5c31\u4e0d\u5fc5\u624b\u52a8\u7f16\u5199\u52a8\u4f5c\u6a21\u578b\u4e86\u3002\u672c\u8282\u56de\u987e\u4e86\u7528\u4e8e\u81ea\u52a8\u5b9a\u4e49AP\u52a8\u4f5c\u6a21\u578b\u7684ML\u6280\u672f\u3002\u7efc\u8ff0\u901a\u8fc7\u52a8\u4f5c\u6548\u679c\u7684\u968f\u673a\u6027\u548c\u73af\u5883\u72b6\u6001\u7684\u53ef\u89c2\u5bdf\u6027\u5bf9\u6280\u672f\u8fdb\u884c\u4e86\u5206\u7c7b\u3002 *\u52a8\u4f5c\u6548\u679c\u3002*\u5728\u8bb8\u591a\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u65e0\u6cd5\u5047\u8bbe\u786e\u5b9a\u6027\u7684\u4e16\u754c\u52a8\u6001\u3002\u5728\u89c4\u5212\u9886\u57df\u4e2d\uff0c\u5305\u62ec\u968f\u673a\u8fc7\u7a0b\uff08\u4f8b\u5982\u6295\u63b7\u786c\u5e01\u6216\u63b7\u9ab0\u5b50\uff09\u6216\u4e0d\u786e\u5b9a\u6027\u7ed3\u679c\uff08\u4f8b\u5982\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u673a\u5668\u4eba\u5bfc\u822a\uff09\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\u3002 *state\u53ef\u89c2\u5bdf\u6027\u3002*\u5728\u8bb8\u591a\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u5904\u7406\u5b8c\u6574\uff0c\u51c6\u786e\u7684\u73af\u5883\u72b6\u6001\u63cf\u8ff0\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\u3002\u7531\u4e8e\u4f20\u611f\u5668\u7684\u6545\u969c\u6216\u65e0\u6cd5\u5b8c\u5168\u611f\u77e5\u4e16\u754c\uff0c\u5f53\u524d\u72b6\u6001\u7684\u67d0\u4e9b\u90e8\u5206\u53ef\u80fd\u4f1a\u6df7\u4e71\u6216\u4e22\u5931\u3002\u4f8b\u5982\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u63a7\u5236\u673a\u5668\u4eba\u65f6\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u4e3aAP\u5efa\u6a21\u5b9a\u4e49\u4e86\u56db\u7c7b\uff1a \u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u64cd\u4f5c\uff1b \u5728\u90e8\u5206\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u52a8\u4f5c\uff1b \u5728\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c\uff1b \u53ef\u89c2\u5bdf\u90e8\u5206\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c\u3002 \u5c3d\u7ba1\u5b58\u5728\u5176\u4ed6\u5206\u7c7b\u7684\u53ef\u80fd\uff0c\u4f8b\u5982\u6839\u636e\u5b66\u4e60\u76ee\u6807\u8fdb\u884c\u5206\u7ec4\uff08\u524d\u63d0\u6761\u4ef6\uff0c\u6548\u679c\uff0c\u6548\u679c\u6761\u4ef6\uff0c\u7ed3\u679c\u7684\u6982\u7387...\uff09\uff0c\u4f46\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e00\u5206\u7c7b\u5bf9\u4e8e\u8ba1\u5212\u76ee\u7684\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u8303\u5f0f\u3002\u56fe\u901a\u8fc7\u7ed9\u51fa\u4e00\u4e9b\u793a\u4f8b\u5b9e\u73b0\u603b\u7ed3\u4e86\u8ba1\u5212\u884c\u52a8\u5efa\u6a21\u7cfb\u7edf\u7684\u5206\u7c7b\u3002\u8be5\u8868\u5e76\u4e0d\u662f\u8be6\u5c3d\u7684\u5217\u4e3e\uff0c\u56e0\u6b64\u8868\u4e2d\u7684\u7cfb\u7edf\u4ec5\u662f\u793a\u4f8b\u3002 \u6a21\u578b \u7279\u5f81 \u5b9e\u65bd\u65b9\u5f0f \u957f\u5904 \u5f31\u70b9 **\u786e\u5b9a\u6027**\u5f71\u54cd**\u5b8c\u6574\u7684**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u5b66\u4e60\u590d\u6742\u6027\u5728\u7406\u8bba\u4e0a\u662f\u6709\u9650\u7684 \u2022\u9ad8\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 \u2022\u5b8c\u6574\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b \u2022\u8868\u73b0\u529b\u5dee LIVE\uff08Shen and Simon\uff0c1989\uff09\uff0cEXPO\uff08Gil\uff0c1992\uff09\uff0cOBSERVER\uff08Wang\uff0c1994\uff09 **\u786e\u5b9a\u6027**\u5f71\u54cd**\u90e8\u5206**\u72b6\u6001\u7684\u53ef\u89c2\u5bdf\u6027 \u2022\u5b8c\u6574\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b \u2022\u8868\u73b0\u529b\u5dee \u2022\u4f4e\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 ARMS\uff08Yang\u7b49\uff0c2007\uff09\uff0c\uff08Amir and Chang\uff0c2008\uff09\uff0c\uff08Mourao\u7b49\uff0c2008\uff09\uff0cLOCM\uff08Cresswell\u7b49\uff0c2009\uff09 **\u6982\u7387**\u6548\u5e94**\u5b8c\u5168**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u4e30\u5bcc\u7684\u8868\u73b0\u529b\u2022\u9ad8\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 \u2022\u4e0d\u5b58\u5728\u7684\u5728\u7ebf\u5b66\u4e60 \uff08Oates and Cohen\uff0c1996\uff09\uff0cTRAIL\uff08Benson\uff0c1997\uff09\uff0cLOPE\uff08Garcla-Martlnez and Borrajo\uff0c2000\uff09\uff0c\uff08Pasula et al\u3002\uff0c2007\uff09\uff0cPELA\uff08Jimenez\u7b49\uff0c2008\uff09 **\u6982\u7387**\u6548\u5e94**\u90e8\u5206**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u5bcc\u6709\u8868\u73b0\u529b \u2022\u9ad8\u8ba1\u5212\u548c\u5b66\u4e60\u590d\u6742\u6027 \uff08Yoon\u548cKambhampati\uff0c2007\u5e74\uff09 **\u56fe**\u7528\u4e8e\u8ba1\u5212\u52a8\u4f5c\u5efa\u6a21\u7684\u7cfb\u7edf\u7684\u5b9e\u73b0\u3002 \u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u64cd\u4f5c(The learning task+mplementations)\uff1b \u91cd\u8981\uff01\u548c\u7a0b\u5e8f\u751f\u6210\u6709\u5173\uff0cQNP\u4e4b\u7c7b\u7684\u4e5f\u662f\u786e\u5b9a\u6027\u89c4\u5212\uff0c\u95ee\u9898\u5047\u8bbe\u6761\u4ef6\u5df2\u7ecf\u7ed9\u5b8c\u6574\uff0c\u4e0d\u9700\u8981sensor\u63a2\u6d4b\u4e0d\u65ad\u6269\u5145\uff0c\u4e0d\u9700\u8981\u63a2\u7d22\uff0c\u4e0d\u9700\u8981\u8d70\u4e00\u6b65\u770b\u4e00\u6b65\u3002\u5c31\u50cf\u56f4\u68cb\u4e00\u6837\u89c4\u5219\u5df2\u7ecf\u5b9a\u4e0b\u6765\u3002 \u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u4f8b\u4e2d\u5b66\u4e60\u62bd\u8c61\u901a\u7528\u65b9\u6cd5\uff0c\u91cd\u7528\u5df2\u6709\u7684\u4e0d\u65ad\u6269\u5145 \u5728\u90e8\u5206\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u52a8\u4f5c(The learning task+mplementations)\uff1b \u4e0d\u5173\u5fc3 \u5728\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c(The learning task+mplementations)\uff1b \u4e0d\u5173\u5fc3 \u53ef\u89c2\u5bdf\u90e8\u5206\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c(The learning task+mplementations) \u4e0d\u5173\u5fc3","title":"\u5b66\u4e60\u8ba1\u5212\u884c\u52a8\u6a21\u578b"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#learning-planning-search-control-knowledge-tf","text":"\u5b66\u4e60AP\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u7684\u56db\u79cd\u4e0d\u540c\u65b9\u6cd5\uff08\u5b8f\u52a8\u4f5c\uff0c\u5e7f\u4e49\u7b56\u7565\uff0c\u5e7f\u4e49\u542f\u53d1\u5f0f\u51fd\u6570\u548c\u5c42\u6b21\u5206\u89e3\u65b9\u6cd5\uff09","title":"Learning Planning Search Control Knowledge \u5b66\u4e60\u89c4\u5212\u56fe\u7684\u63a7\u5236\u7ed3\u6784\u77e5\u8bc6(\u7c7b\u6bd4tf\u8ba1\u7b97\u56fe)"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#macro-actions","text":"1.\u77e5\u8bc6\u8868\u793a\u3002\u5b8f\u52a8\u4f5c\u88ab\u8868\u793a\u4e3a\u52a8\u4f5c\u6a21\u578b\u7684\u65b0\u52a8\u4f5c\uff0c\u56e0\u6b64\u5b83\u4eec\u9075\u5faaAP\u52a8\u4f5c\u7684*\u8c13\u8bcd\u903b\u8f91*\u8868\u793a\u3002\u52a8\u4f5c*ai* \u548c*aj* \u7ec4\u5408\u4e3a\u4e00\u4e2a\u5b8f\u52a8\u4f5c 2.\u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u662f\u89e3\u51b3\u65b9\u6848\u8ba1\u5212p\uff0c\u8be5\u8ba1\u5212\u8ba1\u5212\u7531\u5b9e\u4f8b\u5316\u64cd\u4f5c\u5e8f\u5217\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5316\u64cd\u4f5c\u5bf9\u5e94\u4e8e\u72b6\u6001\u8f6c\u6362\u5e8f\u5217,\u4ece\u800cI\u2192 G \u6a21\u578b \u7279\u5f81 \u5b9e\u65bd\u65b9\u5f0f \u957f\u5904 \u5f31\u70b9 Macro-actions \u2022\u5bf9\u9519\u8bef\u7684\u5b66\u4e60\u77e5\u8bc6\u6709\u8f83\u5f3a\u7684\u628a\u63e1 \u2022\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u8005 \u2022Utility problem REFLECT\uff08Dawson and Silklossly\uff0c1977\uff09\uff0cMORRIS\uff08Korf\uff0c1985\uff09\uff0cMacroFF\uff08Botea\u7b49\uff0c2005a\uff09\uff0cMarvin\uff08Coles and Smith\uff0c2007\uff09\uff0c\uff08Newton et al\u3002\uff0c2007\uff09 Generalized Policies \u2022\u6807\u51c6\u5173\u7cfb\u5206\u7c7b\u7b97\u6cd5 \u2022Engineering effort to\u6574\u5408\u4e0d\u540c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5 \uff08Minton\uff0c1988\u5e74\uff09\uff0cPRIAR\uff08Kambhampati and Hendler\uff0c1992\uff09\uff0cHAMLET\uff08Borrajo and Veloso\uff0c1997\uff09\uff0c\uff08Khardon\uff0c1999\uff09\uff0c\uff08Martin and Geffner\uff0c2000\uff09\uff0cDISTILL\uff08WinnerandVeloso\uff0c2003\uff09\uff0cOBTUSEWEDGE\uff08Yoon\u7b49\u4eba\uff0c2007\uff09\uff0cCABALA\uff08de la Rosa\u7b49\u4eba\uff0c2007\uff09\uff0cROLLER\uff08de la Rosa\u7b49\u4eba\uff0c2008\uff09 Generalized Heuristics \u2022\u6807\u51c6\u5173\u7cfb\u56de\u5f52\u7b97\u6cd5 \u2022\u8f7b\u677e\u96c6\u6210\u4e0d\u540c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5 \u2022\u53ef\u8bfb\u6027\u5dee \uff08Yoon\u7b49\uff0c2006\uff09\uff0c\uff08Xu\u7b49\uff0c2007\uff09 Decomposition Methods \u2022\u5bcc\u6709\u8868\u73b0\u529b \u2022\u65e0\u9700\u5168\u81ea\u52a8\u5b66\u4e60 CAMEL\uff08Ilghami\u7b49\uff0c2002\uff09\uff0cHDL\uff08Ilghami\u7b49\uff0c2006\uff09\uff0cHTNMAKER\uff08Hogg\u7b49\uff0c2008\uff09 Overview of AP systems that benefit from ML for the extraction of domain-specific search control 3.\u5b66\u4e60\u7b97\u6cd5\u3002\u5b66\u4e60\u5b8f\u52a8\u4f5c\u7684\u7b97\u6cd5\u4ece\u89e3\u51b3\u65b9\u6848\u4e2d\u63d0\u53d6\u52a8\u4f5c\u5b50\u5e8f\u5217\uff0c\u5e76\u5bf9\u5b83\u4eec\u7684\u51fa\u73b0\u8fdb\u884c\u8ba1\u6570\u4ee5\u6355\u83b7\u6700\u6709\u7528\u7684\u5b50\u5e8f\u5217\u3002\u901a\u5e38\uff0c\u63d0\u53d6\u52a8\u4f5c\u5b50\u5e8f\u5217\u7684\u8fc7\u7a0b\u5b9a\u4e49\u4e86\u4e24\u4e2a\u53c2\u6570\uff1a \u2022 *l\uff0c*\u5b8f\u52a8\u4f5c\u7684\u957f\u5ea6\u3002l\u7684\u6700\u5c0f\u503c\u662fl = 2\uff0c\u56e0\u4e3a\u5b8f\u52a8\u4f5c\u5e94\u81f3\u5c11\u5177\u6709\u4e24\u4e2a\u52a8\u4f5c\u3002l\u7684\u6700\u5927\u503c\u662f\u5b66\u4e60\u793a\u4f8b\u4e2d\u6700\u957f\u89e3\u51b3\u65b9\u6848\u7684\u957f\u5ea6\u3002\u5b9e\u9645\u4e0a\uff0c\u8be5\u503c\u5fc5\u987b\u8f83\u5c0f\u624d\u80fd\u6709\u7528\u3002 \u2022 *k\uff0c*\u53ef\u4ee5\u4ece\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u4e2d\u8df3\u8fc7\u7684\u64cd\u4f5c\u6570\u3002\u8be5\u53c2\u6570\u5141\u8bb8\u5b66\u4e60\u7cfb\u7edf\u63d0\u53d6\u5b8f\u89c2\u884c\u52a8\uff0c\u800c\u5b8f\u89c2\u884c\u52a8\u6700\u591a\u53ea\u80fd\u4ece\u89e3\u51b3\u65b9\u6848\u4e2d\u5ffd\u7565*k\u4e2a*\u4e0d\u76f8\u5173\u7684\u4e2d\u95f4\u884c\u52a8\u3002\u5b9e\u9645\u4e0a\uff0ck\u7684\u8f83\u5c0f\u503c\u4f1a\u51cf\u5c11\u5b8f\u52a8\u4f5c\u7684\u6570\u91cf\uff0c\u4f46\u662fk\u503c\u592a\u5c0f\u53ef\u80fd\u4f1a\u8df3\u8fc7\u6709\u7528\u7684\u5b8f\u52a8\u4f5c\u53d1\u751f\u3002 \u5bf9\u4e8e\u8fd9\u4e9b\u53c2\u6570\uff0c\u4ece\u5177\u6709*n\u4e2a*\u52a8\u4f5c\u7684\u8ba1\u5212\u4e2d\u63d0\u53d6\u957f\u5ea6\u4e3al\u7684\u5b8f\u52a8\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a\uff08W\u7b2c\u4e00\u4e2a\u56e0\u7d20\u662f\u5728al + k\u5927\u5c0f\u7684\u7a97\u53e3\u5185\u679a\u4e3e\u957f\u5ea6\u4e3al\u7684\u5b8f\u52a8\u4f5c\u7684\u6210\u672c\u3002\u7b2c\u4e8c\u4e2a\u56e0\u7d20\u662f\u6210\u672c\u6cbf\u7740\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u6ed1\u52a8\u7a97\u53e3\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u4ece\u90e8\u5206\u6709\u5e8f\u8ba1\u5212\u4e2d\u63d0\u53d6\u5b8f\u89c2\u4f5c\u7528\uff08Botea\u7b49\u4eba\uff0c2005b\uff09\u3002 4.\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002\u5b8f\u52a8\u4f5c\u53ef\u4ee5\u7531\u4efb\u4f55\u73b0\u6210\u7684\u8ba1\u5212\u8005\u7acb\u5373\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b8f\u52a8\u4f5c\u53ef\u4ee5\u4f5c\u4e3a\u6807\u51c6\u52a8\u4f5c\u5305\u542b\u5728\u52a8\u4f5c\u6a21\u578b\u4e2d\u3002\u5305\u542b\u5b8f\u52a8\u4f5c\u53ef\u80fd\u4f1a\u7834\u574f\u539f\u59cb\u52a8\u4f5c\u6a21\u578b\u7684\u65f6\u95f4\u548c\u8d28\u91cf\u6027\u80fd\u3002\u5f53\u5b8f\u52a8\u4f5c\u5bfc\u81f4\u641c\u7d22\u6df1\u5ea6\u51cf\u5c0f\u800c\u4e0d\u80fd\u5f25\u8865\u5206\u652f\u56e0\u5b50\u7684\u589e\u52a0\uff08the utility problem\uff09 \u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5 \u3002\u5f53\u524d\u7684\u5b66\u4e60\u5b8f\u52a8\u4f5c\u7684\u7cfb\u7edf\u901a\u8fc7\u5b9e\u9a8c\u8bc4\u4f30\u6b64\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u5b9a\u4e49\u4e86\u4e00\u7ec4\u4e0e\u76ee\u6807\u95ee\u9898\u7c7b\u4f3c\u7684AP\u95ee\u9898\uff0c\u5e76\u4e14\u5982\u679c\u5b66\u4e60\u5230\u7684\u5b8f\u89c2\u884c\u52a8\u53ef\u4ee5\u6539\u5584\u8ba1\u5212\u8005\u5728\u8fd9\u4e9b\u95ee\u9898\u4e0a\u7684\u8868\u73b0\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3a\u586b\u5145\u884c\u52a8\u6a21\u578b\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\u8fd9\u79cd\u89e3\u51b3 theutility problem\u95ee\u9898\u7684\u65b9\u6cd5 \u6700\u521d\u662f\u5728\u5b66\u4e60\u63a7\u5236\u89c4\u5219\u7684\u7cfb\u7edf\u4e2d\u5f15\u5165\u7684\uff08Minton\uff0c1988\uff09\u3002","title":"\u5b66\u4e60macro-actions"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#macro-action","text":"\u81ea\u4eceAP\u5f00\u59cb\u4ee5\u6765\uff0c\u5c31\u5e7f\u6cdb\u5730\u4f7f\u7528\u4e86\u5b8f\u52a8\u4f5c\u3002\u7b2c\u4e00\u4e2a\u5b8f\u89c2\u52a8\u4f5c\u5b66\u4e60\u7cfb\u7edf\u662fSTRIPS\uff08Fikes\u7b49\uff0c1972\uff09\u3002\u5b83\u4f7f\u7528\u4ee5\u524d\u7684\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u4f5c\u4e3a\u5b8f\u89c2\u884c\u52a8\u6765\u89e3\u51b3\u968f\u540e\u7684\u95ee\u9898\uff0c\u5e76\u76d1\u89c6\u73b0\u5b9e\u4e16\u754c\u4e2d\u8ba1\u5212\u7684\u6267\u884c\u60c5\u51b5\u3002\u540e\u6765\uff0cMORRIS\uff08Korf\uff0c1985\u5e74\uff09\u901a\u8fc7\u6dfb\u52a0\u8fc7\u6ee4\u8bd5\u63a2\u6cd5\u6765\u4fee\u526a\u751f\u6210\u7684\u5b8f\u52a8\u4f5c\u96c6\uff0c\u4ece\u800c\u6269\u5c55\u4e86\u8fd9\u79cd\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u533a\u5206\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u5b8f\u52a8\u4f5c\uff1a\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u9891\u7e41\u53d1\u751f\u7684S\u5b8f\u548c\u5728\u5b8f\u4e8b\u4ef6\u4e2d\u53d1\u751f\u4e0d\u591a\u7684T\u5b8f\uff0c\u4f46\u662f\u5728\u542f\u53d1\u5f0f\u7b97\u6cd5\u4e2d\u5efa\u7acb\u4e86\u4e00\u4e9b\u5f31\u70b9\u3002REFLECT\u7cfb\u7edf\uff08Dawson\u548cSilklossly\uff0c1977\uff09\u91c7\u7528\u4e86\u57fa\u4e8e\u57df\u9884\u5904\u7406\u751f\u6210\u5b8f\u52a8\u4f5c\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u6240\u6709\u5408\u7406\u7684\u52a8\u4f5c\u7ec4\u5408\u90fd\u88ab\u89c6\u4e3a\u5b8f\u52a8\u4f5c\uff0c\u5e76\u901a\u8fc7\u57fa\u672c\u4fee\u526a\u89c4\u5219\u8fdb\u884c\u4e86\u8fc7\u6ee4\u3002 \u4f20\u7edf\u4e0a\uff0c\u5b8f\u52a8\u4f5c\u7cfb\u7edf\u5728\u4f7f\u7528\u5b8f\u52a8\u4f5c\u4e4b\u524d\u5148\u4f7f\u7528\u79bb\u7ebf\u65b9\u6cd5\u6765\u751f\u6210\u548c\u8fc7\u6ee4\u5b8f\u52a8\u4f5c\uff0c\u4f46\u662f\u4e00\u4e9b\u7cfb\u7edf\u5df2\u5c1d\u8bd5\u4f7f\u7528ML\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u8fc7\u6ee4\u5b8f\u52a8\u4f5c\u3002\u5728\uff08McCluskey\uff0c1987\uff09\u4e2d\uff0c\u4f5c\u8005\u4f7f\u7528\u4e86\u5757\uff1b\u5728\uff08Garcia-Duran\u7b49\uff0c2006\uff09\u4e2d\uff0c\u4ed6\u4eec\u4f7f\u7528\u4e86\u63a7\u5236\u89c4\u5219\u6765\u51b3\u5b9a\u4f55\u65f6\u5e94\u7528\u5b8f\u52a8\u4f5c\u3002 \u6700\u8fd1\u7684\u5de5\u4f5c\u6210\u529f\u5730\u5c06\u5b8f\u4e0e\u6700\u65b0\u7684\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u5668\u96c6\u6210\u5728\u4e00\u8d77\u3002\u8fd9\u4e9b\u4f5c\u54c1\u5305\u62ecIPC-2004\u7684\u7ade\u4e89\u5bf9\u624bM acro FF\uff08Botea\u7b49\uff0c2005a\uff0c2007\uff09\u3002\u5728\u8fd9\u91cc\uff0c\u901a\u8fc7\u8bc6\u522b\u9759\u6001\u8fde\u63a5\u7684\u62bd\u8c61\u7ec4\u4ef6\u6765\u63d0\u53d6\u90e8\u5206\u6392\u5e8f\u7684\u5b8f\u52a8\u4f5c\uff0c\u7136\u540e\u4f7f\u7528\u79bb\u7ebf\u8fc7\u6ee4\u6280\u672f\u6765\u4fee\u526a\u5b8f\u52a8\u4f5c\u5217\u8868\u3002 Marvin \uff08Coles and Smith\uff0c2007\uff09\uff0c\u4e5f\u662fIPC-2004\u7684\u53c2\u4e0e\u8005\uff0c\u4f7f\u7528\u52a8\u4f5c\u5e8f\u5217\u8bb0\u5fc6\u6280\u672f\u5728\u7ebf\u751f\u6210\u5b8f\u52a8\u4f5c\uff0c\u4f7f\u8ba1\u5212\u8005\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u63a2\u7d22\u5373\u53ef\u4ece\u9ad8\u539f\u9003\u8131\u3002\u5411\u5bfc\uff08Newton et al\u3002\uff0c2007\uff09\u4f7f\u7528\u9057\u4f20\u7b97\u6cd5\u6765\u751f\u6210\u548c\u8fc7\u6ee4\u72ec\u7acb\u4e8e\u57fa\u7ebf\u8ba1\u5212\u7a0b\u5e8f\u7684\u5b8f\u52a8\u4f5c\u96c6\u5408\u3002\u7b97\u6cd5*\u6b63\u514b* \u6700\u8fd1\uff0c\u5206\u6790\u6cd5\u4e5f\u5df2\u7528\u4e8e\u5b66\u4e60\u542f\u53d1\u5f0f\u8ba1\u5212\u7a0b\u5e8fFF\u7684\u5b8f\u52a8\u4f5c\uff08Muise\u7b49\uff0c2009\uff09\u3002","title":"\u5b9e\u73b0macro-action"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#generalized-policies","text":"\u901a\u7528\u7b56\u7565\u662f\u5c06\u8ba1\u5212\u4e0a\u4e0b\u6587\uff08\u6709\u65f6\u4e5f\u79f0\u4e3a\u5143\u72b6\u6001\uff09\u6620\u5c04\u5230\u8981\u5728\u4e0a\u4e0b\u6587\u4e2d\u5e94\u7528\u7684\u9996\u9009\u64cd\u4f5c\u3002\u8ba1\u5212\u4e0a\u4e0b\u6587\u901a\u5e38\u5305\u62ec\u5f53\u524d\u72b6\u6001\u4ee5\u53ca\u76ee\u6807\u96c6\u3002\u901a\u8fc7\u9488\u5bf9\u6bcf\u4e2a\u8ba1\u5212\u4e0a\u4e0b\u6587\u91cd\u590d\u5e94\u7528\u9996\u9009\u64cd\u4f5c\uff0c\u51c6\u786e\u7684\u901a\u7528\u7b56\u7565\u53ef\u4ee5\u89e3\u51b3\u7ed9\u5b9a\u57df\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u641c\u7d22\u3002","title":"Generalized Policies"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#_2","text":"\u5b66\u4e60\u901a\u7528\u7b56\u7565 \u2022 \u77e5\u8bc6\u8868\u793a\u3002\u8868\u793a\u8ba1\u5212\u4e0a\u4e0b\u6587\u65f6\u7684\u5173\u952e\u95ee\u9898\u662f\u9009\u62e9*\u8981\u7d20\u7a7a\u95f4\u3002 \u7279\u5f81\u7a7a\u95f4\u662f\u7528\u4e8e\u5b66\u4e60\u8fc7\u7a0b\u7684\u8c13\u8bcd\u96c6\u3002\u8be5\u96c6\u5408\u5fc5\u987b\u8db3\u591f\u901a\u7528\u4ee5\u6355\u83b7\u9886\u57df5\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5e76\u4e14\u5fc5\u987b\u8db3\u591f\u5177\u4f53\u4ee5\u4f7f\u5b66\u4e60\u53d8\u5f97\u5bb9\u6613\u3002\u5728AP\u4e2d\uff0c\u7279\u5f81\u7a7a\u95f4\u901a\u5e38\u7531\u8c13\u8bcd\u7ec4\u6210\uff0c\u7528\u4ee5\u63cf\u8ff0\u8ba1\u5212\u4efb\u52a1\u7684\u5f53\u524d\u72b6\u6001\u548c\u76ee\u6807\u3002\u6240\u8ff0PRODIGY\u7cfb\u7edf\u5bcc\u542b\u989d\u5916\u8c13\u8bcd\uff0c\u79f0\u4e3a\u7279\u5f81\u7a7a\u95f4*metapredicates \uff08\u660e\u987f\uff0c1988\uff09\u3002*\u5143\u8c13\u8bcd*\u6355\u83b7\u6709\u5173\u8ba1\u5212\u4e0a\u4e0b\u6587\u7684\u6709\u7528\u77e5\u8bc6\uff0c\u4f8b\u5982\u5f53\u524d\u9002\u7528\u7684\u8fd0\u8425\u5546\u6216\u4ecd\u9700\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u3002\u5b66\u4e60\u63a8\u5e7f\u653f\u7b56\u7684\u6700\u65b0\u4f5c\u54c1\u5df2\u7ecf\u6269\u5c55metapredicates\u7684\u5b9a\u4e49\uff0c\u5305\u62ec\u4ece\u542f\u53d1\u5f0f\u7684\u89c4\u5212\u7406\u5ff5\uff0c\u597d\u50cfmetapredicates\u7528\u4e8e\u6355\u6349*\u5bbd\u677e\u8ba1\u5212\u7684\u884c\u52a8*\u5728\u5f53\u524d\u72b6\u6001\uff08Yoon\u7b49\uff0c2008\uff09\u6216\u6355\u83b7\u7ec4\u7684*\u6709\u76ca\u884c\u52a8*\u4e2d\u5f53\u524d\u72b6\u6001\uff08de la Rosa\u7b49\uff0c2008\uff09\u3002 \u4ee3\u8868\u5e7f\u4e49\u7b56\u7565\u7684\u4e3b\u8981\u65b9\u6cd5\u6709\u4e24\u79cd\u3002 \u901a\u7528\u7b56\u7565\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u7ec4\u89c4\u5219\uff0c\u8fd9\u4e9b\u89c4\u5219\u6355\u83b7\u4e86\u8981\u5728\u7ed9\u5b9a\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u5e94\u7528\u7684\u9996\u9009\u64cd\u4f5c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e7f\u4e49\u7b56\u7565\u88ab\u6b63\u5f0f\u5b9a\u4e49\u4e3a\u5143\u7ec4n *= \uff0c*\u5176\u4e2d -L\u7528\u4e8e\u63cf\u8ff0\u4e0d\u540c\u8ba1\u5212\u73af\u5883\u7684\u4e00\u7ec4\u6587\u5b57\u3002\u5b83\u5b9a\u4e49\u4e86\u5b66\u4e60\u671f\u95f4\u4f7f\u7528\u7684\u7279\u5f81\u7a7a\u95f4\u3002 -R\u662f\u4e00\u7ec4\u89c4\u5219\uff0c\u5176\u4e2d\u89c4\u5219\u7684\u6807\u9898\u662f\u8981\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u800c\u4e3b\u4f53\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u63cf\u8ff0\u4e86\u5e94\u5728\u5176\u4e2d\u5e94\u7528\u64cd\u4f5c\u7684\u8ba1\u5212\u73af\u5883\u3002 \u901a\u7528\u7b56\u7565\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u7ec4\u5177\u6709\u8ddd\u79bb\u5ea6\u91cf\u7684\u68c0\u7d22\u5b9e\u4f8b\uff0c\u4ee5\u68c0\u7d22\u76f8\u4f3c\u5b9e\u4f8b\u3002\u8fd9\u662fCBR\uff08\u57fa\u4e8e\u6848\u4f8b\u7684\u63a8\u7406\uff09\u8ba1\u5212\u8005\u9075\u5faa\u7684\u8868\u793a\u65b9\u6cd5\u3002\u5373\u4f7f\u8be5\u8868\u793a\u80fd\u591f\u6355\u83b7\u66f4\u591a\u7279\u5b9a\u7684\u57df\u89c4\u5219\u6027\uff0c\u4e5f\u5177\u6709\u9700\u8981\u9002\u5f53\u7684\u76f8\u4f3c\u6027\u5ea6\u91cf\u7684\u4e25\u91cd\u7f3a\u9677\u3002\u5904\u7406\u5927\u91cf\u51b3\u7b56\u5b9e\u4f8b\u96c6\u5408\u65f6\uff0c\u6548\u7528\u4e5f\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u968f\u7740\u96c6\u5408\u53d8\u5927\uff0c\u641c\u7d22\u76f8\u4f3c\u5b9e\u4f8b\u6240\u9700\u7684\u65f6\u95f4\u4e5f\u4f1a\u589e\u52a0\u3002 \u5e7f\u4e49\u7b56\u7565\u7684\u7b2c\u4e8c\u79cd\u8868\u793a\u5f62\u5f0f\u88ab\u6b63\u5f0f\u5b9a\u4e49\u4e3a\u5143\u7ec4n = < L\uff0cI\uff0cD> \uff0c\u5176\u4e2d\uff1a -L\u7528\u4e8e\u63cf\u8ff0\u8ba1\u5212\u73af\u5883\u7684\u4e00\u7ec4\u6587\u5b57\u3002\u5b83\u5b9a\u4e49\u4e86*\u7279\u5f81\u7a7a\u95f4\u3002* -I\u662f\u4e00\u7ec4\u5143\u7ec4\uff0ci = \uff0c\u5176\u4e2dci\u662f\u5b9e\u4f8b\u5316\u7684\u8ba1\u5212\u4e0a\u4e0b\u6587\uff0cai\u662f\u5728*ci\u4e2d*\u5e94\u7528\u7684\u5b9e\u4f8b\u5316\u64cd\u4f5c*\u3002* -D is a distance metric that computes the distance between two different planning contexts. Givena new planning contextc, the policy decides the actionaito execute incby computing the closesttuple inIand returning its associated actionai, as shown in: \\(\\pi(c) = arg_{a_i} \\mathop{min}\\limits_{<c_i,a_i>\\in I} D(c,c_i)\\) \u4e24\u79cd\u65b9\u6cd5\u901a\u5e38\u4ee5\u8c13\u8bcd\u903b\u8f91\u8868\u793a\u8ba1\u5212\u4e0a\u4e0b\u6587\uff0c\u56e0\u4e3a\u8fd9\u662fAP\u4efb\u52a1\u7684\u81ea\u7136\u7f16\u7801\u3002\u8c13\u8bcd\u903b\u8f91\u63d0\u4f9b\u4e86\u5b9a\u4e49\u989d\u5916\u8c13\u8bcd\u7684\u673a\u5236\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u53ef\u4ee5\u4e30\u5bcc\u8ba1\u5212\u73af\u5883\u3002\u4f5c\u4e3a\u8fd9\u4e9b\u989d\u5916\u8c13\u8bcd\u7684\u4e00\u4e2a\u793a\u4f8b\uff0c\u56fe14\u663e\u793a\u4e86 Blocksworld\u7684wellplaced\uff08Block\uff09\u8c13\u8bcd\u7684*\u5b9a\u4e49*\uff08Khardon\uff0c1999\uff09\u3002\u8fd9\u4e2a\u6982\u5ff5\u4e0d\u5728 Blocksworld \u57df\u7684\u539f\u59cb\u7f16\u7801\u4e2d\uff0c\u4f46\u662f\u5b9a\u4e49\u7d27\u51d1\u7684\u5e7f\u4e49\u7b56\u7565\u5f88\u6709\u7528. \u5728\u8c13\u8bcd\u903b\u8f91\u4e2d\u5b66\u4e60\u8fd9\u7c7b\u8c13\u8bcd\u4ecd\u7136\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u624b\u5de5\u7f16\u7801\u3002\u8ba1\u5212\u7cfb\u7edf\u4f7f\u7528\u4e86\u5176\u4ed6\u8868\u793a\u8bed\u8a00\uff0c\u53ef\u4ee5\u6210\u529f\u5730\u5b66\u4e60\u8fd9\u4e9b\u6982\u5ff5\u3002\u5df2\u7ecf\u663e\u793a\u51fa\u7528\u4e8e\u63cf\u8ff0\u5bf9\u8c61\u7c7b\u7684\u8bed\u8a00\u4e3a\u5b66\u4e60\u8fd9\u4e9b\u6982\u5ff5\u63d0\u4f9b\u4e86\u6709\u7528\u7684\u504f\u89c1\u3002\u8fd9\u4e9b\u8bed\u8a00\u5305\u62ec*\u6982\u5ff5\u8bed\u8a00*\uff08Martin\u548cGe ^ ner\uff0c2000\uff09\u548c \u5206\u7c7b\u8bed\u6cd5 \uff08Mcallester\u548cGivan\uff0c1989\uff09\uff0c\u5b83\u4eec\u63d0\u4f9b\u8fd0\u7b97\u7b26\u6765\u5b9a\u4e49\u8c13\u8bcd\u4e0a\u7684\u9012\u5f52\u6982\u5ff5\uff0c\u4f8b\u5982* \u8fd0\u7b97\u7b26\u3002*\u4f8b\u5982\uff0c\u5728*Blocksworld \u57df\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u8bed\u8a00\u4ee5\u975e\u5e38\u7d27\u51d1\u7684\u65b9\u5f0f\u5b9a\u4e49*\u653e\u7f6e*\u9002\u5f53\u7684\u5757\u7684\u6709\u7528\u6982\u5ff5. \u7528*\u65f6\u95f4\u903b\u8f91*\u8868\u8fbe\u8ba1\u5212\u77e5\u8bc6\u4e5f\u88ab\u8bc1\u660e\u662f\u6709\u7528\u7684\u3002TLPLAN\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\uff08Bacchus\u548cKabanza\uff0c2000\u5e74\uff09\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b66\u4e60*\u65f6\u95f4\u903b\u8f91\u4e2d\u7684*\u8ba1\u5212\u77e5\u8bc6\u5c1a\u672a\u89e3\u51b3\u3002 \u2022 \u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u662f\u9488\u5bf9\u57f9\u8bad\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5b66\u4e60\u793a\u4f8b\u5305\u62ec\u5143\u7ec4< ci \uff0c \u3007i + i> \uff0c\u5176\u4e2d*ci* \u662f\u8ba1\u5212\u4e0a\u4e0b\u6587\uff0c\u800c*\u3007i* + i \u662f\u5728\u4e0a\u4e0b\u6587*ci\u4e0a*\u5e94\u7528\u7684\u64cd\u4f5c*\u3002* \u2022 \u5b66\u4e60\u7b97\u6cd5\u3002\u5f53\u7b56\u7565\u7531\u4e00\u7ec4\u89c4\u5219\u7ec4\u6210\u65f6\uff0c\u5b66\u4e60\u4efb\u52a1\u4e0eILP\u4efb\u52a1\u975e\u5e38\u76f8\u5173\u3002\u5b66\u4e60\u901a\u7528\u7b56\u7565\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u5bf9\u57df\u4e2d\u6bcf\u4e2a\u52a8\u4f5c\u7684\u903b\u8f91\u7a0b\u5e8f\u7684\u5f52\u7eb3\u3002\u8be5\u903b\u8f91\u7a0b\u5e8f\u6355\u83b7\u4f55\u65f6\u5e94\u7528\u8be5\u52a8\u4f5c\u3002\u8be5\u903b\u8f91\u7a0b\u5e8f\u4e2d\u89c4\u5219\u7684\u5934\u7531\u52a8\u4f5c\u540d\u79f0\u548c\u53c2\u6570\u7ec4\u6210\uff0c\u4e3b\u4f53\u662f\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u6700\u80fd\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b\u7684\u6587\u5b57\u7684\u5b50\u96c6\u3002\u53ef\u4ee5\u901a\u8fc7\u5b66\u4e60\u793a\u4f8b\u7684\u8986\u76d6\u8303\u56f4\u5c06\u8fd9\u79cd\u5b66\u4e60\u4efb\u52a1\u5b9e\u73b0\u4e3a\u542f\u53d1\u5f0f\u641c\u7d22\u3002\u5f53\u7b56\u7565\u7531\u4e00\u7ec4\u76f8\u5173\u5b9e\u4f8b\u7ec4\u6210\u65f6\uff0c\u5b66\u4e60\u4efb\u52a1\u5c06\u5b58\u50a8\u548c\u7ba1\u7406\u8be5\u7ec4\u5b9e\u4f8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b66\u4e60\u5927\u91cf\u5b9e\u4f8b\u5b9e\u9645\u4e0a\u53ef\u80fd\u9002\u5f97\u5176\u53cd\uff0c\u56e0\u4e3a\u96be\u4ee5\u5b58\u50a8\u548c\u7ba1\u7406\u5b83\u4eec\uff0c\u5e76\u4e14\u7531\u4e8e\u5728\u786e\u5b9a\u4f7f\u7528\u54ea\u4e2a\u5b9e\u4f8b\u6765\u89e3\u51b3\u7279\u5b9a\u95ee\u9898\u65b9\u9762\u6d89\u53ca\u56f0\u96be\u3002\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u5bf9\u5b58\u50a8\u7684\u5b9e\u4f8b\u8fdb\u884c\u540e\u5904\u7406\uff0c\u4ee5\u4ec5\u7ba1\u7406\u6700\u76f8\u5173\u7684\u5b9e\u4f8b\u3002\u4f8b\u5982REPLICA\uff08Garcia-Duran\u7b49\uff0cress\uff09\u4ece\u5b9e\u4f8b\u4e2d\u63d0\u53d6\u4e00\u7ec4\u539f\u578b\uff0c\u6216DISTILL\uff08Winner\u548cVeloso\uff0c2003\uff09\uff0c\u901a\u8fc7\u5f52\u7eb3\u548c\u5408\u5e76\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u6765\u6784\u5efa\u9ad8\u5ea6\u538b\u7f29\u7684\u5b9e\u4f8b\u5e93\u3002 \u2022\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002\u901a\u7528\u7b56\u7565\u53ef\u7528\u4e8e\u76f4\u63a5\u9009\u62e9\u8981\u5e94\u7528\u4e8e\u7ed9\u5b9a\u8ba1\u5212\u4e0a\u4e0b\u6587\u7684\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u5f53\u5b66\u5230\u7684\u901a\u7528\u7b56\u7565\u4e0d\u5b8c\u5584\u65f6\uff0c\u5176\u5e94\u7528\u53ef\u80fd\u65e0\u6cd5\u89e3\u51b3\u6b64\u7c7b\u65e9\u671f\u7cfb\u7edf\u4e2d\u7684\u95ee\u9898\u3002\u8fd9\u4e9b\u7cfb\u7edf\u5b66\u4e60\u4e86\u63a7\u5236\u89c4\u5219\uff0c\u4ee5\u6307\u5bfc\u63a2\u7d22\u641c\u7d22\u6811\u7684\u8ba1\u5212\u3002\u63a7\u5236\u89c4\u5219\u662fIF-THEN\u89c4\u5219\uff0c\u5b83\u5efa\u8bae\u5728\u6811\u63a2\u7d22\u671f\u95f4\u8fdb\u884c\u8282\u70b9\u9009\u62e9\uff0c\u4fee\u526a\u6216\u6392\u5e8f\u3002\u4e00\u7ec4\u63a7\u5236\u89c4\u5219\u53ef\u4ee5\u770b\u4f5c\u662f*\u90e8\u5206*\u901a\u7528\u653f\u7b56\uff0c\u56e0\u4e3a\u5b83\u4eec\u672a\u9488\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u89c4\u5212\u73af\u5883\u63d0\u4f9b\u884c\u52a8\u5efa\u8bae\u3002\u5f53\u7ed9\u5b9a\u7684\u63a7\u5236\u89c4\u5219\u5efa\u8bae\u4e0d\u5b8c\u5584\u65f6\uff0c\u901a\u5e38\u4f1a\u963b\u6b62\u8ba1\u5212\u8005\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002\u4e3a\u4e86\u66f4\u6709\u6548\u5730\u5229\u7528\u901a\u7528\u7b56\u7565\uff0c\u6700\u8fd1\u7684\u5de5\u4f5c\u5df2\u5c06\u5b66\u4e60\u5230\u7684\u7b56\u7565\u7528\u4f5cBeam-Search\u6216Limited Discrepency Search\u7b49\u641c\u7d22\u7b97\u6cd5\u4e2d\u7684\u8bc4\u4f30\u529f\u80fd\u3002\u8fd9\u4e9b\u641c\u7d22\u7b97\u6cd5\u5141\u8bb8\u8ba1\u5212\u5c06\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u63d0\u4f9b\u7684\u6307\u5bfc\u4e0e\u5176\u4ed6\u5efa\u8bae\u6765\u6e90\uff08\u4f8b\u5982\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff09\u76f8\u7ed3\u5408\u3002","title":""},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#generalized-policies_1","text":"\u6709\u4e00\u7ec4\u7cfb\u7edf\u53ef\u4ee5\u5f52\u7eb3\u5b66\u4e60\u63a7\u5236\u89c4\u5219\u3002\u5176\u4e2d\u5f52\u7eb3\u5b66\u4e60\u7f16\u7a0b\uff08ILP\uff09\u662f\u6700\u6d41\u884c\u7684\u5b66\u4e60\u6280\u672f\u3002G rasshopper \u7cfb\u7edf\uff08Leckie\u548cZukerman\uff0c1991\uff09\u4f7f\u7528F \u6cb9\uff08Quinlan\u548cCameron-Jones\uff0c1995\uff09\u6765\u5b66\u4e60\u6307\u5bfc\u795e\u7ae5\u8ba1\u5212\u8005\u7684\u63a7\u5236\u89c4\u5219 \u3002\u4e5f\u6709\u5206\u6790\u7cfb\u7edf\uff1a\u795e\u7ae5/ EBL \u6a21\u5757\uff08\u660e\u987f\uff0c1988\u5e74\uff09\u4e86\u89e3\u5230\u641c\u7d22\u63a7\u5236\u89c4\u5219\u7684PRODIGY \u4ece\u6b63\u786e\u548c\u9519\u8bef\u51b3\u7b56\u7684\u51e0\u4e2a\u4f8b\u5b50\u89c4\u5212\u5e08\u3002\u5c0f\u53f7tatic\uff08Etzioni\uff0c1993\uff09\u83b7\u5f97\u63a7\u5236\u89c4\u5219\u800c\u6ca1\u6709\u89e3\u51b3\u4efb\u4f55\u95ee\u9898\u3002\u5b83\u4ec5\u4f7f\u7528\u57fa\u4e8e\u89e3\u91ca\u7684\u5b66\u4e60\uff08EBL\uff09\u6765\u5206\u6790\u52a8\u4f5c\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u4e3a\u4e86\u514b\u670d\u7eaf\u5f52\u7eb3\u6cd5\u548c\u7eaf\u5206\u6790\u6cd5\u7684\u5c40\u9650\u6027\uff0c\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u5c06\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\uff1a\u57fa\u4e8e\u8be5\u539f\u7406\u7684\u5f00\u62d3\u6027\u7cfb\u7edf\u662fLEX-2\uff08Mitchell\u7b49\uff0c1982\uff09\u548cM eta -L ex \uff08Keller\uff0c1987\uff09\u3002 \uff09\u3002A x A-EBL\uff08Cohen\uff0c1990\uff09\u7ed3\u5408\u4e86EBL\u548c\u5f52\u7eb3\u6cd5\u3002\u5b83\u9996\u5148\u4f7f\u7528EBG\u5b66\u4e60\u63a7\u5236\u89c4\u5219\uff0c\u7136\u540e\u901a\u8fc7\u5b66\u4e60\u793a\u4f8b\u5bf9\u5176\u8fdb\u884c\u5b8c\u5584\u3002D olphin \uff08Zelle and Mooney\uff0c1993; Estlin and Mooney\uff0c1996\uff09\u662fA x A-EBL \u7684\u6269\u5c55\uff0c\u5b83\u4f7f\u7528F \u6cb9\u4f5c\u4e3a\u5f52\u7eb3\u5b66\u4e60\u6a21\u5757\u3002H amlet \uff08Borrajo\u548cVeloso\uff0c1997\uff09\u7cfb\u7edf\u5c06\u6f14\u7ece\u548c\u5f52\u7eb3\u76f8\u7ed3\u5408\u3002\u9996\u5148\uff0c\u5b83\u4f7f\u7528EBL\u5b66\u4e60\u901a\u5e38\u8fc7\u4e8e\u5177\u4f53\u6216\u7b3c\u7edf\u7684\u63a7\u5236\u89c4\u5219\uff0c\u7136\u540e\u4f7f\u7528\u5f52\u7eb3\u6cd5\u5bf9\u89c4\u5219\u8fdb\u884c\u6cdb\u5316\u548c\u4e13\u95e8\u5316\u3002E vo CK\uff08Aler et al\u3002\uff0c2002\uff09\u4f7f\u7528*\u9057\u4f20\u7f16\u7a0b*\u6765\u53d1\u5c55H amlet \u5b66\u4e60\u7684\u89c4\u5219\u5e76\u4ea7\u751f\u66f4\u6709\u6548\u7684\u641c\u7d22\u63a7\u5236\u3002 \u5b66\u4e60\u5e7f\u4e49\u7b56\u7565\u7684\u95ee\u9898\u6700\u65e9\u7531Roni Khardon\u7814\u7a76\u3002Khardon\u7684L2A CT \uff08Khardon\uff0c1999\u5e74\uff09\u901a\u8fc7\u5c06\u51b3\u7b56\u5217\u8868\u5b66\u4e60\u7b97\u6cd5\uff08Rivest\uff0c1987\u5e74\uff09\u6269\u5c55\u5230\u5173\u7cfb\u73af\u5883\uff0c\u4e3a*Blocksworld* \u548c*Logistics* \u9886\u57df\u5f15\u5165\u4e86\u901a\u7528\u7b56\u7565\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5b58\u5728\u4e24\u4e2a\u91cd\u8981\u7684\u5f31\u70b9\uff1a\uff081 \uff09\u5b83\u4f9d\u9760\u4eba\u7c7b\u5b9a\u4e49\u7684\u80cc\u666f\u77e5\u8bc6\u6765\u8868\u8fbe\u5173\u952e\u7279\u5f81\u8f6f\u57df\uff0c\u4f8b\u5982Blocksworld\u4e0a\u7684\u8c13\u8bcd\uff08block1\uff0cblock2\uff09\u6216i ^ place\uff08block\uff09\uff0c\u4ee5\u53ca\uff082\uff09\u5b66\u4e60\u7684\u7b56\u7565\u6ca1\u6709\u5f53\u95ee\u9898\u7684\u89c4\u6a21\u589e\u52a0\u65f6\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u6982\u62ec\u3002Martin\u548cGeffner\u89e3\u51b3\u4e86*Blocksworld\u4e2d\u7684*\u8fd9\u4e9b\u9650\u5236\u901a\u8fc7\u5c06\u5e7f\u4e49\u7b56\u7565\u7684\u8868\u793a\u8bed\u8a00\u4ece\u8c13\u8bcd\u903b\u8f91\u66f4\u6539\u4e3a*\u6982\u5ff5\u8bed\u8a00*\u6765\u5b66\u4e60\u9012\u5f52\u6982\u5ff5\uff08Martin and Gef ^ er\uff0c2000\uff09\u3002 \u6700\u8fd1\uff0c\u5e7f\u4e49\u7b56\u7565\u5b66\u4e60\u7684\u8303\u56f4\u5df2\u5728\u591a\u4e2a\u9886\u57df\u4e2d\u589e\u52a0\uff0c\u4ece\u800c\u4f7f\u8be5\u65b9\u6cd5\u53ef\u4e0e\u6700\u65b0\u7684\u8ba1\u5212\u8005\u7ade\u4e89\u3002\u8fd9\u4e00\u6210\u5c31\u5f52\u529f\u4e8e\u4e24\u4e2a\u65b0\u601d\u60f3\uff1a\uff081\uff09\u7b56\u7565\u8868\u793a\u8bed\u8a00\u4e2d\u5305\u542b\u4e86\u989d\u5916\u7684\u8c13\u8bcd\uff0c\u53ef\u4ee5\u6355\u83b7\u66f4\u6709\u6548\u7684\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\uff1b\uff082 \uff09\u5b66\u4e60\u7b56\u7565\u4e0d\u662f\u8d2a\u5a6a\u5730\u5e94\u7528\uff0c\u800c\u662f\u5728\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5\u7684\u6846\u67b6\u5185\u5e94\u7528\u3002\u4e00\u4e2a\u7a81\u51fa\u7684\u4f8b\u5b50\u662fO btuse W \u8fb9\u7f18\u7cfb\u7edf\uff08Yoon\u7b49\uff0c2007\uff09\uff0c\u5b83\u662fIPC-2008\u5b66\u4e60\u8f68\u8ff9\u7684\u6700\u4f73\u5b66\u4e60\u8005\u3002\u8be5\u7cfb\u7edf\u901a\u8fc7\u5bbd\u677e\u7684\u8ba1\u5212\u56fe\u4e30\u5bcc\u4e86\u5f53\u524d\u72b6\u6001\u7684\u77e5\u8bc6\uff0c\u5e76\u4f7f\u7528\u5b66\u4e60\u5230\u7684\u7b56\u7565\u5728\u201c\u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d\u4e2d\u751f\u6210\u8d85\u524d\u72b6\u6001\u3002[R \u5965\u52d2\uff08de la Rosa\u7b49\uff0c2008\uff09\u5c06\u5b66\u4e60\u5e7f\u4e49\u7b56\u7565\u7684\u95ee\u9898\u5b9a\u4e49\u4e3a\u4e24\u6b65\u6807\u51c6\u5206\u7c7b\u8fc7\u7a0b\u3002\u7b2c\u4e00\u6b65\uff0c\u5206\u7c7b\u5668\u6355\u83b7\u8981\u5728\u4e0d\u540c\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u5e94\u7528\u7684\u9996\u9009\u8fd0\u7b97\u7b26\u3002\u5728\u7b2c\u4e8c\u4e2a\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5206\u7c7b\u5668\u5728\u7ed9\u5b9a\u57df5\u7684\u4e0d\u540c\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u6355\u83b7\u6bcf\u4e2a\u64cd\u4f5c\u5458\u7684\u9996\u9009\u7ed1\u5b9a\u3002\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u7531\u4ece\u7ed9\u5b9a\u72b6\u6001\u7684\u5bbd\u677e\u8ba1\u5212\u56fe\u4e2d\u63d0\u53d6\u7684\u6709\u7528\u64cd\u4f5c\u96c6\uff0c\u4ecd\u672a\u5b9e\u73b0\u7684\u76ee\u6807\u4ee5\u53ca\u8ba1\u5212\u4efb\u52a15\u7684\u9759\u6001\u8c13\u8bcd\u5b9a\u4e49\u3002 \u8fd8\u5b58\u5728\u901a\u8fc7\u89c4\u5212\u5b9e\u4f8b\u7684\u96c6\u5408\u8868\u793a\u5e7f\u4e49\u7b56\u7565\u7684\u7cfb\u7edf\uff0c\u5982AP\u7684CBR\u7cfb\u7edf\u3002\u57fa\u4e8e\u5b9e\u4f8b\u7684AP\u7cfb\u7edf\u901a\u5e38\u5728\u5404\u79cd\u57df\u4e2d\u90fd\u4e0d\u5177\u6709\u7ade\u4e89\u529b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b58\u5728\u5fc5\u987b\u5b9a\u4e49\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u57df\u4e2d\u90fd\u80fd\u5f88\u597d\u5de5\u4f5c\u7684\u9002\u5f53\u76f8\u4f3c\u6027\u5ea6\u91cf\u7684\u7f3a\u70b9\u3002PRIAR\u7cfb\u7edf\uff08Kambhampati\u548cHendler\uff0c1992\uff09\u5efa\u8bae\u5c06\u8ba1\u5212\u7684\u4fee\u6539\u4e0e\u751f\u6210\u8ba1\u5212\u7ed3\u5408\u8d77\u6765\u3002OBTUSEWEDGE/ ANALOGY\uff08Veloso and Carbonell\uff0c1993\uff09\u4ecb\u7ecd\u4e86\u5c06\u63a8\u5bfc\u7c7b\u6bd4\u5e94\u7528\u4e8e\u89c4\u5212\u3002\u5b83\u5b58\u50a8\u4e86\u8ba1\u5212\u8ddf\u8e2a\uff0c\u4ee5\u907f\u514d\u5728\u5c06\u6765\u89e3\u51b3\u95ee\u9898\u65f6\u51fa\u73b0\u6545\u969c\u8def\u5f84\u3002\u8981\u68c0\u7d22\u7c7b\u4f3c\u7684\u8ba1\u5212\u75d5\u8ff9\uff0cOBTUSEWEDGE/ ANALOGY \u4f7f\u7528\u6700\u5c0f\u524d\u63d0\u6761\u4ef6\u4e3a\u5b83\u4eec\u5efa\u7acb\u7d22\u5f15\uff0c\u4ee5\u5b9e\u73b0\u4e00\u7ec4\u76ee\u6807\u3002\u57fa\u4e8e\u6848\u4f8b\u7684\u8ba1\u5212\u7cfb\u7edfPARIS\uff08Bergmann\u548cWilke\uff0c1996\uff09\u63d0\u51fa\u5f15\u5165\u62bd\u8c61\u6280\u672f\u6765\u5c06\u6848\u4f8b\u7ec4\u7ec7\u8d77\u6765\u5b58\u50a8\u5728\u5206\u5c42\u5b58\u50a8\u5668\u4e2d\u3002\u8be5\u6280\u672f\u63d0\u9ad8\u4e86\u6848\u4ef6\u4fee\u6539\u7684\u7075\u6d3b\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u5355\u4e2a\u6848\u4ef6\u7684\u8986\u76d6\u8303\u56f4\u3002DISTILL\uff08Winner\u548cVeloso\uff0c2003\u5e74\uff09\u5c06\u793a\u4f8b\u8ba1\u5212\u5408\u5e76\u5230\u79f0\u4e3a*dsPlanner* \u7684\u7ed3\u6784\u4e2d*\u3002 DISTILL\u5c06\u8ba1\u5212\u8f6c\u6362\u4e3a\u53c2\u6570\u5316\u7684if\u8bed\u53e5\uff0c\u5e76\u641c\u7d22\u5df2\u7ecf\u5b58\u50a8\u5728*dsPlanner \u4e2d\u7684\u6bcf\u4e2aif\u8bed\u53e5\u4ee5\u5408\u5e76\u5b83\u4eec\u3002\u5982\u679c\u5b66\u5230\u7684*dsPlanner* \u662f\u51c6\u786e\u7684\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u6765\u89e3\u51b3\u57df\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u641c\u7d22\u3002\u5361\u5df4\u62c9\uff08\u5fb7\u62c9\u7f57\u838e\u7b49\u4eba\uff0c2007\uff09\u4f7f\u7528\u542f\u53d1\u5f0f\u8ba1\u5212\u4e2d\u7684\u8ba1\u5212\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\uff08\u79f0\u4e3a\u7c7b\u578b\u5e8f\u5217\uff09\u5bf9\u8282\u70b9\u8fdb\u884c\u6392\u5e8f\u3002\u53e6\u4e00\u4f4d\u57fa\u4e8e\u5b9e\u4f8b\u7684\u5b66\u4e60\u8005REPLICA \u4f7f\u7528\u53d7\u5173\u7cfb\u6570\u636e\u6316\u6398\u4e2d\u4f7f\u7528\u7684\u5ea6\u91cf\u542f\u53d1\u7684\u5173\u7cfb\u8ddd\u79bb\uff0c\u5b9e\u73b0\u4e86\u201c \u6700\u8fd1\u539f\u578b\u5b66\u4e60\u201d \uff08Garcia-Duran\u7b49\u4eba\uff0cress\uff09\u3002OAKPlan\uff08Serina\uff0c2010\u5e74\uff09\u4f7f\u7528\u7d27\u51d1\u7684\u56fe\u5f62\u7ed3\u6784\u6765\u7f16\u7801\u89c4\u5212\u95ee\u9898\u3002\u8be5\u7ed3\u6784\u63d0\u4f9b\u4e86\u89c4\u5212\u95ee\u9898\u62d3\u6251\u7684\u8be6\u7ec6\u63cf\u8ff0\uff0c\u5e76\u5141\u8bb8\u5b66\u4e60\u8005\u57fa\u4e8e\u5185\u6838\u529f\u80fd\u5b9a\u4e49\u9009\u62e9\u6027\u68c0\u7d22\u8fc7\u7a0b\u3002 \u5728\uff08de la Rosa\u7b49\u4eba\uff0c2009\uff09\u4e2d\uff0c\u6700\u8fd1\u63cf\u8ff0\u4e86\u4e00\u79cd\u8ba1\u5212\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u80fd\u591f\u4ece\u4e24\u79cd\u65b9\u6cd5\uff08\u89c4\u5219\u6216\u5b9e\u4f8b\uff09\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u6240\u4ee3\u8868\u7684\u5e7f\u4e49\u653f\u7b56\u4e2d\u53d7\u76ca\u3002\u8be5\u7cfb\u7edf\u67e5\u8be2\u7528\u4e8e\u4fee\u590d*\u5bbd\u677e\u8ba1\u5212*\u7f3a\u9677\u7684\u7b56\u7565*\uff0c \u7136\u540e\u5c06\u6700\u7ec8\u653e\u677e\u7684\u8ba1\u5212\u7528\u4f5c\u201c *\u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d \u4e2d\u7684\u57fa\u7840\u5b8f\u64cd\u4f5c*\u3002*","title":"\u5b9e\u73b0Generalized Policies"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#generalized-heuristics","text":"\u5728AP\u4e2d\u4f7f\u7528\u542f\u53d1\u5f0f\u529f\u80fd\u5c06\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u7684\u641c\u7d22\u96c6\u4e2d\u5728\u770b\u8d77\u6765\u6700\u6709\u524d\u9014\u7684\u641c\u7d22\u8282\u70b9\u4e0a\u3002\u7528\u4e8eAP\u7684\u542f\u53d1\u5f0f\u51fd\u6570\u8ba1\u7b97\u4ece\u7ed9\u5b9a\u641c\u7d22\u8282\u70b9\u5230\u6ee1\u8db3\u76ee\u6807\u7684\u8282\u70b9\u7684\u8ddd\u79bb\u7684\u4f30\u8ba1\u3002\u53ef\u4ece\u8f7b\u677e\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u6210\u672c\u4e2d\u76f4\u63a5\u5f97\u51faAP\u7684\u4e0e\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u529f\u80fd\u3002 AP\u4efb\u52a1\u6700\u5e38\u89c1\u7684\u653e\u677e\u65b9\u6cd5\u662f**\u5ffd\u7565\u64cd\u4f5c\u7684\u5220\u9664\u6548\u679c**\u3002\u5982\u4eca\uff0c\u5927\u591a\u6570\u542f\u53d1\u5f0f\u8ba1\u5212\u8005\u90fd\u4f9d\u8d56\u6b64\u60f3\u6cd5\u6765\u5b9e\u65bd\u4ed6\u4eec\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u7531\u4e8e\u6b64\u65b9\u6cd5\u4e0e\u9886\u57df\u65e0\u5173\uff0c\u56e0\u6b64\u65e0\u6cd5\u6355\u83b7\u89c4\u5212\u9886\u57df\u7684\u5947\u5f02\u4e4b\u5904\u3002 \u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u83b7\u53d6\u4f7f\u7528ML\u6355\u83b7\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\u7684AP\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u5b83\u7740\u91cd\u4e8e\u542f\u53d1\u5f0f\u7b97\u6cd5\uff0c\u4ee5\u5bfb\u627eAP\u4e2d\u6700\u6d41\u884c\u7684\u641c\u7d22\u65b9\u6cd5\uff0c\u5373**\u524d\u5411\u72b6\u6001\u7a7a\u95f4**\u641c\u7d22\u3002 \u5b66\u4e60\u5e7f\u4e49\u542f\u53d1\u5f0f\u51fd\u6570 \u2022 \u77e5\u8bc6\u8868\u793a\u3002\u5b83\u4eec\u662f\u72b6\u6001s\u7684\u51fd\u6570*H\uff08s; A; G\uff09 \uff0c\u52a8\u4f5c\u6a21\u578b*A \u548c\u76ee\u6807\u96c6*G\uff0c \u5b83\u4eec\u4f30\u8ba1\u4eces\u5f00\u59cb\u5e76\u4f7f\u7528A\u7684\u52a8\u4f5c\u6765\u5b9e\u73b0\u76ee\u6807*G \u7684\u6210\u672c\u3002 \u8c13\u8bcd\u903b\u8f91*\u662f\u81ea\u7136\u7684\u7f16\u7801AP\u542f\u53d1\u5f0f\u529f\u80fd\uff0c\u56e0\u4e3a\u5b83\u4eec\u8868\u8fbe\u4e86\u6709\u5173AP\u4efb\u52a1\u7684\u5f53\u524d\u72b6\u6001\uff0c\u76ee\u6807\u548c\u64cd\u4f5c\u7684\u77e5\u8bc6\u3002\u8fd8\u4f7f\u7528\u4e86\u96c6\u4e2d\u4e8e\u5bf9\u8c61\u5c5e\u6027\u7684\u8868\u793a\u8bed\u8a00\uff0c\u4f8b\u5982*\u5206\u7c7b\u8bed\u6cd5 \u3002","title":"Generalized Heuristics"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#generalized-heuristics_1","text":"\u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u7531\u5143\u7ec4 \u7ec4\u6210\uff0c\u5176\u4e2dsi\u662f\u5f53\u524d\u72b6\u6001 \u548c*CI* \u662f\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\u7684\u5b9e\u9645\u6210\u672c*GI* \u4ece\u56fd\u5bb6*SI\u3002* \u2022\u5b66\u4e60\u7b97\u6cd5\u3002\u5b66\u4e60\u7b97\u6cd5\u7684\u76ee\u7684\u662f\u6982\u62ec\u5b66\u4e60\u793a\u4f8b\u4e2d\u6355\u83b7\u7684\u6210\u672c\u503c\u3002\u7531\u4e8e\u8981\u4ece\u5b66\u4e60\u793a\u4f8b\u4e2d\u6982\u62ec\u7684\u76ee\u6807\u6982\u5ff5\u662f\u6570\u5b57\uff0c\u56e0\u6b64\u8be5\u5b66\u4e60\u4efb\u52a1\u5bf9\u5e94\u4e8e\u56de\u5f52\u4efb\u52a1\u3002\u5f53\u5b66\u4e60\u5b9e\u4f8b\u4ee5\u8c13\u8bcd\u903b\u8f91\u8868\u793a\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u7684\u5173\u7cfb\u56de\u5f52\u7b97\u6cd5\uff0c\u4f8b\u5982\u5b66\u4e60\u5173\u7cfb\u56de\u5f52\u6811\uff08Blockeel\u7b49\uff0c1998\uff09\u3002 \u2022\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u4e3b\u8981\u4f18\u70b9\u662f\uff0c\u53ef\u4ee5\u5c06\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u76f4\u63a5\u4e0eAP\u7684\u5176\u4ed6\u6807\u51c6\u6307\u5bfc\u8d44\u6e90\uff08\u4f8b\u5982\uff0c\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff09\u7ec4\u5408\u3002\u6240\u5b66\u7684\u77e5\u8bc6\u662f\u4eba\u7c7b\u96be\u4ee5\u7406\u89e3\u7684\u3002 \u5728\uff08Yoon\u7b49\u4eba\uff0c2006\uff09\u4e2d\uff0c\u4f5c\u8005\u901a\u8fc7\u7ebf\u6027\u56de\u5f52\u5efa\u7acb\u4e86\u5e7f\u4e49\u542f\u53d1\u5f0f\u51fd\u6570\u3002\u4ed6\u4eec\u5b66\u4e60\u9488\u5bf9\u7279\u5b9a\u9886\u57df\u7684\u6821\u6b63 \\(\\Delta (s;A;G) =\\sum_i w_i * f_i(s;A;G)\\) \u5230*\u8f7b\u677e\u8ba1\u5212\u7684\u542f\u53d1\u5f0f* FF\u8ba1\u5212\u8005\u4ecb\u7ecd\u4e86 \\(RPH\uff08s; A; G\uff09\\) \uff08Hoffmann and Nebel\uff0c2001b\uff09\u3002\u8fd9\u4e9b\u6821\u6b63\u8868\u793a\u4e3a\u8981\u7d20\u7684\u52a0\u6743\u7ebf\u6027\u7ec4\u5408\uff0c\u5176\u4e2dwi\u662f\u6743\u91cd\uff0cfi\u8868\u793a\u8ba1\u5212\u4e0a\u4e0b\u6587\u7684\u4e0d\u540c\u8981\u7d20\u3002\u56de\u5f52\u793a\u4f8b\u5305\u62ec\u5bf9\u901a\u8fc7FF\u8ba1\u5212\u5668\u83b7\u5f97\u7684\u4e0d\u540c\u72b6\u6001\u5230\u76ee\u6807\u7684\u771f\u5b9e\u8ddd\u79bb\u7684\u89c2\u5bdf\u3002\u7531\u6b64\u4ea7\u751f\u7684\u542f\u53d1\u5f0f\u529f\u80fd\uff0c \\(H\uff08s; A; G\uff09= RPH\uff08s; A; G\uff09+ \\Delta\uff08s; A; G\uff09\\) \u63d0\u4f9b\u66f4\u51c6\u786e\u7684\u4f30\u8ba1\uff0c\u4ee5\u6355\u83b7\u7279\u5b9a\u4e8e\u57df\u7684\u89c4\u5219\u3002 \u4ee5\u524d\u7684\u65b9\u6cd5\u5728\u641c\u7d22\u7b97\u6cd5\u4e2d\u4f7f\u7528\u65f6\u4f1a\u5ffd\u7565\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u5b9e\u9645\u6027\u80fd\u3002\u5373\u4f7f\u5b83\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u6307\u5bfc\uff0c\u5b83\u4e5f\u53ef\u80fd\u5c1d\u8bd5\u5b66\u4e60\u542f\u53d1\u5f0f\u7684\u6821\u6b63\u3002\u5728\uff08Xu et al\u3002\uff0c2007\uff09\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4ec5\u5728\u542f\u53d1\u5f0f\u8bef\u5bfc\u7ed9\u5b9a\u641c\u7d22\u7b56\u7565\u65f6\u624d\u8003\u8651\u5b66\u4e60\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u5b66\u5230\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5 \\(H(s; A; G)= \\sum_i w_i * f_i(s; A; G\uff09\\) \u4ec5\u5c1d\u8bd5\u5f88\u597d\u5730\u533a\u5206\u597d\u72b6\u6001\u548c\u574f\u72b6\u6001\uff0c\u4ee5\u5728\u201c \u6ce2\u675f\u641c\u7d22\u201d \u8fc7\u7a0b\u4e2d\u627e\u5230\u76ee\u6807\uff0c\u800c\u4e0d\u662f\u5c1d\u8bd5\u7cbe\u786e\u5efa\u6a21\u5230\u76ee\u6807\u7684\u8ddd\u79bb\u3002\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u73b0\u4e86\u4ee5\u4e0b\u6743\u91cd\u5b66\u4e60\u7b56\u7565\u3002\u5bf9\u4e8e\u5b66\u4e60\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u6bcf\u4e2a\u72b6\u6001*sj* \uff0c\u5982\u679csj\u4e0d\u5305\u542b\u5728\u641c\u7d22\u7684beamj\u4e2d\uff0c\u5219\u5b58\u5728\u641c\u7d22\u9519\u8bef\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6743\u91cd\u50cf\u611f\u77e5\u7684\u6743\u91cd\u4e00\u6837\u88ab\u66f4\u65b0\uff0c\u56e0\u6b64\u72b6\u6001sj\u5c06\u88ab\u542f\u53d1\u5f0f\u65b9\u6cd5\u4f18\u5148\u4f7f\u7528\uff0c\u5e76\u4fdd\u7559\u5728\u672a\u6765\u7684\u641c\u7d22\u60c5\u8282\u4e2d\u7684Beamj\u4e2d\u3002","title":"\u5b9e\u73b0**Generalized Heuristics**"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#decomposition-methods","text":"\u5c42\u6b21\u5206\u89e3\u65b9\u6cd5 \u89e3\u51b3\u95ee\u9898\u590d\u6742\u6027\u7684\u6269\u5c55\u7b56\u7565\u662f\u5c06\u95ee\u9898\u5206\u89e3\u4e3a\u66f4\u7b80\u5355\u7684\u5b50\u95ee\u9898\u3002\u5f53\u627e\u5230\u6709\u6548\u7684\u5206\u89e3\u65f6\uff0c\u89e3\u51b3\u5b50\u95ee\u9898\u7684\u6210\u672c\u4e4b\u548c\u5c0f\u4e8e\u76f4\u63a5\u89e3\u51b3\u539f\u59cb\u95ee\u9898\u7684\u6210\u672c\u3002\u5206\u5c42\u4efb\u52a1\u7f51\u7edc\uff08HTN\uff09\u662f\u5bf9AP\u4efb\u52a1\u5206\u89e3\u5efa\u6a21\u7684\u6700\u4f73\u7814\u7a76\u65b9\u6cd5\u4e4b\u4e00\u3002HTN\u65b9\u6cd5\u7ed3\u5408\u4e86\u89c4\u5212\u4efb\u52a1\u7684\u5206\u5c42\u7279\u5b9a\u4e8e\u57df\u7684\u8868\u793a\u5f62\u5f0f\u548c\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u72ec\u7acb\u4e8e\u57df\u7684\u641c\u7d22\u7b56\u7565\u3002 HTN\u8ba1\u5212\u8005\u7684\u8f93\u5165\u5305\u62ec\u4e00\u4e2a\u52a8\u4f5c\u6a21\u578b\uff0c\u8be5\u52a8\u4f5c\u6a21\u578b\u5bf9\u4e00\u7ec4*\u539f\u59cb\u52a8\u4f5c\u8fdb\u884c*\u7f16\u7801\uff0c\u8be5*\u52a8\u4f5c*\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u8ba1\u5212\u4e2d\u4f7f\u7528\u7684STRIPS\u52a8\u4f5c\u548c*\u4efb\u52a1\u6a21\u578b\u3002 \u4efb\u52a1\u6a21\u578b\u5b9a\u4e49\u4e86\u4e00\u7ec4*\u65b9\u6cd5 \uff0c\u8fd9\u4e9b*\u65b9\u6cd5* \u63cf\u8ff0\u4e86\u5e94\u5982\u4f55\u5c06\u4efb\u52a1\u5206\u89e3\u4e3a\u7279\u5b9a\u57df\u4e2d\u7684\u5b50\u4efb\u52a1\u3002HTN\u8ba1\u5212\u8005\u7684\u5de5\u4f5c\u5305\u62ec\u5229\u7528\u4efb\u52a1\u6a21\u578b\u5c06\u7ed9\u5b9a\u7684\u8ba1\u5212\u4efb\u52a1\u5206\u89e3\u4e3a\u66f4\u7b80\u5355\u7684\u5b50\u4efb\u52a1\uff0c\u76f4\u5230\u751f\u6210\u4e00\u7cfb\u5217\u539f\u59cb\u64cd\u4f5c\u4e3a\u6b62\u3002\u56fe17\u663e\u793a\u4e86\u6765\u81ea*Blocksworld* \u57df\u7684HTN\u63cf\u8ff0\u4e2d\u7684\u539f\u59cb\u52a8\u4f5c\u5806\u6808\u548c\u7528\u4e8e\u4efb\u52a1\u79fb\u52a8\u5757\u7684\u65b9\u6cd5\u3002\u6b64\u65b9\u6cd5\u901a\u8fc7\u5b9a\u4e49\u4e24\u4e2a\u5b50\u4efb\u52a1\u5c06\u4e00\u4e2a\u5757\u79fb\u52a8\u5230\u5176\u6700\u7ec8\u4f4d\u7f6e\uff1a\u5c06x\u4ecey\u79fb\u5230z\uff0c\u4ece\u800c\u5c06\u5757*x* \u5806\u53e0\u4ece*y\u5f00\u59cb\uff0c \u4ee5\u4fbf\u5c06*x \u5806\u53e0\u5728z\u4e0a\uff0c\u7136\u540e\u5c06x\u4ece\u8868\u79fb\u52a8\u5230z\uff0c\u4ece\u800c\u4ece\u8868\u4e2d\u62fe\u53d6\u5757*x* \u5e76\u5c06\u5176\u5806\u53e0\u5728z\u4e0a\u3002\u5728\u8fd9\u4e24\u4e2a\u5b50\u4efb\u52a1\u4e2d\uff0c\u8be5\u65b9\u6cd5\u90fd\u4f1a*\u68c0\u67e5*\u5757*x\u662f\u5426*\u53ef\u4ee5\u76f4\u63a5\u79fb\u52a8\u5230\u5176\u6700\u7ec8\u4f4d\u7f6e\uff08\u539f\u59cb\u52a8\u4f5c*check\uff0ccheck2* \u548c*checkS\uff09*\uff0c\u5e76\u786e\u4fdd\u5c06\u6765\u4e0d\u4f1a\u79fb\u52a8x\u3002 \u5f53\u524d\u7684HTN\u8ba1\u5212\u8005\uff0c\u4f8b\u5982SHOP2\uff08Nau\u7b49\u4eba\uff0c2003\uff09\uff0c\u53ef\u4ee5\u80dc\u8fc7\u6700\u65b0\u7684\u9886\u57df\u72ec\u7acb\u8ba1\u5212\u8005\uff0c\u5e76\u4e3a\u8bf8\u5982\u706d\u706b\u4e4b\u7c7b\u7684\u8bb8\u591a\u5b9e\u9645\u5e94\u7528\u63d0\u4f9b\u81ea\u7136\u7684\u5efa\u6a21\u6846\u67b6\uff08Castillo\u7b49\u4eba\uff0c 2006\u5e74\uff09\uff0c\u758f\u6563\u8ba1\u5212\uff08Muiioz-Avila\u7b49\uff0c1999\uff09\u6216\u6e38\u620f\uff08Nau\u7b49\uff0c1998\uff09\u3002\u5b9a\u4e49\u6709\u6548\u7684*\u5206\u89e3\u65b9\u6cd5*\u4ecd\u7136\u5f88\u590d\u6742\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u53cd\u6620\u4e86\u8be5\u9886\u57df\u7684\u6df1\u5165\u77e5\u8bc6\u3002\u56fe17\u6240\u793a\u7684\u7b97\u5b50\u548c\u65b9\u6cd5\u5c5e\u4e8e\u5757\u5806\u53e0\u7b97\u6cd5\u7684HTN\u8868\u793a\uff08Erol\u7b49\uff0c1992\uff09\u3002\u4e0b\u9762\u6211\u4eec\u56de\u987e\u4e00\u4e9b\u5728HTN\u89c4\u5212\u8303\u5f0f\u4e2d\u81ea\u52a8\u5b9a\u4e49\u5206\u89e3\u65b9\u6cd5\u7684\u5b66\u4e60\u65b9\u6cd5\u3002 \u5b66\u4e60\u5206\u5c42\u5206\u89e3\u65b9\u6cd5 1.\u77e5\u8bc6\u8868\u793a\u3002\u4e00\u4e2aHTN\u65b9\u6cd5\u662f\u63cf\u8ff0\u5982\u4f55\u5206\u89e3\u4e00\u4e2a\u8fc7\u7a0b*\u975e\u539f\u59cb*\u4efb\u52a1\u4e3a*\u57fa\u672c*\u4efb\u52a1\u6216\u7b80\u5355\u7684*\u975e\u539f\u59cb*\u4efb\u52a1\u3002\u4e00\u79cd\u65b9\u6cd5\uff0c\u7c73\u6b63\u5f0f\u901a\u8fc7\u4e09\u7c73\u5b9a\u4e49*= <\u5934\uff0cpreconds\uff0c\u5b50\u4efb\u52a1>\uff0c \u5176\u4e2d*\u5934*\u8868\u793a\u7684\u540d\u79f0\u548c\u4ee5\u5206\u89e3\u4efb\u52a1\u7684\u53c2\u6570\uff0c*preconds \u662f\u4e00\u4e2a\u903b\u8f91\u5f0f\u8868\u793a\u7684\u65b9\u6cd5\u7684\u5148\u51b3\u6761\u4ef6\uff0c\u4ee5\u53ca*\u5b50\u4efb\u52a1*\u662f\u7684\u5c40\u90e8\u6709\u5e8f\u5e8f\u5217\u5b50\u4efb\u52a1\u3002\u5982\u679c*head\uff08m\uff09* \u5339\u914d*t* \u5e76\u4e14*preconds\uff08m\uff09 \uff0c\u5219\u65b9\u6cd5m\u9002\u7528\u4e8e\u72b6\u6001s\u548c\u4efb\u52a1t\u5bf9\u611f\u5230\u6ee1\u610f\u3002\u5c06\u65b9\u6cd5m\u5e94\u7528\u4e8e\u72b6\u6001s\u548c\u4efb\u52a1*t\u7684\u7ed3\u679c*\u662f\u5b50*\u4efb\u52a1subtasks\uff08m\uff09*\u7684\u5e8f\u5217 \u3002* 2.\u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u5305\u62ec\u4e00\u7ec4\u8ba1\u5212\u95ee\u9898\uff0c\u5373\u4e00\u7ec4 \\(< s_0\uff0cG>\\) \u5bf9 \uff0c*\u5176\u4e2ds\u3007\u662f\u521d\u59cb\u72b6\u6001\uff0c*G \u662f\u4e00\u7ec4\u76ee\u6807\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u89e3\u51b3\u65b9\u6848 \\(p =\uff08a_1,a_2 ,...a_n\uff09\\) \u3002\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u53ef\u4ee5\u7531\u4eba\u4e3a\u63d0\u4f9b\uff0c\u4e5f\u53ef\u4ee5\u7531\u7ecf\u5178\u8ba1\u5212\u8005\u751f\u6210\u3002 3.\u5b66\u4e60\u7b97\u6cd5\u3002\u7b2c3\u8282\u4e2d\u4ecb\u7ecd\u7684\u5b66\u4e60\u52a8\u4f5c\u6a21\u578b\u524d\u63d0\u6761\u4ef6\u7684\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u5e94\u7528\u4e8e\u5b66\u4e60HTN\u65b9\u6cd5\u524d\u63d0\u6761\u4ef6\u3002\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5b8f\u7684\u5206\u5c42\u5c42\u6765\u7b80\u5316HTN\u65b9\u6cd5\u5206\u89e3\u7684\u7248\u672c\u3002\u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\u5f15\u8d77\u7684\u5206\u89e3\u4e0d\u4f1a\u5229\u7528HTN\u7684\u5168\u90e8\u8868\u8fbe\u80fd\u529b\uff0c\u5305\u62ec\u66ff\u4ee3\u5206\u89e3\uff0c\u9012\u5f52\u6982\u5ff5\u6216\u5faa\u73af\u7684\u5b9a\u4e49\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u8fd8\u6ca1\u6709\u7528\u4e8e\u4eceHTN\u7684\u5b8c\u6574\u8868\u8fbe\u80fd\u529b\u4e2d\u53d7\u76ca\u7684\u7528\u4e8e\u5b66\u4e60\u5b50\u4efb\u52a1\u5206\u89e3\u7684\u5168\u81ea\u52a8\u7b97\u6cd5\u3002\u4e00\u4e9b\u7b97\u6cd5\u9700\u8981\u4ece\u4eba\u7c7b\u90e8\u5206\u6307\u5b9a\u7684*\u5206\u89e3\u65b9\u6cd5*\u5f00\u59cb\uff0c\u53e6\u4e00\u4e9b\u9700\u8981\u5c42\u6b21\u8ba1\u5212\uff08\u8fd9\u610f\u5473\u7740\u4ee5\u524d\u6307\u5b9a\u7684\u65b9\u6cd5\uff09\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u9700\u8981\u67d0\u4e9b\u4efb\u52a1\uff0c\u79f0\u4e3a\u5e26*\u6ce8\u91ca\u7684\u4efb\u52a1*\u89c4\u5b9a\u5728AP\u95ee\u9898\u7684\u7ecf\u5178\u7248\u672c\u4e2d\u5b9a\u4e49HTN\u4efb\u52a1\u548c\u76ee\u6807\u96c6*G* \u7684\u7b49\u4ef7\u5173\u7cfb\u3002 4.\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002\u5b66\u4e60\u7684\u77e5\u8bc6\u7684\u666e\u904d\u6027\u6c34\u5e73\u662f\u4f7f\u7ed9\u5b9a\u7684HTN\u63cf\u8ff0\u9009\u4fee\u7684\u5173\u952e\u95ee\u9898\u3002\u5b66\u4e60\u8fc7\u4e8e\u901a\u7528\u7684\u5206\u89e3\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5728\u89e3\u51b3\u95ee\u9898\u65f6\u4ea7\u751f\u65e0\u9650\u9012\u5f52\uff0c\u4ece\u800c\u964d\u4f4e\u4e86HTN\u89c4\u5212\u76f8\u5bf9\u4e8e\u4f20\u7edf\u89c4\u5212\u7684\u4f18\u52bf\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5b66\u4e60\u8fc7\u4e8e\u5177\u4f53\u7684HTN\u65b9\u6cd5\u4e0d\u592a\u53ef\u80fd\u6709\u6548\u5730\u5206\u89e3\u65b0\u95ee\u9898\u3002\u89e3\u51b3\u8fd9\u79cd\u6298\u8877\u7684\u5f53\u524d\u65b9\u6cd5\u662f\u57fa\u4e8e\u9488\u5bf9\u4e00\u7cfb\u5217\u6d4b\u8bd5\u95ee\u9898\u6d4b\u91cf\u5b66\u4e60\u6a21\u578b\u7684\u6027\u80fd\u3002","title":"Decomposition Methods"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#decomposition-methods_1","text":"CAMEL\uff08Ilghami et al\u3002\uff0c2002\uff09\u4f7f\u7528version space*\u7248\u672c\u7a7a\u95f4*\u7b97\u6cd5\uff08Mitchell\uff0c1997\uff09\u5b66\u4e60\u4e86HTN *\u5206\u89e3\u65b9\u6cd5*\u548c\u5bf9\u5e73\u9762\u8ff9\u7ebf\u7684\u89c2\u5bdf\u7684\u524d\u63d0\u6761\u4ef6\u3002CAMEL\u88ab\u8bbe\u8ba1\u7528\u4e8e\u89c4\u5212\u5668\u63a5\u6536\u6bcf\u4e2a\u4efb\u52a1\u7684\u591a\u4e2a\u65b9\u6cd5\u7ed3\u6784\u57df\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u5148\u51b3\u6761\u4ef6\u3002\u6b64\u5904\u7684\u5c42\u6b21\u7ed3\u6784\u662f\u4e8b\u5148\u5df2\u77e5\u7684\uff0c\u5b66\u4e60\u4efb\u52a1\u4f1a\u5c1d\u8bd5\u786e\u5b9a\u4e0d\u540c\u7684\u5c42\u6b21\u7ed3\u6784\u5728\u54ea\u4e9b\u6761\u4ef6\u4e0b\u9002\u7528\u3002\u6b64\u65b9\u6cd5\u9700\u8981\u8bb8\u591a\u8ba1\u5212\u8ddf\u8e2a\u624d\u80fd\u5b8c\u5168\u6536\u655b\uff08\u5b8c\u5168\u786e\u5b9a\u6240\u6709\u65b9\u6cd5\u7684\u5148\u51b3\u6761\u4ef6\uff09\u3002CAMEL++\uff08Ilghami\u7b49\u4eba\uff0c2005\uff09\u4f7f\u8ba1\u5212\u4eba\u5458\u53ef\u4ee5\u5728\u5b8c\u5168\u4e86\u89e3\u65b9\u6cd5\u524d\u63d0\u4e4b\u524d\u5f00\u59cb\u8fdb\u884c\u8ba1\u5212\u3002\u8fd9\u6837\uff0c\u8ba1\u5212\u8005\u53ef\u4ee5\u4f7f\u7528\u8f83\u5c11\u7684\u57f9\u8bad\u793a\u4f8b\u6765\u5f00\u59cb\u89e3\u51b3\u8ba1\u5212\u95ee\u9898\u3002CAMEL\u548cCAMEL++\u90fd\u8981\u6c42\u6bcf\u4e2a\u8f93\u5165\u8ba1\u5212\u8ddf\u8e2a\u90fd\u9700\u8981\u5305\u542b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5b66\u4e60\u8005\u53ef\u4ee5\u83b7\u53d6\u6a21\u578b\u3002\u5728\u8ba1\u5212\u8ddf\u8e2a\u7684\u6bcf\u4e2a\u5206\u89e3\u70b9\uff0c\u5b66\u4e60\u8005\u9700\u8981\u62e5\u6709\u6240\u6709\u9002\u7528\u7684\u65b9\u6cd5\u5b9e\u4f8b\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5b9e\u9645\u4f7f\u7528\u7684\u65b9\u6cd5\u5b9e\u4f8b\u3002 HTN\u57df\u5b66\u4e60\uff08HDL\uff09\u7b97\u6cd5\uff08Ilghami\u7b49\uff0c2006\uff09\u5728\u5f00\u59cb\u65f6\u6ca1\u6709\u6709\u5173\u8be5\u65b9\u6cd5\u7684\u4efb\u4f55\u5148\u9a8c\u4fe1\u606f\u3002\u5b83\u68c0\u67e5\u7531\u4e13\u5bb6\u95ee\u9898\u89e3\u51b3\u8005\u4ea7\u751f\u7684\u5206\u5c42\u8ba1\u5212\u8ddf\u8e2a\u3002\u5bf9\u4e8e\u8ddf\u8e2a\u4e2d\u7684\u6bcf\u4e2a\u5206\u89e3\u70b9\uff0cHDL\u4f1a\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8d1f\u8d23\u7684\u65b9\u6cd5\u3002\u5426\u5219\uff0cHDL\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u65b9\u6cd5\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u65b0*\u7248\u672c\u7a7a\u95f4*\u4ee5\u6355\u83b7\u5176\u5148\u51b3\u6761\u4ef6\u3002\u5b9e\u9645\u7528\u4e8e\u5206\u89e3\u76f8\u5e94\u4efb\u52a1\u7684\u65b9\u6cd5\u7528\u4f5c\u80af\u5b9a\u793a\u4f8b\uff0c\u800c\u4e0e\u8be5\u4efb\u52a1\u5339\u914d\u4f46\u524d\u63d0\u6761\u4ef6\u5931\u8d25\u7684\u65b9\u6cd5\u5219\u4f5c\u4e3a\u76f8\u5e94\u7248\u672c\u7a7a\u95f4\u7684\u5426\u5b9a\u793a\u4f8b\u3002 HTN-Maker\uff08Hogg\u7b49\u4eba\uff0c2008\uff09\u4eceSTRIPS\u57df\u6a21\u578b\uff0cSTRIPS\u8ba1\u5212\u7a0b\u5e8f\u751f\u6210\u7684\u8ba1\u5212*p* \u7684\u96c6\u5408\u4ee5\u53ca\u5e26*\u6ce8\u91ca\u7684\u4efb\u52a1*\u7684\u96c6\u5408\u4e2d\u751f\u6210HTN\u9886\u57df\u6a21\u578b*\u3002 \u5e26*\u6ce8\u91ca\u7684\u4efb\u52a1*\u662f\u4e00\u4e2a\u4e09\u5143\u7ec4 \uff08n\uff0cPre\uff0cEffects\uff09 \uff0c\u5176\u4e2d*n \u662f\u4efb\u52a1\uff0c Pre \u662f\u4e00\u7ec4\u539f\u5b50\uff0c\u79f0\u4e3a\u524d\u63d0\u6761\u4ef6\uff0c Eff \u662f\u4e00\u7ec4\u539f\u5b50\uff0c\u79f0\u4e3a\u6548\u679c\u3002HTN-Maker\u9996\u5148\u901a\u8fc7\u4ece\u521d\u59cb\u72b6\u6001s\u3007\u5f00\u59cb\u5e94\u7528\u8ba1\u5212p\u4e2d\u7684\u52a8\u4f5c\u6765\u751f\u6210\u72b6\u6001\u5217\u8868 \\(s=\uff08s_0\uff0c...\uff0cs_n)\\) \u3002\u7136\u540e\uff0c\u5b83\u904d\u5386\u8fd9\u4e9b\u72b6\u6001\uff0c\u5e76\u4e14\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5e26\u6ce8\u91ca\u7684\u4efb\u52a1\uff0c\u5176\u5f71\u54cd\u5339\u914d\u72b6\u6001si + n\u548c\u5176\u5148\u51b3\u6761\u4ef6\u76f8\u5339\u914d\u7684\u72b6\u6001 \\(s_{i+n}\\) \uff0c\u5b83\u901a\u8fc7\uff08\u5012\u9000\u6ce8\u91ca\u4efb\u52a1\u7684\u5f71\u54cd1 \uff09\u5148\u524d\u5b66\u4e60\u7684\u65b9\u6cd5\u6216\uff082 \uff09\u5982\u679c\u6ca1\u6709\u4ee5\u524d\u5b66\u4e60\u8fc7\u7684\u65b9\u6cd5\uff0c\u5219\u6267\u884c\u539f\u59cb\u4efb\u52a1\u3002","title":"\u5b9e\u73b0**Decomposition Methods**"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#learning-planning-search-control-in-domains-with-uncertainty","text":"\u7528\u4e0d\u4e0a","title":"Learning Planning Search Control in Domains with Uncertainty"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#reinforcement-learning","text":"RL\u4ee3\u7406\u4e0e\u73af\u5883\u4ea4\u4e92\u4ee5\u6536\u96c6\u7ecf\u9a8c\uff0c\u5e76\u4f7f\u7528\u9002\u5f53\u7684\u7b97\u6cd5\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u4ee5\u751f\u6210\u6700\u4f73\u7b56\u7565\uff08Kaelbling\u7b49\uff0c1996\uff1b Sutton\u548cBarto\uff0c1998\uff09\u3002\u5efa\u7acbRL\u4ee3\u7406\u6d89\u53ca\u7684\u51b3\u7b56\u4e0eAP\u5b66\u4e60\u4e2d\u7684\u51b3\u7b56\u7c7b\u4f3c\uff1a\u8868\u793a\uff08\u5982\u4f55\u5bf9\u4ee3\u7406\u7684\u73af\u5883\u548c\u884c\u4e3a\u8fdb\u884c\u7f16\u7801\uff09\uff1b\u5b66\u4e60\u5b9e\u4f8b\uff08\u4ee3\u7406\u5546\u6536\u96c6\u7ecf\u9a8c\u7684\u7b56\u7565\uff09\uff1b\u5b66\u4e60\u7b97\u6cd5\uff08\u54ea\u79cd\u7b97\u6cd5\u5728\u6307\u5b9a\u4efb\u52a1\u4e0a\u8868\u73b0\u6700\u4f73\uff09\uff1b\u4ee5\u53ca\u5bf9\u6240\u5b66\u77e5\u8bc6\u7684\u5229\u7528\uff08\u4ee3\u7406\u5982\u4f55\u4ece\u6240\u5b66\u77e5\u8bc6\u4e2d\u53d7\u76ca\uff09\u3002\u4e0e\u5927\u591a\u6570\u9488\u5bf9AP\u65b9\u6cd5\u7684\u5b66\u4e60\u4e0d\u540c\uff0cRL\u4e3a\u77e5\u8bc6\u83b7\u53d6\u548c\u77e5\u8bc6\u5f00\u53d1\u63d0\u4f9b\u4e86\u7d27\u5bc6\u96c6\u6210\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u4e9b\u96c6\u6210\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u5173\u952e\u95ee\u9898\u662f\u786e\u5b9a\u4f55\u65f6\u5c1d\u8bd5\u65b0\u52a8\u4f5c\u4ee5\u53ca\u4f55\u65f6\u4f7f\u7528\u5df2\u77e5\u52a8\u4f5c\u3002exploration-exploitation dilemma\uff0c\u5176\u4e2d exploration\u5b9a\u4e49\u4e3a\u5c1d\u8bd5\u65b0\u7684\u52a8\u4f5c\u548cexploitation\u88ab\u5b9a\u4e49\u4e3a\u5e94\u7528\u5728\u8fc7\u53bb\u5df2\u7ecf\u6210\u529f\u8fc7\u7684\u884c\u52a8\u3002 \u603b\u4f53\u800c\u8a00\uff0c\u5bf9exploration-exploitation dilemma\u7684\u826f\u597d\u7b54\u6848\u8981\u8003\u8651\u5141\u8bb8\u7684\u8bd5\u9a8c\u6b21\u6570\u3002\u8bd5\u9a8c\u6b21\u6570\u8d8a\u591a\uff0c\u8fc7\u65e9\u6536\u655b\u5230\u5df2\u77e5\u64cd\u4f5c\u7684\u6548\u679c\u5c31\u8d8a\u5dee\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u4e0d\u662f\u6700\u4f73\u7684\u3002\u6709\u5173\u6709\u6548exploration-exploitationstrategies\u7684\u8c03\u67e5\uff0c\u8bf7\u53c2\u89c1\uff08Wiering\uff0c1999\uff1b Reynolds\uff0c2002\uff09\u3002","title":"Reinforcement Learning"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#model-based-and-model-free-rl","text":"L\u4e3b\u8981\u5173\u6ce8\u5728\u73af\u5883\u6a21\u578b\u672a\u77e5\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u6700\u4f73\u7b56\u7565\uff0c\u4f46\u5b9e\u9645\u4e0a\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8fdb\u884c\u3002 \u57fa\u4e8e\u6a21\u578b\u7684*RL\u9700\u8981\u7531\u8fc7\u6e21\u548c\u5956\u52b1\u6a21\u578b\u7ec4\u6210\u7684\u73af\u5883\u6a21\u578b\u3002*\u57fa\u4e8e\u6a21\u578b\u7684*RL\u901a\u5e38\u4f9d\u8d56\u4e8e\u6807\u51c6*\u52a8\u6001\u89c4\u5212*\u7b97\u6cd5\uff08Bellman\u548cKalaba\uff0c1965\uff1b Bertsekas\uff0c1995\uff09\u6765\u627e\u5230\u63d0\u4f9b\u6700\u4f18\u7b56\u7565\u7684\u4ef7\u503c/\u542f\u53d1\u5f0f\u51fd\u6570\u3002\u5728*\u57fa\u4e8e\u6a21\u578b\u7684*RL\u4e2d\u7684\u5b66\u4e60\u88ab\u7406\u89e3\u4e3a*\u5b9e\u65f6\u542f\u53d1\u5f0f\u641c\u7d22 \uff08Korf\uff0c1990\uff1b Bulitko\u548cLee\uff0c2006\uff1b Hernandez\u548cMeseguer\uff0c2007\uff09\uff0c\u5373\u4f7f\u7528\u4ece\u4eff\u771f\u4e2d\u83b7\u5f97\u7684\u4fe1\u606f\u5bf9\u4ef7\u503c/\u542f\u53d1\u5f0f\u51fd\u6570\u8fdb\u884c\u5c40\u90e8\u66f4\u65b0\u3002 *\u65e0\u6a21\u578b*RL\u4e0d\u9700\u8981\u73af\u5883\u6a21\u578b\u3002\u4e0b\u9762\uff0c\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u65e0*\u6a21\u578b*RL\u4efb\u52a1Reinforcement Learning *\u5c06\u5b66\u4e60\u884c\u52a8\u6a21\u578b\u4e0e\u57fa\u4e8e\u6a21\u578b\u7684RL\u76f8\u7ed3\u5408\u3002*\u8fd9\u79cd\u65b9\u6cd5\u5b66\u4e60\u73af\u5883\u7684\u8f6c\u6362\u6a21\u578b\uff0c\u5e76\u5e94\u7528\u6807\u51c6\u7684*\u52a8\u6001\u7f16\u7a0b*\u7b97\u6cd5\u6765\u627e\u5230\u597d\u7684\u7b56\u7565\u3002 \u2022 \u7eaf\u65e0\u6a21\u578b\u7684RL\u3002*\u5728\u4e0d\u786e\u5b9a\u6027\u8f83\u5927\u7684\u9886\u57df\u4e2d\uff0c\u5b66\u4e60\u5b9e\u73b0\u76ee\u6807\u8981\u6bd4\u5b66\u4e60\u73af\u5883\u6a21\u578b\u5bb9\u6613\u3002*\u65e0\u7eaf\u6a21\u578b\u7684RL \u7b97\u6cd5\u4e0d\u4f1a\u5c06\u51b3\u7b56\u5efa\u6a21\u4e3a\u72b6\u6001\u7684\u51fd\u6570\uff08\u5982*\u503c/\u542f\u53d1\u5f0f\u51fd\u6570\uff09 \uff0c\u800c\u662f\u4f7f\u7528\u6210\u5bf9\u7684< *\u72b6\u6001\uff0c\u52a8\u4f5c> \u51fd\u6570\uff08*\u79f0\u4e3a*\u52a8\u4f5c\u503c\u51fd\u6570\uff09\u3002*\u7684*Q\u51fd\u6570\uff0c*\u5176\u63d0\u4f9b\u7528\u4e8e\u91c7\u53d6\u52a8\u4f5c\u7684\u9884\u671f\u56de\u62a5\u7684\u91cf\u5ea6*\u4e00\u4e2a*\u5728\u72b6\u6001s\uff0c\u662f\u4e00\u4e2a\u7684\u4f8b\u5b50*\u52a8\u4f5c\u503c\u51fd\u6570\u3002Q\u5b66\u4e60 \uff08Watkins\uff0c1989\uff09\u662f\u4e00\u79cd\u8457\u540d\u7684\u65e0*\u7eaf\u6a21\u578b*RL\u7b97\u6cd5\uff0c\u5b83\u66f4\u65b0\u4e86*Q\u51fd\u6570*\u4e0e\u6bcf\u4e2a\u89c2\u5bdf\u5230\u7684\u5143\u7ec4 \\(<s\uff0ca\uff0cs'\uff0cr>\\) \uff08 \\(s'\\) \u4ee3\u8868\u65b0\u72b6\u6001\uff0cr\u4ee3\u8868\u83b7\u5f97\u7684\u5956\u52b1\uff09\u3002 Q\u5b66\u4e60*\u4f7f\u7528**\u8d1d\u5c14\u66fc\u65b9\u7a0b**\u5b8c\u6210*Q\u51fd\u6570*\u7684\u66f4\u65b0\uff0c\u5176\u4e2d\uff0ca\u662f\u5b66\u4e60\u7387\uff0c\u5b83\u786e\u5b9a\u65b0\u83b7\u53d6\u7684\u4fe1\u606f\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u8986\u76d6\u65e7\u4fe1\u606f\u3002\u5f53a = 0\u65f6\uff0c\u4ee3\u7406\u4e0d\u5b66\u4e60\u4efb\u4f55\u4fe1\u606f\uff0c\u800c\u5f53a = 1\u65f6\uff0c\u4ee3\u7406\u4ec5\u8003\u8651\u6700\u65b0\u4fe1\u606f\u30027 \u662f\u786e\u5b9a\u672a\u6765\u5956\u52b1\u91cd\u8981\u6027\u7684\u6298\u6263\u56e0\u5b50\u30027 = 0\u7684\u56e0\u5b50\u4f1a\u4f7f\u4ee3\u7406\u53d8\u5f97*\u8d2a\u5a6a \uff08\u4ee3\u7406\u53ea\u8003\u8651\u5f53\u524d\u7684\u5956\u52b1\uff09\uff0c\u800c\u63a5\u8fd11\u7684\u56e0\u5b50\u4f1a\u4f7f\u4ee3\u7406\u52aa\u529b\u4e89\u53d6\u957f\u671f\u7684\u9ad8\u56de\u62a5\u3002 *\u7eaf\u65e0\u6a21\u578b\u7684*RL\u4e5f\u5305\u62ec*\u8499\u7279\u5361\u6d1b*\u65b9\u6cd5\uff08Barto\u548cDuff\uff0c1994\uff09\u3002\u5927\u90e8\u5206\u65e0*\u6a21\u578b*RL\u65b9\u6cd5\u53ef\u4ee5\u786e\u4fdd\u627e\u5230\u6700\u4f73\u7b56\u7565\uff0c\u5e76\u4e14\u6bcf\u6b21\u89c2\u5bdf\u53ea\u9700\u8981\u5f88\u5c11\u7684\u8ba1\u7b97\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u901a\u5e38\u65e0\u6cd5\u6709\u6548\u5229\u7528\u6240\u6536\u96c6\u7684\u89c2\u6d4b\u503c\uff0c\u5e76\u4e14\u9700\u8981\u4e30\u5bcc\u7684\u7ecf\u9a8c\u624d\u80fd\u5b9e\u73b0\u826f\u597d\u7684\u6027\u80fd\u3002 \u8003\u8651\u5230RRL\u4f7f\u7528\u7684\u77e5\u8bc6\u8868\u793a\u7c7b\u4f3c\u4e8eAP\u5b66\u4e60\u4e2d\u7684\u77e5\u8bc6\u8868\u793a\uff0c\u672c\u8282\u5c06\u56de\u987e\u5173\u7cfb\u589e\u5f3a\u5b66\u4e60\uff08RRL\uff09\uff08Dzeroski\u7b49\u4eba\uff0c2001\uff1b Otterlo\uff0c2009\uff09\u3002\u672c\u8282\u4e13\u6ce8\u4e8e*\u65e0\u6a21\u578b\u7684\u7eaf*RRL\uff0c\u56e0\u4e3a\u5728\u7b2c3\u8282\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5b66\u4e60\u5173\u7cfb\u884c\u4e3a\u6a21\u578b\u7684\u6280\u672f\u3002\u6709\u5173\u57fa\u4e8e\u6a21\u578b\u7684RRL\u7684\u66f4\u591a\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1\uff08Boutilier\u7b49\uff0c2001\uff1b Wang\u7b49\uff0c2007\uff1b Sanner\u548cKersting\uff0c2010\u5e74\uff09\u4e5f\u79f0\u4e3a\u5173\u7cfb\uff0c\u7b26\u53f7\u6216\u4e00\u9636\u52a8\u6001\u89c4\u5212\u3002 1.\u77e5\u8bc6\u8868\u793a\u3002\u5b66\u5230\u7684\u77e5\u8bc6\u4ee5*\u4e00\u9636\u7b56\u7565n\uff1aS ^ A* \u7684\u5f62\u5f0f\u8868\u793a\uff0c\u8be5*\u7b56\u7565*\u5c06\u4ee5\u8c13\u8bcd\u903b\u8f91\u7f16\u7801\u7684\u5173\u7cfb\u72b6\u6001\u6620\u5c04\u5230\u9996\u9009\u52a8\u4f5c\uff0c\u7136\u540e\u518d\u5e94\u7528\u8be5\u52a8\u4f5c\u6765\u5b9e\u73b0\u4e00\u7ec4*\u4e00\u9636\u76ee\u6807\u3002 \u4e0e\u9488\u5bf9AP\u7684\u901a\u7528\u7b56\u7565\uff08\u7b2c4\u8282\uff09\u4e0d\u540c\uff0cRRL\u7b56\u7565\u4e0d\u5305\u542b\u6709\u5173\u4e0d\u540c\u76ee\u6807\u7684\u4fe1\u606f\u3002RRL\u7b56\u7565\u4ec5\u6355\u83b7\u5982\u4f55\u89e3\u51b3\u7279\u5b9a\u4efb\u52a1\u6216\u4e00\u7ec4\u7279\u5b9a\u4efb\u52a1\uff0c\u4f8b\u5982\u5177\u6709\u4e0d\u540c\u5bf9\u8c61\u6570\u7684\u540c\u4e00\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u5f53\u76ee\u6807\u7684\u6027\u8d28\u53d1\u751f\u53d8\u5316\u65f6\uff0cRRL\u8981\u6c42\u4ece\u5934\u5f00\u59cb\u5b66\u4e60\uff0c\u6216\u8005\u81f3\u5c11\u9700\u8981\u67d0\u79cd*\u8f6c\u79fb\u5b66\u4e60 \uff08Taylor\u548cStone\uff0c2007\uff1b Mehta\u7b49\uff0c2008\uff09\u3002 \u8f6c\u79fb\u5b66\u4e60 \u5b9a\u4e49\u4e3a\u5229\u7528\u6765\u81ea\u4e00\u4e2a\u6216\u591a\u4e2a\u6e90\u4efb\u52a1\u7684\u6570\u636e\u6765\u63d0\u9ad8\u53e6\u4e00\u76ee\u6807\u4efb\u52a1\u7684\u5b66\u4e60\u6027\u80fd\u3002 \u7532*\u9636\u7b56\u7565*\u53ef\u4ee5\u88ab\u9690\u5f0f\u5730\u8868\u793a\u4e3a*\u4e00\u9636Q\u51fd\u6570Q\uff08 \uff09= R* \u8be5\u6620\u5c04\u5bf9\u72b6\u6001-\u52a8\u4f5c*\u7684S -\u7532*\u5230\u5176\u9884\u671f\u56de\u62a5*R.* \u8fd9\u79cd\u8868\u793a\u662f\u5bc6\u5207\u76f8\u5173\u7684\u542f\u53d1\u5f0f\u7684\u6982\u5ff5AP\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u72b6\u6001\u6620\u5c04\u4e3a\u5b9e\u73b0\u76ee\u6807\u6240\u9700\u652f\u4ed8\u7684\u8d39\u7528\uff08\u8d1f\u56de\u62a5\uff09\u7684\u4f30\u7b97\u503c\u3002\u5728AP\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5ffd\u7565\u64cd\u4f5c\u7684*\u5220\u9664*\u6548\u679c\u4ece\u95ee\u9898\u8868\u793a\u4e2d\u81ea\u52a8\u63d0\u53d6\u6b64\u6210\u672c\u4f30\u7b97\u3002 2.\u5b66\u4e60\u5b9e\u4f8b\u3002\u5b66\u4e60\u793a\u4f8b\u7531\u5143\u7ec4 \u7ec4\u6210\uff0c\u5176\u4e2dai\u662f\u5728\u72b6\u6001s ^\u5904\u65bd\u52a0\u7684\u52a8\u4f5c\uff0cs ^ + i\u662f\u7ed3\u679c\u72b6\u6001\uff0c ri \u662f\u83b7\u5f97\u7684\u5956\u52b1\u3002RRL\u4e2d\u7684\u5b66\u4e60\u793a\u4f8b\u901a\u5e38\u662f\u4ece\u968f\u673a\u63a2\u7d22\u4e2d\u751f\u6210\u7684\u3002 3.\u5b66\u4e60\u7b97\u6cd5\u3002Model- ^ ee RRL\u6709\u4e0d\u540c\u7684\u65b9\u6cd5\uff1a \u2022 q\u503c\u51fd\u6570\u7684\u5173\u7cfb\u5b66\u4e60\u3002*\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7528\u5173\u7cfb\u56de\u5f52\u6765\u6982\u62ec\u503c\u51fd\u6570\u3002\u56fe18\u663e\u793a\u4e86\u4e00\u4e2a\u5173\u7cfb\u56de\u5f52\u6811\uff0c\u5f53\u5728\u4e09\u4e2a\u5757\u7684*Blocksworld\u4e2d*\u6c42\u89e3*on\uff08Block\uff0cBlock\uff09*\u4e0a\u7684\u4e00 \u7ec4\u4efb\u52a1\u65f6 \uff0c \u8be5\u6811\u6355\u83b7\u4e86\u52a8\u4f5c*move\uff08Block\uff0cBlock\uff09*\u7684*q\u503c \u2022 \u6700\u4f73\u7b56\u7565\u7684\u5173\u7cfb\u5b66\u4e60\u3002*\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u76f4\u63a5\u5b66\u4e60\u8be5\u7b56\u7565\u3002\u8fd9\u79cd\u65b9\u6cd5\u9700\u8981**\u5173\u7cfb\u5206\u7c7b(PONG\u7684\u52a8\u4f5c\u5206\u7c7b\u7f51\u7edc)**\u800c\u4e0d\u662f**\u5173\u7cfb\u56de\u5f52* \u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u901a\u5e38\uff0c\u4e0e\u7406\u89e3\u7ed3\u6784\u5316\u57df\u7684\u4ef7\u503c\u529f\u80fd\u76f8\u6bd4\uff0c\u7406\u89e3\u7b56\u7565\u8981\u5bb9\u6613\u5f97\u591a\u3002\u56fe19\u663e\u793a\u4e86\u4e00\u4e2aRRL\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u6355\u83b7\u4f55\u65f6\u9009\u62e9\u52a8\u4f5c*move\uff08Block\uff0cBlock\uff09 \u6765\u89e3\u51b3\u4e09\u4e2a*Blocksworld \u57df\u4e2d*on\uff08Block\uff0cBlock\uff09*\u4e0a\u7684\u4e00\u7ec4\u4efb\u52a1\u662f\u6700\u4f73\u7684\u3002","title":"Model-Based and Model-Free RL"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#implementations","text":"\u5173\u4e8e\u5b66\u4e60\u5173\u7cfb*Q\u51fd\u6570\uff0c*\u5df2\u7ecf\u5c1d\u8bd5\u4e86\u4e0d\u540c\u7684\u5173\u7cfb\u56de\u5f52\u7b97\u6cd5\uff1a \u2022\u5173\u7cfb\u56de\u5f52\u6811\uff08Dzeroski\u7b49\uff0c2001\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5bf9*\uff08\u52a8\u4f5c\uff0c\u5173\u7cfb\u76ee\u6807\uff09\uff0c \u4ece\u4e00\u7ec4\u5f62\u5f0f\u4e3a \uff08state\uff0cq-value\uff09*\u7684\u793a\u4f8b\u4e2d\u6784\u5efa\u56de\u5f52\u6811\u3002\u6811\u7684\u53f6\u8282\u70b9\u8868\u793a*q\u503c*\u7684\u9884\u6d4b\u3002\u6811\u7684\u6d4b\u8bd5\u8282\u70b9\u8868\u793a\u8981\u5b9e\u73b0\u9884\u6d4b\u6240\u5fc5\u987b\u5177\u5907\u7684\u4e8b\u5b9e\u3002 \u2022\u5177\u6709\u5173\u7cfb\u8ddd\u79bb\u7684\u57fa\u4e8e\u5b9e\u4f8b\u7684\u7b97\u6cd5\uff08Driessens\u548cRamon\uff0c2003\u5e74\uff09\u3002\u8fd9\u9879\u5de5\u4f5c\u5b9e\u73b0\u4e86k\u8fd1\u90bb\u9884\u6d4b\u3002\u8be5\u9884\u6d4b\u4e3a\u6536\u96c6\u7684\u793a\u4f8b\u7684*q\u503c* \u8ba1\u7b97\u52a0\u6743\u5e73\u5747\u503c\u3002\u7528\u4e8e\u9884\u6d4b\u7684\u6743\u91cd\u4e0e\u5230\u793a\u4f8b\u7684\u8ddd\u79bb\u6210\u53cd\u6bd4\u3002\u4f7f\u7528\u7684\u8ddd\u79bb\u53ef\u4ee5\u5904\u7406\u72b6\u6001\u548c\u52a8\u4f5c\u7684\u5173\u7cfb\u8868\u793a\u3002 \u2022\u5173\u7cfb\u6838\u65b9\u6cd5\uff08Gartner\u7b49\uff0c2003\uff09\u3002\u8fd9\u4e9b\u65b9\u6cd5\u4f7f\u7528\u53ef\u589e\u91cf\u5b66\u4e60\u7684 \u9ad8\u65af\u8fc7\u7a0b*\u8fdb\u884c\u8d1d\u53f6\u65af\u56de\u5f52\uff0c\u4ee5\u5c06 \uff08\u72b6\u6001\uff0c\u52a8\u4f5c\uff09 \u5bf9\u6620\u5c04\u4e3a*q\u503c \u3002\u56fe\u5185\u6838\u88ab\u7528\u4f5c\u72b6\u6001\u52a8\u4f5c\u5bf9\u4e4b\u95f4\u7684\u534f\u65b9\u5dee\u51fd\u6570\uff0c\u4ee5\u5728\u5173\u7cfb\u8bbe\u7f6e\u4e2d\u91c7\u7528*\u9ad8\u65af\u8fc7\u7a0b*\u3002 \u5bf9\u4e8e\u76f4\u63a5\u5b66\u4e60\u76f8\u5173\u7684\u653f\u7b56\uff0c\uff08Dzeroski\u7b49\uff0c2001\uff09\u91c7\u7528\u5173\u7cfb\u51b3\u7b56\u6811\u6765\u786e\u5b9a\u54ea\u4e9b\u884c\u4e3a\u662f\u5728\u4e0d\u540c\u7684\u73af\u5883\u6700\u4f18\uff0c\u5b9e\u73b0\u7279\u5b9a\u4efb\u52a1\u65f6S\u72b6\u6001\u3002 RL\u7684\u76ee\u7684\u4e0eAP\u7684\u5b66\u4e60\u76ee\u7684\u7d27\u5bc6\u76f8\u5173\u3002\u4f46\u662f\uff0cRL\u5728\u89e3\u51b3AP\u95ee\u9898\u65f6\u901a\u5e38\u8868\u73b0\u51fa\u4e24\u79cd\u7f3a\u70b9\uff1a \u2022 \u53ef\u4f38\u7f29\u6027\u3002*\u8c61\u5f81\u6027\u89c4\u5212\u95ee\u9898\u7684\u7a7a\u95f4\u72b6\u6001\u901a\u5e38\u5f88\u5927\u3002\u8fd9\u4e2a\u7a7a\u95f4\u968f\u7740\u5bf9\u8c61\u548c\u8c13\u8bcd\u6570\u91cf\u7684\u589e\u957f\u800c\u5448\u6307\u6570\u589e\u957f\u3002\u8bb8\u591aRL\u7b97\u6cd5\uff08\u4f8b\u5982 *Q\u5b66\u4e60\uff09*\u90fd\u9700\u8981\u4e00\u5f20\u8868 \uff0c*\u8be5\u8868\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u4e3a\u6bcf\u4e2a\u72b6\u6001\u63d0\u4f9b\u4e00\u4e2a\u6761\u76ee\uff0c\u4ece\u800c\u9650\u5236\u4e86\u5b83\u4eec\u5bf9AP\u95ee\u9898\u7684\u9002\u7528\u6027\u3002\u89e3\u51b3\u6b64\u9650\u5236\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5173\u7cfb\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u91c7\u7528\u4e0e\u7b26\u53f7\u8ba1\u5212\u76f8\u540c\u7684\u72b6\u6001\u8868\u793a\u5f62\u5f0f\uff0c\u5c31\u50cf\u5728RRL\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002 \u2022 *\u6cdb\u5316\u3002*RL\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u7279\u5b9a\u76ee\u6807\u7684\u5b66\u4e60\u3002\u6bcf\u6b21\u76ee\u6807\u66f4\u6539\u65f6\uff0cRL\u4ee3\u7406\u90fd\u9700\u8981\u4ece\u5934\u5f00\u59cb\u5b66\u4e60\uff0c\u6216\u8005\u81f3\u5c11\u8981\u5b66\u4e60*\u8fc1\u79fb\u5b66\u4e60*\u8fc7\u7a0b\u3002RRL\u5e76\u975e\u5b8c\u5168\u5982\u6b64\u3002\u5047\u5b9aRRL\u4f7f\u7528\u4e00\u9636\u8c13\u8bcd\u8868\u793a\u76ee\u6807\uff0c\u5219RRL\u4ee3\u7406\u53ef\u4ee5\u5728\u5177\u6709\u5176\u4ed6\u5bf9\u8c61\u7684\u4efb\u52a1\u4e2d\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u8c03\u6574\u5176\u5b66\u4e60\u7684\u7b56\u7565\uff0c\u5c3d\u7ba1\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u57f9\u8bad\u624d\u80fd\u83b7\u5f97\u6700\u4f73\uff08\u751a\u81f3\u53ef\u63a5\u53d7\u7684\uff09\u6027\u80fd\u6c34\u5e73\u3002\u751a\u81f3\u5728*\u57fa\u4e8e\u6a21\u578b\u7684*RL \u7684\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u8fd8\u5b66\u4e60\u73af\u5883\u6a21\u578b\u5e76\u5229\u7528\u5b83\u6765\u66f4\u6709\u6548\u5730\u5b66\u4e60\u7b56\u7565\u3002\u4e60\u5f97\u7684\u6a21\u578b\u901a\u5e38\u7528\u4e8e\u751f\u6210\u6709\u5173\u5982\u4f55\u63a2\u7d22\u6216\u8ba1\u5212\u8f68\u8ff9\u7684\u5efa\u8bae\uff0c\u4ee5\u4fbf\u4ee3\u7406\u53ef\u4ee5\u83b7\u53d6\u66f4\u9ad8\u7684\u56de\u62a5\u3002\u4ec0\u4e48\u65f6\u5019*\u57fa\u4e8e\u6a21\u578b\u7684*\u6280\u672f\u5e94\u7528\u4e8eRRL\uff08Croonenborghs\u7b49\uff0c2007b\uff09\uff0c\u5b83\u4eec\u4ea7\u751f\u7684\u7b26\u53f7\u52a8\u4f5c\u6a21\u578b\u4e0eAP\u4e2d\u5b66\u4e60\u7684\u76f8\u4f3c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u4ee5\u4e0b\u4e8b\u5b9e\uff1aAP\u7528\u6807\u51c6\u7684\u8ba1\u5212\u8868\u793a\u8bed\u8a00\u5b66\u4e60\u52a8\u4f5c\u6a21\u578b\uff0c\u800c\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u5219\u7531\u73b0\u6210\u7684\u8ba1\u5212\u8005\u5b8c\u6210\u3002 \u5c3d\u7ba1RRL\u53d6\u5f97\u4e86\u8fdb\u6b65\uff0c\u4f46\u5c06RRL\u5e94\u7528\u4e8e\u8ba1\u5212\u95ee\u9898\u4ecd\u7136\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002\u5728\u50cf*Blocksworld* \u8fd9\u6837\u7684\u590d\u6742\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0cRRL\u4ee3\u7406\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u63a2\u7d22\u52a8\u4f5c\uff0c\u5374\u6ca1\u6709\u5b66\u5230\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3a\u6ca1\u6709\u9047\u5230\u4efb\u4f55\u5956\u52b1\uff08\u76ee\u6807\u72b6\u6001\uff09\u3002\u76ee\u524d\uff0c\u901a\u8fc7\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7f13\u89e3RRL\u4e2d\u968f\u673a\u63a2\u7d22\u7684\u5c40\u9650\u6027\u3002\u7b2c\u4e00\u4e2a\u4f7f\u7528\u4eba\u7c7b\u5b9a\u4e49\u7684*\u5408\u7406\u653f\u7b56\u7684*\u75d5\u8ff9\u4e3a\u5b66\u4e60\u63d0\u4f9b\u4e86\u4e00\u4e9b\u79ef\u6781\u7684\u5956\u52b1\uff08Driessens\u548cMatwin\uff0c2004\uff09\u3002\u7b2c\u4e8c\u79cd\u5c06\u8f6c\u79fb\u5b66\u4e60\u5e94\u7528\u4e8e\u5173\u7cfb\u73af\u5883\uff08Croonenborghs\u7b49\uff0c2007a\uff09\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0cRRL\u4e13\u6ce8\u4e8e\u9488\u5bf9\u7279\u5b9a\u76ee\u6807\u7684\u5b66\u4e60\u7b56\u7565\uff0c\u4f8b\u5982*Blocksworld\u7684**on\uff08X\uff0cY\uff09 \uff0c\u4f46*\u65e0\u6cd5\u89e3\u51b3*\u5fc5\u987b\u5b9e\u73b0\u4ea4\u4e92\u76ee\u6807\u7684\u95ee\u9898\uff0c\u4f8b\u5982*\u5728\uff08X\uff0c Y\uff09\uff0con\uff08Y\uff0cZ\uff09\uff0con\uff08Z\uff0cW\uff09\u3002*\u5728\u4f20\u7edf\u4e0a\u5728AP\u4e2d\u89e3\u51b3\u7684\u8fd9\u7c7b\u95ee\u9898\u4e2d\uff0c\u7279\u5b9a\u76ee\u6807\u7684\u5b9e\u73b0\u53ef\u80fd\u4f1a\u4f7f\u4ee5\u524d\u6ee1\u8db3\u7684\u76ee\u6807\u65e0\u6cd5\u5b9e\u73b0\u3002\u5fc5\u987b\u4ee5\u7279\u5b9a\u7684\u987a\u5e8f\u5b9e\u73b0\u8fd9\u79cd\u76ee\u6807\uff08\u5c31\u50cf*Sussman\u5f02\u5e38\u4e2d*\u6240\u53d1\u751f\u7684\u90a3\u6837 \uff09\u3002*\u636e\u6211\u4eec\u6240\u77e5\uff0c\u6ca1\u6709\u4e00\u4e2a\u62a5\u544a\u7684RRL\u65b9\u6cd5\u5177\u6709\u81ea\u52a8\u6355\u83b7\u6709\u5173\u76ee\u6807\u4ea4\u4e92\u7684\u77e5\u8bc6\u7684\u673a\u5236\u3002","title":"implementations"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#discussion","text":"\u572890\u5e74\u4ee3\u4e2d\u671f\u524d5\u5c0f\u53f7\u7684ML\u5c3d\u6570\u7528\u4e8eAP\u83b7\u6089\u63d0\u9ad8\u89c4\u5212\u8005\u7684\u6027\u80fd\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u3002\u5728\u6b64\u671f\u95f4\uff0c\u8ba1\u5212\u4eba\u5458\u5b9e\u65bd\u4e86\u4e0d\u4e86\u89e3\u60c5\u51b5\u7684\u641c\u7d22\u7b97\u6cd5\uff0c\u56e0\u6b64ML\u5e2e\u52a9\u8ba1\u5212\u4eba\u5458\u5728\u8bb8\u591a\u9886\u57df\u4e2d\u5b9e\u73b0\u4e86\u66f4\u597d\u7684\u6027\u80fd\u3002\u572890\u5e74\u4ee3\u540e\u671f\uff0c\u89c4\u5212\u754c\u5bf9ML\u7684\u5174\u8da3\u4e0b\u964d\u4e86\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\u3002\u5f3a\u5927\u7684\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u51fa\u73b0\u63d0\u9ad8\u4e86\u8ba1\u5212\u8005\u7684\u7ee9\u6548\u3002\u7a81\u7136\u4e4b\u95f4\uff0c\u8bc4\u4f30ML\u6536\u76ca\u7684\u57fa\u51c6\u53d1\u751f\u4e86\u5de8\u5927\u53d8\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u73b0\u6709\u7684\u5173\u7cfb\u5b66\u4e60\u7b97\u6cd5\u6548\u7387\u4f4e\u4e0b\uff0c\u5e76\u4e14\u5728\u591a\u4e2a\u9886\u57df\u4e2d\u7684\u8868\u73b0\u90fd\u5f88\u5dee\u3002 \u5982\u4eca\uff0c\u53d7AP\u5728\u5b9e\u9645\u95ee\u9898\u4e2d\u7684\u5e94\u7528\u4ee5\u53ca\u5173\u7cfb\u5b66\u4e60\u7684\u6210\u719f\u6240\u9f13\u821e\uff0c\u4eba\u4eec\u5bf9\u8ba1\u5212\u5b66\u4e60\u7684\u5174\u8da3\u518d\u6b21\u5174\u8d77\u30022005\u5e74\uff0c\u56fd\u9645\u89c4\u5212\u7cfb\u7edf\u77e5\u8bc6\u5de5\u7a0b\u7ade\u8d5b\uff08ICKEPS\uff09\u5f00\u59cb\u4e86\uff0c2008\u5e74\uff0cIPC\u5f00\u8bbe\u4e86\u5b66\u4e60\u8def\u5f84\u3002\u5728\u81ea\u52a8\u89c4\u5212\u548c\u65e5\u7a0b\u5b89\u6392\u56fd\u9645\u4f1a\u8bae\u4e0a\u5b9a\u671f\u4e3e\u529e\u4e86\u6709\u5173\u89c4\u5212\u548c\u5b66\u4e60\u7684\u8bb2\u4e60\u73ed\u3002ML\u4f3c\u4e4e\u518d\u6b21\u6210\u4e3a\u5e94\u5bf9AP\u6311\u6218\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u3002","title":"Discussion"},{"location":"Papers/A%20Review%20of%20Machine%20Learning%20for%20Automated%20Planning/#conclution","text":"\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u91cd\u70b9\u4ecb\u7ecd\u4e86AP\u9762\u4e34\u7684\u4e24\u4e2a\u6311\u6218\uff1a\u5b9a\u4e49\u6709\u6548\u7684AP\u884c\u4e3a\u6a21\u578b\u548c\u5b9a\u4e49\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u4ee5\u63d0\u9ad8\u89c4\u5212\u4eba\u5458\u7684\u7ee9\u6548\u3002\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6311\u6218\uff0c\u6211\u4eec\u56de\u987e\u4e86\u5b66\u4e60\u5177\u6709\u591a\u79cd\u5f62\u5f0f\u7684\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\u7684\u884c\u52a8\u6a21\u578b\u7684\u7cfb\u7edf\u3002\u8fd9\u4e9b\u7cfb\u7edf\u901a\u5e38\u63d0\u4f9b\u5728\u6536\u96c6\u9002\u5f53\u7684\u5b66\u4e60\u793a\u4f8b\u65f6\u6709\u6548\u7684\u5b66\u4e60\u7b97\u6cd5\uff0c\u5c3d\u7ba1\u4ecd\u4e0d\u6e05\u695a\u5982\u4f55\u5728AP\u4e2d\u81ea\u52a8\u6536\u96c6\u826f\u597d\u7684\u5b66\u4e60\u793a\u4f8b\u96c6\u3002\u5f53\u5b66\u4e60\u5bfc\u81f4\u52a8\u4f5c\u6a21\u578b\u4e0d\u5b8c\u5584\u65f6\uff0c\u51e0\u4e4e\u6ca1\u6709\u673a\u5236\u53ef\u4ee5\u8bca\u65ad\u6a21\u578b\u6216\u7b97\u6cd5\u7684\u7f3a\u9677\u4ee5\u5bf9\u5176\u8fdb\u884c\u5065\u58ee\u7684\u8ba1\u5212\u3002 \u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u6311\u6218\uff0c\u6211\u4eec\u56de\u987e\u4e86\u4e0d\u540c\u5f62\u5f0f\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\uff0c\u4ee5\u6539\u8fdb\u73b0\u6210\u7684\u8ba1\u5212\u8005\u3002\u5df2\u7ecf\u663e\u793a\u51fa\u8fd9\u79cd\u77e5\u8bc6\u53ef\u4ee5\u63d0\u9ad8\u7279\u5b9a\u9886\u57df\u89c4\u5212\u4eba\u5458\u7684\u8868\u73b0\u3002\u7531\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u9886\u57df\u53ef\u80fd\u5448\u73b0\u51fa\u622a\u7136\u4e0d\u540c\u7684\u7ed3\u6784\uff0c\u56e0\u6b64\u5728\u4e00\u7cfb\u5217\u9886\u57df\u4e2d\u5b66\u4e60\u6709\u6548\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u4ecd\u7136\u5177\u6709\u6311\u6218\u6027\u3002\u6211\u4eec\u8fd8\u56de\u987e\u4e86\u9488\u5bf9HTN\u8ba1\u5212\u8005\u7684\u5b66\u4e60\u641c\u7d22\u63a7\u5236\uff0c\u8fd9\u662f\u63a7\u5236\u77e5\u8bc6\u7684\u4e00\u79cd\u66f4\u5177\u8868\u8fbe\u6027\u7684\u5f62\u5f0f\uff0c\u5b83\u4f7f\u7528\u57fa\u4e8e\u7279\u5b9a\u9886\u57df\u95ee\u9898\u5206\u89e3\u7684\u4e0d\u540c\u8ba1\u5212\u8303\u5f0f\u3002\u5728\u8fd9\u79cd\u8ba1\u5212\u8303\u5f0f\u4e2d\uff0c\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u548c\u52a8\u4f5c\u6a21\u578b\u6ca1\u6709\u5728\u9886\u57df\u7406\u8bba\u7684\u5b9a\u4e49\u4e2d\u5206\u5f00\u3002 \u672c\u6587\u8fd8\u56de\u987e\u4e86RRL\u7684\u6280\u672f\uff0cRRL\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8eAP\u7684RL\u5f62\u5f0f\uff0c\u5b83\u4f7f\u7528\u8c13\u8bcd\u903b\u8f91\u6765\u8868\u793a\u72b6\u6001\u548c\u52a8\u4f5c\u3002\u5c3d\u7ba1\u5f53\u524d\u7684RRL\u6280\u672f\u53ef\u4ee5\u89e3\u51b3\u5173\u7cfb\u4efb\u52a1\uff0c\u4f46\u4e0eAP\u6280\u672f\u7684\u5b66\u4e60\u76f8\u6bd4\uff0c\u5b83\u4eec\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u4e00\u7ec4\u7279\u5b9a\u7684\u76ee\u6807\u5e76\u5b58\u5728\u666e\u904d\u6027\u5c40\u9650\u6027\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u5728\u89e3\u51b3\u590d\u6742\u4efb\u52a1\uff08\u5982AP\u4e2d\u4f20\u7edf\u89e3\u51b3\u7684\u4efb\u52a1\uff09\u65b9\u9762\u79ef\u7d2f\u4e86\u5927\u91cf\u7ecf\u9a8c\u65b9\u9762\u5b58\u5728\u95ee\u9898\uff0c\u5728\u8fd9\u4e9b\u4efb\u52a1\u4e2d\uff0c\u5b9e\u73b0\u7279\u5b9a\u76ee\u6807\u53ef\u80fd\u4f1a\u4f7f\u4ee5\u524d\u8fbe\u5230\u7684\u76ee\u6807\u65e0\u6cd5\u5b9e\u73b0\u3002 6.2\u672a\u89e3\u51b3\u7684\u95ee\u9898 \u4e0b\u9762\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4efd\u6e05\u5355\uff0c\u5217\u51fa\u4e86\u6211\u4eec\u8ba4\u4e3a\u662fAP\u5b66\u4e60\u7684\u672a\u89e3\u51b3\u95ee\u9898\u6216\u672a\u6765\u9014\u5f84\u3002\u6211\u4eec\u6839\u636e\u672c\u6587\u7684\u56db\u4e2a\u4e3b\u8981\u4e3b\u9898\u5bf9\u8fd9\u4e9b\u95ee\u9898\u8fdb\u884c\u5212\u5206\uff1a\u77e5\u8bc6\u8868\u793a\uff0c\u5b66\u4e60\u793a\u4f8b\uff0c\u5b66\u4e60\u7b97\u6cd5\u548c\u5bf9\u6240\u5b66\u77e5\u8bc6\u7684\u5229\u7528\uff1a \u2022\u77e5\u8bc6\u8868\u793a\u3002 \u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u67e5\u627eAP\u7684\u9009\u4fee\u77e5\u8bc6\u8868\u793a\u5f62\u5f0f Domain \u4ecd\u7136\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002\u5982\u679c\u6240\u9009\u7684\u8868\u793a\u5f62\u5f0f\u65e0\u6cd5\u5728\u7ed9\u5b9a\u7684\u9886\u57df\u4e2d\u8868\u8fbe\u5173\u952e\u77e5\u8bc6\uff0c\u5219\u5b66\u4e60\u7b97\u6cd5\u5c06\u4e0d\u4f1a\u4e3a\u8be5\u9886\u57df\u751f\u6210\u6709\u6548\u7684AP\u77e5\u8bc6\u3002\u4f8b\u5982\uff0c\u5728*Blocksworld* \u9886\u57df\u4e2d*\u653e\u7f6e**\u9002\u5f53\u7684*\u533a\u5757\u7684\u6982\u5ff5\u6216\u5728*Logistics\u4e2d**\u6700\u7ec8\u57ce\u5e02\u7684*\u6982\u5ff5\u5c31\u662f\u8fd9\u79cd\u5173\u952e\u77e5\u8bc6\u7684\u4f8b\u5b50\u57df\uff08Khardon\uff0c1999\uff09\u3002\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\u9700\u8981\u5f52\u7eb3\u51fa\u7ed9\u5b9a\u9886\u57df\u7684\u5173\u952e\u77e5\u8bc6\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u8868\u8fbe\u5b83\u7684\u5408\u9002\u8868\u793a\u5f62\u5f0f\u3002\u5728\u8fd9\u65b9\u9762\uff0c\uff08Yoon\u7b49\u4eba\uff0c2008\uff09\u4e2d\u63d0\u51fa\u7684\u5de5\u4f5c\u4f7f\u7528\u4e86\u4e00\u7cfb\u5217\u6d4b\u8bd5\u95ee\u9898\uff0c\u4ee5\u5728\u5b66\u4e60\u901a\u7528\u653f\u7b56\u65f6\u8bc4\u4f30\u89c4\u5212\u73af\u5883\u4e0d\u540c\u7279\u5f81\u7684\u6548\u7528\u3002 \u53e6\u4e00\u4e2a\u6f5c\u5728\u76f8\u5173\u7684\u65b9\u9762\u662f\u8868\u793a\u8bed\u8a00\u5982\u4f55\u5f71\u54cd\u5b66\u4e60\u6709\u6548\u77e5\u8bc6\u7684\u80fd\u529b\u3002\u5728\uff08Martin\u548cGeffner\uff0c2000\uff1b Cresswell\u7b49\u4eba\uff0c2009\uff09\u4e2d\uff0c\u4f5c\u8005\u5c55\u793a\u4e86\u4f7f\u7528\u5bf9\u8c61\u4e2d\u5fc3\u8868\u793a\u8fdb\u884cAP\u5b66\u4e60\u7684\u5f71\u54cd\uff0c\u4f46\u5c1a\u672a\u4f7f\u7528\u8bf8\u5982SAS +\uff08Helmert\uff0c2009\uff09\u7b49**\u65b0\u7684\u6807\u51c6\u8868\u793a\u4ee3\u66ffPDDL**\u3002\u8be6\u7ec6\u7814\u7a76\u3002 \u66f4\u5177\u8868\u8fbe\u6027\u7684\u5f62\u5f0f\u5316\u8868\u793a\u5f62\u5f0f\uff0c\u4f8b\u5982**\u7a0b\u5e8f**\uff0c\u5df2\u7ecf\u663e\u793a\u4e86\u65f6\u95f4\u516c\u5f0f\u6216\u5c42\u6b21\u8868\u793a\u5f62\u5f0f\u6765\u63cf\u8ff0\u62bd\u8c61\u7ed3\u6784\uff0c\u4f8b\u5982\u4ee3\u8868\u8bb8\u591aAP\u57df\u6709\u6548\u77e5\u8bc6\u7684\u5faa\u73af\u6216\u5c42\u6b21\u7ed3\u6784\u3002\u7136\u800c\uff0c\u5b66\u4e60\u8fd9\u4e9b\u8868\u793a\u7684\u5927\u591a\u6570\u65b9\u6cd5\u90fd\u9700\u8981\u989d\u5916\u7684\u6807\u7b7e\uff0c\u4f8b\u5982\u6807\u8bb0\u62bd\u8c61\u4efb\u52a1\u7684\u6ce8\u91ca\uff0c\u5faa\u73af\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u7ed3\u675f\u6761\u4ef6\u7b49\u3002\u8fd9\u79cd\u6807\u7b7e\u4e0d\u80fd\u8f7b\u6613\u5730\u4ece\u89c2\u5bdf\u5230\u7684\u6267\u884c\u4e2d\u81ea\u52a8\u83b7\u5f97\u3002\u73b0\u6210\u7684\u8ba1\u5212\u8005\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u6b64\u77e5\u8bc6\uff0c\u9700\u8981\u80fd\u591f\u5229\u7528\u8fd9\u79cd\u77e5\u8bc6\u7684\u201c\u4e34\u65f6\u201d\u8ba1\u5212\u7cfb\u7edf\u3002\u9700\u8981\u8fdb\u4e00\u6b65\u5b66\u4e60\u548c\u4e3a\u73b0\u6210\u7684\u8ba1\u5212\u8005\u8fdb\u884c\u6c47\u7f16\u3002 \u2022 \u5b66\u4e60\u5b9e\u4f8b \u3002 \u5b9e\u65bd\u673a\u5236\u4ee5\u81ea\u52a8\u6536\u96c6AP\u7684\u5b66\u4e60\u793a\u4f8b\u4ecd\u7136\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\u968f\u673a\u63a2\u7d22\u901a\u5e38\u4f1a\u5bf9AP\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u8fdb\u884c\u6b20\u91c7\u6837\u3002AP\u52a8\u4f5c\u5448\u73b0\u7684\u524d\u63d0\u6761\u4ef6\u53ea\u6709\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u624d\u80fd\u6ee1\u8db3\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u5076\u7136\u88ab\u9009\u62e9\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\u3002\u53ef\u4ee5\u4eceAP\u57f9\u8bad\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\u63d0\u53d6\u5b66\u4e60\u793a\u4f8b\u3002\u4f20\u7edf\u4e0a\uff0c\u8fd9\u4e9b\u8bad\u7ec3\u95ee\u9898\u662f\u7531\u5e26\u6709\u4e00\u4e9b\u53c2\u6570\u7684\u968f\u673a\u751f\u6210\u5668\u83b7\u5f97\u7684\uff0c\u4ee5\u8c03\u6574\u95ee\u9898\u7684\u96be\u5ea6\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e24\u4e2a\u5c40\u9650\u6027\u3002 \uff081\uff09\u4fdd\u8bc1AP\u95ee\u9898\u7684\u53ef\u89e3\u51b3\u6027\u5e76\u975e\u6613\u4e8b\u3002\u8868\u660e\u4ece\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u53ef\u4ee5\u8fbe\u5230\u76ee\u6807\u4e0e\u89e3\u51b3\u539f\u59cbAP\u4efb\u52a1\u4e00\u6837\u56f0\u96be\u3002 \uff082\uff09AP\u95ee\u9898\u751f\u6210\u5668\u7684\u53c2\u6570\u662f\u7279\u5b9a\u4e8e\u57df\u7684\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684AP\u57df\uff0c\u4e16\u754c\u5bf9\u8c61\u7684\u6570\u91cf\u548c\u7c7b\u578b\u662f\u4e0d\u540c\u7684\uff0c\u5e76\u4e14\u8c03\u6574\u8fd9\u4e9b\u53c2\u6570\u4ee5\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u5b66\u4e60\u793a\u4f8b\u610f\u5473\u7740\u57df\u7684\u4e13\u4e1a\u77e5\u8bc6\u3002 \u5728\uff08Fern\u7b49\u4eba\uff0c2004\uff09\u4e2d\uff0cRandom Walks\u88ab\u5f15\u5165\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u5fc5\u5177\u6709\u9886\u57df\u4e13\u4e1a\u77e5\u8bc6\u5c31\u80fd\u83b7\u5f97\u826f\u597d\u7684\u5b66\u4e60\u5b9e\u4f8b\u3002\u968f\u673a\u6e38\u8d70\u662f\u4e00\u79cd\u81ea\u52a8\u4e14\u72ec\u7acb\u4e8e\u57df\u7684\u7b56\u7565\uff0c\u7528\u4e8e\u81ea\u52a8\u751f\u6210\u9010\u6e10\u589e\u52a0\u6e38\u8d70\u957f\u5ea6\u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5728\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u4e16\u754c\u5bf9\u8c61\u6570\u91cf\u7684\u57df\u4e2d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e0d\u591f\u7684\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u4ece\u5148\u524d\u72b6\u6001\u5f00\u59cb\u7684\u4e3b\u52a8\u5b66\u4e60\u65b9\u6cd5\u6765\u4ea7\u751f\u8bad\u7ec3\u95ee\u9898\uff08Fuentetaja\u548cBorrajo\uff0c2006\u5e74\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b66\u4e60\u8fc7\u7a0b\u4f1a\u53d7\u5230\u4e0a\u8ff0\u95ee\u9898\u7684\u5f71\u54cd\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u5bf9\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u4e16\u754c\u5bf9\u8c61\u6570\u91cf\u7684\u9886\u57df\u4e2d\u96be\u5ea6\u4e0d\u65ad\u589e\u52a0\u7684\u95ee\u9898\u8fdb\u884c\u968f\u673a\u63a2\u7d22\u3002\u9274\u4e8e\u57df\u662f\u975e\u5bf9\u79f0\u7684\uff0c\u540e\u4e00\u79cd\u65b9\u6cd5\u53ef\u80fd\u4f1a\u4ea7\u751f\u65e0\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u56e0\u6b64\uff0c\u8fd9\u4e2a\u95ee\u9898\u4ecd\u7136\u5b58\u5728\u3002\u5fc5\u987b\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\u4ee5\u63d0\u51fa\u66f4\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u2022\u5b66\u4e60\u7b97\u6cd5\u3002 AP\u7684\u65b0ML\u7b97\u6cd5\u7684\u5e94\u7528\u548c\u7ec4\u5408\u4ecd\u7136\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002ML\u4e0d\u65ad\u5f00\u53d1\u65b0\u7684\u5b66\u4e60\u7b97\u6cd5\uff0c\u5e76\u5c06\u5176\u6f5c\u5728\u5730\u5e94\u7528\u4e8eAP\u3002\u5728\u5173\u7cfb\u5b66\u4e60\u7684\u60c5\u51b5\u4e0b\uff0cAP\u4ec5\u53d7\u76ca\u4e8e**\u5206\u7c7b\u548c\u56de\u5f52**\u7b97\u6cd5\uff0c\u4f46\u662f\u73b0\u6709\u7684\u5173\u7cfb\u5b66\u4e60\u7b97\u6cd5\u51e0\u4e4e\u6db5\u76d6\u4e86\u6240\u6709\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u3002\u5728AP\u4e2d\u5c1a\u672a\u63a2\u7d22\u7528\u4e8e**\u5173\u7cfb\u805a\u7c7b\u6216\u63a8\u65ad\u5173\u8054\u89c4\u5219**\u7684\u7b97\u6cd5\uff08Raedt\uff0c2008\u5e74\uff09\u3002\u547d\u9898\u6570\u636e\u7684ML\u7b97\u6cd5\u53ef\u4ee5\u9002\u5e94AP\u4e2d\u4f7f\u7528\u7684\u5173\u7cfb\u8bbe\u7f6e\uff08Mourao\u7b49\uff0c2010\uff09\u3002 \u5c06\u65b0\u7684ML\u7b97\u6cd5\u5e94\u7528\u4e8eAP\u7684\u53e6\u4e00\u4e2a\u793a\u4f8b\u662f\u4f7f\u7528\u5185\u6838\u51fd\u6570\u6709\u6548\u5730\u5339\u914d\u8ba1\u5212\u5b9e\u4f8b\uff08Serina\uff0c2010\u5e74\uff09\u3002\u5c3d\u7ba1\u6709\u6240\u6709\u8fd9\u4e9b\u65b0\u7684ML\u6280\u672f\uff0c\u5b66\u4e60\u7b97\u6cd5\u5b58\u5728\u5f71\u54cd\u5b66\u4e60\u8fc7\u7a0b\u7684\u504f\u89c1\u3002\u7528\u4e8eAP\u7684ML\u7814\u7a76\u53ef\u4ee5\u91c7\u53d6\u65b0\u7684\u7814\u7a76\u65b9\u5411\u6765\u7814\u7a76\u4e0d\u540c\u5b66\u4e60\u7b97\u6cd5\u7684\u7ec4\u5408\uff0c\u4ee5\u51cf\u5c11\u7ed9\u5b9a\u7b97\u6cd5\u504f\u5dee\u7684\u8d1f\u9762\u5f71\u54cd\uff08Kittler\uff0c1998\uff09\u3002 \u2022\u5f00\u53d1\u6240\u5b66\u77e5\u8bc6\u3002 AP\u5b66\u4e60\u4e2d\u7684\u8fd9\u4e9b\u5f00\u653e\u6027\u95ee\u9898\u7ecf\u5e38\u5bfc\u81f4\u5b66\u4e60\u77e5\u8bc6\u7684\u4e0d\u5b8c\u5584\u3002\u5982IPC-2008\u5b66\u4e60\u8f68\u8ff9\u6240\u793a\uff0c\u76f4\u63a5\u5e94\u7528\u6709\u7f3a\u9677\u7684\u5b66\u4e60\u77e5\u8bc6\u53ef\u80fd\u4f1a\u635f\u5bb3AP\u7684\u8fc7\u7a0b\u6027\u80fd\u3002\u6240\u5b66\u77e5\u8bc6\u7684\u5e94\u7528\u8d8a\u8d2a\u5a6a\uff0c\u5219AP\u7b97\u6cd5\u5bf9\u6240\u5b66\u77e5\u8bc6\u7684\u7f3a\u9677\u8d8a\u654f\u611f\u3002\u5728\u89c4\u5212\u548c\u5b66\u4e60\u7cfb\u7edf\u7684\u5f00\u53d1\u65b9\u9762\uff0c\u6700\u8fd1\u6709\u4e00\u6761\u5de5\u4f5c\u7ebf\uff0c\u65e8\u5728\u5efa\u7acb\u5373\u4f7f\u5728\u5b66\u4e60\u5230\u6709\u5bb3\u77e5\u8bc6\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u786e\u4fdd\u8fdb\u884c\u53ef\u9760\u89c4\u5212\u7684\u673a\u5236\u3002\u8fd9\u4e9b\u7cfb\u7edf\u4e0d\u4ec5\u4e13\u6ce8\u4e8e\u5b66\u4e60\u8fc7\u7a0b\uff0c\u800c\u4e14\u4e13\u6ce8\u4e8e\u6240\u5b66\u77e5\u8bc6\u7684\u5f3a\u5927\u5e94\u7528\u3002\u5c06\u5b66\u5230\u7684\u77e5\u8bc6\u4e0e\u72ec\u7acb\u4e8e\u9886\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u76f8\u7ed3\u5408\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u8ba1\u5212\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5728\u4f17\u591a\u9886\u57df\u4e2d\u90fd\u4e0e\u6700\u65b0\u7684\u8ba1\u5212\u8005\u7ade\u4e89\uff08Yoon\u7b49\u4eba\uff0c2007\uff0c2008\uff09\u3002\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u7814\u7a76\u9886\u57df\u662f\u8bc4\u4f30\u6240\u5b66\u57df\u63a7\u5236\u77e5\u8bc6\u7684\u8d28\u91cf\u7684\u673a\u5236\u7684\u5f00\u53d1\u3002\u8fd9\u6837\u7684\u673a\u5236\u5bf9\u4e8e\u5b9a\u4e49\u4e0d\u540c\u7684\u5229\u7528\u7b56\u7565\u53ef\u80fd\u662f\u6709\u7528\u7684\u3002\u5f53\u524d\u53ef\u7528\u4e8e\u5b66\u4e60\u7684\u77e5\u8bc6\u7684\u552f\u4e00\u8bc4\u4f30\u673a\u5236\u662f\u7ecf\u9a8c\u6027\u7684\uff0c\u5305\u62ec\u4f7f\u7528\u5b66\u4e60\u7684\u77e5\u8bc6\u6765\u89e3\u51b3\u4e00\u7ec4\u8bad\u7ec3\u793a\u4f8b\u4ee5\u4f30\u8ba1\u5176\u6027\u80fd\u3002\u9664\u7ade\u4e89\u5916\uff0c\u5728AP\u4e2d\u5229\u7528\u5df2\u5b66\u77e5\u8bc6\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4e0e\u6700\u7ec8\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\u3002\u6df7\u5408\u4e3b\u52a8\u8ba1\u5212\u7cfb\u7edf\uff08Ferguson\u7b49\uff0c1996\uff1b Bresina\u7b49\uff0c2005\uff1b Cortellessa\u548cCesta\uff0c \u8fd9\u6b21\u5ba1\u67e5\u7684\u91cd\u70b9\u662f\u5b66\u4e60AP\u8fc7\u7a0b\u7684\u4e24\u4e2a\u8f93\u5165\uff0c \u52a8\u4f5c\u6a21\u578b\u548c\u641c\u7d22\u63a7\u5236\u77e5\u8bc6 \u3002\u6709\u5168\u5957\u6280\u672f\u65e8\u5728\u6355\u83b7\u6709\u5173AP\u8fdb\u7a0b\u7684\u7b2c\u4e09\u4e2a\u8f93\u5165\u4fe1\u606f\u7684\u4fe1\u606f\u3002\u8ba1\u5212\u8bc6\u522b\u6280\u672f\uff08Charniak\u548cGoldman\uff0c1993\uff1b Bui\u7b49\uff0c2002\uff09\u8bd5\u56fe\u901a\u8fc7\u89c2\u5bdf\u4ee3\u74065\u7684\u884c\u4e3a\u6765\u63a8\u65ad\u4ee3\u74065\u7684\u76ee\u6807\u548c\u8ba1\u5212\u3002\u4f20\u7edf\u4e0a\uff0c\u8ba1\u5212\u8bc6\u522b\u4efb\u52a1\u5047\u5b9a\u5b58\u5728\u4e00\u4e2a\u5177\u6709\u53ef\u80fd\u88ab\u8bc6\u522b\u7684\u8ba1\u5212\u7684\u7a7a\u95f4\u7684\u5e93\uff0c\u4f46\u662f\u6700\u8fd1\u7684\u5de5\u4f5c\u4e0d\u9700\u8981\u4f7f\u7528\u8be5\u5e93\u3002\u8fd9\u4e9b\u4f5c\u54c1\uff08Ram \uff0cirez\u548cGeffner\uff0c2009\u5e74\uff1bRamirez\u548cGeffner\uff0c2010\uff09\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7565\u5fae\u4fee\u6539\u7684\u89c4\u5212\u7b97\u6cd5\u6765\u8ba1\u7b97\u89c2\u5bdf\u5230\u7684\u793a\u4f8b\u7684\u76ee\u6807\u3002\u9700\u8981\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\uff0c\u4ee5\u5206\u6790\u8ba1\u5212\u8bc6\u522b\u6280\u672f\u4e0eAP\u7684\u5b66\u4e60\u6280\u672f\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u53c2\u8003 temp 1 \u548c\u6587\u732e 2 \u3002 Relational reinforcement learning(RRL) (Dzeroskietal.,2001),used Q-learning with a relational function approximator, and demonstrated good empirical results in the Blocksworld. G \u21a9 C \u21a9","title":"Conclution"},{"location":"Papers/A%20review%20of%20generalized%20planning/","text":"A review of generalized planning \u8868\u793a\u548c\u63a8\u7406 Representing Sets of Planning Tasks \u6267\u884c\u548c\u9a8c\u8bc1 \u5b9e\u9a8c\u7b49\u8bc4\u4ef7\u6307\u6807 \u8bc4\u4f30 Solver \u91cd\u7528\u5e7f\u4e49\u8ba1\u5212Srivastava\u7684\u65b9\u6cd5 \u8ba1\u7b97\u5b8f\u52a8\u4f5c \u8ba1\u7b97\u5e7f\u4e49\u7b56\u7565 \u8ba1\u7b97\u6709\u9650\u72b6\u6001\u63a7\u5236\u5668 \u8ba1\u7b97\u7a0b\u5e8f diverse approaches for generalized planning \u90e8\u5206\u53ef\u89c2\u5bdf\u6027\u4e0b\u7684\u8ba1\u5212\uff1a\u4e00\u81f4\uff0c\u5076\u7136\u548cPOMDP\u8ba1\u5212 6.2\u5177\u6709\u63a7\u5236\u77e5\u8bc6\u7684\u8ba1\u5212 GOLOG 6.4\u7a0b\u5e8f\u7efc\u5408 \u603b\u7ed3 A review of generalized planning \u00b6 \u81ea\u52a8\u5316\u8ba1\u5212\uff08AP\uff09\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4ee3\u7406\u53ca\u5176\u73af\u5883\u7684\u6a21\u578b\u6765\u89e3\u51b3\u9ad8\u5ea6\u7ed3\u6784\u5316\u73af\u5883\u4e2d\u7684\u590d\u6742\u534f\u5546\u4efb\u52a1\uff0cTraditionally the solutions generated by automated planners are tied to aparticular planning instance and hence, do not generalize.\uff08 classical plan \uff09 A generalized plan is an algorithm-like solution that is valid for a given setof planning instances. \u8fd1\u5e74\u6765\uff0c\u7531\u4e8e\u8ba1\u5212 \u7684 \u8868\u793arepresentation \u89e3\u51b3\u65b9\u6848\u7cfb\u5217\u7684\u65b0\u9896\u5f62\u5f0f\u4e3b\u4e49\u4ee5\u53ca\u8ba1\u7b97\u6b64\u7c7b\u89e3\u51b3\u65b9\u6848\u7684\u65b0\u7b97\u6cd5\u7684\u51fa\u73b0\uff0c\u8fd9\u4e9b\u8fdb\u6b65\u63ed\u793a\u4e86\u5e7f\u4e49\u89c4\u5212\u6280\u672f\u7684\u6f5c\u529b\uff0c\u5e76\u9f13\u52b1\u5c06\u89c4\u5212\u5e94\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5404\u4e2a\u9886\u57df\uff0c\u4f8b\u5982*program synthesis,autonomous control,datawranglingorform recognition 33 34 . \u5e7f\u4e49\u89c4\u5212\u4e2d\u7684\u8fd9\u4e9b\u6700\u65b0\u8fdb\u5c55\uff0c\u5e76\u4e0e\u73b0\u6709\u5f62\u5f0f\u4e3b\u4e49\u76f8\u5173,\u9488\u5bf9\u81ea\u52a8\u5316\u89c4\u5212\u4e2d\u7684\u901a\u7528\u6027\uff0c\u4f8b\u5982*planning with domain control knowledgeand different approachesforplanning under uncertainty*\u4e0d\u540c\u65b9\u6cd5\u3002 \u9996\u5148\uff0c\u672c\u6587\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u8ba1\u5212\u7684\u80cc\u666f\uff0c\u5c06\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u5f62\u5f0f\u5316\uff0c\u5e76\u4ecb\u7ecd\u4e86\u6211\u4eec\u5bf9\u5e7f\u4e49\u8ba1\u5212\u5de5\u4f5c\u8fdb\u884c\u5ba1\u67e5\u7684\u6807\u51c6\u3002 \u5176\u6b21\uff0c\u672c\u6587\u8ba8\u8bba\u4e86\u7528\u4e8e\u8868\u793a \u8ba1\u5212\u4efb\u52a1 \u7684\u4e0d\u540c\u77e5\u8bc6\u8868\u793a\u63a8\u7406\u65b9\u6cd5\u3002 \u7b2c\u4e09\uff0c\u672c\u6587\u8c03\u67e5\u4e86\u5404\u79cd\u4ee3\u8868\u5f62\u5f0f\u4e3b\u4e49\uff0c\u4ee5\u5206\u6790\u5176\u4f18\u7f3a\u70b9\u3002 \u7b2c\u56db\uff0c\u7814\u7a76\u4e86\u7528\u4e8e\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u5f53\u524d\u7b97\u6cd5\u3002 \u6700\u540e\uff0c\u672c\u6587\u7ed3\u675f\u4e86\u8ba8\u8bba\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\u5e76\u786e\u5b9a\u4e86\u5f00\u653e\u7684\u7814\u7a76\u95ee\u9898\u4ee5\u9f13\u52b1\u672a\u6765\u7684\u7814\u7a76\u3002 \u8868\u793a\u548c\u63a8\u7406 \u00b6 classical planning(the vanilla model in AP), \u5728*\u7ecf\u5178\u89c4\u5212\u6a21\u578b*\u662f\u81ea\u52a8\u89c4\u5212\u6700\u5e38\u89c1\u7684\u6a21\u578b\uff0c\u662f\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a 1.\u8981\u89e3\u51b3\u7684\u8ba1\u5212\u4efb\u52a1\u5177\u6709\u6709\u9650\u4e14\u53ef\u5b8c\u5168\u89c2\u5bdf\u7684\u72b6\u6001\u7a7a\u95f4\u3002 2.\u52a8\u4f5c\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5e76\u5bfc\u81f4\u77ac\u65f6\u72b6\u6001\u8f6c\u6362\u3002 \u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u7cfb\u5217\u53ef\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5c06\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e3a\u76ee\u6807\u72b6\u6001\uff0c\u5373\u6ee1\u8db3\u5148\u524d\u6307\u5b9a\u7684\u4e00\u7ec4\u76ee\u6807\u6761\u4ef6\u7684\u72b6\u6001\u3002 A classical planning frame is a tuple \u03a6 =\u3008F,A\u3009, where F is a set of fluents and A is a set of actions. Given a frame \u03a6 =\u3008F,A\u3009, a classical planning instance is a tuple P=\u3008F,A,I,G\u3009, where I\u2208 L(F) is an initial state (i.e.|I|=|F|) andG\u2208 L(F)is a goal condition. The Planning Domain Definition Language (PDDL) [59] is the input language for the International Planning Competition (IPC) [95] and the standard for representing classical planning instances. Besides classical planning, PDDL can represent more expressive planning models such as *temporal planning or planning with path constraints and preferences [27, 33]. Generalized plans are generative models that may have diverse forms. \u6bcf\u79cd\u5f62\u5f0f\u90fd\u5177\u6709\u81ea\u5df1\u7684\u8868\u8fbe\u80fd\u529b\u4ee5\u53ca\u8ba1\u7b97\u548c\u9a8c\u8bc1\u590d\u6742\u6027\u3002 Generalized plans range from programs [97, 83] and generalized polices[57] to Finite State Controllers(FSCs) [10, 84], AND/OR graphs, formal grammars [77] or HTNs [66]. \u53ef\u4ee5\u6839\u636e\u5e7f\u4e49\u8ba1\u5212specification of *the action to apply next*\u5bf9\u5176\u8fdb\u884c\u5206\u7c7b\uff1a Fully specified solutions, that unambiguously capture the action to ap-ply next, for solving every instance in a given generalized planning task.\u53ef\u4ee5\u660e\u786e\u6355\u83b7\u63a5\u4e0b\u6765\u8981\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u7528\u4e8e\u89e3\u51b3\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u3002\u7a0b\u5e8f\uff0c\u901a\u7528\u7b56\u7565\u6216\u786e\u5b9a\u6027FSC\u5c5e\u4e8e\u6b64\u7c7b\u3002\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\uff0c\u4e00\u81f4\u7684\uff0c\u5076\u7136\u7684\u6216POMDP\u8ba1\u5212\u4e5f\u5c5e\u4e8e\u6b64\u7c7b\uff0c\u5219\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u4ee3\u8868\u4e0d\u540c\u7684\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\uff0c\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u72b6\u6001\u53d8\u91cf\uff0c\u52a8\u4f5c\u548c\u76ee\u6807[42]\u3002 \u6211\u8ba4\u4e3a\u975e\u786e\u5b9a\u7684\u56fe\u7684\u89e3\u56fepolicy=\u786e\u5b9a\u6027=\u53ef\u4ee5\u5199\u6210program Non specified(\u6211\u8ba4\u4e3a\u662f\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6ca1\u89c4\u5f8b\u9700\u8981classical planner \u989d\u5916\u89c4\u5212).\u5e26\u6709domain model\u7684\u7ecf\u5178\u8ba1\u5212\u5668\u662f\u5e7f\u4e49\u8ba1\u5212\u7684\u4e00\u79cd\u5f62\u5f0f\u3002\u8fd9\u6837\u7684\u8ba1\u5212\u975e\u5e38\u7b3c\u7edf\uff08\u6db5\u76d6\u4e86\u7528\u53e4\u5178\u8ba1\u5212\u5668\u7684\u8f93\u5165\u8bed\u8a00\u8868\u793a\u7684\u4efb\u4f55\u5b9e\u4f8b\uff09\uff0c\u4f46\u662f\u6267\u884c\u673a\u5236\u6548\u7387\u4f4e\u4e0b\uff08\u8fd0\u884c\u53e4\u5178\u8ba1\u5212\u5668\u4ee5\u9488\u5bf9\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u751f\u6210\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff09\u3002 Partially specified. \u5171\u4eab\u4e24\u8005\u8981\u7d20\u7684\u901a\u7528\u8ba1\u5212\u3002\u4f7f\u7528*\u7279\u5b9a\u4e8e\u57df\u7684\u63a7\u5236\u77e5\u8bc6*\u8fdb\u884c*\u89c4\u5212*\u7684\u4e0d\u540c\u65b9\u6cd5\u5c5e\u4e8e\u6b64\u7c7b\uff0c\u56e0\u4e3a\u4ecd\u7136\u9700\u8981\u89c4\u5212\u4eba\u5458\u9488\u5bf9\u7279\u5b9a\u5b9e\u4f8b\u751f\u6210\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u8981\u5229\u7528\u9650\u5236\u53ef\u80fd\u89e3\u51b3\u65b9\u6848\u7684\u5e38\u8bc6\u3002\u6b64\u7c7b\u5305\u62ec\u90e8\u5206\u6307\u5b9a\u7684\u7a0b\u5e8f\uff0c\u4e0d\u786e\u5b9a\u7684FSC\uff0c\u5f62\u5f0f\u8bed\u6cd5\uff0cAND / OR\u56fe\u6216HTN\u3002 \u8ba4\u4e3a\u8fd9\u5c31\u662fQNP/FOND\u53ef\u4ee5\u641c\u7d22\u201cpolicy\u2192\u89e3\u5b50\u56fe\u201d The execution of a generalized plan \\(\\Pi\\) in a classical planning instance P=\u3008F,A,I,G\u3009is a classical plan, The problem generator box refers to a generative model of the instances inthe generalized planning task. \u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u5305\u62ec\u4e00\u7ec4\u8981\u89e3\u51b3\u7684\u5355\u72ec\u8ba1\u5212\u4efb\u52a1\u3002\u8fd9\u7ec4\u8ba1\u5212\u4efb\u52a1\u53ef\u4ee5\u662f\u6709\u9650\u7684\u6216\u65e0\u9650\u7684\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u6307\u5b9a\u5b83\uff0c\u4f8b\u5982\uff0c\u5bf9\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u7684\u663e\u5f0f\u679a\u4e3e\u6216\u901a\u8fc7\u4f7f\u7528\u903b\u8f91\u516c\u5f0f\uff0c\u6982\u7387\u5206\u5e03\uff0c\u95ee\u9898\u751f\u6210\u7a0b\u5e8f\u7b49\u9690\u5f0f\u5730\u6307\u5b9a\u3002\u5f53\u63d0\u4f9b\u4e86\u5bf9\u8ba1\u5212\u4efb\u52a1\u7684\u663e\u5f0f\u8bf4\u660e\u65f6\uff0c\u5c06\u8df3\u8fc7\u95ee\u9898\u751f\u6210\u3002 The generalized planner box refers to an algorithm d with aninput-outputspecification of the instances to solve and that generates a solutionto these instances. \u5176\u4e2d\u5305\u542b\u8981\u89e3\u51b3\u7684\u5b9e\u4f8b\u7684*\u8f93\u5165-\u8f93\u51fa*\u89c4\u8303\uff0c\u5e76\u4e3a\u8fd9\u4e9b\u5b9e\u4f8b\u751f\u6210\u89e3\u51b3\u65b9\u6848\u3002 \u5e7f\u4e49\u8ba1\u5212\u7684\u7b97\u6cd5\u8303\u56f4\u4ece\u7eaf\u7cb9\u7684**top-down**(\u6211\u7406\u89e3\u4e3aMyND\u542f\u53d1\u5f0f\u56fe\u641c\u7d22\u5b50\u56fe\uff0c\u6216\u8005\u662fFOND-SAT\u5168\u7a7a\u95f4\u641c\u7d22)*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\uff08\u5728\u5e7f\u4e49\u8ba1\u5212\u7684\u7a7a\u95f4\u4e2d\u641c\u7d22\u4e00\u4e2a\u6db5\u76d6\u6240\u6709\u8f93\u5165\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\uff09 \u5230*\u81ea\u4e0b\u800c\u4e0a**botton-up***(\u6211\u7406\u89e3\u4e3aPRP,FF planner\uff0c\u5f00\u521b\u8005\u4ece\u5b9e\u4f8b\u4e2d\u5b66\u4e60\u7684\u65b9\u6cd5)\uff08\u4e3a\u5355\u4e2a\u5b9e\u4f8b\u8ba1\u7b97\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u5176\u8fdb\u884c\u6982\u62ec\u548c\u5408\u5e76\uff09\u4ee5\u524d\u627e\u5230\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u9010\u6b65\u6269\u5927\u5e7f\u4e49\u8ba1\u5212\u7684\u8303\u56f4\u3002\u6700\u540e\uff0c*\u5e7f\u4e49\u8ba1\u5212*\u53ef\u4ee5\u770b\u4f5c\u662f\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u8ba1\u5212\u5b9e\u4f8b\u7684\u8fc7\u7a0b\u8868\u793a\u3002 \u901a\u7528GP\u89c4\u5212\u5c31\u50cf\u7ecf\u5178\u89c4\u5212classical plan\uff0c\u4f20\u7edf\u6c42\u89e3\u65b9\u6cd5\u6709\uff1a \u5728\u7ecf\u5178\u89c4\u5212\u4e2d\uff0c\u89c4\u5212\u5e08\u4ec5\u63a5\u6536\u5355\u4e2a\u548c\u5730\u9762\u89c4\u5212\u5b9e\u4f8b\u4f5c\u4e3a\u8f93\u5165 \u7ecf\u5178\u89c4\u5212\u7684\u6700\u65b0\u7b97\u6cd5\u662f\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u8fdb\u884c\u542f\u53d1\u5f0f\u641c\u7d22[37\uff0c30]\u6216\u7f16\u8bd1\u4e3a\u5176\u4ed6\u5f62\u5f0f\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f8b\u5982SAT [78] \u7ecf\u5178\u8ba1\u5212\u662f\u4e00\u7cfb\u5217\u52a8\u4f5c\uff0c\u7ecf\u5178\u8ba1\u5212\u7684\u6267\u884c\u548c\u9a8c\u8bc1\u5728\u8ba1\u5212\u7684\u957f\u5ea6\u4e0a\u90fd\u662f\u7ebf\u6027\u7684\u3002\u7136\u800c\uff0c\u5177\u6709\u6761\u4ef6\u5f71\u54cd\uff0c\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7ed3\u6784\u7684\u52a8\u4f5c\u53ef\u4ee5\u7528\u6765\u66f4\u7d27\u51d1\u5730\u8868\u793a\u7ecf\u5178\u8ba1\u5212\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848[52\uff0c81]\u3002 Representing Sets of Planning Tasks \u00b6 different formalisms for representing sets of planning taskswithin generalized planning.7 Representing Actions \uff08RL\u5f3a\u5316\u5b66\u4e60\u7ed3\u5408\uff09\u4e00\u4e2a\u4f8b\u5b50\u662f\u5728**ATARI**\u89c6\u9891\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u4ee5\u4ee3\u7406\u4eba\u4e3a\u4e2d\u5fc3\u7684\u884c\u4e3a\u6a21\u578b[62]\uff0c\u5176\u4e2d18\u79cd\u53ef\u80fd\u7684\u884c\u4e3a\u6839\u636e\u89c6\u9891\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u5177\u6709\u4e0d\u540c\u7684\u6548\u679c\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u56de\u987e\u4e86\u7ecf\u5178\u8ba1\u5212\u884c\u4e3a\u6a21\u578b\u7684\u6269\u5c55\uff0c\u8fd9\u4e9b\u6269\u5c55\u65e8\u5728\u4f7f\u8ba1\u5212\u4efb\u52a1\u548c\u8ba1\u5212\u89e3\u51b3\u65b9\u6848\u66f4\u7d27\u51d1\uff0c\u66f4\u901a\u7528\u3002 Conditional effects=preconditions+conditional effects Conditional effects cannot be compiled away if plan size should grow only linearly [67]. PDDL supports the definition of conditional effects with the when keyword\u3002In PDDL the condition of a given conditional effect has the same expressivenessas action preconditions and goals, so it can either be a negation, a conjunction,a disjunction or a quantified formula, as defined in the ADL formalism [71, 27]. Update formulas and high-level state features The series of work by Srivastava et al. [90] on generalized planning encodesthe effects of actions with update formulas. An update formula is an arbitrary FOL formula that includestransitive closure, defining the new value of a givenpredicate after an action application. \u7b49\u6548\u5730 Arbitrary FOL formulae that include transitive closure can be representedin PDDL using derived predicates that can later be included in action precon-ditions, conditional effects and goals. (:derived (above ?x ?y - block) (or (on ?x ?y) (exists (?z - block) (and (on ?x ?z) (above ?z ?y))))) this is how PDDL defines theabovederived predicate that models whether a block?xisaboveanother block?yin ablocksworld tower*\u6d3e\u751f\u8c13\u8bcd*\u53ef\u4ee5\u8868\u793a\u8868\u8fbe\u6027\u72b6\u6001\u67e5\u8be2\uff0c\u5305\u62ec\u72b6\u6001\u53d8\u91cf\u548c\u9012\u5f52\u7684\u5c42\u6b21\u7ed3\u6784[92]\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u5bf9\u4e8e\u7d27\u51d1\u5730\u8868\u793a\u8ba1\u5212\u4efb\u52a1\u548c\u66f4\u6709\u6548\u7684\u8ba1\u5212\u5f88\u6709\u7528[45]\u3002 \u9664\u6d3e\u751f\u8c13\u8bcd\u5916\uff0c\u5404\u79cd\u5f62\u5f0f\u4e3b\u4e49\u5df2\u7528\u4e8e\u8868\u793a\u8ba1\u5212\u4e2d\u7684\u72b6\u6001\u67e5\u8be2\uff0c\u8303\u56f4\u4ece\u4e00\u9636\u5b50\u53e5[96]\u5230\u63cf\u8ff0\u903b\u8f91\u516c\u5f0f[57]\u751a\u81f3LTL\u516c\u5f0f[20]\u6765\u5b9a\u4e49\u6709\u5173\u72b6\u6001\u5e8f\u5217\u7684\u67e5\u8be2\u3002 Sensing and non-deterministic actions \u5f53\u72b6\u6001\u662f**FOND**\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684fully observable\u65f6\uff0c\u8003\u8651\u5230\u4efb\u4f55\u72b6\u6001\u4fe1\u606f\u90fd\u662f\u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u83b7\u5f97\u7684\uff0c\u5219\u4e0d\u9700\u8981\u663e\u5f0f\u7684\u611f\u77e5\u52a8\u4f5c\u3002\u56e0\u6b64\uff0c\u4f20\u611f\u52a8\u4f5c\u9002\u5408\u5728**POMDP**\u90e8\u5206\u53ef\u89c2\u5bdf\u6027\u4e0b\u8fdb\u884c\u8ba1\u5212\uff0c\u5e76\u4e14\u5b83\u4eec\u4e0d\u6a21\u62df\u72b6\u6001\u8f6c\u6362\uff0c\u800c\u662f\u5bf9\u6765\u81ea\u5f53\u524d\u72b6\u6001\u7684\u67d0\u4e9b\u4fe1\u606f\u8fdb\u884c\u89c2\u5bdf\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f*\u672a\u77e5*\u3002\u5f53\u7f3a\u4e4f\u6709\u5173\u5f53\u524d\u72b6\u6001\u7684\u4fe1\u606f\u4f7f\u8ba1\u5212\u8005\u65e0\u6cd5\u5236\u5b9a\u51fa\u53ef\u4ee5\u80af\u5b9a\u5730\u5b9e\u73b0\u76ee\u6807\u7684\u8ba1\u5212\u65f6\uff0c\u8ba1\u5212\u8005\u4fbf\u4f1a\u91c7\u7528\u611f\u77e5\u884c\u52a8\u3002 \u5982\u679c\u6211\u4eec\u5047\u8bbe\u5173\u4e8e\u5f53\u524d\u72b6\u6001\u7684\u4e0d\u786e\u5b9a\u6027\u5355\u8c03\u51cf\u5c11\uff08\u5373\u4e00\u65e6*\u77e5\u9053*\u72b6\u6001\u53d8\u91cf\u7684\u503c\u5c31\u53ef\u4ee5\u6539\u53d8\uff0c\u4f46\u4e0d\u80fd\u518d\u6b21\u53d8\u5f97*\u672a\u77e5*\uff09\uff0c\u5219\u53ef\u4ee5\u5c06\u611f\u6d4b\u52a8\u4f5c\u7f16\u7801\u4e3a\u975e\u786e\u5b9a\u6027\u52a8\u4f5c[65]\u3002 PPDDL\uff08PDDL\u7684\u6982\u7387\u7248\u672c[100]\uff09\u53ef\u7528\u6982\u7387\u6548\u5e94\u8fdb\u884c\u7f16\u7801\uff0c\u4f7f\u7528\u6982\u7387\u52a8\u4f5c\u8fdb\u884c\u7684\u8ba1\u5212\u6210\u4e3a*\u4f18\u5316*\u4efb\u52a1\uff0c\u8ba1\u5212\u8005\u65e8\u5728\u4f7f\u8fbe\u5230\u76ee\u6807\u7684\u53ef\u80fd\u6027\u6700\u5927\u5316\u3002\u975e\u786e\u5b9a\u6027\u548c\u6982\u7387\u6027\u52a8\u4f5c\u4e5f\u53ef\u4ee5\u7f16\u7801\u975e\u786e\u5b9a\u6027\u72b6\u6001\u8f6c\u6362\uff0c\u4f8b\u5982\u5728\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u975e\u786e\u5b9a\u6027\uff08FOND\uff09\u6216MDP\u89c4\u5212\u4e2d[58\uff0c32]\u3002 Representing Initial and Goal States \u53ef\u4ee5\u663e\u5f0f\u5b9a\u4e49\u4e00\u7ec4\u72b6\u6001\uff0c\u679a\u4e3e\u8be5\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u72b6\u6001\uff0c\u6216\u8005\u9690\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u72b6\u6001\u5fc5\u987b\u6ee1\u8db3\u7684\u7ea6\u675f\uff08\u4f20\u9012\u95ed\u5305\uff09\u624d\u80fd\u5c5e\u4e8e\u8be5\u7ec4\u3002\u8fd8\u53ef\u4ee5\u660e\u786e\u6307\u5b9a\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u5b9e\u4f8b\u96c6\uff0c\u679a\u4e3e\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u5404\u4e2a\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u3002 different formalisms for representing a set of planning in-stances according to the language used for specifying these constraints: Propositional logic. \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u4ec5\u4f7f\u7528\u6587\u5b57\u548c\u4e09\u4e2a\u57fa\u672c\u7684\u903b\u8f91\u8fde\u63a5\u8bcd\u8868\u793a\uff08\u5e76\u8868\u793a\u6587\u5b57\u7684\u5408\u53d6\u6216\u8868\u793a\u6587\u5b57\u7684\u6790\u53d6\u800c\u4e0d\u8868\u793a\u5426\u5b9a\uff09\u3002\u7528\u547d\u9898\u903b\u8f91\u8868\u793a\u7684\u8ba1\u5212\u5b9e\u4f8b\u96c6\u7684\u793a\u4f8b\u662f\u4e00\u81f4\u7684\uff0c\u6216\u6709\u7684\u6216POMDP\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u8fd9\u4e9b\u4efb\u52a1\u5b9a\u4e49\u4e86\u4efb\u52a1\u7684\u4e0d\u540c\u53ef\u80fd\u521d\u59cb\u72b6\u6001\uff0c\u4f5c\u4e3a\u5bf9\u95ee\u9898\u5b57\u9762\u91cf\u7684\u5206\u79bb\uff08\u800c\u76ee\u6807\u662f\u4e3a\u8ba1\u5212\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u5171\u4eab\u7684\uff09\u4efb\u52a1\uff09[10]\u3002 First-order logic\u4e00\u9636\u903b\u8f91\u7ea6\u675f\u53ef\u4ee5\u5305\u542b\u91cf\u5316\u53d8\u91cf\uff0c\u5305\u62ec\u4f20\u9012\u95ed\u5305\u5e76\u8868\u793a\u65e0\u9650\u5236\u72b6\u6001\u96c6\u3002\u8fd9\u4e9b\u7279\u5f81\u4f7f\u4e00\u9636\u516c\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u8ba1\u5212\u5b9e\u4f8b\u96c6\u7684\u7d27\u51d1\u8868\u793a\uff0c\u4ee5\u53ca\u65e0\u9650\u5236\u89c4\u6a21\u7684\u8ba1\u5212\u4efb\u52a1[90]\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6709\u9650\u5bf9\u8c61\u96c6\uff0c\u53ef\u4ee5\u5c06\u4e00\u9636\u8868\u793a\u5f62\u5f0f\u76f4\u63a5\u8f6c\u6362\u4e3a\u547d\u9898\u903b\u8f91\u8868\u793a\u5f62\u5f0f\u3002 Constraint Programming. In this case sets of states are defined by a set offinite domain variablesX={x1,...,xn}(where each variablexi,1< i < nhas an associated finite domainD(xi)) and a set of constrains C that determines when a state is part of the set. \u9664\u4e86\u7ea6\u675f\u7f16\u7a0b\u8bed\u8a00\u7684\u8868\u793a\u7075\u6d3b\u6027\u5916\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684CSP\u6c42\u89e3\u5668\u6765\u89e3\u51b3\u5e7f\u4e49\u7684\u8ba1\u5212\u4efb\u52a1[74]\u3002 Three-valued logic. \u5728\u6b64\u903b\u8f91\u8bed\u8a00\u4e2d\uff0c\u5b58\u5728\u4e09\u4e2a\u771f\u503c1\uff08\u771f\uff09\uff0c0\uff08\u5047\uff09\u62161\uff08\u672a\u77e5\uff09\u3002Srivastava\u7b49\u3002\u4f7f\u7528\u4e09\u503c\u903b\u8f91\u8fdb\u884c\u72b6\u6001\u62bd\u8c61\uff0c\u4ee5\u7d27\u51d1\u5730\u8868\u793a\u65e0\u8fb9\u754c\u7684\u5177\u4f53\u72b6\u6001\u96c6[90]\u3002\u4e09\u503c\u903b\u8f91\u5bf9\u4e8e\u8868\u793a\u548c\u89e3\u51b3\u4e00\u81f4\u548c\u5076\u7136\u7684\u4efb\u52a1\u4e5f\u5f88\u6709\u7528[72\uff0c69\uff0c1]\u3002 \u786e\u5b9a\u4e00\u7ec4\u8ba1\u5212\u5b9e\u4f8b**specify a set of planning instances** \uff1a\u9664\u4e86\u7528\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u96c6\u4e4b\u5916\uff0c\u672a\u6765\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4fe1\u606f\uff0c\u4f8b\u5982*\u9886\u57df\u4e0d\u53d8\u91cf*[90]\u751a\u81f3\u662f\u5206\u7c7b\u7684\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff0c\u5305\u62ec*\u6b63*\u4f8b\u548c*\u8d1f*\u4f8b[43]\uff0c\u7c7b\u4f3c\u4e8e\u5728\u5f52\u7eb3\u903b\u8f91\u7f16\u7a0b\uff08ILP\uff09[75]\u3002 generalized plans have two benefits, compactness and generality . Control-flowstructures augment the flexibility of generalized plans with respectto classical plans: Branching: \u8ba1\u5212\u7684\u6267\u884c\u6839\u636e\u5f53\u524d\u72b6\u6001\u4e0b\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u7ed3\u679c\u8fdb\u884c\u5206\u652f\u3002\u5177\u6709\u5206\u652f\u7ed3\u6784\u7684\u8ba1\u5212\u89e3\u51b3\u65b9\u6848\u7684\u793a\u4f8b\u662fAND / OR\u6811\u72b6 \u6216\u6709\u8ba1\u5212 1 \u6216*K-Fault\u5bb9\u5fcd\u8ba1\u5212* 2 \u3002 Loops: \u91cd\u590d\u6267\u884c\u8ba1\u5212\u6bb5\uff0c\u76f4\u5230\u7ed9\u5b9a\u6761\u4ef6\u4fdd\u6301\u5f53\u524d\u72b6\u6001\u3002\u5177\u6709\u5faa\u73af\u7684\u89c4\u5212\u89e3\u51b3\u65b9\u6848\u7684\u793a\u4f8b\u5305\u62ec\u7528\u4e8e\u8868\u793aMDP\u89e3\u51b3\u65b9\u6848*\u7684\u7c7b\u4f3c\u7b56\u7565\u7684*\u89c4\u5212[49]\uff0c\u4ee5\u53caFOND\u89c4\u5212\u4efb\u52a1 3 \u3002 \u4ec5\u5305\u542b\u5206\u652f\u6784\u9020\u7684\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u7684\u5927\u5c0f\u5728\u53ef\u80fd\u7684\u72b6\u6001\u89c2\u5bdf\u6b21\u6570\u4e2d\u53ef\u80fd\u662f\u6307\u6570\u7ea7\u7684\u3002\u5408\u5e76*\u5206\u652f*\u548c*\u5faa\u73af*\u901a\u5e38\u6709\u52a9\u4e8e\u538b\u7f29\u5e7f\u4e49\u8ba1\u5212\u3002\u5728\u67d0\u4e9b\u89e3\u51b3\u65b9\u6848\u8868\u793a\u4e2d\uff0c\u4f8b\u5982DSPlanners 4 5 \uff0c\u5206\u652f\u548c\u5faa\u73af\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u63a7\u5236\u6d41\u6784\u9020\uff0c\u4f46\u662f\u901a\u5e38\uff0c\u5b83\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u6784\u9020\uff08\u4f8b\u5982\u6761\u4ef6\u8f6c\u6362\uff09\u5b9e\u73b0\uff0c\u4ee5\u4fdd\u6301\u89e3\u51b3\u65b9\u6848\u7a7a\u95f4\u7684\u53ef\u7ba1\u7406\u6027\u3002\u8fd9\u662f\u5728*\u6709\u9650\u72b6\u6001\u63a7\u5236\u5668*\uff08FSC\uff09[10]\uff0c \u5e7f\u4e49\u7b56\u7565 [57]\u6216*\u8ba1\u5212\u7a0b\u5e8f\u4e2d*\u4f7f\u7528\u7684*\u6761\u4ef6getos* [83]\u4e2d\u53d1\u751f\u7684\u60c5\u51b5\u3002 Variables\uff08\u5faa\u73af\u63a7\u5236\u53d8\u91cf\u3001\u6570\u503c\u53d8\u91cf\uff09 DSPlanners address this issue representing solutions with quantified variables 4 . \u89e3\u51b3\u4e86\u4ee3\u8868*\u91cf\u5316\u53d8\u91cf\u7684*\u89e3\u51b3\u65b9\u6848\u7684\u95ee\u9898 4 \u3002 A DSplanner is a domain-specific program that can contain **if-then-else & while**constructs.\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5305\u542b\u5206\u652f\u5faa\u73af\u7684\u63a7\u5236\u6d41\u56fe\u4e2d\u8fdb\u884c\u4e0e\u6216\u6811\u641c\u7d22 \u89c4\u5212\u4efb\u52a1\u641c\u7d22\u89e3\u5b50\u56fe **\u91cf\u5316\u53d8\u91cf**Quantified variables \u4f7f\u8bc6\u522b\u5177\u6709\u7279\u5b9a\u7279\u5f81\u7684\u5bf9\u8c61\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u5bf9\u9009\u62e9\u7684\u5bf9\u8c61\u5e94\u7528\u9009\u62e9\u6027\u64cd\u4f5c\u3002 Existential variables**\u5b58\u5728\u53d8\u91cf**\u3002A universal variable asserts that a given property orrelation holds for all the possible variable values.\u901a\u7528\u53d8\u91cf\u65ad\u8a00\uff0c\u7ed9\u5b9a\u7684\u5c5e\u6027\u6216\u5173\u7cfb\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u53d8\u91cf\u503c\u5747\u6210\u7acb\u3002\u9664\u4e86DSPlanners \u4e4b\u5916\uff0c\u5b58\u5728\u53d8\u91cf\u8fd8\u51fa\u73b0\u5728\u9009\u62e9\u64cd\u4f5c\u4e2d*[90]\uff0c\u5373\u5728\u8ba1\u5212\u6267\u884c\u8fc7\u7a0b\u4e2d\u5b9e\u4f8b\u5316\u7684\u64cd\u4f5c\u4ee5\u53ca\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u8bc4\u4f30FOL\u516c\u5f0f\u7684\u7ed3\u679c\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f*\u5e7f\u4e49\u7b56\u7565\uff0c\u5176\u89c4\u5219\u5305\u542b\u8981\u4e0e\u5f53\u524d\u72b6\u6001\u7edf\u4e00\u7684\u53d8\u91cf[48]\u3002PDDL\u53ef\u4ee5\u4ee3\u8868\u5177\u6709\u6d3e\u751f\u8c13\u8bcd\u7684\u7b56\u7565[45] Universal variables**\u901a\u7528\u53d8\u91cf**\u3002\u901a\u7528\u53d8\u91cf\u65ad\u8a00\uff0c\u7ed9\u5b9a\u7684\u5c5e\u6027\u6216\u5173\u7cfb\u9002\u7528\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u53d8\u91cf\u503c \u8bc4\u4f30\u5b9a\u91cf\u53d8\u91cf\u4e0a\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u7684\u6d3e\u751f\u8c13\u8bcd\u7684\u4f7f\u7528\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u5f62\u5f0f\u7684\u5e7f\u4e49\u8ba1\u5212\uff0c\u4f8b\u5982FSC\u3002 \u6808\u9012\u5f52\u8c03\u7528 \u5c3d\u7ba1\u4ec5\u4f7f\u7528\u57fa\u672c\u63a7\u5236\u6d41\u548c\u53d8\u91cf\u5c31\u53ef\u4ee5\u663e\u5f0f\u5730\u5bf9\u8c03\u7528\u6808\u8fdb\u884c\u7f16\u7801\uff0c\u4f46\u662f\u66f4\u7d27\u51d1\u7684\u89e3\u51b3\u65b9\u6848\u901a\u5e38\u662f\u901a\u8fc7\u8c03\u7528\u6808\u83b7\u5f97\u7684\uff08\u4f8b\u5982\uff0c\u5177\u6709\u9012\u5f52\u89e3\u51b3\u65b9\u6848\u7684\u4efb\u52a1[84]\uff09\u3002\u7528\u4e8e\u8bbf\u95ee\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u901a\u7528\u8ba1\u5212\uff0c\u8be5\u8ba1\u5212\u5b9e\u73b0\u4e86\u5177\u6709\u4e00\u4e2a\u8fc7\u7a0b\u53c2\u6570\u7684\u9012\u5f52\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\u3002\u6307\u4ee4**call\uff080\uff0c***node* **\uff09**\u662f\u9012\u5f52\u8c03\u7528\uff0c\u5c06\u53c2\u6570*node* \u5206\u914d\u7ed9\u7a0b\u5e8f\u7684\u552f\u4e00\u53c2\u6570\uff0c\u5e76\u4ece\u5176\u7b2c\u4e00\u884c\u91cd\u65b0\u5f00\u59cb\u6267\u884c\uff0c \u5b9e\u73b0\u9012\u5f52DFS\u4ee5\u904d\u5386\u4efb\u610f\u5927\u5c0f\u7684\u4e8c\u53c9\u6811\u7684\u901a\u7528\u8ba1\u5212 hierarchical generalized plans [83]\u5bf9\u4efb\u610f\u5927\u5c0f\u7684\u6570\u5b57\u5217\u8868\u9009\u62e9\u6392\u5e8f\u7b97\u6cd5 \u6267\u884c\u548c\u9a8c\u8bc1 \u00b6 \u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u5206\u652f\uff0c\u5faa\u73af\u5e76\u5177\u6709\u53d8\u91cf\uff0c\u56e0\u6b64\u5728\u7279\u5b9a\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u4e0a\u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u9700\u8981\u7279\u5b9a\u7684\u673a\u5236\uff0c\u8fd9\u4e0d\u540c\u4e8e\u4f20\u7edf\u4e0a\u5728\u4f20\u7edf\u8ba1\u5212\u4e2d\u4f7f\u7528\u7684\u673a\u5236\uff1a \u2022 *\u5206\u652f\u3002*\u5177\u6709\u4e0d\u540c\u53ef\u80fd\u6267\u884c\u5206\u652f\u7684\u901a\u7528\u8ba1\u5212\u7684\u6267\u884c\u9700\u8981\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u6839\u636e\u72b6\u6001\u53d8\u91cf\u7684\u5f53\u524d\u503c\u9009\u62e9\u76f8\u5e94\u7684\u6267\u884c\u5206\u652f\u3002\u53ef\u4ee5\u5c06\u5206\u652f\u7684\u51e0\u4e2a\u901a\u7528\u8ba1\u5212\uff08\u4f8b\u5982HTN\uff0cAND / OR\u6811\u72b6\u8ba1\u5212\u6216\u7b56\u7565\uff09\u7684\u6267\u884c\u7f16\u8bd1\u4e3a\u7ecf\u5178\u8ba1\u5212[3\uff0c1\uff0c45]\u3002\u5982\u7b2c3\u8282\u6240\u8ff0\uff0c\u53ef\u4ee5\u901a\u8fc7*\u6761\u4ef6\u6548\u5e94*\u6709\u6548\u5730\u5efa\u6a21\u6839\u636e\u72b6\u6001\u53d8\u91cf\u7684\u4e0d\u540c\u503c\u6267\u884c\u7684\u4e0d\u540c\u53ef\u80fd\u6267\u884c\u7ed3\u679c[67]\u3002 \u2022 \u5faa\u73af\u3002*\u6267\u884c\u660e\u786e\u8868\u793a\u5faa\u73af\u7684\u901a\u7528\u8ba1\u5212\uff0c\u4f8b\u5982\u7a0b\u5e8f\uff08\u6216FSC\uff09\uff0c\u9700\u8981\u8ddf\u8e2a\u5f53\u524d\u7a0b\u5e8f\u884c\uff08\u6216\u63a7\u5236\u5668\u72b6\u6001\uff09\u3002\u901a\u8fc7\u5c06\u76f8\u5e94\u7684\u81ea\u52a8\u673a\uff08\u5176\u72b6\u6001\u548c\u53ef\u80fd\u7684\u8f6c\u6362\uff09\u7f16\u7801\u4e3a\u989d\u5916\u7684\u72b6\u6001\u53d8\u91cf\uff0c\u53ef\u4ee5**\u5c06FSC\u548c\u7a0b\u5e8f\u7684\u6267\u884c\u7f16\u8bd1\u4e3a\u7ecf\u5178\u8ba1\u5212* [^7\uff0c83\uff0c84]\u3002 \u2022 \u53d8\u91cf\u3002*\u5982\u679c\u5e7f\u4e49\u8ba1\u5212\u5305\u542b\u91cf\u5316\u53d8\u91cf\uff0c\u5219\u8ba1\u5212\u6267\u884c\u9700\u8981\u7edf\u4e00\u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u5c06\u53ef\u80fd\u7684\u503c\u5206\u914d\u7ed9\u8fd9\u4e9b\u53d8\u91cf\u3002\u65e9\u671f\u8ba1\u5212\u7cfb\u7edf\u5b9e\u65bd\u4e86\u53d8\u91cf\u7ed1\u5b9a\u7b97\u6cd5\u6765\u5339\u914d\u63a7\u5236\u89c4\u5219[96]\u3002\u5982\u4eca\uff0cFast-Downward \u4f7f\u7528\u5b9e\u73b0*\u6807\u8bb0\u7b97\u6cd5\u7684*\u91cf\u5316\u53d8\u91cf\u8bc4\u4f30\u6d3e\u751f\u8c13\u8bcd [37]\u3002\u4e00\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u662f\u5229\u7528\u5916\u90e8\u6c42\u89e3\u5668\uff08\u4f8b\u5982*\u7b54\u6848\u96c6\u7f16\u7a0b [45]\u6216CSP [29]\u6c42\u89e3\u5668\uff09\u6765\u91cf\u5316\u53d8\u91cf\u3002\u8fd8\u9075\u5faa\u7f16\u8bd1\u65b9\u6cd5\u5728*\u8fde\u63a5\u67e5\u8be2\u4e2d*\u7ed1\u5b9a\u5b58\u5728\u53d8\u91cf[55]\u5e76\u4f7f\u7528\u4f20\u9012\u95ed\u5305[73]\u6765\u8bc4\u4f30FOL\u72b6\u6001\u67e5\u8be2\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5f53\u524d\u5927\u591a\u6570\u73b0\u6210\u7684\u8ba1\u5212\u8005\u4ec5\u6709\u6548\u5730\u652f\u6301\u7b80\u5355\u6761\u4ef6\uff0c\u56e0\u4e3a\u547d\u9898\u539f\u5b50\u7684\u8fde\u63a5\u548c\u6c47\u7f16\u5b58\u5728\u7684\u91cf\u5316\u516c\u5f0f\u5177\u6709\u6210\u500d\u7684\u4ee3\u4ef7[28]\u3002 \u5728\u7ed9\u5b9a\u8ba1\u5212\u5b9e\u4f8b\u4e0a\u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u7684\u6700\u7b80\u5355\u7684\u671f\u671b\u5c5e\u6027\u662f**\u7ec8\u6b62\u6027\u6d4b\u8bd5\u3001\u9a8c\u8bc1**\uff0c\u5728\u6587\u732e\u4e2d\u4e5f\u79f0\u4e3a*\u505c\u673a\u95ee\u9898\u3002*\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5e7f\u4e49\u8ba1\u5212\u6267\u884c\u7684\u52a8\u4f5c\u6570\u7684\u4e0a\u9650\u7531\u5e7f\u4e49\u8ba1\u5212\u7684\u53ef\u80fd\u72b6\u6001\u7684\u603b\u6570\u7ed9\u51fa\u3002\u7136\u540e\u53ef\u4ee5\u68c0\u6d4b\u65e0\u9650\u5faa\u73af\uff0c\u5bf9\u8ba1\u5212\u6267\u884c\u671f\u95f4\u7684\u64cd\u4f5c\u6570\u8fdb\u884c\u8ba1\u6570\uff0c\u5e76\u68c0\u67e5\u8be5\u8ba1\u6570\u662f\u5426\u8d85\u8fc7\u4e86\u5148\u524d\u7684\u4e0a\u9650[6]\u3002 \u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u7684\u7b2c\u4e8c\u4e2a\u5c5e\u6027\u662f\u4fdd\u8bc1\u8ba1\u5212\u80fd\u591f\u89e3\u51b3\u7ed9\u5b9a\u5b9e\u4f8b\u3002\u6d4b\u8bd5\u6b64\u5c5e\u6027\u79f0\u4e3a**\u9a8c\u8bc1\u3001\u6709\u6548\u6027\u9a8c\u8bc1** \u8bc1\u660e\u9a8c\u8bc1\u5305\u542b\u7ec8\u6b62\u8bc1\u660e\uff0c\u5e76\u4e14\u4f5c\u4e3a\u8ba1\u5212\u751f\u6210\u7684\u4e00\u90e8\u5206\u662f\u9690\u542b\u7684\u3002\u7ecf\u5178\u8ba1\u5212\u4e2d\u7684\u8ba1\u5212\u9a8c\u8bc1\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u4ece\u7ecf\u5178\u8ba1\u5212\u4efb\u52a1\u7684\u521d\u59cb\u72b6\u6001\u5f00\u59cb*\u6267\u884c* \u8ba1\u5212\u6765\u83b7\u5f97\u9a8c\u8bc1\u8bc1\u660e\u6216\u5931\u8d25\u8bc1\u660e\u3002VAL [41]\uff0c\u57283\u4e2d\u5f15\u5165\u7b2c\u4e09\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b\uff08IPC\uff09\u662f\u7528\u4e8e\u7ecf\u5178\u8ba1\u5212\u7684\u6807\u51c6\u8ba1\u5212\u9a8c\u8bc1\u5de5\u5177\u3002\u5728\u5e7f\u4e49\u8ba1\u5212\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba1\u5212\u53ef\u4ee5\u5206\u652f\uff0c\u5faa\u73af\u548c\u5305\u542b\u53d8\u91cf\uff0c\u8ba1\u5212\u9a8c\u8bc1\u66f4\u4e3a\u590d\u6742\u3002\u5728\u7ed9\u5b9a\u8ba1\u5212\u5b9e\u4f8b\u4e2d\u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u53ef\u80fd\u65e0\u6cd5\u89e3\u51b3\u8be5\u5b9e\u4f8b\uff0c\u56e0\u4e3a\uff1a 1.\u8ba1\u5212*\u4e0d\u5065\u5168\uff1a*\u5e7f\u4e49\u8ba1\u5212\u7531\u4e8e\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u800c\u65e0\u6cd5\u6ee1\u8db3*\u7ec8\u6b62*\u6761\u4ef6\u3002 2.\u8ba1\u5212*\u4e0d\u5b8c\u6574\u3002*\u5f53\u524d\u72b6\u6001\u6ca1\u6709\u4e0b\u4e00\u6b65\u8981\u6267\u884c\u7684\u64cd\u4f5c\uff08\u4f8b\u5982\uff0c\u5728\u5f53\u524d\u72b6\u6001\u6ca1\u6709\u9002\u7528\u89c4\u5219\u7684\u7b56\u7565\uff09\u3002 \u5982\u679c\u53ef\u4ee5\u5c06\u5e7f\u4e49\u8ba1\u5212\u7684\u6267\u884c\u7f16\u8bd1\u4e3a\u7ecf\u5178\u8ba1\u5212\u4efb\u52a1[7\u300183\u300184]\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684\u7ecf\u5178\u8ba1\u5212\u5668\u6765\u6709\u6548\u5730\u68c0\u67e5\u5148\u524d\u7684\u9a8c\u8bc1\u6761\u4ef6\u3002\u5f53\u884c\u52a8\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u5f71\u54cd\u65f6\uff0c\u8ba1\u5212\u9a8c\u8bc1\u5c06\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u8bc1\u660e\u6240\u6709\u53ef\u80fd\u7684\u8ba1\u5212\u6267\u884c\u90fd\u53ef\u4ee5\u8fbe\u5230\u76ee\u6807[14]\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c \u6a21\u578b\u68c0\u67e5 [16]\u548c*\u975e\u786e\u5b9a\u6027\u8ba1\u5212*\u662f\u5408\u9002\u7684\u65b9\u6cd5[38]\u3002 \u4e0e\u7ecf\u5178\u8ba1\u5212\u4e0d\u540c\uff0c\u7ecf\u5178\u8ba1\u5212\u4e0e\u7279\u5b9a\u8ba1\u5212\u5b9e\u4f8b\u76f8\u5173\u8054\uff0c\u5e7f\u4e49\u8ba1\u5212\u4e5f\u53ef\u4ee5\u5728\u4e00\u7ec4\u4e0d\u540c\u7684\u8ba1\u5212\u5b9e\u4f8b\u4e0a\u6267\u884c\u3002\u9a8c\u8bc1\u901a\u7528\u8ba1\u5212\u4efb\u52a1\u4e0a\u7684\u901a\u7528\u8ba1\u5212\u9700\u8981\u5728\u4efb\u52a1\u4e2d\u5305\u542b\u7684\u6240\u6709\u5b9e\u4f8b\u4e2d\u6267\u884c\u8ba1\u5212\uff0c\u5e76\u9a8c\u8bc1\u8be5\u8ba1\u5212\u5df2\u89e3\u51b3\u6240\u6709\u95ee\u9898\u3002\u8fd9\u610f\u5473\u7740\u5728\u7ed9\u5b9a\u5b9e\u4f8b\u4e2d\u5bf9\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u7684\u9a8c\u8bc1\u5e94\u8be5\u662f\u6709\u6548\u7684\u8ba1\u5212\u5927\u5c0f\u7684\u591a\u9879\u5f0f\u3002\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u5b9e\u65bd\u4e00\u7ec4\u8ba1\u5212\u5b9e\u4f8b\u4e2d\u7684\u4e00\u822c\u8ba1\u5212\u7684\u6267\u884c\uff1a \u2022 *\u987a\u5e8f\u7684\uff0c*\u5373\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u4e2d\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u6267\u884c\u901a\u7528\u8ba1\u5212\u3002\u8fd9\u662f\u4f7f\u7528\u7ecf\u5178\u8ba1\u5212\u7a0b\u5e8f\u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u6240\u9075\u5faa\u7684\u65b9\u6cd5\uff0c\u8be5\u8ba1\u5212\u5668\u5728\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u5305\u542b\u7684\u6bcf\u4e2a\u5355\u72ec\u8ba1\u5212\u5b9e\u4f8b\u4e2d\u4f9d\u6b21\u6267\u884c\u8ba1\u5212[83]\u3002 \u2022 *\u5e76\u884c\u3002*\u5e7f\u4e49\u8ba1\u5212\u662f\u5728\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7684\u5b9e\u4f8b\u96c6\u4e2d\u540c\u65f6\u6267\u884c\u7684\uff08\u4f8b\u5982\u6309\u7167\u4e00\u81f4\uff0c\u6216\u7136\u6216POMDP\u8ba1\u5212\uff0c\u5176\u4e2d\u52a8\u4f5c\u7684\u6267\u884c\u4f1a\u8fdb\u5c55\u5230\u4e00\u7ec4\u72b6\u6001[32]\uff09\u3002 *\u987a\u5e8f*\u65b9\u6cd5\u7684\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u5176\u5b9e\u7528\u6027\u53d7\u5230\u5b9e\u4f8b\u6570\u7684\u9650\u5236\u3002\u5728*\u5e73\u884c*\u65b9\u6cd5\u5141\u8bb8\u5904\u7406\u66f4\u5927\u7684\u5b9e\u4f8b\u7684\u96c6\u5408\uff08\u6216\u5b9e\u4f8b\u4e0e\u672a\u7ed3\u5408\u7684\u5bf9\u8c61\u7684\u6570\u91cf\uff09\uff0c\u4f46\u5b83\u9700\u8981\u7cbe\u7ec6\u7684\u72b6\u6001\u8fdb\u5c55\u7684\u6280\u672f\uff0c\u5982\u4fe1\u5ff5\u8ddf\u8e2a[8]\u6216\u884c\u52a8\u6700\u65b0\u4fe1\u606f\u62bd\u8c61\u72b6\u6001[90]\u4e2d\u7684\u5e94\u7528\u3002\u5728\u5e76\u884c\u6267\u884c\u4e2d\uff0c\u8bc4\u4f30\u8868\u8fbe\u76ee\u6807\u6216\u884d\u751f\u7684\u6d41\u5229\u6027\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u5bf9\u72b6\u6001\u96c6\u8fdb\u884c\u516c\u5f0f\u8bc4\u4f30[32]\u3002\u9a8c\u8bc1\u5e7f\u4e49\u8ba1\u5212\u7684\u7b2c\u4e09\u79cd\u65b9\u6cd5\u662f\u663e\u793a\u6267\u884c\u524d\u540e\u7684\u67d0\u4e9b\u5c5e\u6027\uff0c\u4f8b\u5982\u5728\u4f7f\u7528***Hoare\u4e09\u5143\u7ec4\u7684*\u7a0b\u5e8f\u9a8c\u8bc1**\u4e2d[82]\u3002 \u5b9e\u9a8c\u7b49\u8bc4\u4ef7\u6307\u6807 \u00b6 \u8bc4\u4f30 \u00b6 \u7ed9\u5b9a\u4e00\u7ec4\u8ba1\u5212\u5b9e\u4f8b\uff0c\u4e0d\u540c\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u4e0e\u5176*\u4fdd\u6301\u4e00\u81f4*\uff0c\u4f8b\u5982\uff0c\u56fe11\u300112\u548c14\u4e2d\u6240\u793a\u7684\u4e0d\u540c\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u5c06\u4efb\u4f55\u9ad8\u5ea6\u7684\u780c\u5757\u5854\u5806\u53e0\u8d77\u6765\u3002\u7136\u540e\u6709\u5fc5\u8981\u5b9a\u4e49\u4e00\u79cd\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u91cf\u5316\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u7684\u80fd\u529b\uff0c\u4ee5\u9610\u660e\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u95f4\u7684\u504f\u597d\u3002 \u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u6307\u6807\u8bc4\u4f30\u5e7f\u4e49\u8ba1\u5212\u7684\u80fd\u529b\uff1a \u2022 \u8986\u76d6\u8303\u56f4\u3002*\u53ef\u4ee5\u5c06\u5e7f\u4e49\u8ba1\u5212\u7684*\u57df\u8986\u76d6\u8303\u56f4*\u8bc4\u4f30\u4e3a\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u89e3\u51b3\u7684\u5927\u5c0f\u4e3a*n \u7684\u95ee\u9898\u5b9e\u4f8b\u7684\u6570\u91cf\u9664\u4ee5\u76f8\u540c\u5927\u5c0f\u7684\u53ef\u89e3\u51b3\u95ee\u9898\u5b9e\u4f8b\u7684\u603b\u6570\u7684\u6bd4\u7387[90]\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u77e5\u9053\u8fd9\u4e9b\u6570\u5b57\u610f\u5473\u7740\u8981\u89e3\u51b3\u5927\u91cf\u8ba1\u5212\u4efb\u52a1\uff0c\u56e0\u6b64\u901a\u5e38\u5f88\u68d8\u624b\u3002\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u6280\u672f\u6839\u636e\u89e3\u51b3\u65b9\u6848\u5728\u57df\u5b9e\u4f8b\u7684*\u4ee3\u8868\u6027* \u6837\u672c\uff08\u79f0\u4e3a*\u6d4b\u8bd5\u96c6\uff09*\u4e0a\u7684\u6267\u884c\u6548\u679c\u6765\u4f30\u7b97\u89e3\u51b3\u65b9\u6848\u7684\u8d28\u91cf[61]\u3002\u5728\u901a\u7528\u8ba1\u5212\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7ec4\u6d4b\u8bd5\u5b9e\u4f8b\uff0c\u5e76\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\u6db5\u76d6\u4e86\u591a\u5c11\u5b9e\u4f8b\u3002\u5982\u679c\u6211\u4eec\u5c06\u53e4\u5178\u89c4\u5212\u5e08\u89c6\u4e3a\u5e7f\u4e49\u89c4\u5212\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\uff0c\u8fd9\u5c31\u662f\u5728\u56fd\u9645\u89c4\u5212\u7ade\u8d5b\uff08IPC\uff09[95]\u7684\u987a\u5e8f\u6700\u4f18\u8f68\u9053\u4e0a\u8fdb\u884c\u7684\u5de5\u4f5c\uff0c\u5728\u8be5\u7ade\u8d5b\u4e2d\uff0c\u89c4\u5212\u5e08\u6839\u636e\u4ed6\u4eec\u89e3\u51b3\u7684\u672a\u89c1\u5b9e\u4f8b\u7684\u6570\u91cf\u83b7\u5f97\u5956\u52b1\u3002 \u2022 \u590d\u6742\u6027\u3002*\u7531\u4e8e\u5e7f\u4e49\u8ba1\u5212\u662f\u7c7b\u4f3c\u4e8e\u7b97\u6cd5\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64\u53ef\u4ee5\u4ece\u7406\u8bba\u4e0a\u8bc4\u4f30\u5176\u590d\u6742\u6027\uff0c\u4f8b\u5982\uff0c\u4f7f\u7528\u6e10\u8fdb\u5206\u6790\u6765\u8868\u5f81\u5176\u8fd0\u884c\u65f6\u95f4\u548c\u7a7a\u95f4\u9700\u6c42\u5982\u4f55\u6839\u636e\u8f93\u5165\u4efb\u52a1\u7684\u5927\u5c0f\u800c\u589e\u957f\u3002\u5b9e\u9645\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7ed9\u5b9a\u7684\u8f93\u5165\u5b9e\u4f8b\u4e0a\u6267\u884c\u8ba1\u5212\u6240\u4ea7\u751f\u7684\u52a8\u4f5c\u5e8f\u5217\u7684\u957f\u5ea6\u6765\u91cf\u5316\u5e7f\u4e49\u8ba1\u5212\u7684\u590d\u6742\u6027\u3002\u7136\u540e\uff0c\u5f53\u7ed9\u5b9a\u5b9e\u4f8b\u7684\u5e8f\u5217\u957f\u5ea6\u5bf9\u4e8e\u8be5\u5b9e\u4f8b*\u6700\u5c0f\u65f6 \uff0c\u901a\u7528\u8ba1\u5212\u662f*\u6700\u4f73*\u7684\u3002\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4e0eIPC [95]\u7684\u987a\u5e8f\u4ee4\u4eba\u6ee1\u610f\u7684\u8f68\u8ff9\u6709\u5173\uff0c\u5728\u8be5\u8f68\u8ff9\u4e2d\uff0c\u8ba1\u5212\u8005\u7684\u6700\u7ec8\u4ef7\u503c\u88ab\u62a5\u544a\u4e3a\u6d4b\u8bd5\u96c6\u5b9e\u4f8b\u4e2d\u89e3\u51b3\u65b9\u6848\u7684\u7d2f\u79ef\u8d28\u91cf\u3002 \u2022 \u7b80\u6d01\u3002*\u53ef\u4ee5\u6839\u636e\u8ba1\u5212\u884c\u6570\uff0c\u63a7\u5236\u5668\u72b6\u6001\uff0c\u7b56\u7565\u89c4\u5219\u6216\u91cf\u5316\u53d8\u91cf\u6765\u8bc4\u4f30\u7ed9\u5b9a\u5e7f\u4e49\u8ba1\u5212\u7684\u5927\u5c0f\u3002\u5728ILP\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5f15\u5165\u4e86\u7c7b\u4f3c\u7684\u5ea6\u91cf\u6807\u51c6\uff0c\u4ee5\u91cf\u5316\u89e3\u51b3\u65b9\u6848\u7684*\u7d27\u51d1\u6027*\u548c*\u53ef\u8bfb\u6027 \uff0c\u5e76\u4e14\u66f4\u559c\u6b22\u89c4\u5219\u6570\u91cf\u6700\u5c11\u7684\u6a21\u578b\u548c\u89c4\u6a21\u6700\u5c0f\u7684\u89c4\u5219[63]\u3002\u6ce8\u610f\uff0c\u5728\u7ecf\u5178\u8ba1\u5212\u4e2d\uff0c\u8ba1\u5212\u7684\u6267\u884c\u590d\u6742\u5ea6\u76f4\u63a5\u4e0e\u5176\u89c4\u6a21\u76f8\u5bf9\u5e94\u3002 Solver \u00b6 \u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff0c\u5e76\u56de\u987e\u4e86\u4e0d\u540c\u7684*\u8ba1\u5212\u91cd\u7528*\u6280\u672f\uff0c\u4ee5\u907f\u514d\u4ece\u5934\u5f00\u59cb\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u3002\u672c\u8282\u6700\u540e\u56de\u987e\u4e86\u9488\u5bf9\u901a\u7528\u8ba1\u5212\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u7279\u5b9a\u5b9e\u73b0\u3002 \u5728*\u81ea\u4e0a\u800c\u4e0b\u7684*\u5e7f\u4e49\u89c4\u5212\u7684\u641c\u7d22\u65b9\u6cd5\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8986\u76d6\u4e86\u6240\u6709\u5728\u5e7f\u4e49\u89c4\u5212\u4efb\u52a1\u7684\u5b9e\u4f8b\u3002\u53e6\u4e00\u65b9\u9762\uff0c \u81ea\u4e0b\u800c\u4e0a\u7684*\u65b9\u6cd5\u4e3a\u5355\u4e2a\u5b9e\u4f8b\uff08\u6216\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u5b9e\u4f8b\u5b50\u96c6\uff09\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u6269\u5927\u4e86\u89e3\u51b3\u65b9\u6848\u7684\u8986\u76d6\u8303\u56f4\uff0c\u76f4\u5230\u6db5\u76d6\u4e86\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\uff0c\u81ea\u4e0a\u800c\u4e0b\u7684\u65b9\u6cd5\u4e0e*\u79bb\u7ebf*\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6709\u5173\uff0c\u8be5\u7b97\u6cd5\u8ba1\u7b97\u6a21\u578b\u4ee5\u5728\u4e00\u6b21\u8fed\u4ee3\u4e2d\u8986\u76d6\u6574\u4e2a\u8f93\u5165\u5b9e\u4f8b\u96c6\uff0c\u4f8b\u5982\u51b3\u7b56\u6811\u7684\u5f52\u7eb3 10 \u3002\u81ea\u4e0b\u800c\u4e0a\u7684\u65b9\u6cd5\u4e0e*\u5728\u7ebf\u76f8\u5173 \u7248\u672c\u7684ML\u7b97\u6cd5\uff0c\u968f\u7740\u66f4\u591a\u8f93\u5165\u5b9e\u4f8b\u7684\u51fa\u73b0\uff0c\u8fed\u4ee3\u5730\u9012\u589e\u5730\u9002\u5e94\u6a21\u578b 11 \u3002 \u7528\u4e8e\u5e7f\u4e49\u8ba1\u5212\u7684\u81ea*\u9876\u5411\u4e0b*\u7b97\u6cd5\u901a\u5e38\u5728\u53ef\u80fd\u7684\u5e7f\u4e49\u8ba1\u5212\u4e2d\u641c\u7d22\u89e3\u51b3\u65b9\u6848\u3002\u6b64\u641c\u7d22\u7684\u521d\u59cb\u72b6\u6001\u662f *\u7a7a\u7684*\u901a\u7528\u8ba1\u5212\uff0c\u641c\u7d22\u64cd\u4f5c\u5458\u5728\u901a\u7528\u8ba1\u5212\u4e2d\u5efa\u7acb\u4e00\u4e2a\u6b65\u9aa4\uff08\u4f8b\u5982\uff0c\u5411\u7a0b\u5e8f\u6dfb\u52a0\u6307\u4ee4\uff0c\u5411FSC\u6dfb\u52a0\u65b0\u72b6\u6001\u6216\u5411FSC\u8fc7\u6e21\uff0c\u5411\u7b56\u7565\u6dfb\u52a0\u65b0\u89c4\u5219\u7b49\uff09 \u3002\u641c\u7d22\u7684\u76ee\u6807\u72b6\u6001\u96c6\u5305\u62ec\u6784\u5efa\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u89e3\u51b3\u7ed9\u5b9a\u5b9e\u4f8b\u96c6\u7684\u4efb\u4f55\u72b6\u6001\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u793a\u4f8b\u662f\u5c06\u901a\u7528\u8ba1\u5212\u7f16\u8bd1\u4e3a\u5176\u4ed6\u5f62\u5f0f\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff0c\u4f8b\u5982***\u7ecf\u5178\u8ba1\u5212* 12 \uff0c \u4e00\u81f4\u8ba1\u5212 13 \uff0c CSP 14 \u6216*Prolog\u7a0b\u5e8f* 15 **\u3002\u8fd9\u4e9b\u7f16\u8bd1\u5b9e\u73b0\u4e86\u5982\u4e0a\u6240\u8ff0\u7684\u641c\u7d22\u7a7a\u95f4\uff0c\u5e76\u53d7\u76ca\u4e8e\u73b0\u6210\u7684\u6c42\u89e3\u5668\uff08\u5177\u6709\u9ad8\u6548\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5\uff09\uff0c\u53ef\u4ee5\u5b8c\u6210\u5bf9\u901a\u7528\u8ba1\u5212\u7684\u641c\u7d22\u3002\u7f16\u8bd1\u65b9\u6cd5\u7684\u4e3b\u8981\u9650\u5236\u662f\u53ef\u4f38\u7f29\u6027\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u901a\u5e38\u4e3a\u4e86\u9650\u5236\u641c\u7d22\u8303\u56f4\uff0c\u9650\u5236\u53ef\u80fd\u7684\u5e7f\u4e49\u8ba1\u5212\u7684\u5927\u5c0f\uff08\u4f8b\u5982\uff0c\u7a0b\u5e8f\u884c\uff0c\u63a7\u5236\u5668\u72b6\u6001\uff0c\u7b56\u7565\u89c4\u5219\u6216\u91cf\u5316\u53d8\u91cf\u7684\u6700\u5927\u6570\u91cf\uff09\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u5728SATPLAN\u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u786e\u5b9a\u6700\u5927\u8ba1\u5212\u957f\u5ea6[78]\uff0c\u7136\u540e\u8fed\u4ee3\u5730\u589e\u52a0\u76f4\u5230\u627e\u5230\u89e3\u51b3\u65b9\u6848\u4e3a\u6b62\u3002 \u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u4ee3\u8868\u4e0d\u540c\u7684\u5171\u4eab\u76f8\u540c\u76ee\u6807\u7684\u8ba1\u5212\u5b9e\u4f8b\uff0c\u5219\u9488\u5bf9\u610f\u5916\u60c5\u51b5[1]\uff0c\u4e00\u81f4[69]\u548cPOMDP\u89c4\u5212[32]\u7684\u79bb\u7ebf\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u81ea*\u9876\u5411\u4e0b*\u7684\u5e7f\u4e49\u89c4\u5212\u7b97\u6cd5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u5e38\u4e0d\u662f\u5728\u53ef\u80fd\u7684\u6982\u62ec\u8ba1\u5212\u7684\u8303\u56f4\u5185\u800c\u662f\u5728\u53ef\u5230\u8fbe\u7684*\u4fe1\u5ff5\u72b6\u6001\u7684\u8303\u56f4\u5185*\u8fdb\u884c\u5bf9\u89e3\u51b3\u65b9\u6848\u7684\u641c\u7d22*\u3002 \u5728\u8fd9\u91cc\uff0c\u53ef\u4f38\u7f29\u6027\u9650\u5236\u6765\u81ea\u4ee5\u4e0b\u4e8b\u5b9e\uff1a\u53ef\u5230\u8fbe\u7684\u4fe1\u5ff5\u72b6\u6001\u96c6\u5408\u5feb\u901f\u589e\u957f\uff08\u7136\u540e\uff0c\u5229\u7528\u964d\u4f4e\u4e0d\u786e\u5b9a\u6027\u7684\u6280\u672f\u4ee5\u4f7f\u53ef\u80fd\u7684\u72b6\u6001\u96c6\u5408\u6613\u4e8e\u5904\u7406\u662f\u5173\u952e\uff09\u4ee5\u53ca\u96be\u4ee5\u5b9a\u4e49\u6709\u6548\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u4ee5\u63d0\u4f9b*\u6709\u7528\u7684 \u4f30\u8ba1\u503c\u4fe1\u5ff5\u72b6\u6001\u3002 \u81ea\u4e0b\u800c\u4e0a\u7684*\u5e7f\u4e49\u8ba1\u5212\u662f\u4e00\u79cd\u8fed\u4ee3\u548c\u589e\u91cf\u65b9\u6cd5\uff0c\u5176\u4e2d\uff081\uff09\u9009\u62e9\u5355\u4e2a\u8ba1\u5212\u5b9e\u4f8b\uff08\u6216\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u5b9e\u4f8b\u7684\u5b50\u96c6\uff09\uff0c\uff082\uff09\u8ba1\u7b97\u5176\u89e3\u51b3\u65b9\u6848\uff0c\uff083\uff09\u5e7f\u4e49\u6700\u540e\uff084\uff09\uff0c\u4e0e\u5148\u524d\u627e\u5230\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u5408\u5e76\u3002\u91cd\u590d\u6b64\u56db\u6b65\u8fc7\u7a0b\uff0c\u76f4\u5230\u6db5\u76d6\u4e86\u901a\u7528\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u3002\u5728*\u81ea\u4e0b\u800c\u4e0a*\u7684\u65b9\u6cd5\u662f\u4e0e*\u8ba1\u5212\u4fee\u590d [26]\uff0c \u57fa\u4e8e\u6848\u4f8b\u7684\u89c4\u5212 [11]\u548c*\u8fc1\u79fb\u5b66\u4e60* [70]\uff0c\u56e0\u4e3a\u5b83\u8fd8\u9700\u8981\u4e00\u4e9b\u673a\u5236\u6765\u786e\u5b9a\u4e3a\u4ec0\u4e48\u7ed9\u5b9a\u89e3\u51b3\u65b9\u6848\u4e0d\u6db5\u76d6\u7ed9\u5b9a\u5b9e\u4f8b\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9002\u7528\u4e8e\u901a\u7528\u8ba1\u5212\u7684\u9a8c\u8bc1\u673a\u5236\u9002\u5408\u5728\u7ed9\u5b9a\u8ba1\u5212[97]\u4e2d\u67e5\u627e\u65ad\u8a00\u5931\u8d25\u7684\u539f\u56e0\uff09\u4ee5\u53ca\u9002\u5e94\u7ed9\u5b9a\u89e3\u51b3\u65b9\u6848\u4ee5\u9002\u5e94\u65b0\u573a\u666f\u7684\u673a\u5236\uff08\u5728\u63a7\u5236\u77e5\u8bc6\u4e0d\u5b8c\u5584\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u89c4\u5212\u65f6\u4e5f\u5b58\u5728\u8fd9\u79cd\u9002\u5e94\u673a\u5236[99]\uff09\u3002 \u867d\u7136*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\u53ef\u4ee5\u4f5c\u4e3a\u6c47\u7f16\u5176\u4ed6\u5f62\u5f0f\u89e3\u51b3\u95ee\u9898\u6765\u5b9e\u73b0\uff0c*\u81ea\u4e0b\u800c\u4e0a\u7684*\u65b9\u6cd5\u9700\u8981\u4ee5\u63d0\u5347\u548c\u5408\u5e76\u8ba1\u5212\u7684\u5177\u4f53\u6280\u672f\u3002\u53e6\u4e00\u65b9\u9762\uff0c*\u81ea\u4e0b\u800c\u4e0a\u7684*\u65b9\u6cd5\u63d0\u4f9b\u4e86\u968f\u65f6\u968f\u5730\u7684\u884c\u4e3a\uff0c\u5e76\u4e14\u53ef\u80fd\u80fd\u591f\u81ea\u52a8\u6784\u5efa\u4e00\u5c0f\u7ec4\u5b9e\u4f8b\u4ee5\u5b9e\u73b0\u6cdb\u5316[91]\u3002 \u91cd\u7528\u5e7f\u4e49\u8ba1\u5212Srivastava\u7684\u65b9\u6cd5 \u00b6 \u4ece\u5934\u5f00\u59cb\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u91cd\u7528\u73b0\u6709\u89e3\u51b3\u65b9\u6848\u3002\u5373\u4f7f\u67d0\u4e2a\u901a\u7528\u8ba1\u5212\u4e0d\u6b63\u786e\uff08\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\u5b83\u65e0\u6cd5\u89e3\u51b3\u7ed9\u5b9a\u5b9e\u4f8b\uff09\u6216\u4e0d\u5b8c\u6574\uff08\u5b83\u6ca1\u6709\u5b9a\u4e49\u8981\u5728\u7ed9\u5b9a\u5b9e\u4f8b*\u4e0a\u5e94\u7528\u7684\u52a8\u4f5c*\uff09\uff0c\u5b83\u4e5f\u53ef\u80fd\u5305\u542b\u6709\u7528\u7684\u77e5\u8bc6\u3002\u4f8b\u5982\uff0c\u8ba1\u5212\u53ef\u80fd\u80fd\u591f\u89e3\u51b3\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7684\u5b50\u95ee\u9898\u6216\u7c7b\u4f3c\u5b9e\u4f8b\uff08\u4f8b\u5982\uff0c\u8fd9\u662f\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\uff09\uff0c\u6216\u8005\u5728\u8c03\u6574\u63a7\u4ef6\u4e2d\u7684\u6761\u4ef6\u540e\u89e3\u51b3\u65b0\u5b9e\u4f8b\u6d41\u7ed3\u6784\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u91c7\u7528\u5148\u524d\u5b58\u5728\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u53d6\u5f97\u56de\u62a5\u3002 \u5728\u8fd9\u65b9\u9762\uff0c*\u81ea\u4e0b\u800c\u4e0a\u7684*\u901a\u7528\u8ba1\u5212\u65b9\u6cd5\u914d\u5907\u4e86\u4f7f\u8ba1\u5212\u9002\u5e94\u672a\u77e5\u6848\u4f8b\u5e76\u9010\u6b65\u589e\u52a0\u5176\u8986\u76d6\u8303\u56f4\u7684\u673a\u5236[91]\u3002\u53e6\u4e00\u65b9\u9762\uff0c*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\u53ef\u4ee5\u4ece\u90e8\u5206\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece*\u7a7a\u7684*\u5e7f\u4e49\u8ba1\u5212\u5f00\u59cb\u3002\u8fd9\u8868\u660e\u7f29\u5c0f\u641c\u7d22\u7a7a\u95f4\u548c/\u6216\u96c6\u4e2d\u641c\u7d22\u8fc7\u7a0b\u5f88\u6709\u7528\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u89e3\u51b3\u66f4\u5177\u6311\u6218\u6027\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1[83\uff0c84]\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u56de\u987e\u91cd\u7528\u5148\u524d\u627e\u5230\u7684\u8ba1\u5212\u7684\u4e0d\u540c\u6280\u672f\uff1a \u2022 \u7f16\u8bd1\u3002*\u5f53\u73b0\u6709\u7684\u5e7f\u4e49\u8ba1\u5212\u5177\u6709\u5e7f\u4e49\u7b56\u7565\u7684\u5f62\u5f0f\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u7f16\u8bd1\u4e3a\u4e00\u7ec4PDDL\u6d3e\u751f\u7684\u8c13\u8bcd\uff0c\u7b56\u7565\u4e2d\u7684\u6bcf\u4e2a\u89c4\u5219\u90fd\u5305\u542b\u4e00\u4e2a\u8c13\u8bcd\uff0c\u8be5\u8c13\u8bcd\u6355\u83b7\u5e94\u91c7\u53d6\u884c\u52a8\u7684\u4e0d\u540c\u60c5\u51b5[45]\u3002\u56fe13\u8bf4\u660e\u4e86\u6b64\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u663e\u793a\u4e86PDDL\u6d3e\u751f\u8c13\u8bcd\u7684\u793a\u4f8b\uff0c\u8be5\u8c13\u8bcd\u8868\u793a\u7528\u4e8e\u5806\u53e0\u5854\u5f0f\u5854\u76842\u89c4\u5219\u7b56\u7565\u3002\u6211\u4eec\u8fd8\u89e3\u91ca\u8bf4\uff0c\u901a\u8fc7**We also explained that existinggeneralized plans in the form of programs, FSCs or AND/OR graphs, canbe encoded into a classical PDDL planning task by computing the crossproduct between the corresponding automata and the original planningtask [^7, 83, 77]\u8ba1\u7b97\u76f8\u5e94\u81ea\u52a8\u673a\u4e0e\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e4b\u95f4\u7684\u53c9\u79ef\uff0c\u53ef\u4ee5\u5c06\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u5f62\u5f0f\u7684\u73b0\u6709\u5e7f\u4e49\u8ba1\u5212\u7f16\u7801\u4e3a\u7ecf\u5178PDDL\u8ba1\u5212\u4efb\u52a1* \u3002[7\uff0c83\uff0c77] \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u989d\u5916\u72b6\u6001\u53d8\u91cf\u5c06\u6dfb\u52a0\u5230\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u4ee5\u8868\u793a\u4e0e\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u76f8\u5bf9\u5e94\u7684\u81ea\u52a8\u673a\u7684\u72b6\u6001\u548c\u8f6c\u6362\u3002 \u2022 *\u8ba1\u5212\u884c\u52a8*\u7ecf\u5178\u8ba1\u5212\u4e2d\u7684\u52a8\u4f5c\u4e0d\u4ec5\u4ee3\u8868\u539f\u59cb\u52a8\u4f5c\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4ee3\u8868\u5e7f\u4e49\u8ba1\u5212\u672c\u8eab\u3002\u56fe20\u663e\u793a\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684\u8ba1\u5212\u52a8\u4f5c\uff0c\u8be5\u52a8\u4f5c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u901a\u7528\u8ba1\u5212\uff0c\u8be5\u901a\u7528\u8ba1\u5212\u7528\u4e8e\u5c06\u4e00\u4e2ablockworld\u4e2d\u7684\u4efb\u4f55block\u5806\u53e0\u8d77\u6765\uff0c\u5373\u89e3\u51b3\u4efb\u4f55blockworld\u5b9e\u4f8b\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u7b2c\u4e00\u6b65\u3002 \u8ba1\u7b97\u5b8f\u52a8\u4f5c \u00b6 *\u5b8f\u89c2\u884c\u52a8*\u662f\u8ba1\u7b97\u6709\u6548\u89e3\u51b3\u4e0d\u540c\u8ba1\u5212\u4efb\u52a1\u7684\u5e38\u8bc6\u7684\u6700\u65e9\u5efa\u8bae\u4e4b\u4e00[25]\u3002\u6587\u732e\u4e2d\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u7528\u4e8e\u8ba1\u7b97\u5b8f\u52a8\u4f5c[12\uff0c18\uff0c47\uff0c13]\uff0c\u4f46\u662f\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\uff1a \uff081\uff09\u89e3\u51b3\u4e00\u7ec4\u7ecf\u5178\u89c4\u5212\u5b9e\u4f8b\u7684\u8bad\u7ec3\u96c6\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5171\u4eab\u76f8\u540c\u7684\u9886\u57df\u7406\u8bba\uff0c\u4f46\u73b0\u6210\u7684\u7ecf\u5178\u8ba1\u5212\u7a0b\u5e8f\u548c \uff082\uff09\u5728\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u4e2d\u786e\u5b9a\u7ecf\u5e38\u4e00\u8d77\u4f7f\u7528\u7684\u52a8\u4f5c\u7684\u5b50\u5e8f\u5217\u3002 \u5b8f\u52a8\u4f5c\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u4eec\u5177\u6709\u6807\u51c6\u7ecf\u5178\u8ba1\u5212\u52a8\u4f5c\u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5b83\u4eec\u76f4\u63a5\u6dfb\u52a0\u5230\u57df\u7406\u8bba\u4e2d\uff0c\u800c\u65e0\u9700\u989d\u5916\u7684\u72b6\u6001\u53d8\u91cf\u3002\u8fd9\u4f7f*\u5b8f\u52a8\u4f5c*\u6210\u4e3a\u91cd\u7528\u4e00\u822c\u8ba1\u5212\u77e5\u8bc6\u7684\u5b9e\u7528\u800c\u5f3a\u5927\u7684\u65b9\u6cd5\uff1a\u4e00\u65b9\u9762\uff0c\u4f7f\u7528\u5b8f\u52a8\u4f5c\u8fdb\u884c\u8ba1\u5212\u6216\u6267\u884c\u548c\u9a8c\u8bc1\u5305\u542b\u5b8f\u52a8\u4f5c\u7684\u8ba1\u5212\u90fd\u4e0d\u9700\u8981\u7279\u5b9a\u7684\u7b97\u6cd5\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6dfb\u52a0\u4e0d\u5b8c\u6574\u6216\u4e0d\u6b63\u786e\u7684\u5b8f\u64cd\u4f5c\u5c06\u4e0d\u4f1a\u963b\u6b62\u8ba1\u5212\u8005\u627e\u5230\u53ef\u89e3\u51b3\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u8ba1\u5212\u8005\u603b\u662f\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u64cd\u4f5c\u6765\u6784\u5efa\u89e3\u51b3\u65b9\u6848\u3002 \u5b9a\u4e49\u603b\u4f53\u8ba1\u5212\u7b56\u7565\u7684\u5b8f\u52a8\u4f5c\u7684\u4e3b\u8981\u9650\u5236\u662f\u5176\u987a\u5e8f\u6267\u884c\u6d41\u7a0b\uff0c\u8be5\u6d41\u7a0b\u8fc7\u4e8e\u4e25\u683c\u3002\u5373\u4f7f\u5c06\u5b8f\u64cd\u4f5c\u53c2\u6570\u5316\uff0c\u6d89\u53ca\u5b8f\u7684\u89e3\u51b3\u65b9\u6848\u4e5f\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u5176\u4ed6\u95ee\u9898\u3002 \u8ba1\u7b97\u5e7f\u4e49\u7b56\u7565 \u00b6 *\u5e7f\u4e49\u7b56\u7565*\u662f\u4e00\u7ec4\u89c4\u5219\uff0c\u5b83\u5b9a\u4e49\u72b6\u6001\u548c\u76ee\u6807\u7684\u6620\u5c04\uff0c\u6210\u4f18\u9009*\u52a8\u4f5c\u63a5\u4e0b\u6765\u8981\u6267\u884c\u3002*\u50cf\u5b8f\u52a8\u4f5c\u4e00\u6837\uff0c\u5e7f\u4e49\u7b56\u7565\u4e5f\u5141\u8bb8\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ece\u5171\u4eab\u76f8\u540c\u57df\u7406\u8bba\u7684\u7ecf\u5178\u89c4\u5212\u5b9e\u4f8b\u7684\u4e00\u7ec4\u89e3\u51b3\u65b9\u6848\u4e2d\u5f97\u51fa 18 19 20 \u3002\u4f46\u662f\uff0c\u901a\u7528\u7b56\u7565\u6bd4\u5b8f\u52a8\u4f5c\u66f4\u7075\u6d3b\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5e26\u6709\u5206\u652f\u548c\u5faa\u73af\u7684\u6267\u884c\u6d41\u3002 \u8ba1\u7b97\u6709\u9650\u72b6\u6001\u63a7\u5236\u5668 \u00b6 \u6709\u9650\u72b6\u6001\u63a7\u5236\u5668 \uff08FSC\uff09\u53ef\u4ee5\u7528\u6709\u9650\u6570\u91cf\u7684\u5185\u5b58\u6765\u6cdb\u5316\u7b56\u7565 21 \u3002\u5177\u6709\u5355\u4e00\u72b6\u6001\u7684FSC\u8868\u793a\u7b56\u7565\uff0c\u5373\u65e0\u5185\u5b58\u63a7\u5236\u5668\u3002FSC\u7684\u9644\u52a0\u63a7\u5236\u5668\u72b6\u6001\u4e3a\u5b83\u4eec\u63d0\u4f9b\u4e86\u5185\u5b58\uff0c\u5141\u8bb8\u5728\u7ed9\u5b9a\u76f8\u540c\u89c2\u5bdf\u503c\u7684\u60c5\u51b5\u4e0b\u91c7\u53d6\u4e0d\u540c\u7684\u64cd\u4f5c\u3002FSC\u5f62\u5f0f\u4e3b\u4e49\u4e5f\u53ef\u4ee5\u901a\u8fc7*\u8c03\u7528\u5806\u6808*\u8fdb\u884c\u6269\u5c55\uff0c\u4ee5\u8868\u793a\u5206\u5c42\u548c\u9012\u5f52\u89e3\u51b3\u65b9\u6848 9 \u3002 \u73b0\u6709\u7684\u7528\u4e8e\u8ba1\u7b97\u7528\u4e8e\u5e7f\u4e49\u89c4\u5212\u7684FSC\u7684\u7b97\u6cd5\u9075\u5faa*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u5bf9FSC \u8fdb\u884c*\u7f16\u7a0b*\u4e0e\u9a8c\u8bc1\u76f8\u4ea4\u9519\uff0c\u56e0\u6b64\u5b83\u4eec\u7d27\u5bc6\u5730\u96c6\u6210\u4e86\u89c4\u5212\u548c\u5f52\u7eb3\u3002\u4e3a\u4e86\u4f7fFSC\u7684\u8ba1\u7b97\u6613\u4e8e\u5904\u7406\uff0c\u5b83\u4eec\u9650\u5236\u4e86\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u7684\u7a7a\u95f4\uff0c\u4ece\u800c\u9650\u5236\u4e86FSC\u7684\u6700\u5927\u5927\u5c0f\u3002\u53e6\u5916\uff0c\u4ed6\u4eec\u5f3a\u52a0\u5b9e\u4f8b\u6765\u89e3\u51b3\u5171\u4eab\u95ee\u9898\uff0c\u4e0d\u4ec5\u662f\u9886\u57df\u7406\u8bba\uff08\u52a8\u4f5c\u548c\u8c13\u8bcd\u65b9\u6848\uff09\uff0c\u800c\u4e14\u662f\u6d41\u5229\u7684\u96c6\u5408 8 \u6216*\u53ef\u89c2\u5bdf*\u6d41\u5229\u7684\u5b50\u96c6 13 \u3002 \u7528\u4e8e\u5e7f\u4e49\u8ba1\u5212\u7684FSC\u7684\u8ba1\u7b97\u5305\u62ec\u5c06\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7f16\u8bd1\u4e3a\u53e6\u4e00\u79cd\u95ee\u9898\u89e3\u51b3\u5f62\u5f0f\u7684\u5de5\u4f5c\uff0c\u56e0\u6b64\u5b83\u4eec\u5c06\u4ece\u73b0\u6210\u6c42\u89e3\u5668\u7684\u6700\u65b0\u8fdb\u5c55\u4e2d\u53d7\u76ca\uff08\u4f8b\u5982\uff0c \u7ecf\u5178\u8ba1\u5212 8 \uff0c \u4e00\u81f4\u8ba1\u5212 13 \uff0c CSP 14 \u6216*Prolog\u7a0b\u5e8f* 15 \uff09\u3002\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u9700\u8981FSC\u7684\u884c\u4e3a\u89c4\u8303\uff0c\u8be5\u89c4\u8303\u5305\u62ec\u4ee5\u4e0b\u5206\u7c7b\u7684\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff1a\uff081\uff09\u63a5\u53d7\u6240\u6709\u5bfc\u81f4\u76ee\u6807\u8fbe\u5230\u6ee1\u610f\u72b6\u6001\u7684\u5408\u6cd5\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff1b\uff082\uff09\u62d2\u7edd\u5305\u542b\u91cd\u590d\u914d\u7f6e\u7684\u4e8b\u4ef6\u6267\u884c\u5386\u53f2\uff08\u8868\u660e\u65e0\u9650\u5faa\u73af\uff09\uff0c\u5e76\u4e14\u65e0\u6cd5\u6269\u5c55\uff08\u6307\u793a\u6b7b\u89d2\uff09[43]\u3002 \u8ba1\u7b97\u7a0b\u5e8f \u00b6 \u7a0b\u5e8f\u63d0\u9ad8\u4e86FSC\u7684\u53ef\u8bfb\u6027\uff0c\u5b83\u4eec\u5c06\u63a7\u5236\u6d41\u7ed3\u6784\u4e0e\u539f\u59cb\u52a8\u4f5c\u5206\u5f00\u3002\u50cfFSC\u4e00\u6837\uff0c\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u6309\u7167*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\u8fdb\u884c\u8ba1\u7b97\uff0c\u4f8b\u5982\uff0c\u5229\u7528\u5bf9\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u76f8\u540c\u7684\u5b9e\u4f8b\u8fdb\u884c\u7f16\u7a0b\u5e76\u9a8c\u8bc1\u7a0b\u5e8f\u7684\u7f16\u8bd1 8 \u3002 DSPlanners 4 5 \u662f\u5c06\u7a0b\u5e8f\u6982\u62ec\u4e3a\u8ba1\u5212\u7684\u6700\u65e9\u5c1d\u8bd5\u4e4b\u4e00\u3002\u4e00\u4e2a*DSPlanner* \u662f\u53ef\u4ee5\u5305\u542b\u7684if-then-else\u548cwhile\u7ed3\u6784\u57df\u7684\u5177\u4f53\u65b9\u6848\u3002\u8fd9\u4e9b\u6784\u9020\u6839\u636e\u5173\u4e8e\u5f53\u524d\u72b6\u6001\u548c/\u6216\u8ba1\u5212\u4efb\u52a1\u76ee\u6807\u7684FOL\u67e5\u8be2\u5206\u652f\u548c\u5faa\u73af\u7a0b\u5e8f\u7684\u6267\u884c\u63a7\u5236\u6d41\u3002 \u8be5\u7b97\u6cd5\u8ba1\u7b97DSPlanners\u88ab\u79f0\u4e3a\u63d0\u70bc\u5e76\u5b9e\u73b0\u4e86\u4e00\u79cd*\u81ea\u4e0b\u800c\u4e0a*\u7684\u4e00\u7ec4\u5171\u4eab\u540c\u4e00\u4e2a\u57df\u7406\u8bba\u53e4\u5178\u7684\u89c4\u5212\u5b9e\u4f8b\u7684\u65b9\u6cd5\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u63d0\u70bc\u8ba1\u7b97\u8be5\u5b9e\u4f8b\u5e76\u6574\u5408\u5176\u90e8\u5206\u6709\u5e8f\u89c4\u5212\u5230\u73b0\u6709DSPlanner\u5982\u4e0b\u3002\u9996\u5148\uff0cDistill \u63d0\u8d77\u90e8\u5206\u8ba2\u8d2d\u7684\u8ba1\u5212\uff0c\u9009\u62e9\u4e0e\u73b0\u6709DSPlanner \u76f8\u5339\u914d\u7684\u53c2\u6570\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u53c2\u6570\u5316\uff0c\u5219Distill \u5c06\u53d8\u91cf\u540d\u79f0\u968f\u673a\u5206\u914d\u7ed9\u8ba1\u5212\u4e2d\u7684\u5bf9\u8c61\u3002\u7136\u540eDistill \u5c1d\u8bd5\u786e\u5b9a*\u8bed\u53e5*\u548c\u5c55\u5f00\u7684*\u5faa\u73af\u8fed\u4ee3* \u89e3\u51b3\u65b9\u6848\u4e2d\u5c06\u5176\u66ff\u6362\u4e3a\u76f8\u5e94\u7684\u63a7\u5236\u6d41\u7ed3\u6784\u3002 Srivastava\u7b49\u4eba\u5728\u5e7f\u4e49\u89c4\u5212\u65b9\u9762\u7684\u5de5\u4f5c\u3002\u5728\u7a0b\u5e8f\u4e2d\u5f15\u5165\u4e86\u4e00\u79cd\u5f3a\u5927\u800c\u7d27\u51d1\u7684\u7ed3\u6784\uff0c\u79f0\u4e3a*\u9009\u62e9\u52a8\u4f5c\uff0c*\u8be5\u7ed3\u6784\u5c06\u5b58\u5728\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7ed3\u5408\u5728\u4e00\u8d77 22 23 \u3002\u8fd9\u9879\u5de5\u4f5c\u4e2d\u7684\u8f93\u5165\u5b9e\u4f8b\u88ab\u8868\u793a\u4e3a\u5e26\u6709\u4f20\u9012\u95ed\u5305\u7684\u62bd\u8c61FOL\u8868\u793a\u5f62\u5f0f\u3002\u8fd9\u79cd\u5f62\u5f0f\u4e3b\u4e49\u5141\u8bb8\u7528\u65e0\u9650\u591a\u4e2a\u5bf9\u8c61\u6765\u8868\u793a\u8ba1\u5212\u4efb\u52a1\uff0c\u5e76\u4fdd\u8bc1\u6b64\u7c7b\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u5177\u6709\u666e\u904d\u6027\u3002 Srivastava\u7b49\u4eba\u7684\u5e7f\u4e49\u89c4\u5212\u7b97\u6cd5\u3002\u5b9e\u65bd*\u81ea\u4e0b\u800c\u4e0a\u7684*\u7b56\u7565\u3002\u8be5\u7b97\u6cd5\u4ece\u4e00\u4e2a\u7a7a\u7684\u5e7f\u4e49\u8ba1\u5212\u5f00\u59cb\uff0c\u7136\u540e\u901a\u8fc7\u8bc6\u522b\u5b83\u65e0\u6cd5\u89e3\u51b3\u7684\u5b9e\u4f8b\uff0c\u8c03\u7528\u7ecf\u5178\u8ba1\u5212\u5668\u6765\u89e3\u51b3\u8be5\u5b9e\u4f8b\uff0c\u5c06\u83b7\u5f97\u7684\u89e3\u51b3\u65b9\u6848\u5f52\u7eb3\u5e76\u5c06\u5176\u5408\u5e76\u56de\u5e7f\u4e49\u8ba1\u5212\u4e2d\uff0c\u4ece\u800c\u9010\u6b65\u589e\u52a0\u5176\u8986\u76d6\u8303\u56f4\u3002\u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u76f4\u5230\u751f\u6210\u4e00\u4e2a\u6db5\u76d6\u6574\u4e2a\u671f\u671b\u7c7b\u5b9e\u4f8b\u7684\u5e7f\u4e49\u8ba1\u5212\uff08\u6216\u8fbe\u5230\u8ba1\u7b97\u8d44\u6e90\u7684\u9884\u5b9a\u4e49\u9650\u5236\u65f6\uff09\u3002 \u7a0b\u5e8f\u548cFSC\u90fd\u53ef\u4ee5\u7f16\u5165\u5e73\u9762\u9886\u57df\u7406\u8bba 7 8 9 \u3002\u5c31\u50cf\u653f\u7b56\u4e00\u6837\uff0c\u5f53\u7ed9\u5b9a\u7a0b\u5e8f\uff08\u6216FSC\uff09\u6b63\u786e\u65f6\uff0c\u8fd9\u79cd\u7f16\u8bd1\u662f*\u5b89\u5168\u7684*\uff08\u4e0d\u4f1a\u5c06\u53ef\u89e3\u51b3\u7684\u8ba1\u5212\u5b9e\u4f8b\u8f6c\u5316\u4e3a\u4e0d\u53ef\u89e3\u51b3\u7684\uff09\u3002 \u88681\u603b\u7ed3\u4e86\u4e00\u822c\u8ba1\u5212\u7684\u5df2\u5ba1\u67e5\u65b9\u6cd5\u3002\u8be5\u8868\u6307\u793a\u7ed9\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\u8868\u793a\u5f62\u5f0f\u662f\u5426\u5141\u8bb8\u4f7f\u7528 \u53d8\u91cf \uff0c**\u63a7\u5236\u6d41\u7684\u7c7b\u578b**\u4ee5\u53ca\u89e3\u51b3\u65b9\u6848\u7684**\u6267\u884c**\u662f\u5426\u9700\u8981\u7279\u5b9a\u7684\u673a\u5236\u3002 \u6839\u636e\u89e3\u7684\u8868\u793a\u65b9\u6cd5\u5206\u7c7bSummary of the diverse approaches for generalized planning \u00b6 according to the solution representations\uff1a Variables Control-flow Execution Classical plan ------ ------ Ground actions Macro-Actions Action parameters ------ Lifted actions Generalized Policy Rule parameters Branching and loops Lifted rules DSPlanners Existential Branching and loops Lifted predicatesand lifted actions FSCs Quantified Branching and loops Derived predicates Hierarchical FSCs Quantified and parameters Branching, loops and call stack Derived predicates and Parameter passing Programs Quantified and parameters Branching, loops and call stack Derived predicates and Parameter passing \u90e8\u5206\u53ef\u89c2\u5bdf\u6027\u4e0b\u7684\u8ba1\u5212\uff1a\u4e00\u81f4\uff0c\u5076\u7136\u548cPOMDP\u8ba1\u5212 \u00b6 *\u7b26\u5408\u8ba1\u5212*\u53ef\u8ba1\u7b97\u4e00\u7cfb\u5217\u4e0e\u4e0d\u540c\u521d\u59cb\u72b6\u6001\u4e00\u81f4\u7684\u52a8\u4f5c\u5e8f\u5217[69]\u3002\u4e0e\u7ecf\u5178\u8ba1\u5212\u6a21\u578b\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u521d\u59cb\u72b6\u6001\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u8fd9\u901a\u8fc7\u6761\u6b3e\u6765\u63cf\u8ff0\u3002\u4e00\u4e2a*\u7b26\u5408\u7684\u8ba1\u5212*\u662f\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\uff0c\u89e3\u51b3\u4e86\u5168\u90e8\u7531\u4e00\u5957\u6ee1\u8db3\u8fd9\u4e9b\u6761\u6b3e\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u7ed9\u51fa\u4e86\u7ecf\u5178\u89c4\u5212\u4efb\u52a1\u3002\u56e0\u4e3a\u52a8\u4f5c\u5177\u6709\u6761\u4ef6\u5f71\u54cd\uff0c\u6240\u4ee5\u6267\u884c\u76f8\u540c\u52a8\u4f5c\u5e8f\u5217\u53ef\u4ee5\u4e3a\u4e0d\u540c\u7684\u521d\u59cb\u72b6\u6001\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u7b26\u5408\u8ba1\u5212\u7684\u4e3b\u8981\u65b9\u6cd5\u662f\uff1a \u2022 *\u51cf\u5c11\u4e0d\u786e\u5b9a\u6027\u3002*\u5c06\u7b26\u5408\u8ba1\u5212\u7f16\u5236\u4e3a\u7ecf\u5178\u8ba1\u5212\u4ee5\u8fdb\u884c\u8ba1\u7b97\uff1a \\1. \u6d88\u9664\u6240\u6709\u76f8\u5173\u4e0d\u786e\u5b9a\u6027\u7684\u8ba1\u5212*\u524d\u7f00*\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u524d\u7f00\u5e94\u7528\u4e4b\u540e\uff0c\u53ea\u6709\u4e00\u4e2a\u72b6\u6001\uff08\u6216\u4e0e\u5b9e\u73b0\u76ee\u6807\u76f8\u5173\u7684\u72b6\u6001\u53d8\u91cf\u5b50\u96c6\u7684\u81f3\u5c11\u4e00\u4e2a\u5c40\u90e8\u72b6\u6001\uff09\u662f\u53ef\u80fd\u7684[69]\u3002 2.\u8ba1\u5212*\u540e\u7f00*\uff0c\u8be5*\u540e\u7f00*\u5c06\u72b6\u6001\uff08\u6216\u90e8\u5206\u72b6\u6001\uff09\uff08\u5df2\u6d88\u9664\u76f8\u5173\u4e0d\u786e\u5b9a\u6027\u7684\u72b6\u6001\uff09\u8f6c\u6362\u4e3a\u5b9e\u73b0\u4e00\u81f4\u8ba1\u5212\u4efb\u52a1\u76ee\u6807\u7684\u72b6\u6001\u3002 \u2022 \u4fe1\u4ef0\u4f20\u64ad\u3002*\u5728\u4fe1\u5ff5\u72b6\u6001\u7a7a\u95f4\u4e2d\u641c\u7d22\uff0c\u5176\u4e2d\uff1a *\u6839*\u4fe1\u5ff5\u72b6\u6001\u8868\u793a\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u7684\u96c6\u5408\uff0c*\u76ee\u6807 \u662f\u4fe1\u5ff5\u72b6\u6001st\uff0c\u4fe1\u5ff5\u72b6\u6001\u4e2d\u7684\u6240\u6709\u53ef\u80fd\u72b6\u6001\u90fd\u6ee1\u8db3\u8ba1\u5212\u4efb\u52a1\u7684\u76ee\u6807\u6761\u4ef6[39\uff0c15] \u3002\u5c3d\u7ba1\u5148\u524d\u7684\u65b9\u6cd5\u5229\u7528\u4e86\u7ecf\u5178\u7684\u8ba1\u5212\u673a\u5236\uff0c\u4f46\u6b64\u65b9\u6cd5\u9700\u8981\uff081\uff09\u7d27\u51d1\u8868\u793a\u548c\u66f4\u65b0\u4fe1\u5ff5\u72b6\u6001\u7684\u673a\u5236\uff0c\u4ee5\u53ca\uff082\uff09\u6709\u6548\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u6765\u6307\u5bfc\u5728\u4fe1\u5ff5\u72b6\u6001\u7a7a\u95f4\u4e2d\u8fdb\u884c\u641c\u7d22\u3002 *\u5076\u7136\u6027\u8ba1\u5212*\u901a\u8fc7\u611f\u77e5\u6a21\u578b\u6269\u5c55\u4e86\u4e00\u81f4\u7684\u8ba1\u5212\u6a21\u578b\u3002\u8be5\u611f\u6d4b\u6a21\u578b\u662f\u4e00\u79cd\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u72b6\u6001\u64cd\u4f5c\u5bf9\uff08\u7cfb\u7edf\u7684\u771f\u5b9e\u72b6\u6001\u548c\u6700\u540e\u5b8c\u6210\u7684\u64cd\u4f5c\uff09\u6620\u5c04\u5230\u4e00\u7ec4\u975e\u7a7a\u7684\u89c2\u5bdf\u503c\u4e2d[1\uff0c2]\u3002\u89c2\u5bdf\u4ec5\u63d0\u4f9b\u6709\u5173\u7cfb\u7edf\u771f\u5b9e\u72b6\u6001\u7684\u90e8\u5206\u4fe1\u606f\uff0c\u56e0\u4e3a\u76f8\u540c\u7684\u89c2\u5bdf\u53ef\u80fd\u5904\u4e8e\u4e0d\u540c\u7684\u72b6\u6001\u3002\u4e00\u4e2a*\u5076\u7136\u7684\u8ba1\u5212*\u5fc5\u987b\u6ee1\u8db3\uff1a \u2022\u5b83\u7684\u6267\u884c\u4ee5\u6709\u9650\u7684\u6b65\u9aa4\u8fbe\u5230\u76ee\u6807\u4fe1\u5ff5\u72b6\u6001\uff08\u4fe1\u5ff5\u4e2d\u7684\u6240\u6709\u72b6\u6001\u90fd\u6ee1\u8db3\u8ba1\u5212\u4efb\u52a1\u7684\u76ee\u6807\u6761\u4ef6\uff09\u3002 \u2022\u5206\u652f\u548c\u5faa\u73af\u7684\u6761\u4ef6\u662f\u6307\u89c2\u5bdf\u503c\uff08\u6216\u53ef\u89c2\u5bdf\u5230\u7684\u72b6\u6001\u53d8\u91cf\u7684\u5b50\u96c6\uff09\u3002 \u50cf\u5e7f\u4e49\u8ba1\u5212\u4e00\u6837\uff0c\u6216\u6709\u8ba1\u5212\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u4f8b\u5982\u7b56\u7565\uff0cAND / OR\u56fe\uff0cFSC\u6216\u7a0b\u5e8f[10]\u3002 *POMDP\u89c4\u5212*\u6269\u5c55\u4e86\u5076\u7136\u6027\u89c4\u5212\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5141\u8bb8\u901a\u8fc7\u6982\u7387\u5206\u5e03\u5bf9\u4e0d\u786e\u5b9a\u6027\u8fdb\u884c\u7f16\u7801\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u96c6\u548c\u53ef\u80fd\u7684\u89c2\u5bdf\u503c\u96c6[32]\u3002\u5c31\u8fd9\u4e00\u70b9\u800c\u8a00\uff0c *\u8d1d\u53f6\u65af*\u89c4\u5219\u7528\u4e8e\u5728\u52a8\u4f5c\u5e94\u7528\u4e4b\u540e\u6216\u89c2\u5bdf\u5f53\u524d\u72b6\u6001\u4e4b\u540e\u66f4\u65b0\u4fe1\u5ff5\u72b6\u6001\u3002POMDP\u89e3\u51b3\u65b9\u6848\u7684\u76ee\u7684\u662f\u4f7f\u76ee\u6807\u7684\u9884\u671f\u6210\u672c\u6700\u5927\u5316\uff0c\u56e0\u6b64POMDP\u89c4\u5212\u6210\u4e3a\u4f18\u5316\u4efb\u52a1\u3002 \u6700\u4f73\u7684\u4e00\u81f4\u6027/\u4e34\u65f6/ POMDP\u8ba1\u5212\u662f\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u5c06\u5b9e\u73b0\u76ee\u6807\u7684\u6210\u672c\u6700\u5c0f\u5316\u7684\u8ba1\u5212\u3002\u5e7f\u4e49\u89c4\u5212\u53ef\u4ee5\u770b\u4f5c\u662f\u7279\u9063\u961f/ POMDP\u89c4\u5212\u7684\u4e00\u4e2a\u7279\u5b9a\u793a\u4f8b\uff0c\u5176\u4e2d\uff1a\uff081\uff09\u8981\u89e3\u51b3\u7684\u5b9e\u4f8b\u5177\u6709\u76f8\u540c\u7684\u76ee\u6807\uff0c\uff082\uff09\u5b9e\u4f8b\u7684\u521d\u59cb\u72b6\u6001\u662f\u4e00\u7ec4\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u4e2d\u7684\u4e00\u4e2a\u72b6\u6001\u3002 \uff083\uff09\u6709\u5145\u5206\u7684\u53ef\u89c2\u5bdf\u6027\uff0c\u56e0\u6b64\u5206\u652f\u548c\u5faa\u73af\u7684\u6761\u4ef6\u53ef\u4ee5\u5f15\u7528\u4efb\u4f55\u72b6\u6001\u53d8\u91cf\u7684\u503c\u3002 6.2\u5177\u6709\u63a7\u5236\u77e5\u8bc6\u7684\u8ba1\u5212 \u00b6 \u81ea\u4ece\u8ba1\u5212\u7814\u7a76\u5f00\u59cb\u4ee5\u6765\uff0c*\u63a7\u5236\u77e5\u8bc6*\u5df2\u663e\u793a\u51fa\u6709\u6548\u7684\u65b9\u6cd5\u6765\u63d0\u9ad8\u8ba1\u5212\u8005\u7684\u53ef\u6269\u5c55\u6027[5\uff0c66]\u3002IPC-2002\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\uff0c\u5728\u8be5\u8ba1\u5212\u4e2d\uff0c\u5229\u7528**\u9886\u57df\u7279\u5b9a\u63a7\u5236\u77e5\u8bc6\uff08DCK\uff09**\u7684\u8ba1\u5212\u8005\u6bd4\u6700\u65b0\u7684\u8ba1\u5212\u8005\u8981\u5feb\u51e0\u4e2a\u6570\u91cf\u7ea7[54]\u3002 DCK [7]\u7684\u7c7b\u4f3c\u4e8e\u7b97\u6cd5\u7684\u8868\u793a\u5f62\u5f0f\u4e0e\u5e7f\u4e49\u8ba1\u5212\u975e\u5e38\u76f8\u4f3c\u3002\u5b9e\u9645\u4e0a\uff0cDCK\u548c\u5e7f\u4e49\u8ba1\u5212\u90fd\u4ee3\u8868\u4e86\u9002\u7528\u4e8e\u89e3\u51b3\u4e0d\u540c\u8ba1\u5212\u5b9e\u4f8b\u7684\u901a\u7528\u7b56\u7565\u3002\u5c3d\u7ba1\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u5f88\u5c0f\uff0c\u4f46\u53ef\u4ee5\u58f0\u79f0\u5e7f\u4e49\u8ba1\u5212\u662f\u4e00\u79cd*\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c \u4e0d\u9700\u8981\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u5e94\u7528\u8ba1\u5212\u7a0b\u5e8f\u3002\u53e6\u4e00\u65b9\u9762\uff0cDCK\u5bf9\u5e94\u4e8e*\u90e8\u5206\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848 \uff08\u5305\u542b\u975e\u786e\u5b9a\u6027\u6784\u9020\u548c\u8ba1\u5212\u8005\u5728\u751f\u6210\u8ba1\u5212\u65f6\u8981\u786e\u5b9a\u7684\u7f3a\u5931/\u672a\u5b8c\u6210\u90e8\u5206\uff09\u3002\u56e0\u6b64\uff0cDCK\u8981\u6c42\u8ba1\u5212\u4eba\u5458\u9488\u5bf9\u7ed9\u5b9a\u7684\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u63d0\u4f9b**\u5b8c\u5168\u6307\u5b9a\u7684**\u89e3\u51b3\u65b9\u6848\u3002 \u5b9a\u4e49DCK\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u5df2\u89e3\u51b3\u5b9e\u4f8b\u7684\u6570\u636e\u5e93\u3002 \u5b9e\u9645\u4e0a\uff0c\u5e7f\u4e49\u8ba1\u5212\u7684\u53e6\u4e00\u79cd\u89c2\u70b9\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7d27\u51d1\u7684\u8ba1\u5212\u5e93\u3002 \u57fa\u4e8e\u6848\u4f8b\u7684\u8ba1\u5212 \uff08CBP\uff09\u662f\u4e00\u79cd\u81ea\u52a8\u5316\u8ba1\u5212\u7684\u65b9\u6cd5\uff0c\u65e8\u5728\u901a\u8fc7\u91cd\u7528\u4ee5\u524d\u627e\u5230\u7684\u89e3\u51b3\u65b9\u6848\u6765\u8282\u7701\u8ba1\u7b97\u91cf[11]\u3002 CBP\u7cfb\u7edf\u5b9e\u73b0\u4e86\u8bc6\u522b\u4e0e\u8981\u89e3\u51b3\u7684\u5b9e\u4f8b\u76f8\u4f3c\u7684\u5b9e\u4f8b\u7684*\u68c0\u7d22*\u673a\u5236\uff0c\u4ee5\u53ca\u4fee\u590d\u4e86\u6240\u68c0\u7d22\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u7f3a\u9677\u4ee5\u4f7f\u5176\u9002\u7528\u4e8e\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u7684*\u9002\u5e94*\u673a\u5236\u3002CBP\u7684\u68c0\u7d22\u548c\u9002\u5e94\u673a\u5236\u4e0e*\u81ea\u4e0b\u800c\u4e0a*\u6709\u5173\u5e7f\u4e49\u89c4\u5212\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u8bc6\u522b\u7ed9\u5b9a\u7684\u5e7f\u4e49\u89c4\u5212\u4f55\u65f6\u4e0d\u8986\u76d6\u5b9e\u4f8b\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u8c03\u6574\u4ee5\u8986\u76d6\u5b9e\u4f8b[97\uff0c90]\u3002\u9075\u5faa\u72ec\u7acb\u4e8e\u57df\u7684\u65b9\u6cd5\u4e3a\u5927\u578b\u6848\u4f8b\u5e93\u5f00\u53d1\u6b64\u7c7b\u673a\u5236\u4ecd\u7136\u662f\u4e00\u4e2a\u6311\u6218\u3002 \u8868\u793a\u548c\u5229\u7528DCK\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\u4e3b\u4e49\u662f***\u5206\u5c42\u8ba1\u5212***\u3002\u4e0e\u7ecf\u5178\u8ba1\u5212\u4e00\u6837\uff0c\u5206\u5c42\u8ba1\u5212\u5904\u7406\u786e\u5b9a\u6027\u548c\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u4f46\u4f7f\u7528\u4e0d\u540c\u7684\u4efb\u52a1\u8868\u793a\u5f62\u5f0f\u3002\u5728\u4f20\u7edf\u7684\u8ba1\u5212\u884c\u52a8\u4e2d\uff0c\u5176\u52a8\u4f5c\u7684\u524d\u63d0\u6761\u4ef6\u662f\u540e\u7ee7\u6761\u4ef6\uff0c\u800c\u8ba1\u5212\u8005\u7684\u9009\u62e9\u548c\u6392\u5e8f\u662f\u7531\u8ba1\u5212\u8005\u81ea\u52a8\u8ba1\u7b97\u7684\uff0c\u800c *\u5c42\u7ea7\u8ba1\u5212\u5219*\u6307\u5b9a\u4e86\u89e3\u51b3\u65b9\u6848\u7684\u8349\u56fe\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\uff081\uff09\u8981\u8ffd\u6c42\u7684\u5b50\u76ee\u6807\u7684\u989d\u5916\u4fe1\u606f[87]\uff0c\u548c/\u6216\uff082\uff09\u53ef\u4ee5\u91c7\u53d6\u54ea\u4e9b\u884c\u52a8\u6765\u5b9e\u73b0\u7ed9\u5b9a\u7684\u5b50\u76ee\u6807[66]\u3002 \u5728\u5206\u5c42\u8ba1\u5212\u4e2d\uff0c\u8981\u89e3\u51b3\u7684\u4efb\u52a1\u7684\u8868\u793a\u5f62\u5f0f\u4e0e\u89e3\u51b3\u65b9\u6848\u4e4b\u95f4\u7684\u5206\u79bb\u5e76\u4e0d\u50cf\u4f20\u7edf\u8ba1\u5212\u4e2d\u90a3\u4e48\u6e05\u6670\u3002\u5c42\u6b21\u8ba1\u5212\u4efb\u52a1\u53ef\u4ee5\u7406\u89e3\u4e3a\u90e8\u5206\u6307\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\uff08\u6216\u7279\u5b9a\u4e8e\u9886\u57df\u7684\u8ba1\u5212\u8005\uff09\uff0c\u5176\u4e2d\uff0c\u901a\u8fc7\u8fd0\u884c\u5c42\u6b21\u8ba1\u5212\u5668\u53ef\u4ee5\u786e\u5b9a\u8ba1\u5212\u7684\u7f3a\u5931\u90e8\u5206\u3002\u53e4\u5178\u8ba1\u5212\u8005\u7684\u76ee\u7684\u662f\u8ba1\u7b97\u5c06\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e3a\u76ee\u6807\u72b6\u6001\u7684\u4e00\u7cfb\u5217\u9002\u7528\u52a8\u4f5c\uff0c\u800c\u5206\u7ea7\u8ba1\u5212\u8005\u5219\u8ba1\u7b97\u51fa\u4ee5\u4e0b\u7684\u9002\u7528\u52a8\u4f5c\u7684\u5e8f\u5217\uff1a\uff081\uff09\u5c06\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e3a\u76ee\u6807\u72b6\u6001\uff0c\u4ee5\u53ca\uff082\uff09 \uff0c\u6b64\u8f6c\u6362\u7b26\u5408\u7ed9\u5b9a\u7684\u5c42\u6b21\u7ed3\u6784\u3002 GOLOG \u00b6 \u5728Golog\u7cfb\u5217\u52a8\u4f5c\u8bed\u8a00\u5df2\u88ab\u8bc1\u660e\u662f\u5bf9\u81ea\u4e3b\u4ee3\u7406 24 \u7684\u9ad8\u7ea7\u63a7\u5236\u4e00\u4e2a\u6709\u7528\u7684\u5e73\u5747\u503c\u3002\u9664\u4e86\u6761\u4ef6\uff0c\u5faa\u73af\u548c\u9012\u5f52\u8fc7\u7a0b\u5916\uff0cGolog \u7a0b\u5e8f\u7684\u4e00\u4e2a\u6709\u8da3\u529f\u80fd\u662f\u5b83\u4eec\u53ef\u4ee5\u5305\u542b\u4e0d\u786e\u5b9a\u7684\u90e8\u5206\u3002\u7532\u679c\u6d1b\u7a0b\u5e8f\u4e0d\u9700\u8981\u8868\u793a\u5b8c\u5168\u6307\u660e\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5b83\u7684\u4e00\u4e2a\u8349\u56fe\uff0c\u5176\u4e2d\u975e\u786e\u5b9a\u6027\u90e8\u5206\u662f\u95f4\u9699\u8981\u7531\u7cfb\u7edf\u88ab\u586b\u5145\u3002\u6b64\u529f\u80fd\u4f7fGolog \u7a0b\u5e8f\u5458\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u4ee5\u4e0b\u5404\u9879\u4e4b\u95f4\u9009\u62e9\u5408\u9002\u7684\u5e73\u8861\u70b9\uff1a \u2022\u786e\u5b9a\u9884\u5b9a\u4e49\u7684\u884c\u4e3a\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u8f83\u5927\u7684\u7a0b\u5e8f\u3002 \u2022\u901a\u8fc7\u641c\u7d22\u4fdd\u7559\u7cfb\u7edf\u8981\u89e3\u51b3\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u66f4\u957f\u7684\u8ba1\u7b97\u65f6\u95f4\u3002 \u57fa\u672c\u7684Golog \u89e3\u91ca\u5668\u4f7f\u7528PROLOG\u56de\u6eaf\u673a\u5236\u6765\u89e3\u6790\u641c\u7d22\u3002\u8fd9\u79cd\u673a\u5236\u57fa\u672c\u4e0a\u76f8\u5f53\u4e8e\u76f2\u76ee\u641c\u7d22\uff0c\u56e0\u6b64\uff0c\u5728\u89e3\u51b3\u8ba1\u5212\u4efb\u52a1\u65f6\uff0c\u9664\u4e86\u6700\u5c0f\u7684\u5b9e\u4f8b\u5927\u5c0f\u4e4b\u5916\uff0c\u5b83\u5f88\u5feb\u5c31\u53d8\u5f97\u4e0d\u53ef\u884c\u4e86\u3002IndiGolog [80]\u6269\u5c55\u4e86Golog\uff0c\u4f7f\u5176\u5305\u542b\u8bb8\u591a\u5185\u7f6e\u7684\u8ba1\u5212\u673a\u5236\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u5229\u7528Golog\u548cPDDL\u4e4b\u95f4\u7684\u8bed\u4e49\u517c\u5bb9\u6027 26 \uff0c\u5e76\u4e14\u53ef\u4ee5\u5d4c\u5165PDDL\u89c4\u5212\u5668 27 \u6765\u89e3\u51b3\u672c\u8d28\u4e0a\u662f\u7ec4\u5408\u7684\u5b50\u95ee\u9898\u3002 6.4\u7a0b\u5e8f\u7efc\u5408 \u00b6 \u7a0b\u5e8f\u7efc\u5408\u662f\u81ea\u52a8\u751f\u6210\u6ee1\u8db3\u7ed9\u5b9a\u9ad8\u7ea7\u89c4\u8303\u7684\u7a0b\u5e8f\u7684\u4efb\u52a1\u3002\u8be5\u7814\u7a76\u9886\u57df\u7684\u8bb8\u591a\u60f3\u6cd5\u90fd\u4e0e\u5e7f\u4e49\u89c4\u5212\u6709\u5173\uff0c\u4f46\u662f\u7531\u4e8e\u5e7f\u4e49\u89c4\u5212\u9075\u5faa\u9886\u57df\u65e0\u5173\u7684\u65b9\u6cd5\u5e76\u9488\u5bf9\u72b6\u6001\uff0c\u52a8\u4f5c\u548c\u76ee\u6807\u5904\u7406\u5176\u81ea\u5df1\u7684\u7279\u5b9a\u8868\u793a\u5f62\u5f0f\uff0c\u56e0\u6b64\u5b83\u4eec\u5e76\u4e0d\u7acb\u5373\u9002\u7528\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u56de\u987e\u4e86\u4e24\u79cd\u6700\u6210\u529f\u7684\u7a0b\u5e8f\u7efc\u5408\u65b9\u6cd5\uff1a \u2022 \u793a\u4f8b\u7f16\u7a0b \uff08PbE\uff09\uff0c\u8ba1\u7b97\u4e0e\u4e00\u7ec4\u7ed9\u5b9a\u7684\u8f93\u5165\u8f93\u51fa\u793a\u4f8b\u4e00\u81f4\u7684\u7a0b\u5e8f\u96c6\u3002\u8f93\u5165-\u8f93\u51fa\u793a\u4f8b\u5bf9\u4e8e\u975e\u7a0b\u5e8f\u5458\u6765\u8bf4\u5f88\u76f4\u89c2\uff0c\u53ef\u4ee5\u521b\u5efa\u7a0b\u5e8f\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u89c4\u8303\u4f7f\u7a0b\u5e8f\u7efc\u5408\u6bd4\u5bf9\u62bd\u8c61\u7a0b\u5e8f\u72b6\u6001\u8fdb\u884c\u63a8\u7406\u66f4\u5bb9\u6613\u5904\u7406\u3002PbE\u6280\u672f\u5df2\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u90e8\u7f72\uff0c\u5e76\u4e14\u662fOffice 2013\u4e2dExcel \u7684Flash Fill \u529f\u80fd\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u529f\u80fd\u53ef\u751f\u6210\u7528\u4e8e\u5b57\u7b26\u4e32\u8f6c\u6362\u7684\u7a0b\u5e8f 28 \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u79f0\u4e3a**version space algebras** \u7248\u672c\u7a7a\u95f4\u4ee3\u6570 29 \u7684\u6570\u636e\u7ed3\u6784\u4ee5\u53d7\u9650\u7684\u7279\u5b9a\u9886\u57df\u8bed\u8a00\uff08DSL\uff09\u7b80\u6d01\u5730\u8868\u793a\u4e86\u4e00\u7ec4\u5408\u6210\u7a0b\u5e8f\u3002\u4f7f\u7528\u5b9e\u73b0\u5206\u800c\u6cbb\u4e4b\u65b9\u6cd5\u7684\u7279\u5b9a\u9886\u57df\u641c\u7d22\u6765\u8ba1\u7b97\u7a0b\u5e8f\u3002 \u2022\u5728\u201c \u901a\u8fc7\u8349\u56fe\u8fdb\u884c\u7f16\u7a0b \uff08PbS\uff09\u201d\u4e2d\uff0c\u7a0b\u5e8f\u5458\u63d0\u4f9b\u4e86\u90e8\u5206\u6307\u5b9a\u7684\u7a0b\u5e8f\uff0c\u5373\u8868\u793a\u4e00\u79cd\u5b9e\u73b0\u7684\u9ad8\u7ea7\u7ed3\u6784\u4f46\u7559\u4e0b\u672a\u5b9a\u4e49\u7ec6\u8282\u7684\u4f4e\u7ea7\u7ec6\u8282\u7684\u7a0b\u5e8f\uff0c\u8be5\u7ec6\u8282\u7531\u5408\u6210\u5668\u786e\u5b9a 30 \u3002\u8fd9\u79cd\u5f62\u5f0f\u7684\u7a0b\u5e8f\u7efc\u5408\u4f9d\u9760\u4e00\u79cd\u79f0\u4e3a**SKETCH**\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u7ed8\u5236\u90e8\u5206\u7a0b\u5e8f\u3002PbS\u5728\u7531\u4e24\u4e2a\u901a\u4fe1\u7684SAT\u89e3\u7b97\u5668\uff08\u5f52\u7eb3\u5408\u6210\u5668\u548c\u9a8c\u8bc1\u5668\uff09\u6784\u5efa\u7684\u5408\u6210\u9a8c\u8bc1\u5faa\u73af\u4e0a\u5b9e\u73b0\u4e86\u53cd\u4f8b\u9a71\u52a8\u7684\u8fed\u4ee3\uff0c\u4ee5\u81ea\u52a8\u751f\u6210\u6d4b\u8bd5\u8f93\u5165\u5e76\u786e\u4fdd\u7a0b\u5e8f\u6ee1\u8db3\u5b83\u4eec\u3002\u5c3d\u7ba1\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u7684\u5408\u6210\u6bd4NP\u7684\u5b8c\u6210\u56f0\u96be\uff0c\u4f46\u8fd9\u79cd\u53cd\u4f8b\u9a71\u52a8\u7684\u641c\u7d22\u4ec5\u5728\u89e3\u51b3\u4e86\u5c11\u6570SAT\u5b9e\u4f8b\u540e\u5c31\u7ec8\u6b62\u4e86\u8bb8\u591a\u5b9e\u9645\u95ee\u9898 31 \u3002 \u4ee5\u524d\u7684\u5de5\u4f5c\u662f*\u901a\u8fc7\u793a\u4f8b*\u8fdb\u884c *\u7f16\u7a0b\u7684*\u4ece\u8f93\u5165/\u8f93\u51fa\u793a\u4f8b\u4e2d\u5408\u6210\u89e3\u6790\u5668\u7684\u6280\u672f 32 \u3002 \u603b\u7ed3 \u00b6 \u5e7f\u4e49\u8ba1\u5212\u80fd\u591f\u89e3\u51b3\u7ecf\u5178\u8ba1\u5212\u8303\u56f4\u4e4b\u5916\u7684\u8ba1\u5212\u4efb\u52a1\uff1a\u5b83\u4eec\u53ef\u4ee5\u89e3\u51b3\u5305\u542b\u591a\u4e2a\u5b9e\u4f8b\u6216\u5bf9\u8c61\u6570\u91cf\u4e0d\u53d7\u9650\u5236\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u4ee5\u53ca\u5177\u6709\u90e8\u5206\u53ef\u89c2\u5bdf\u6027\u548c\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5c\u7684\u8ba1\u5212\u4efb\u52a1[10\uff0c44\uff0c 91\uff0c43]\u3002\u5e7f\u4e49\u89c4\u5212 \u8fd9\u662f\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u79cd\u6709\u5e0c\u671b\u7684\u8303\u4f8b\uff0c\u4f46\u662f\u9700\u8981\u8fdb\u4e00\u6b65\u7814\u7a76\u4ee5\u6709\u6548\u89e3\u51b3\u4efb\u610f\u8ba1\u5212\u4efb\u52a1\u3002 \u2022 ***\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7684\u8868\u793a**\u3002*\u9690\u5f0f\u8868\u793a\u5141\u8bb8\u5904\u7406\u5927\u91cf\u8ba1\u5212\u5b9e\u4f8b\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u8868\u793a\u9700\u8981\u7279\u5b9a\u7684\u72b6\u6001\u6f14\u8fdb\u673a\u5236\u4ee5\u53ca\u6d4b\u8bd5\u76ee\u6807\u548c\u64cd\u4f5c\u524d\u63d0\u6761\u4ef6\u7684\u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u4e0e\u73b0\u6210\u7684\u8ba1\u5212\u7a0b\u5e8f\u4e2d\u4f20\u7edf\u5b9e\u73b0\u7684\u673a\u5236\u4e0d\u540c\u3002 \u9664\u4e86\u8868\u793a\u5f62\u5f0f\u4e3b\u4e49\u4e4b\u5916\uff0c\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7ed9\u5b9a\u7684\u5b9e\u4f8b\u96c6\u8fd8\u4f1a\u5f71\u54cd\u7528\u4e8e\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u6027\u80fd\u3002\u6709\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528*\u6781\u7aef\u6848\u4f8b*\u6784\u5efa\u5c11\u91cf\u4ee3\u8868\u6027\u5b9e\u4f8b*\u3002*\u6781\u7aef\u60c5\u51b5\u5c06\u72b6\u6001\u53d8\u91cf\u63a8\u5230\u5176\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\uff0c\u56e0\u6b64\u4ec5\u5728\u90a3\u4e9b\u7279\u5b9a\u72b6\u6001\u4e0b\u624d\u8003\u8651\u8ba1\u5212\u884c\u4e3a\uff0c\u800c\u4e0d\u662f\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5b9e\u4f8b\u3002\u5bf9\u4e8e\u4e00\u822c\u60c5\u51b5\uff0c\u5982\u6b64\u9891\u7e41\u5730\u81ea\u52a8\u8bc6\u522b\u5c11\u91cf\u4ee3\u8868\u6027\u5b9e\u4f8b\u5f88\u590d\u6742\uff0c\u56e0\u6b64\u4ecd\u7136\u9700\u8981\u624b\u52a8\u5b8c\u6210\u5bf9\u901a\u7528\u8ba1\u5212\u4efb\u52a1\u4e2d\u4ee3\u8868\u6027\u5b9e\u4f8b\u7684\u9009\u62e9\u3002 \u81ea\u52a8\u786e\u5b9a\u5b9e\u4f8b\u4ee5\u8ba1\u7b97\u901a\u7528\u89e3\u51b3\u65b9\u6848\u7684\u7b2c\u4e00\u6b65\u662f\u8868\u5f81\u5c06\u7b56\u7565\u901a\u7528\u5316\u4e3a\u5176\u4ed6\u95ee\u9898\u7684\u6761\u4ef6[9]\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e3a\u81ea\u52a8\u751f\u6210\u8ba1\u7b97\u6982\u62ec\u5316\u89e3\u51b3\u65b9\u6848\u6240\u9700\u7684\u6700\u7b80\u5355\u5b9e\u4f8b\u96c6\u7684\u65b9\u6cd5\u7684\u5f00\u53d1\u6253\u5f00\u4e86\u5927\u95e8\u3002 \u2022 *\u5e7f\u4e49\u8ba1\u5212\u7684\u8ba1\u7b97\u3002*\u5f53\u524d\u7528\u4e8e\u5e7f\u4e49\u89c4\u5212\u7684\u7b97\u6cd5\u53ea\u80fd\u89e3\u51b3\u76f8\u5bf9\u8f83\u5c0f\u7684\u4efb\u52a1\u3002\u8fdb\u4e00\u6b65\u7814\u7a76\u5e7f\u4e49\u89c4\u5212\u7684\u7279\u5b9a\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u81ea\u52a8\u8bc6\u522b\u76f8\u5173\u72b6\u6001\u53d8\u91cf\uff08\u4f8b\u5982\uff0c\u67e5\u627e\u53ef\u80fd\u51fa\u73b0\u5728\u5faa\u73af\u548c\u5206\u652f\u6761\u4ef6\u4e0b\u7684\u72b6\u6001\u53d8\u91cf\u7684\u5b50\u96c6\uff09\u6216\u76ee\u6807\u7684\u81ea\u52a8\u5e8f\u5217\u5316\uff0c\u53ef\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u6982\u62ec\u8ba1\u5212\u8005\u3002 \u7279\u5b9a\u9886\u57df\u7684\u5206\u89e3\u8fd8\u53ef\u4ee5\u89e3\u51b3\u66f4\u5177\u6311\u6218\u6027\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1[83]\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u5206\u89e3\u76ee\u524d\u662f\u624b\u5de5\u5b8c\u6210\u7684\uff0c\u5982\u4f55\u4ece\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7684\u8868\u793a\u4e2d\u81ea\u52a8\u8ba1\u7b97\u5b83\u4eec\u4ecd\u7136\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c*\u89c4\u5212\u5730\u6807*\u53ef\u80fd\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u7814\u7a76\u65b9\u5411[40]\u3002\u53e6\u4e00\u79cd\u63d0\u9ad8\u5e7f\u4e49\u89c4\u5212\u8005\u53ef\u6269\u5c55\u6027\u7684\u5de5\u4f5c\u7ebf\u662f\u63a2\u7d22\u5c06\u7ed9\u5b9a\u89c4\u5212\u4efb\u52a1\u8f6c\u6362\u4e3a\u8f83\u5c0f\u7684\u4efb\u52a1\u7684\u65b9\u6cd5\uff0c\u8be5\u4efb\u52a1\uff081\uff09\u53ef\u901a\u8fc7\u76f8\u540c\u7684\u5e7f\u4e49\u8ba1\u5212\u89e3\u51b3\uff0c\u800c\uff082\uff09\u5177\u6709\u66f4\u6613\u4e8e\u5904\u7406\u7684\u641c\u7d22\u7a7a\u95f4[9]\u3002 \u5173\u4e8e\u901a\u7528\u8ba1\u5212\u7684\u91cd\u7528\uff0c\u5173\u952e\u95ee\u9898\u662f\u9488\u5bf9\u7ed9\u5b9a\u8ba1\u5212\u5b9e\u4f8b\u7684\u7ed9\u5b9a\u901a\u7528\u8ba1\u5212\u7684\u9002\u7528\u6027\u8bc4\u4f30\uff08\u4f8b\u5982*\u57fa\u4e8e\u6848\u4f8b\u7684\u8ba1\u5212\u7684*\u76f8\u4f3c\u6027\u5ea6\u91cf*\uff09\uff0c*\u4ee5\u53ca\u4e0d\u5b8c\u6574\u6216\u4e0d\u6b63\u786e\u7684\u901a\u7528\u8ba1\u5212\u7684\u91cd\u7528\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u73b0\u6709\u7684\u5e7f\u4e49\u8ba1\u5212\u7528\u4f5c*\u7279\u5b9a*\u4e8e*\u9886\u57df\u7684\u8bd5\u63a2\u6cd5*\u6216*\u9996\u9009\u9879*\u662f\u4e00\u79cd\u66f4\u5b89\u5168\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8feb\u4f7f\u6bcf\u4e2a\u65f6\u523b\u90fd\u9075\u5faa\u5e7f\u4e49\u8ba1\u5212\u3002 \u2022 ***\u5e7f\u4e49\u8ba1\u5212\u7684\u8868\u793a**\u3002*\u4e0e\u4ec5\u5305\u542b\u4e00\u7cfb\u5217\u5730\u9762\u884c\u52a8\u7684\u8ba1\u5212\u76f8\u6bd4\uff0c\u5305\u542b\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7684\u901a\u7528\u8ba1\u5212\u9700\u8981\u66f4\u590d\u6742\u7684\u6267\u884c\u673a\u5236\uff0c\u4f46\u5b83\u4eec\u53ef\u80fd\u80fd\u591f\u4ee3\u8868\u66f4\u591a\u4efb\u52a1\u3002\u5bf9\u4e8e\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u76f8\u540c\u7684\u4e3b\u5f20\u4e5f\u9002\u7528\u4e8e\u90e8\u5206\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff08\u5176\u6267\u884c\u66f4\u4e3a\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u8ba1\u5212\u8005\uff09\u3002\u5bf9\u4e8e\u4e00\u822c\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u786e\u5b9a\u66f4\u9002\u5408\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u7684\u7c7b\u578b\u4e5f\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002 \u5e7f\u4e49\u8ba1\u5212\u7684\u8ba1\u7b97\u53d7\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7ed9\u5b9a\u7684\u5b9e\u4f8b\u7684\u7ea6\u675f\uff0c\u4f46\u4e5f\u53d7\u7ed9\u5b9a\u72b6\u6001\uff0c\u52a8\u4f5c\u548c\u76ee\u6807\u7f16\u7801\u7684\u8868\u793a\u5f62\u5f0f\u7684\u7ea6\u675f\u3002\u81ea\u52a8\u751f\u6210\u66ff\u4ee3\u8868\u793a\u4ee5\u5141\u8bb8\u66f4\u6709\u6548\u5730\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u662f\u4e00\u4e2a\u6709\u524d\u9014\u7684\u7814\u7a76\u65b9\u5411\uff0c\u4e0e\u4ee5\u524d\u6709\u5173AI\u7684\u7814\u7a76\uff08\u4f8b\u5982ILP \u8c13\u8bcd\u53d1\u660e [19]\u6216ML\u4e2d\u7684*\u7279\u5f81\u751f\u6210\uff09*\u6709\u591a\u4e2a\u94fe\u63a5\u3002 \u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u5e7f\u4e49\u8ba1\u5212\u662f\u751f\u6210\u578b\u6a21\u578b\uff0c\u53ef\u4ee5\u89e3\u51b3\u8ba1\u5212\u4e4b\u5916\u7684\u4efb\u52a1\u3002\u4f8b\u5982\uff0c\u7ed9\u5b9a\u901a\u7528\u8ba1\u5212\u548c\u6267\u884c\u8ddf\u8e2a\uff0c\u53ef\u4ee5\u5c06*\u89e3\u6790\u4efb\u52a1*\u5b9a\u4e49\u4e3a\u786e\u5b9a\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u7ed9\u5b9a\u7684\u901a\u7528\u8ba1\u5212\u751f\u6210\u8be5\u6267\u884c\u8ddf\u8e2a\u7684\u4efb\u52a1\u3002 \u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u5bf9\u8c61\u5206\u7c7b[55]\u6709\u7528\uff0c\u4f46\u5bf9\u76ee\u6807\u8bc6\u522b[76]\u548c\u4efb\u52a1\u5206\u7c7b[86]\u4e5f\u6709\u7528\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0e\u7528\u4e8e\u5e7f\u4e49\u8ba1\u5212\u7684\u8ba1\u7b97\u975e\u5e38\u7c7b\u4f3c\u7684\u6280\u672f\u6765\u5b9e\u73b0\u8fd9\u4e9b\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u3002\u51fa\u4e8e\u540c\u6837\u7684\u8003\u8651\uff0c\u4ee5\u524d\u7684\u5de5\u4f5c\u662f*\u901a\u8fc7\u793a\u4f8b*\u8fdb\u884c *\u7f16\u7a0b\u7684*\u4ece\u8f93\u5165/\u8f93\u51fa\u793a\u4f8b\u4e2d\u5408\u6210\u89e3\u6790\u5668\u7684\u6280\u672f 32 \u3002\u5bf9\u4e8e\u5c0f\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u7684\u7ecf\u5178\u89c4\u5212\u5df2\u7ecf\u89e3\u51b3\u4e86\u8be5\u4efb\u52a1[85]\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u505a\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\u4ee5\u6784\u5efa\u66f4\u5177\u6311\u6218\u6027\u7684\u89e3\u6790\u5668\u3002 \u53c2\u8003 Alexandre Albore, H \u0301ector Palacios, and Hector Geffner. A translation-based approach to contingent planning. InIJCAI, 2009 \u21a9 Carmel Domshlak. Fault tolerant planning: Complexity and compilation.InICAPS, 2013. \u21a9 Christian Muise, Sheila A. McIlraith, and Vaishak Belle.Non-deterministic planning with conditional effects. InICAPS, 2014 \u21a9 Elly Winner and Manuela Veloso. Distill: Learning domain-specific plan-ners by example. InICML, 2003. \u21a9 \u21a9 \u21a9 \u21a9 Elly Winner and Manuela Veloso. Loopdistill: Learning looping domain-specific planners from example plans. InICAPS, Workshop on ArtificialIntelligence Planning and Learning, 2007. \u21a9 \u21a9 C \u21a9 Jorge A Baier, Christian Fritz, and Sheila A McIlraith. Exploiting proce-dural domain control knowledge in state-of-the-art planners. InICAPS,2007. \u21a9 Javier Segovia-Aguas, Sergio Jim \u0301enez, and Anders Jonsson. Generalizedplanning with procedural domain control knowledge. InICAPS, 2016 \u21a9 \u21a9 \u21a9 \u21a9 Javier Segovia-Aguas, Sergio Jim \u0301enez, and Anders Jonsson. Hierarchicalfinite state controllers for generalized planning. InIJCAI, 2016. \u21a9 \u21a9 Thomas M Mitchell.Machine Learning. McGraw-Hill, Inc., New York,NY, USA, 1 edition, 1997. \u21a9 Paul E Utgoff. Incremental induction of decision trees.Machine learning,4(2):161\u2013186, 1989. \u21a9 Sergio Jim \u0301enez and Anders Jonsson. Computing Plans with Control Flowand Procedures Using a Classical Planner. InSOCS, 2015. \u21a9 Blai Bonet, H \u0301ector Palacios, and Hector Geffner. Automatic derivation offinite-state machines for behavior control. InAAAI, 2010. \u21a9 \u21a9 \u21a9 C \u0301edric Pralet, G \u0301erard Verfaillie, Michel Lema\u02c6\u0131tre, and Guillaume Infantes.Constraint-based controller synthesis in non-deterministic and partiallyobservable domains. InECAI, 2010. \u21a9 \u21a9 Yuxiao Hu and Giuseppe De Giacomo. A generic technique for synthesiz-ing bounded finite-state controllers. InICAPS, 2013. \u21a9 \u21a9 Miquel Ramirez and Hector Geffner. Heuristics for planning, plan recog-nition and parsing.arXiv preprint arXiv:1605.05807, 2016 \u21a9 Mario Mart \u0301\u0131n and Hector Geffner. Learning generalized policies fromplanning examples using concept languages.Applied Intelligence, 20(1):9\u201319, 2004. \u21a9 Sungwook Yoon, Alan Fern, and Robert Givan. Learning control knowl-edge for forward search planning.The Journal of Machine Learning Re-search, 9:683\u2013718, 2008. \u21a9 Tomas De la Rosa, Sergio Jim \u0301enez, Raquel Fuentetaja, and Daniel Bor-rajo. Scaling up heuristic planning with relational decision trees.Journalof Artificial Intelligence Research, 40:767\u2013813, 2011. \u21a9 Blai Bonet and Hector Geffner. Policies that generalize: Solving manyplanning problems with the same policy.IJCAI, 2015. \u21a9 Siddharth Srivastava, Neil Immerman, and Shlomo Zilberstein. A newrepresentation and associated algorithms for generalized planning.Artifi-cial Intelligence, 175(2):615 \u2013 647, 2011. \u21a9 Siddharth Srivastava, Neil Immerman, Shlomo Zilberstein, and TianjiaoZhang. Directed search for generalized plans using classical planners. InICAPS, 2011. \u21a9 Hector J Levesque, Raymond Reiter, Yves Lesp \u0301erance, Fangzhen Lin, andRichard B Scherl. Golog: A logic programming language for dynamicdomains.The Journal of Logic Programming, 31(1-3):59\u201383, 1997. \u21a9 Sebastian Sardina, Giuseppe De Giacomo, Yves Lesp \u0301erance, and Hector JLevesque. On the semantics of deliberation in indigologfrom theory toimplementation.Annals of Mathematics and Artificial Intelligence, 41(2-4):259\u2013299, 2004. \u21a9 Gabriele R \u0308oger, Malte Helmert, and Bernhard Nebel. On the relativeexpressiveness of adl and golog: The last piece in the puzzle. InKR, 2008 \u21a9 Jens Cla\u00dfen, Viktor Engelmann, Gerhard Lakemeyer, and Gabriele R \u0308oger.Integrating golog and planning: An empirical evaluation.InNon-Monotonic Reasoning Workshop, 2008 \u21a9 Sumit Gulwani. Automating string processing in spreadsheets using input-output examples. InACM SIGPLAN Notices, volume 46, pages 317\u2013330.ACM, 201 \u21a9 Thomas M Mitchell. Generalization as search.Artificial intelligence,18:203\u2013226, 1982. \u21a9 Armando Solar-Lezama, Liviu Tancau, Rastislav Bodik, Sanjit Seshia,and Vijay Saraswat. Combinatorial sketching for finite programs.ACMSIGOPS Operating Systems Review, 40:404\u2013415, 2006 \u21a9 Brenden M Lake, Ruslan Salakhutdinov, and Joshua B Tenenbaum.Human-level concept learning through probabilistic program induction.Science, 350(6266):1332\u20131338, 2015. \u21a9 Alan Leung, John Sarracino, and Sorin Lerner. Interactive parser synthesisby example. InACM SIGPLAN Notices, volume 50, pages 565\u2013574. ACM,2015 \u21a9 \u21a9 Rajeev Alur, Rastislav Bodik, Garvit Juniwal, Milo MK Martin, MukundRaghothaman, Sanjit A Seshia, Rishabh Singh, Armando Solar-Lezama,Emina Torlak, and Ab hishek Udupa. Syntax-guided synthesis.Depend-able Software Systems Engineering, 40:1\u201325, 2015. \u21a9 Sumit Gulwani, Jose Hernandez-Orallo, Emanuel Kitzelmann, Stephen HMuggleton, Ute Schmid, and Benjamin Zorn. Inductive programming meets the real world.Communications of the ACM, 58:90\u201399, 2015. \u21a9 Emina Torlak and Rastislav Bodik. Growing solver-aided languages with rosette. InACM international symposium on New ideas, new paradigms,and reflections on programming & software, pages 135\u2013152. ACM, 2013. \u21a9","title":"reviewOfGP"},{"location":"Papers/A%20review%20of%20generalized%20planning/#a-review-of-generalized-planning","text":"\u81ea\u52a8\u5316\u8ba1\u5212\uff08AP\uff09\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4ee3\u7406\u53ca\u5176\u73af\u5883\u7684\u6a21\u578b\u6765\u89e3\u51b3\u9ad8\u5ea6\u7ed3\u6784\u5316\u73af\u5883\u4e2d\u7684\u590d\u6742\u534f\u5546\u4efb\u52a1\uff0cTraditionally the solutions generated by automated planners are tied to aparticular planning instance and hence, do not generalize.\uff08 classical plan \uff09 A generalized plan is an algorithm-like solution that is valid for a given setof planning instances. \u8fd1\u5e74\u6765\uff0c\u7531\u4e8e\u8ba1\u5212 \u7684 \u8868\u793arepresentation \u89e3\u51b3\u65b9\u6848\u7cfb\u5217\u7684\u65b0\u9896\u5f62\u5f0f\u4e3b\u4e49\u4ee5\u53ca\u8ba1\u7b97\u6b64\u7c7b\u89e3\u51b3\u65b9\u6848\u7684\u65b0\u7b97\u6cd5\u7684\u51fa\u73b0\uff0c\u8fd9\u4e9b\u8fdb\u6b65\u63ed\u793a\u4e86\u5e7f\u4e49\u89c4\u5212\u6280\u672f\u7684\u6f5c\u529b\uff0c\u5e76\u9f13\u52b1\u5c06\u89c4\u5212\u5e94\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5404\u4e2a\u9886\u57df\uff0c\u4f8b\u5982*program synthesis,autonomous control,datawranglingorform recognition 33 34 . \u5e7f\u4e49\u89c4\u5212\u4e2d\u7684\u8fd9\u4e9b\u6700\u65b0\u8fdb\u5c55\uff0c\u5e76\u4e0e\u73b0\u6709\u5f62\u5f0f\u4e3b\u4e49\u76f8\u5173,\u9488\u5bf9\u81ea\u52a8\u5316\u89c4\u5212\u4e2d\u7684\u901a\u7528\u6027\uff0c\u4f8b\u5982*planning with domain control knowledgeand different approachesforplanning under uncertainty*\u4e0d\u540c\u65b9\u6cd5\u3002 \u9996\u5148\uff0c\u672c\u6587\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u8ba1\u5212\u7684\u80cc\u666f\uff0c\u5c06\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u5f62\u5f0f\u5316\uff0c\u5e76\u4ecb\u7ecd\u4e86\u6211\u4eec\u5bf9\u5e7f\u4e49\u8ba1\u5212\u5de5\u4f5c\u8fdb\u884c\u5ba1\u67e5\u7684\u6807\u51c6\u3002 \u5176\u6b21\uff0c\u672c\u6587\u8ba8\u8bba\u4e86\u7528\u4e8e\u8868\u793a \u8ba1\u5212\u4efb\u52a1 \u7684\u4e0d\u540c\u77e5\u8bc6\u8868\u793a\u63a8\u7406\u65b9\u6cd5\u3002 \u7b2c\u4e09\uff0c\u672c\u6587\u8c03\u67e5\u4e86\u5404\u79cd\u4ee3\u8868\u5f62\u5f0f\u4e3b\u4e49\uff0c\u4ee5\u5206\u6790\u5176\u4f18\u7f3a\u70b9\u3002 \u7b2c\u56db\uff0c\u7814\u7a76\u4e86\u7528\u4e8e\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u5f53\u524d\u7b97\u6cd5\u3002 \u6700\u540e\uff0c\u672c\u6587\u7ed3\u675f\u4e86\u8ba8\u8bba\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\u5e76\u786e\u5b9a\u4e86\u5f00\u653e\u7684\u7814\u7a76\u95ee\u9898\u4ee5\u9f13\u52b1\u672a\u6765\u7684\u7814\u7a76\u3002","title":"A review of generalized planning"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_1","text":"classical planning(the vanilla model in AP), \u5728*\u7ecf\u5178\u89c4\u5212\u6a21\u578b*\u662f\u81ea\u52a8\u89c4\u5212\u6700\u5e38\u89c1\u7684\u6a21\u578b\uff0c\u662f\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a 1.\u8981\u89e3\u51b3\u7684\u8ba1\u5212\u4efb\u52a1\u5177\u6709\u6709\u9650\u4e14\u53ef\u5b8c\u5168\u89c2\u5bdf\u7684\u72b6\u6001\u7a7a\u95f4\u3002 2.\u52a8\u4f5c\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5e76\u5bfc\u81f4\u77ac\u65f6\u72b6\u6001\u8f6c\u6362\u3002 \u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u7cfb\u5217\u53ef\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5c06\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e3a\u76ee\u6807\u72b6\u6001\uff0c\u5373\u6ee1\u8db3\u5148\u524d\u6307\u5b9a\u7684\u4e00\u7ec4\u76ee\u6807\u6761\u4ef6\u7684\u72b6\u6001\u3002 A classical planning frame is a tuple \u03a6 =\u3008F,A\u3009, where F is a set of fluents and A is a set of actions. Given a frame \u03a6 =\u3008F,A\u3009, a classical planning instance is a tuple P=\u3008F,A,I,G\u3009, where I\u2208 L(F) is an initial state (i.e.|I|=|F|) andG\u2208 L(F)is a goal condition. The Planning Domain Definition Language (PDDL) [59] is the input language for the International Planning Competition (IPC) [95] and the standard for representing classical planning instances. Besides classical planning, PDDL can represent more expressive planning models such as *temporal planning or planning with path constraints and preferences [27, 33]. Generalized plans are generative models that may have diverse forms. \u6bcf\u79cd\u5f62\u5f0f\u90fd\u5177\u6709\u81ea\u5df1\u7684\u8868\u8fbe\u80fd\u529b\u4ee5\u53ca\u8ba1\u7b97\u548c\u9a8c\u8bc1\u590d\u6742\u6027\u3002 Generalized plans range from programs [97, 83] and generalized polices[57] to Finite State Controllers(FSCs) [10, 84], AND/OR graphs, formal grammars [77] or HTNs [66]. \u53ef\u4ee5\u6839\u636e\u5e7f\u4e49\u8ba1\u5212specification of *the action to apply next*\u5bf9\u5176\u8fdb\u884c\u5206\u7c7b\uff1a Fully specified solutions, that unambiguously capture the action to ap-ply next, for solving every instance in a given generalized planning task.\u53ef\u4ee5\u660e\u786e\u6355\u83b7\u63a5\u4e0b\u6765\u8981\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u7528\u4e8e\u89e3\u51b3\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u3002\u7a0b\u5e8f\uff0c\u901a\u7528\u7b56\u7565\u6216\u786e\u5b9a\u6027FSC\u5c5e\u4e8e\u6b64\u7c7b\u3002\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\uff0c\u4e00\u81f4\u7684\uff0c\u5076\u7136\u7684\u6216POMDP\u8ba1\u5212\u4e5f\u5c5e\u4e8e\u6b64\u7c7b\uff0c\u5219\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u4ee3\u8868\u4e0d\u540c\u7684\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\uff0c\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u72b6\u6001\u53d8\u91cf\uff0c\u52a8\u4f5c\u548c\u76ee\u6807[42]\u3002 \u6211\u8ba4\u4e3a\u975e\u786e\u5b9a\u7684\u56fe\u7684\u89e3\u56fepolicy=\u786e\u5b9a\u6027=\u53ef\u4ee5\u5199\u6210program Non specified(\u6211\u8ba4\u4e3a\u662f\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6ca1\u89c4\u5f8b\u9700\u8981classical planner \u989d\u5916\u89c4\u5212).\u5e26\u6709domain model\u7684\u7ecf\u5178\u8ba1\u5212\u5668\u662f\u5e7f\u4e49\u8ba1\u5212\u7684\u4e00\u79cd\u5f62\u5f0f\u3002\u8fd9\u6837\u7684\u8ba1\u5212\u975e\u5e38\u7b3c\u7edf\uff08\u6db5\u76d6\u4e86\u7528\u53e4\u5178\u8ba1\u5212\u5668\u7684\u8f93\u5165\u8bed\u8a00\u8868\u793a\u7684\u4efb\u4f55\u5b9e\u4f8b\uff09\uff0c\u4f46\u662f\u6267\u884c\u673a\u5236\u6548\u7387\u4f4e\u4e0b\uff08\u8fd0\u884c\u53e4\u5178\u8ba1\u5212\u5668\u4ee5\u9488\u5bf9\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u751f\u6210\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff09\u3002 Partially specified. \u5171\u4eab\u4e24\u8005\u8981\u7d20\u7684\u901a\u7528\u8ba1\u5212\u3002\u4f7f\u7528*\u7279\u5b9a\u4e8e\u57df\u7684\u63a7\u5236\u77e5\u8bc6*\u8fdb\u884c*\u89c4\u5212*\u7684\u4e0d\u540c\u65b9\u6cd5\u5c5e\u4e8e\u6b64\u7c7b\uff0c\u56e0\u4e3a\u4ecd\u7136\u9700\u8981\u89c4\u5212\u4eba\u5458\u9488\u5bf9\u7279\u5b9a\u5b9e\u4f8b\u751f\u6210\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u8981\u5229\u7528\u9650\u5236\u53ef\u80fd\u89e3\u51b3\u65b9\u6848\u7684\u5e38\u8bc6\u3002\u6b64\u7c7b\u5305\u62ec\u90e8\u5206\u6307\u5b9a\u7684\u7a0b\u5e8f\uff0c\u4e0d\u786e\u5b9a\u7684FSC\uff0c\u5f62\u5f0f\u8bed\u6cd5\uff0cAND / OR\u56fe\u6216HTN\u3002 \u8ba4\u4e3a\u8fd9\u5c31\u662fQNP/FOND\u53ef\u4ee5\u641c\u7d22\u201cpolicy\u2192\u89e3\u5b50\u56fe\u201d The execution of a generalized plan \\(\\Pi\\) in a classical planning instance P=\u3008F,A,I,G\u3009is a classical plan, The problem generator box refers to a generative model of the instances inthe generalized planning task. \u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u5305\u62ec\u4e00\u7ec4\u8981\u89e3\u51b3\u7684\u5355\u72ec\u8ba1\u5212\u4efb\u52a1\u3002\u8fd9\u7ec4\u8ba1\u5212\u4efb\u52a1\u53ef\u4ee5\u662f\u6709\u9650\u7684\u6216\u65e0\u9650\u7684\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u6307\u5b9a\u5b83\uff0c\u4f8b\u5982\uff0c\u5bf9\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u7684\u663e\u5f0f\u679a\u4e3e\u6216\u901a\u8fc7\u4f7f\u7528\u903b\u8f91\u516c\u5f0f\uff0c\u6982\u7387\u5206\u5e03\uff0c\u95ee\u9898\u751f\u6210\u7a0b\u5e8f\u7b49\u9690\u5f0f\u5730\u6307\u5b9a\u3002\u5f53\u63d0\u4f9b\u4e86\u5bf9\u8ba1\u5212\u4efb\u52a1\u7684\u663e\u5f0f\u8bf4\u660e\u65f6\uff0c\u5c06\u8df3\u8fc7\u95ee\u9898\u751f\u6210\u3002 The generalized planner box refers to an algorithm d with aninput-outputspecification of the instances to solve and that generates a solutionto these instances. \u5176\u4e2d\u5305\u542b\u8981\u89e3\u51b3\u7684\u5b9e\u4f8b\u7684*\u8f93\u5165-\u8f93\u51fa*\u89c4\u8303\uff0c\u5e76\u4e3a\u8fd9\u4e9b\u5b9e\u4f8b\u751f\u6210\u89e3\u51b3\u65b9\u6848\u3002 \u5e7f\u4e49\u8ba1\u5212\u7684\u7b97\u6cd5\u8303\u56f4\u4ece\u7eaf\u7cb9\u7684**top-down**(\u6211\u7406\u89e3\u4e3aMyND\u542f\u53d1\u5f0f\u56fe\u641c\u7d22\u5b50\u56fe\uff0c\u6216\u8005\u662fFOND-SAT\u5168\u7a7a\u95f4\u641c\u7d22)*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\uff08\u5728\u5e7f\u4e49\u8ba1\u5212\u7684\u7a7a\u95f4\u4e2d\u641c\u7d22\u4e00\u4e2a\u6db5\u76d6\u6240\u6709\u8f93\u5165\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\uff09 \u5230*\u81ea\u4e0b\u800c\u4e0a**botton-up***(\u6211\u7406\u89e3\u4e3aPRP,FF planner\uff0c\u5f00\u521b\u8005\u4ece\u5b9e\u4f8b\u4e2d\u5b66\u4e60\u7684\u65b9\u6cd5)\uff08\u4e3a\u5355\u4e2a\u5b9e\u4f8b\u8ba1\u7b97\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u5176\u8fdb\u884c\u6982\u62ec\u548c\u5408\u5e76\uff09\u4ee5\u524d\u627e\u5230\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u9010\u6b65\u6269\u5927\u5e7f\u4e49\u8ba1\u5212\u7684\u8303\u56f4\u3002\u6700\u540e\uff0c*\u5e7f\u4e49\u8ba1\u5212*\u53ef\u4ee5\u770b\u4f5c\u662f\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u8ba1\u5212\u5b9e\u4f8b\u7684\u8fc7\u7a0b\u8868\u793a\u3002 \u901a\u7528GP\u89c4\u5212\u5c31\u50cf\u7ecf\u5178\u89c4\u5212classical plan\uff0c\u4f20\u7edf\u6c42\u89e3\u65b9\u6cd5\u6709\uff1a \u5728\u7ecf\u5178\u89c4\u5212\u4e2d\uff0c\u89c4\u5212\u5e08\u4ec5\u63a5\u6536\u5355\u4e2a\u548c\u5730\u9762\u89c4\u5212\u5b9e\u4f8b\u4f5c\u4e3a\u8f93\u5165 \u7ecf\u5178\u89c4\u5212\u7684\u6700\u65b0\u7b97\u6cd5\u662f\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u8fdb\u884c\u542f\u53d1\u5f0f\u641c\u7d22[37\uff0c30]\u6216\u7f16\u8bd1\u4e3a\u5176\u4ed6\u5f62\u5f0f\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f8b\u5982SAT [78] \u7ecf\u5178\u8ba1\u5212\u662f\u4e00\u7cfb\u5217\u52a8\u4f5c\uff0c\u7ecf\u5178\u8ba1\u5212\u7684\u6267\u884c\u548c\u9a8c\u8bc1\u5728\u8ba1\u5212\u7684\u957f\u5ea6\u4e0a\u90fd\u662f\u7ebf\u6027\u7684\u3002\u7136\u800c\uff0c\u5177\u6709\u6761\u4ef6\u5f71\u54cd\uff0c\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7ed3\u6784\u7684\u52a8\u4f5c\u53ef\u4ee5\u7528\u6765\u66f4\u7d27\u51d1\u5730\u8868\u793a\u7ecf\u5178\u8ba1\u5212\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848[52\uff0c81]\u3002","title":"\u8868\u793a\u548c\u63a8\u7406"},{"location":"Papers/A%20review%20of%20generalized%20planning/#representing-sets-of-planning-tasks","text":"different formalisms for representing sets of planning taskswithin generalized planning.7 Representing Actions \uff08RL\u5f3a\u5316\u5b66\u4e60\u7ed3\u5408\uff09\u4e00\u4e2a\u4f8b\u5b50\u662f\u5728**ATARI**\u89c6\u9891\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u4ee5\u4ee3\u7406\u4eba\u4e3a\u4e2d\u5fc3\u7684\u884c\u4e3a\u6a21\u578b[62]\uff0c\u5176\u4e2d18\u79cd\u53ef\u80fd\u7684\u884c\u4e3a\u6839\u636e\u89c6\u9891\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u5177\u6709\u4e0d\u540c\u7684\u6548\u679c\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u56de\u987e\u4e86\u7ecf\u5178\u8ba1\u5212\u884c\u4e3a\u6a21\u578b\u7684\u6269\u5c55\uff0c\u8fd9\u4e9b\u6269\u5c55\u65e8\u5728\u4f7f\u8ba1\u5212\u4efb\u52a1\u548c\u8ba1\u5212\u89e3\u51b3\u65b9\u6848\u66f4\u7d27\u51d1\uff0c\u66f4\u901a\u7528\u3002 Conditional effects=preconditions+conditional effects Conditional effects cannot be compiled away if plan size should grow only linearly [67]. PDDL supports the definition of conditional effects with the when keyword\u3002In PDDL the condition of a given conditional effect has the same expressivenessas action preconditions and goals, so it can either be a negation, a conjunction,a disjunction or a quantified formula, as defined in the ADL formalism [71, 27]. Update formulas and high-level state features The series of work by Srivastava et al. [90] on generalized planning encodesthe effects of actions with update formulas. An update formula is an arbitrary FOL formula that includestransitive closure, defining the new value of a givenpredicate after an action application. \u7b49\u6548\u5730 Arbitrary FOL formulae that include transitive closure can be representedin PDDL using derived predicates that can later be included in action precon-ditions, conditional effects and goals. (:derived (above ?x ?y - block) (or (on ?x ?y) (exists (?z - block) (and (on ?x ?z) (above ?z ?y))))) this is how PDDL defines theabovederived predicate that models whether a block?xisaboveanother block?yin ablocksworld tower*\u6d3e\u751f\u8c13\u8bcd*\u53ef\u4ee5\u8868\u793a\u8868\u8fbe\u6027\u72b6\u6001\u67e5\u8be2\uff0c\u5305\u62ec\u72b6\u6001\u53d8\u91cf\u548c\u9012\u5f52\u7684\u5c42\u6b21\u7ed3\u6784[92]\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u5bf9\u4e8e\u7d27\u51d1\u5730\u8868\u793a\u8ba1\u5212\u4efb\u52a1\u548c\u66f4\u6709\u6548\u7684\u8ba1\u5212\u5f88\u6709\u7528[45]\u3002 \u9664\u6d3e\u751f\u8c13\u8bcd\u5916\uff0c\u5404\u79cd\u5f62\u5f0f\u4e3b\u4e49\u5df2\u7528\u4e8e\u8868\u793a\u8ba1\u5212\u4e2d\u7684\u72b6\u6001\u67e5\u8be2\uff0c\u8303\u56f4\u4ece\u4e00\u9636\u5b50\u53e5[96]\u5230\u63cf\u8ff0\u903b\u8f91\u516c\u5f0f[57]\u751a\u81f3LTL\u516c\u5f0f[20]\u6765\u5b9a\u4e49\u6709\u5173\u72b6\u6001\u5e8f\u5217\u7684\u67e5\u8be2\u3002 Sensing and non-deterministic actions \u5f53\u72b6\u6001\u662f**FOND**\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684fully observable\u65f6\uff0c\u8003\u8651\u5230\u4efb\u4f55\u72b6\u6001\u4fe1\u606f\u90fd\u662f\u901a\u8fc7\u72b6\u6001\u67e5\u8be2\u83b7\u5f97\u7684\uff0c\u5219\u4e0d\u9700\u8981\u663e\u5f0f\u7684\u611f\u77e5\u52a8\u4f5c\u3002\u56e0\u6b64\uff0c\u4f20\u611f\u52a8\u4f5c\u9002\u5408\u5728**POMDP**\u90e8\u5206\u53ef\u89c2\u5bdf\u6027\u4e0b\u8fdb\u884c\u8ba1\u5212\uff0c\u5e76\u4e14\u5b83\u4eec\u4e0d\u6a21\u62df\u72b6\u6001\u8f6c\u6362\uff0c\u800c\u662f\u5bf9\u6765\u81ea\u5f53\u524d\u72b6\u6001\u7684\u67d0\u4e9b\u4fe1\u606f\u8fdb\u884c\u89c2\u5bdf\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f*\u672a\u77e5*\u3002\u5f53\u7f3a\u4e4f\u6709\u5173\u5f53\u524d\u72b6\u6001\u7684\u4fe1\u606f\u4f7f\u8ba1\u5212\u8005\u65e0\u6cd5\u5236\u5b9a\u51fa\u53ef\u4ee5\u80af\u5b9a\u5730\u5b9e\u73b0\u76ee\u6807\u7684\u8ba1\u5212\u65f6\uff0c\u8ba1\u5212\u8005\u4fbf\u4f1a\u91c7\u7528\u611f\u77e5\u884c\u52a8\u3002 \u5982\u679c\u6211\u4eec\u5047\u8bbe\u5173\u4e8e\u5f53\u524d\u72b6\u6001\u7684\u4e0d\u786e\u5b9a\u6027\u5355\u8c03\u51cf\u5c11\uff08\u5373\u4e00\u65e6*\u77e5\u9053*\u72b6\u6001\u53d8\u91cf\u7684\u503c\u5c31\u53ef\u4ee5\u6539\u53d8\uff0c\u4f46\u4e0d\u80fd\u518d\u6b21\u53d8\u5f97*\u672a\u77e5*\uff09\uff0c\u5219\u53ef\u4ee5\u5c06\u611f\u6d4b\u52a8\u4f5c\u7f16\u7801\u4e3a\u975e\u786e\u5b9a\u6027\u52a8\u4f5c[65]\u3002 PPDDL\uff08PDDL\u7684\u6982\u7387\u7248\u672c[100]\uff09\u53ef\u7528\u6982\u7387\u6548\u5e94\u8fdb\u884c\u7f16\u7801\uff0c\u4f7f\u7528\u6982\u7387\u52a8\u4f5c\u8fdb\u884c\u7684\u8ba1\u5212\u6210\u4e3a*\u4f18\u5316*\u4efb\u52a1\uff0c\u8ba1\u5212\u8005\u65e8\u5728\u4f7f\u8fbe\u5230\u76ee\u6807\u7684\u53ef\u80fd\u6027\u6700\u5927\u5316\u3002\u975e\u786e\u5b9a\u6027\u548c\u6982\u7387\u6027\u52a8\u4f5c\u4e5f\u53ef\u4ee5\u7f16\u7801\u975e\u786e\u5b9a\u6027\u72b6\u6001\u8f6c\u6362\uff0c\u4f8b\u5982\u5728\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u975e\u786e\u5b9a\u6027\uff08FOND\uff09\u6216MDP\u89c4\u5212\u4e2d[58\uff0c32]\u3002 Representing Initial and Goal States \u53ef\u4ee5\u663e\u5f0f\u5b9a\u4e49\u4e00\u7ec4\u72b6\u6001\uff0c\u679a\u4e3e\u8be5\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u72b6\u6001\uff0c\u6216\u8005\u9690\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u72b6\u6001\u5fc5\u987b\u6ee1\u8db3\u7684\u7ea6\u675f\uff08\u4f20\u9012\u95ed\u5305\uff09\u624d\u80fd\u5c5e\u4e8e\u8be5\u7ec4\u3002\u8fd8\u53ef\u4ee5\u660e\u786e\u6307\u5b9a\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u5b9e\u4f8b\u96c6\uff0c\u679a\u4e3e\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u5404\u4e2a\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u3002 different formalisms for representing a set of planning in-stances according to the language used for specifying these constraints: Propositional logic. \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u4ec5\u4f7f\u7528\u6587\u5b57\u548c\u4e09\u4e2a\u57fa\u672c\u7684\u903b\u8f91\u8fde\u63a5\u8bcd\u8868\u793a\uff08\u5e76\u8868\u793a\u6587\u5b57\u7684\u5408\u53d6\u6216\u8868\u793a\u6587\u5b57\u7684\u6790\u53d6\u800c\u4e0d\u8868\u793a\u5426\u5b9a\uff09\u3002\u7528\u547d\u9898\u903b\u8f91\u8868\u793a\u7684\u8ba1\u5212\u5b9e\u4f8b\u96c6\u7684\u793a\u4f8b\u662f\u4e00\u81f4\u7684\uff0c\u6216\u6709\u7684\u6216POMDP\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u8fd9\u4e9b\u4efb\u52a1\u5b9a\u4e49\u4e86\u4efb\u52a1\u7684\u4e0d\u540c\u53ef\u80fd\u521d\u59cb\u72b6\u6001\uff0c\u4f5c\u4e3a\u5bf9\u95ee\u9898\u5b57\u9762\u91cf\u7684\u5206\u79bb\uff08\u800c\u76ee\u6807\u662f\u4e3a\u8ba1\u5212\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u5171\u4eab\u7684\uff09\u4efb\u52a1\uff09[10]\u3002 First-order logic\u4e00\u9636\u903b\u8f91\u7ea6\u675f\u53ef\u4ee5\u5305\u542b\u91cf\u5316\u53d8\u91cf\uff0c\u5305\u62ec\u4f20\u9012\u95ed\u5305\u5e76\u8868\u793a\u65e0\u9650\u5236\u72b6\u6001\u96c6\u3002\u8fd9\u4e9b\u7279\u5f81\u4f7f\u4e00\u9636\u516c\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u8ba1\u5212\u5b9e\u4f8b\u96c6\u7684\u7d27\u51d1\u8868\u793a\uff0c\u4ee5\u53ca\u65e0\u9650\u5236\u89c4\u6a21\u7684\u8ba1\u5212\u4efb\u52a1[90]\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6709\u9650\u5bf9\u8c61\u96c6\uff0c\u53ef\u4ee5\u5c06\u4e00\u9636\u8868\u793a\u5f62\u5f0f\u76f4\u63a5\u8f6c\u6362\u4e3a\u547d\u9898\u903b\u8f91\u8868\u793a\u5f62\u5f0f\u3002 Constraint Programming. In this case sets of states are defined by a set offinite domain variablesX={x1,...,xn}(where each variablexi,1< i < nhas an associated finite domainD(xi)) and a set of constrains C that determines when a state is part of the set. \u9664\u4e86\u7ea6\u675f\u7f16\u7a0b\u8bed\u8a00\u7684\u8868\u793a\u7075\u6d3b\u6027\u5916\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684CSP\u6c42\u89e3\u5668\u6765\u89e3\u51b3\u5e7f\u4e49\u7684\u8ba1\u5212\u4efb\u52a1[74]\u3002 Three-valued logic. \u5728\u6b64\u903b\u8f91\u8bed\u8a00\u4e2d\uff0c\u5b58\u5728\u4e09\u4e2a\u771f\u503c1\uff08\u771f\uff09\uff0c0\uff08\u5047\uff09\u62161\uff08\u672a\u77e5\uff09\u3002Srivastava\u7b49\u3002\u4f7f\u7528\u4e09\u503c\u903b\u8f91\u8fdb\u884c\u72b6\u6001\u62bd\u8c61\uff0c\u4ee5\u7d27\u51d1\u5730\u8868\u793a\u65e0\u8fb9\u754c\u7684\u5177\u4f53\u72b6\u6001\u96c6[90]\u3002\u4e09\u503c\u903b\u8f91\u5bf9\u4e8e\u8868\u793a\u548c\u89e3\u51b3\u4e00\u81f4\u548c\u5076\u7136\u7684\u4efb\u52a1\u4e5f\u5f88\u6709\u7528[72\uff0c69\uff0c1]\u3002 \u786e\u5b9a\u4e00\u7ec4\u8ba1\u5212\u5b9e\u4f8b**specify a set of planning instances** \uff1a\u9664\u4e86\u7528\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u96c6\u4e4b\u5916\uff0c\u672a\u6765\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4fe1\u606f\uff0c\u4f8b\u5982*\u9886\u57df\u4e0d\u53d8\u91cf*[90]\u751a\u81f3\u662f\u5206\u7c7b\u7684\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff0c\u5305\u62ec*\u6b63*\u4f8b\u548c*\u8d1f*\u4f8b[43]\uff0c\u7c7b\u4f3c\u4e8e\u5728\u5f52\u7eb3\u903b\u8f91\u7f16\u7a0b\uff08ILP\uff09[75]\u3002 generalized plans have two benefits, compactness and generality . Control-flowstructures augment the flexibility of generalized plans with respectto classical plans: Branching: \u8ba1\u5212\u7684\u6267\u884c\u6839\u636e\u5f53\u524d\u72b6\u6001\u4e0b\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u7ed3\u679c\u8fdb\u884c\u5206\u652f\u3002\u5177\u6709\u5206\u652f\u7ed3\u6784\u7684\u8ba1\u5212\u89e3\u51b3\u65b9\u6848\u7684\u793a\u4f8b\u662fAND / OR\u6811\u72b6 \u6216\u6709\u8ba1\u5212 1 \u6216*K-Fault\u5bb9\u5fcd\u8ba1\u5212* 2 \u3002 Loops: \u91cd\u590d\u6267\u884c\u8ba1\u5212\u6bb5\uff0c\u76f4\u5230\u7ed9\u5b9a\u6761\u4ef6\u4fdd\u6301\u5f53\u524d\u72b6\u6001\u3002\u5177\u6709\u5faa\u73af\u7684\u89c4\u5212\u89e3\u51b3\u65b9\u6848\u7684\u793a\u4f8b\u5305\u62ec\u7528\u4e8e\u8868\u793aMDP\u89e3\u51b3\u65b9\u6848*\u7684\u7c7b\u4f3c\u7b56\u7565\u7684*\u89c4\u5212[49]\uff0c\u4ee5\u53caFOND\u89c4\u5212\u4efb\u52a1 3 \u3002 \u4ec5\u5305\u542b\u5206\u652f\u6784\u9020\u7684\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u7684\u5927\u5c0f\u5728\u53ef\u80fd\u7684\u72b6\u6001\u89c2\u5bdf\u6b21\u6570\u4e2d\u53ef\u80fd\u662f\u6307\u6570\u7ea7\u7684\u3002\u5408\u5e76*\u5206\u652f*\u548c*\u5faa\u73af*\u901a\u5e38\u6709\u52a9\u4e8e\u538b\u7f29\u5e7f\u4e49\u8ba1\u5212\u3002\u5728\u67d0\u4e9b\u89e3\u51b3\u65b9\u6848\u8868\u793a\u4e2d\uff0c\u4f8b\u5982DSPlanners 4 5 \uff0c\u5206\u652f\u548c\u5faa\u73af\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u63a7\u5236\u6d41\u6784\u9020\uff0c\u4f46\u662f\u901a\u5e38\uff0c\u5b83\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u6784\u9020\uff08\u4f8b\u5982\u6761\u4ef6\u8f6c\u6362\uff09\u5b9e\u73b0\uff0c\u4ee5\u4fdd\u6301\u89e3\u51b3\u65b9\u6848\u7a7a\u95f4\u7684\u53ef\u7ba1\u7406\u6027\u3002\u8fd9\u662f\u5728*\u6709\u9650\u72b6\u6001\u63a7\u5236\u5668*\uff08FSC\uff09[10]\uff0c \u5e7f\u4e49\u7b56\u7565 [57]\u6216*\u8ba1\u5212\u7a0b\u5e8f\u4e2d*\u4f7f\u7528\u7684*\u6761\u4ef6getos* [83]\u4e2d\u53d1\u751f\u7684\u60c5\u51b5\u3002 Variables\uff08\u5faa\u73af\u63a7\u5236\u53d8\u91cf\u3001\u6570\u503c\u53d8\u91cf\uff09 DSPlanners address this issue representing solutions with quantified variables 4 . \u89e3\u51b3\u4e86\u4ee3\u8868*\u91cf\u5316\u53d8\u91cf\u7684*\u89e3\u51b3\u65b9\u6848\u7684\u95ee\u9898 4 \u3002 A DSplanner is a domain-specific program that can contain **if-then-else & while**constructs.\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5305\u542b\u5206\u652f\u5faa\u73af\u7684\u63a7\u5236\u6d41\u56fe\u4e2d\u8fdb\u884c\u4e0e\u6216\u6811\u641c\u7d22 \u89c4\u5212\u4efb\u52a1\u641c\u7d22\u89e3\u5b50\u56fe **\u91cf\u5316\u53d8\u91cf**Quantified variables \u4f7f\u8bc6\u522b\u5177\u6709\u7279\u5b9a\u7279\u5f81\u7684\u5bf9\u8c61\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u5bf9\u9009\u62e9\u7684\u5bf9\u8c61\u5e94\u7528\u9009\u62e9\u6027\u64cd\u4f5c\u3002 Existential variables**\u5b58\u5728\u53d8\u91cf**\u3002A universal variable asserts that a given property orrelation holds for all the possible variable values.\u901a\u7528\u53d8\u91cf\u65ad\u8a00\uff0c\u7ed9\u5b9a\u7684\u5c5e\u6027\u6216\u5173\u7cfb\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u53d8\u91cf\u503c\u5747\u6210\u7acb\u3002\u9664\u4e86DSPlanners \u4e4b\u5916\uff0c\u5b58\u5728\u53d8\u91cf\u8fd8\u51fa\u73b0\u5728\u9009\u62e9\u64cd\u4f5c\u4e2d*[90]\uff0c\u5373\u5728\u8ba1\u5212\u6267\u884c\u8fc7\u7a0b\u4e2d\u5b9e\u4f8b\u5316\u7684\u64cd\u4f5c\u4ee5\u53ca\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u8bc4\u4f30FOL\u516c\u5f0f\u7684\u7ed3\u679c\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f*\u5e7f\u4e49\u7b56\u7565\uff0c\u5176\u89c4\u5219\u5305\u542b\u8981\u4e0e\u5f53\u524d\u72b6\u6001\u7edf\u4e00\u7684\u53d8\u91cf[48]\u3002PDDL\u53ef\u4ee5\u4ee3\u8868\u5177\u6709\u6d3e\u751f\u8c13\u8bcd\u7684\u7b56\u7565[45] Universal variables**\u901a\u7528\u53d8\u91cf**\u3002\u901a\u7528\u53d8\u91cf\u65ad\u8a00\uff0c\u7ed9\u5b9a\u7684\u5c5e\u6027\u6216\u5173\u7cfb\u9002\u7528\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u53d8\u91cf\u503c \u8bc4\u4f30\u5b9a\u91cf\u53d8\u91cf\u4e0a\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u7684\u6d3e\u751f\u8c13\u8bcd\u7684\u4f7f\u7528\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u5f62\u5f0f\u7684\u5e7f\u4e49\u8ba1\u5212\uff0c\u4f8b\u5982FSC\u3002 \u6808\u9012\u5f52\u8c03\u7528 \u5c3d\u7ba1\u4ec5\u4f7f\u7528\u57fa\u672c\u63a7\u5236\u6d41\u548c\u53d8\u91cf\u5c31\u53ef\u4ee5\u663e\u5f0f\u5730\u5bf9\u8c03\u7528\u6808\u8fdb\u884c\u7f16\u7801\uff0c\u4f46\u662f\u66f4\u7d27\u51d1\u7684\u89e3\u51b3\u65b9\u6848\u901a\u5e38\u662f\u901a\u8fc7\u8c03\u7528\u6808\u83b7\u5f97\u7684\uff08\u4f8b\u5982\uff0c\u5177\u6709\u9012\u5f52\u89e3\u51b3\u65b9\u6848\u7684\u4efb\u52a1[84]\uff09\u3002\u7528\u4e8e\u8bbf\u95ee\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u901a\u7528\u8ba1\u5212\uff0c\u8be5\u8ba1\u5212\u5b9e\u73b0\u4e86\u5177\u6709\u4e00\u4e2a\u8fc7\u7a0b\u53c2\u6570\u7684\u9012\u5f52\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\u3002\u6307\u4ee4**call\uff080\uff0c***node* **\uff09**\u662f\u9012\u5f52\u8c03\u7528\uff0c\u5c06\u53c2\u6570*node* \u5206\u914d\u7ed9\u7a0b\u5e8f\u7684\u552f\u4e00\u53c2\u6570\uff0c\u5e76\u4ece\u5176\u7b2c\u4e00\u884c\u91cd\u65b0\u5f00\u59cb\u6267\u884c\uff0c \u5b9e\u73b0\u9012\u5f52DFS\u4ee5\u904d\u5386\u4efb\u610f\u5927\u5c0f\u7684\u4e8c\u53c9\u6811\u7684\u901a\u7528\u8ba1\u5212 hierarchical generalized plans [83]\u5bf9\u4efb\u610f\u5927\u5c0f\u7684\u6570\u5b57\u5217\u8868\u9009\u62e9\u6392\u5e8f\u7b97\u6cd5","title":"Representing Sets of Planning Tasks"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_2","text":"\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u5206\u652f\uff0c\u5faa\u73af\u5e76\u5177\u6709\u53d8\u91cf\uff0c\u56e0\u6b64\u5728\u7279\u5b9a\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u4e0a\u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u9700\u8981\u7279\u5b9a\u7684\u673a\u5236\uff0c\u8fd9\u4e0d\u540c\u4e8e\u4f20\u7edf\u4e0a\u5728\u4f20\u7edf\u8ba1\u5212\u4e2d\u4f7f\u7528\u7684\u673a\u5236\uff1a \u2022 *\u5206\u652f\u3002*\u5177\u6709\u4e0d\u540c\u53ef\u80fd\u6267\u884c\u5206\u652f\u7684\u901a\u7528\u8ba1\u5212\u7684\u6267\u884c\u9700\u8981\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u6839\u636e\u72b6\u6001\u53d8\u91cf\u7684\u5f53\u524d\u503c\u9009\u62e9\u76f8\u5e94\u7684\u6267\u884c\u5206\u652f\u3002\u53ef\u4ee5\u5c06\u5206\u652f\u7684\u51e0\u4e2a\u901a\u7528\u8ba1\u5212\uff08\u4f8b\u5982HTN\uff0cAND / OR\u6811\u72b6\u8ba1\u5212\u6216\u7b56\u7565\uff09\u7684\u6267\u884c\u7f16\u8bd1\u4e3a\u7ecf\u5178\u8ba1\u5212[3\uff0c1\uff0c45]\u3002\u5982\u7b2c3\u8282\u6240\u8ff0\uff0c\u53ef\u4ee5\u901a\u8fc7*\u6761\u4ef6\u6548\u5e94*\u6709\u6548\u5730\u5efa\u6a21\u6839\u636e\u72b6\u6001\u53d8\u91cf\u7684\u4e0d\u540c\u503c\u6267\u884c\u7684\u4e0d\u540c\u53ef\u80fd\u6267\u884c\u7ed3\u679c[67]\u3002 \u2022 \u5faa\u73af\u3002*\u6267\u884c\u660e\u786e\u8868\u793a\u5faa\u73af\u7684\u901a\u7528\u8ba1\u5212\uff0c\u4f8b\u5982\u7a0b\u5e8f\uff08\u6216FSC\uff09\uff0c\u9700\u8981\u8ddf\u8e2a\u5f53\u524d\u7a0b\u5e8f\u884c\uff08\u6216\u63a7\u5236\u5668\u72b6\u6001\uff09\u3002\u901a\u8fc7\u5c06\u76f8\u5e94\u7684\u81ea\u52a8\u673a\uff08\u5176\u72b6\u6001\u548c\u53ef\u80fd\u7684\u8f6c\u6362\uff09\u7f16\u7801\u4e3a\u989d\u5916\u7684\u72b6\u6001\u53d8\u91cf\uff0c\u53ef\u4ee5**\u5c06FSC\u548c\u7a0b\u5e8f\u7684\u6267\u884c\u7f16\u8bd1\u4e3a\u7ecf\u5178\u8ba1\u5212* [^7\uff0c83\uff0c84]\u3002 \u2022 \u53d8\u91cf\u3002*\u5982\u679c\u5e7f\u4e49\u8ba1\u5212\u5305\u542b\u91cf\u5316\u53d8\u91cf\uff0c\u5219\u8ba1\u5212\u6267\u884c\u9700\u8981\u7edf\u4e00\u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u5c06\u53ef\u80fd\u7684\u503c\u5206\u914d\u7ed9\u8fd9\u4e9b\u53d8\u91cf\u3002\u65e9\u671f\u8ba1\u5212\u7cfb\u7edf\u5b9e\u65bd\u4e86\u53d8\u91cf\u7ed1\u5b9a\u7b97\u6cd5\u6765\u5339\u914d\u63a7\u5236\u89c4\u5219[96]\u3002\u5982\u4eca\uff0cFast-Downward \u4f7f\u7528\u5b9e\u73b0*\u6807\u8bb0\u7b97\u6cd5\u7684*\u91cf\u5316\u53d8\u91cf\u8bc4\u4f30\u6d3e\u751f\u8c13\u8bcd [37]\u3002\u4e00\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u662f\u5229\u7528\u5916\u90e8\u6c42\u89e3\u5668\uff08\u4f8b\u5982*\u7b54\u6848\u96c6\u7f16\u7a0b [45]\u6216CSP [29]\u6c42\u89e3\u5668\uff09\u6765\u91cf\u5316\u53d8\u91cf\u3002\u8fd8\u9075\u5faa\u7f16\u8bd1\u65b9\u6cd5\u5728*\u8fde\u63a5\u67e5\u8be2\u4e2d*\u7ed1\u5b9a\u5b58\u5728\u53d8\u91cf[55]\u5e76\u4f7f\u7528\u4f20\u9012\u95ed\u5305[73]\u6765\u8bc4\u4f30FOL\u72b6\u6001\u67e5\u8be2\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5f53\u524d\u5927\u591a\u6570\u73b0\u6210\u7684\u8ba1\u5212\u8005\u4ec5\u6709\u6548\u5730\u652f\u6301\u7b80\u5355\u6761\u4ef6\uff0c\u56e0\u4e3a\u547d\u9898\u539f\u5b50\u7684\u8fde\u63a5\u548c\u6c47\u7f16\u5b58\u5728\u7684\u91cf\u5316\u516c\u5f0f\u5177\u6709\u6210\u500d\u7684\u4ee3\u4ef7[28]\u3002 \u5728\u7ed9\u5b9a\u8ba1\u5212\u5b9e\u4f8b\u4e0a\u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u7684\u6700\u7b80\u5355\u7684\u671f\u671b\u5c5e\u6027\u662f**\u7ec8\u6b62\u6027\u6d4b\u8bd5\u3001\u9a8c\u8bc1**\uff0c\u5728\u6587\u732e\u4e2d\u4e5f\u79f0\u4e3a*\u505c\u673a\u95ee\u9898\u3002*\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5e7f\u4e49\u8ba1\u5212\u6267\u884c\u7684\u52a8\u4f5c\u6570\u7684\u4e0a\u9650\u7531\u5e7f\u4e49\u8ba1\u5212\u7684\u53ef\u80fd\u72b6\u6001\u7684\u603b\u6570\u7ed9\u51fa\u3002\u7136\u540e\u53ef\u4ee5\u68c0\u6d4b\u65e0\u9650\u5faa\u73af\uff0c\u5bf9\u8ba1\u5212\u6267\u884c\u671f\u95f4\u7684\u64cd\u4f5c\u6570\u8fdb\u884c\u8ba1\u6570\uff0c\u5e76\u68c0\u67e5\u8be5\u8ba1\u6570\u662f\u5426\u8d85\u8fc7\u4e86\u5148\u524d\u7684\u4e0a\u9650[6]\u3002 \u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u7684\u7b2c\u4e8c\u4e2a\u5c5e\u6027\u662f\u4fdd\u8bc1\u8ba1\u5212\u80fd\u591f\u89e3\u51b3\u7ed9\u5b9a\u5b9e\u4f8b\u3002\u6d4b\u8bd5\u6b64\u5c5e\u6027\u79f0\u4e3a**\u9a8c\u8bc1\u3001\u6709\u6548\u6027\u9a8c\u8bc1** \u8bc1\u660e\u9a8c\u8bc1\u5305\u542b\u7ec8\u6b62\u8bc1\u660e\uff0c\u5e76\u4e14\u4f5c\u4e3a\u8ba1\u5212\u751f\u6210\u7684\u4e00\u90e8\u5206\u662f\u9690\u542b\u7684\u3002\u7ecf\u5178\u8ba1\u5212\u4e2d\u7684\u8ba1\u5212\u9a8c\u8bc1\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u4ece\u7ecf\u5178\u8ba1\u5212\u4efb\u52a1\u7684\u521d\u59cb\u72b6\u6001\u5f00\u59cb*\u6267\u884c* \u8ba1\u5212\u6765\u83b7\u5f97\u9a8c\u8bc1\u8bc1\u660e\u6216\u5931\u8d25\u8bc1\u660e\u3002VAL [41]\uff0c\u57283\u4e2d\u5f15\u5165\u7b2c\u4e09\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b\uff08IPC\uff09\u662f\u7528\u4e8e\u7ecf\u5178\u8ba1\u5212\u7684\u6807\u51c6\u8ba1\u5212\u9a8c\u8bc1\u5de5\u5177\u3002\u5728\u5e7f\u4e49\u8ba1\u5212\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba1\u5212\u53ef\u4ee5\u5206\u652f\uff0c\u5faa\u73af\u548c\u5305\u542b\u53d8\u91cf\uff0c\u8ba1\u5212\u9a8c\u8bc1\u66f4\u4e3a\u590d\u6742\u3002\u5728\u7ed9\u5b9a\u8ba1\u5212\u5b9e\u4f8b\u4e2d\u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u53ef\u80fd\u65e0\u6cd5\u89e3\u51b3\u8be5\u5b9e\u4f8b\uff0c\u56e0\u4e3a\uff1a 1.\u8ba1\u5212*\u4e0d\u5065\u5168\uff1a*\u5e7f\u4e49\u8ba1\u5212\u7531\u4e8e\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u800c\u65e0\u6cd5\u6ee1\u8db3*\u7ec8\u6b62*\u6761\u4ef6\u3002 2.\u8ba1\u5212*\u4e0d\u5b8c\u6574\u3002*\u5f53\u524d\u72b6\u6001\u6ca1\u6709\u4e0b\u4e00\u6b65\u8981\u6267\u884c\u7684\u64cd\u4f5c\uff08\u4f8b\u5982\uff0c\u5728\u5f53\u524d\u72b6\u6001\u6ca1\u6709\u9002\u7528\u89c4\u5219\u7684\u7b56\u7565\uff09\u3002 \u5982\u679c\u53ef\u4ee5\u5c06\u5e7f\u4e49\u8ba1\u5212\u7684\u6267\u884c\u7f16\u8bd1\u4e3a\u7ecf\u5178\u8ba1\u5212\u4efb\u52a1[7\u300183\u300184]\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684\u7ecf\u5178\u8ba1\u5212\u5668\u6765\u6709\u6548\u5730\u68c0\u67e5\u5148\u524d\u7684\u9a8c\u8bc1\u6761\u4ef6\u3002\u5f53\u884c\u52a8\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u5f71\u54cd\u65f6\uff0c\u8ba1\u5212\u9a8c\u8bc1\u5c06\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u8bc1\u660e\u6240\u6709\u53ef\u80fd\u7684\u8ba1\u5212\u6267\u884c\u90fd\u53ef\u4ee5\u8fbe\u5230\u76ee\u6807[14]\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c \u6a21\u578b\u68c0\u67e5 [16]\u548c*\u975e\u786e\u5b9a\u6027\u8ba1\u5212*\u662f\u5408\u9002\u7684\u65b9\u6cd5[38]\u3002 \u4e0e\u7ecf\u5178\u8ba1\u5212\u4e0d\u540c\uff0c\u7ecf\u5178\u8ba1\u5212\u4e0e\u7279\u5b9a\u8ba1\u5212\u5b9e\u4f8b\u76f8\u5173\u8054\uff0c\u5e7f\u4e49\u8ba1\u5212\u4e5f\u53ef\u4ee5\u5728\u4e00\u7ec4\u4e0d\u540c\u7684\u8ba1\u5212\u5b9e\u4f8b\u4e0a\u6267\u884c\u3002\u9a8c\u8bc1\u901a\u7528\u8ba1\u5212\u4efb\u52a1\u4e0a\u7684\u901a\u7528\u8ba1\u5212\u9700\u8981\u5728\u4efb\u52a1\u4e2d\u5305\u542b\u7684\u6240\u6709\u5b9e\u4f8b\u4e2d\u6267\u884c\u8ba1\u5212\uff0c\u5e76\u9a8c\u8bc1\u8be5\u8ba1\u5212\u5df2\u89e3\u51b3\u6240\u6709\u95ee\u9898\u3002\u8fd9\u610f\u5473\u7740\u5728\u7ed9\u5b9a\u5b9e\u4f8b\u4e2d\u5bf9\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u7684\u9a8c\u8bc1\u5e94\u8be5\u662f\u6709\u6548\u7684\u8ba1\u5212\u5927\u5c0f\u7684\u591a\u9879\u5f0f\u3002\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u5b9e\u65bd\u4e00\u7ec4\u8ba1\u5212\u5b9e\u4f8b\u4e2d\u7684\u4e00\u822c\u8ba1\u5212\u7684\u6267\u884c\uff1a \u2022 *\u987a\u5e8f\u7684\uff0c*\u5373\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u4e2d\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u6267\u884c\u901a\u7528\u8ba1\u5212\u3002\u8fd9\u662f\u4f7f\u7528\u7ecf\u5178\u8ba1\u5212\u7a0b\u5e8f\u6267\u884c\u5e7f\u4e49\u8ba1\u5212\u6240\u9075\u5faa\u7684\u65b9\u6cd5\uff0c\u8be5\u8ba1\u5212\u5668\u5728\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u5305\u542b\u7684\u6bcf\u4e2a\u5355\u72ec\u8ba1\u5212\u5b9e\u4f8b\u4e2d\u4f9d\u6b21\u6267\u884c\u8ba1\u5212[83]\u3002 \u2022 *\u5e76\u884c\u3002*\u5e7f\u4e49\u8ba1\u5212\u662f\u5728\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7684\u5b9e\u4f8b\u96c6\u4e2d\u540c\u65f6\u6267\u884c\u7684\uff08\u4f8b\u5982\u6309\u7167\u4e00\u81f4\uff0c\u6216\u7136\u6216POMDP\u8ba1\u5212\uff0c\u5176\u4e2d\u52a8\u4f5c\u7684\u6267\u884c\u4f1a\u8fdb\u5c55\u5230\u4e00\u7ec4\u72b6\u6001[32]\uff09\u3002 *\u987a\u5e8f*\u65b9\u6cd5\u7684\u5b9e\u73b0\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u5176\u5b9e\u7528\u6027\u53d7\u5230\u5b9e\u4f8b\u6570\u7684\u9650\u5236\u3002\u5728*\u5e73\u884c*\u65b9\u6cd5\u5141\u8bb8\u5904\u7406\u66f4\u5927\u7684\u5b9e\u4f8b\u7684\u96c6\u5408\uff08\u6216\u5b9e\u4f8b\u4e0e\u672a\u7ed3\u5408\u7684\u5bf9\u8c61\u7684\u6570\u91cf\uff09\uff0c\u4f46\u5b83\u9700\u8981\u7cbe\u7ec6\u7684\u72b6\u6001\u8fdb\u5c55\u7684\u6280\u672f\uff0c\u5982\u4fe1\u5ff5\u8ddf\u8e2a[8]\u6216\u884c\u52a8\u6700\u65b0\u4fe1\u606f\u62bd\u8c61\u72b6\u6001[90]\u4e2d\u7684\u5e94\u7528\u3002\u5728\u5e76\u884c\u6267\u884c\u4e2d\uff0c\u8bc4\u4f30\u8868\u8fbe\u76ee\u6807\u6216\u884d\u751f\u7684\u6d41\u5229\u6027\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u5bf9\u72b6\u6001\u96c6\u8fdb\u884c\u516c\u5f0f\u8bc4\u4f30[32]\u3002\u9a8c\u8bc1\u5e7f\u4e49\u8ba1\u5212\u7684\u7b2c\u4e09\u79cd\u65b9\u6cd5\u662f\u663e\u793a\u6267\u884c\u524d\u540e\u7684\u67d0\u4e9b\u5c5e\u6027\uff0c\u4f8b\u5982\u5728\u4f7f\u7528***Hoare\u4e09\u5143\u7ec4\u7684*\u7a0b\u5e8f\u9a8c\u8bc1**\u4e2d[82]\u3002","title":"\u6267\u884c\u548c\u9a8c\u8bc1"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_3","text":"","title":"\u5b9e\u9a8c\u7b49\u8bc4\u4ef7\u6307\u6807"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_4","text":"\u7ed9\u5b9a\u4e00\u7ec4\u8ba1\u5212\u5b9e\u4f8b\uff0c\u4e0d\u540c\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u4e0e\u5176*\u4fdd\u6301\u4e00\u81f4*\uff0c\u4f8b\u5982\uff0c\u56fe11\u300112\u548c14\u4e2d\u6240\u793a\u7684\u4e0d\u540c\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u5c06\u4efb\u4f55\u9ad8\u5ea6\u7684\u780c\u5757\u5854\u5806\u53e0\u8d77\u6765\u3002\u7136\u540e\u6709\u5fc5\u8981\u5b9a\u4e49\u4e00\u79cd\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u91cf\u5316\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u7684\u80fd\u529b\uff0c\u4ee5\u9610\u660e\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u4e4b\u95f4\u7684\u504f\u597d\u3002 \u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u6307\u6807\u8bc4\u4f30\u5e7f\u4e49\u8ba1\u5212\u7684\u80fd\u529b\uff1a \u2022 \u8986\u76d6\u8303\u56f4\u3002*\u53ef\u4ee5\u5c06\u5e7f\u4e49\u8ba1\u5212\u7684*\u57df\u8986\u76d6\u8303\u56f4*\u8bc4\u4f30\u4e3a\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u89e3\u51b3\u7684\u5927\u5c0f\u4e3a*n \u7684\u95ee\u9898\u5b9e\u4f8b\u7684\u6570\u91cf\u9664\u4ee5\u76f8\u540c\u5927\u5c0f\u7684\u53ef\u89e3\u51b3\u95ee\u9898\u5b9e\u4f8b\u7684\u603b\u6570\u7684\u6bd4\u7387[90]\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u77e5\u9053\u8fd9\u4e9b\u6570\u5b57\u610f\u5473\u7740\u8981\u89e3\u51b3\u5927\u91cf\u8ba1\u5212\u4efb\u52a1\uff0c\u56e0\u6b64\u901a\u5e38\u5f88\u68d8\u624b\u3002\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u6280\u672f\u6839\u636e\u89e3\u51b3\u65b9\u6848\u5728\u57df\u5b9e\u4f8b\u7684*\u4ee3\u8868\u6027* \u6837\u672c\uff08\u79f0\u4e3a*\u6d4b\u8bd5\u96c6\uff09*\u4e0a\u7684\u6267\u884c\u6548\u679c\u6765\u4f30\u7b97\u89e3\u51b3\u65b9\u6848\u7684\u8d28\u91cf[61]\u3002\u5728\u901a\u7528\u8ba1\u5212\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7ec4\u6d4b\u8bd5\u5b9e\u4f8b\uff0c\u5e76\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\u6db5\u76d6\u4e86\u591a\u5c11\u5b9e\u4f8b\u3002\u5982\u679c\u6211\u4eec\u5c06\u53e4\u5178\u89c4\u5212\u5e08\u89c6\u4e3a\u5e7f\u4e49\u89c4\u5212\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\uff0c\u8fd9\u5c31\u662f\u5728\u56fd\u9645\u89c4\u5212\u7ade\u8d5b\uff08IPC\uff09[95]\u7684\u987a\u5e8f\u6700\u4f18\u8f68\u9053\u4e0a\u8fdb\u884c\u7684\u5de5\u4f5c\uff0c\u5728\u8be5\u7ade\u8d5b\u4e2d\uff0c\u89c4\u5212\u5e08\u6839\u636e\u4ed6\u4eec\u89e3\u51b3\u7684\u672a\u89c1\u5b9e\u4f8b\u7684\u6570\u91cf\u83b7\u5f97\u5956\u52b1\u3002 \u2022 \u590d\u6742\u6027\u3002*\u7531\u4e8e\u5e7f\u4e49\u8ba1\u5212\u662f\u7c7b\u4f3c\u4e8e\u7b97\u6cd5\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64\u53ef\u4ee5\u4ece\u7406\u8bba\u4e0a\u8bc4\u4f30\u5176\u590d\u6742\u6027\uff0c\u4f8b\u5982\uff0c\u4f7f\u7528\u6e10\u8fdb\u5206\u6790\u6765\u8868\u5f81\u5176\u8fd0\u884c\u65f6\u95f4\u548c\u7a7a\u95f4\u9700\u6c42\u5982\u4f55\u6839\u636e\u8f93\u5165\u4efb\u52a1\u7684\u5927\u5c0f\u800c\u589e\u957f\u3002\u5b9e\u9645\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7ed9\u5b9a\u7684\u8f93\u5165\u5b9e\u4f8b\u4e0a\u6267\u884c\u8ba1\u5212\u6240\u4ea7\u751f\u7684\u52a8\u4f5c\u5e8f\u5217\u7684\u957f\u5ea6\u6765\u91cf\u5316\u5e7f\u4e49\u8ba1\u5212\u7684\u590d\u6742\u6027\u3002\u7136\u540e\uff0c\u5f53\u7ed9\u5b9a\u5b9e\u4f8b\u7684\u5e8f\u5217\u957f\u5ea6\u5bf9\u4e8e\u8be5\u5b9e\u4f8b*\u6700\u5c0f\u65f6 \uff0c\u901a\u7528\u8ba1\u5212\u662f*\u6700\u4f73*\u7684\u3002\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4e0eIPC [95]\u7684\u987a\u5e8f\u4ee4\u4eba\u6ee1\u610f\u7684\u8f68\u8ff9\u6709\u5173\uff0c\u5728\u8be5\u8f68\u8ff9\u4e2d\uff0c\u8ba1\u5212\u8005\u7684\u6700\u7ec8\u4ef7\u503c\u88ab\u62a5\u544a\u4e3a\u6d4b\u8bd5\u96c6\u5b9e\u4f8b\u4e2d\u89e3\u51b3\u65b9\u6848\u7684\u7d2f\u79ef\u8d28\u91cf\u3002 \u2022 \u7b80\u6d01\u3002*\u53ef\u4ee5\u6839\u636e\u8ba1\u5212\u884c\u6570\uff0c\u63a7\u5236\u5668\u72b6\u6001\uff0c\u7b56\u7565\u89c4\u5219\u6216\u91cf\u5316\u53d8\u91cf\u6765\u8bc4\u4f30\u7ed9\u5b9a\u5e7f\u4e49\u8ba1\u5212\u7684\u5927\u5c0f\u3002\u5728ILP\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5f15\u5165\u4e86\u7c7b\u4f3c\u7684\u5ea6\u91cf\u6807\u51c6\uff0c\u4ee5\u91cf\u5316\u89e3\u51b3\u65b9\u6848\u7684*\u7d27\u51d1\u6027*\u548c*\u53ef\u8bfb\u6027 \uff0c\u5e76\u4e14\u66f4\u559c\u6b22\u89c4\u5219\u6570\u91cf\u6700\u5c11\u7684\u6a21\u578b\u548c\u89c4\u6a21\u6700\u5c0f\u7684\u89c4\u5219[63]\u3002\u6ce8\u610f\uff0c\u5728\u7ecf\u5178\u8ba1\u5212\u4e2d\uff0c\u8ba1\u5212\u7684\u6267\u884c\u590d\u6742\u5ea6\u76f4\u63a5\u4e0e\u5176\u89c4\u6a21\u76f8\u5bf9\u5e94\u3002","title":"\u8bc4\u4f30"},{"location":"Papers/A%20review%20of%20generalized%20planning/#solver","text":"\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff0c\u5e76\u56de\u987e\u4e86\u4e0d\u540c\u7684*\u8ba1\u5212\u91cd\u7528*\u6280\u672f\uff0c\u4ee5\u907f\u514d\u4ece\u5934\u5f00\u59cb\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u3002\u672c\u8282\u6700\u540e\u56de\u987e\u4e86\u9488\u5bf9\u901a\u7528\u8ba1\u5212\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u7279\u5b9a\u5b9e\u73b0\u3002 \u5728*\u81ea\u4e0a\u800c\u4e0b\u7684*\u5e7f\u4e49\u89c4\u5212\u7684\u641c\u7d22\u65b9\u6cd5\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8986\u76d6\u4e86\u6240\u6709\u5728\u5e7f\u4e49\u89c4\u5212\u4efb\u52a1\u7684\u5b9e\u4f8b\u3002\u53e6\u4e00\u65b9\u9762\uff0c \u81ea\u4e0b\u800c\u4e0a\u7684*\u65b9\u6cd5\u4e3a\u5355\u4e2a\u5b9e\u4f8b\uff08\u6216\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u5b9e\u4f8b\u5b50\u96c6\uff09\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u6269\u5927\u4e86\u89e3\u51b3\u65b9\u6848\u7684\u8986\u76d6\u8303\u56f4\uff0c\u76f4\u5230\u6db5\u76d6\u4e86\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\uff0c\u81ea\u4e0a\u800c\u4e0b\u7684\u65b9\u6cd5\u4e0e*\u79bb\u7ebf*\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6709\u5173\uff0c\u8be5\u7b97\u6cd5\u8ba1\u7b97\u6a21\u578b\u4ee5\u5728\u4e00\u6b21\u8fed\u4ee3\u4e2d\u8986\u76d6\u6574\u4e2a\u8f93\u5165\u5b9e\u4f8b\u96c6\uff0c\u4f8b\u5982\u51b3\u7b56\u6811\u7684\u5f52\u7eb3 10 \u3002\u81ea\u4e0b\u800c\u4e0a\u7684\u65b9\u6cd5\u4e0e*\u5728\u7ebf\u76f8\u5173 \u7248\u672c\u7684ML\u7b97\u6cd5\uff0c\u968f\u7740\u66f4\u591a\u8f93\u5165\u5b9e\u4f8b\u7684\u51fa\u73b0\uff0c\u8fed\u4ee3\u5730\u9012\u589e\u5730\u9002\u5e94\u6a21\u578b 11 \u3002 \u7528\u4e8e\u5e7f\u4e49\u8ba1\u5212\u7684\u81ea*\u9876\u5411\u4e0b*\u7b97\u6cd5\u901a\u5e38\u5728\u53ef\u80fd\u7684\u5e7f\u4e49\u8ba1\u5212\u4e2d\u641c\u7d22\u89e3\u51b3\u65b9\u6848\u3002\u6b64\u641c\u7d22\u7684\u521d\u59cb\u72b6\u6001\u662f *\u7a7a\u7684*\u901a\u7528\u8ba1\u5212\uff0c\u641c\u7d22\u64cd\u4f5c\u5458\u5728\u901a\u7528\u8ba1\u5212\u4e2d\u5efa\u7acb\u4e00\u4e2a\u6b65\u9aa4\uff08\u4f8b\u5982\uff0c\u5411\u7a0b\u5e8f\u6dfb\u52a0\u6307\u4ee4\uff0c\u5411FSC\u6dfb\u52a0\u65b0\u72b6\u6001\u6216\u5411FSC\u8fc7\u6e21\uff0c\u5411\u7b56\u7565\u6dfb\u52a0\u65b0\u89c4\u5219\u7b49\uff09 \u3002\u641c\u7d22\u7684\u76ee\u6807\u72b6\u6001\u96c6\u5305\u62ec\u6784\u5efa\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u89e3\u51b3\u7ed9\u5b9a\u5b9e\u4f8b\u96c6\u7684\u4efb\u4f55\u72b6\u6001\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u793a\u4f8b\u662f\u5c06\u901a\u7528\u8ba1\u5212\u7f16\u8bd1\u4e3a\u5176\u4ed6\u5f62\u5f0f\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff0c\u4f8b\u5982***\u7ecf\u5178\u8ba1\u5212* 12 \uff0c \u4e00\u81f4\u8ba1\u5212 13 \uff0c CSP 14 \u6216*Prolog\u7a0b\u5e8f* 15 **\u3002\u8fd9\u4e9b\u7f16\u8bd1\u5b9e\u73b0\u4e86\u5982\u4e0a\u6240\u8ff0\u7684\u641c\u7d22\u7a7a\u95f4\uff0c\u5e76\u53d7\u76ca\u4e8e\u73b0\u6210\u7684\u6c42\u89e3\u5668\uff08\u5177\u6709\u9ad8\u6548\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5\uff09\uff0c\u53ef\u4ee5\u5b8c\u6210\u5bf9\u901a\u7528\u8ba1\u5212\u7684\u641c\u7d22\u3002\u7f16\u8bd1\u65b9\u6cd5\u7684\u4e3b\u8981\u9650\u5236\u662f\u53ef\u4f38\u7f29\u6027\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u901a\u5e38\u4e3a\u4e86\u9650\u5236\u641c\u7d22\u8303\u56f4\uff0c\u9650\u5236\u53ef\u80fd\u7684\u5e7f\u4e49\u8ba1\u5212\u7684\u5927\u5c0f\uff08\u4f8b\u5982\uff0c\u7a0b\u5e8f\u884c\uff0c\u63a7\u5236\u5668\u72b6\u6001\uff0c\u7b56\u7565\u89c4\u5219\u6216\u91cf\u5316\u53d8\u91cf\u7684\u6700\u5927\u6570\u91cf\uff09\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u5728SATPLAN\u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u786e\u5b9a\u6700\u5927\u8ba1\u5212\u957f\u5ea6[78]\uff0c\u7136\u540e\u8fed\u4ee3\u5730\u589e\u52a0\u76f4\u5230\u627e\u5230\u89e3\u51b3\u65b9\u6848\u4e3a\u6b62\u3002 \u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u4ee3\u8868\u4e0d\u540c\u7684\u5171\u4eab\u76f8\u540c\u76ee\u6807\u7684\u8ba1\u5212\u5b9e\u4f8b\uff0c\u5219\u9488\u5bf9\u610f\u5916\u60c5\u51b5[1]\uff0c\u4e00\u81f4[69]\u548cPOMDP\u89c4\u5212[32]\u7684\u79bb\u7ebf\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u81ea*\u9876\u5411\u4e0b*\u7684\u5e7f\u4e49\u89c4\u5212\u7b97\u6cd5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u5e38\u4e0d\u662f\u5728\u53ef\u80fd\u7684\u6982\u62ec\u8ba1\u5212\u7684\u8303\u56f4\u5185\u800c\u662f\u5728\u53ef\u5230\u8fbe\u7684*\u4fe1\u5ff5\u72b6\u6001\u7684\u8303\u56f4\u5185*\u8fdb\u884c\u5bf9\u89e3\u51b3\u65b9\u6848\u7684\u641c\u7d22*\u3002 \u5728\u8fd9\u91cc\uff0c\u53ef\u4f38\u7f29\u6027\u9650\u5236\u6765\u81ea\u4ee5\u4e0b\u4e8b\u5b9e\uff1a\u53ef\u5230\u8fbe\u7684\u4fe1\u5ff5\u72b6\u6001\u96c6\u5408\u5feb\u901f\u589e\u957f\uff08\u7136\u540e\uff0c\u5229\u7528\u964d\u4f4e\u4e0d\u786e\u5b9a\u6027\u7684\u6280\u672f\u4ee5\u4f7f\u53ef\u80fd\u7684\u72b6\u6001\u96c6\u5408\u6613\u4e8e\u5904\u7406\u662f\u5173\u952e\uff09\u4ee5\u53ca\u96be\u4ee5\u5b9a\u4e49\u6709\u6548\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u4ee5\u63d0\u4f9b*\u6709\u7528\u7684 \u4f30\u8ba1\u503c\u4fe1\u5ff5\u72b6\u6001\u3002 \u81ea\u4e0b\u800c\u4e0a\u7684*\u5e7f\u4e49\u8ba1\u5212\u662f\u4e00\u79cd\u8fed\u4ee3\u548c\u589e\u91cf\u65b9\u6cd5\uff0c\u5176\u4e2d\uff081\uff09\u9009\u62e9\u5355\u4e2a\u8ba1\u5212\u5b9e\u4f8b\uff08\u6216\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u5b9e\u4f8b\u7684\u5b50\u96c6\uff09\uff0c\uff082\uff09\u8ba1\u7b97\u5176\u89e3\u51b3\u65b9\u6848\uff0c\uff083\uff09\u5e7f\u4e49\u6700\u540e\uff084\uff09\uff0c\u4e0e\u5148\u524d\u627e\u5230\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u5408\u5e76\u3002\u91cd\u590d\u6b64\u56db\u6b65\u8fc7\u7a0b\uff0c\u76f4\u5230\u6db5\u76d6\u4e86\u901a\u7528\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u3002\u5728*\u81ea\u4e0b\u800c\u4e0a*\u7684\u65b9\u6cd5\u662f\u4e0e*\u8ba1\u5212\u4fee\u590d [26]\uff0c \u57fa\u4e8e\u6848\u4f8b\u7684\u89c4\u5212 [11]\u548c*\u8fc1\u79fb\u5b66\u4e60* [70]\uff0c\u56e0\u4e3a\u5b83\u8fd8\u9700\u8981\u4e00\u4e9b\u673a\u5236\u6765\u786e\u5b9a\u4e3a\u4ec0\u4e48\u7ed9\u5b9a\u89e3\u51b3\u65b9\u6848\u4e0d\u6db5\u76d6\u7ed9\u5b9a\u5b9e\u4f8b\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9002\u7528\u4e8e\u901a\u7528\u8ba1\u5212\u7684\u9a8c\u8bc1\u673a\u5236\u9002\u5408\u5728\u7ed9\u5b9a\u8ba1\u5212[97]\u4e2d\u67e5\u627e\u65ad\u8a00\u5931\u8d25\u7684\u539f\u56e0\uff09\u4ee5\u53ca\u9002\u5e94\u7ed9\u5b9a\u89e3\u51b3\u65b9\u6848\u4ee5\u9002\u5e94\u65b0\u573a\u666f\u7684\u673a\u5236\uff08\u5728\u63a7\u5236\u77e5\u8bc6\u4e0d\u5b8c\u5584\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u89c4\u5212\u65f6\u4e5f\u5b58\u5728\u8fd9\u79cd\u9002\u5e94\u673a\u5236[99]\uff09\u3002 \u867d\u7136*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\u53ef\u4ee5\u4f5c\u4e3a\u6c47\u7f16\u5176\u4ed6\u5f62\u5f0f\u89e3\u51b3\u95ee\u9898\u6765\u5b9e\u73b0\uff0c*\u81ea\u4e0b\u800c\u4e0a\u7684*\u65b9\u6cd5\u9700\u8981\u4ee5\u63d0\u5347\u548c\u5408\u5e76\u8ba1\u5212\u7684\u5177\u4f53\u6280\u672f\u3002\u53e6\u4e00\u65b9\u9762\uff0c*\u81ea\u4e0b\u800c\u4e0a\u7684*\u65b9\u6cd5\u63d0\u4f9b\u4e86\u968f\u65f6\u968f\u5730\u7684\u884c\u4e3a\uff0c\u5e76\u4e14\u53ef\u80fd\u80fd\u591f\u81ea\u52a8\u6784\u5efa\u4e00\u5c0f\u7ec4\u5b9e\u4f8b\u4ee5\u5b9e\u73b0\u6cdb\u5316[91]\u3002","title":"Solver"},{"location":"Papers/A%20review%20of%20generalized%20planning/#srivastava","text":"\u4ece\u5934\u5f00\u59cb\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u91cd\u7528\u73b0\u6709\u89e3\u51b3\u65b9\u6848\u3002\u5373\u4f7f\u67d0\u4e2a\u901a\u7528\u8ba1\u5212\u4e0d\u6b63\u786e\uff08\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\u5b83\u65e0\u6cd5\u89e3\u51b3\u7ed9\u5b9a\u5b9e\u4f8b\uff09\u6216\u4e0d\u5b8c\u6574\uff08\u5b83\u6ca1\u6709\u5b9a\u4e49\u8981\u5728\u7ed9\u5b9a\u5b9e\u4f8b*\u4e0a\u5e94\u7528\u7684\u52a8\u4f5c*\uff09\uff0c\u5b83\u4e5f\u53ef\u80fd\u5305\u542b\u6709\u7528\u7684\u77e5\u8bc6\u3002\u4f8b\u5982\uff0c\u8ba1\u5212\u53ef\u80fd\u80fd\u591f\u89e3\u51b3\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7684\u5b50\u95ee\u9898\u6216\u7c7b\u4f3c\u5b9e\u4f8b\uff08\u4f8b\u5982\uff0c\u8fd9\u662f\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\uff09\uff0c\u6216\u8005\u5728\u8c03\u6574\u63a7\u4ef6\u4e2d\u7684\u6761\u4ef6\u540e\u89e3\u51b3\u65b0\u5b9e\u4f8b\u6d41\u7ed3\u6784\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u91c7\u7528\u5148\u524d\u5b58\u5728\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u53d6\u5f97\u56de\u62a5\u3002 \u5728\u8fd9\u65b9\u9762\uff0c*\u81ea\u4e0b\u800c\u4e0a\u7684*\u901a\u7528\u8ba1\u5212\u65b9\u6cd5\u914d\u5907\u4e86\u4f7f\u8ba1\u5212\u9002\u5e94\u672a\u77e5\u6848\u4f8b\u5e76\u9010\u6b65\u589e\u52a0\u5176\u8986\u76d6\u8303\u56f4\u7684\u673a\u5236[91]\u3002\u53e6\u4e00\u65b9\u9762\uff0c*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\u53ef\u4ee5\u4ece\u90e8\u5206\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece*\u7a7a\u7684*\u5e7f\u4e49\u8ba1\u5212\u5f00\u59cb\u3002\u8fd9\u8868\u660e\u7f29\u5c0f\u641c\u7d22\u7a7a\u95f4\u548c/\u6216\u96c6\u4e2d\u641c\u7d22\u8fc7\u7a0b\u5f88\u6709\u7528\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u89e3\u51b3\u66f4\u5177\u6311\u6218\u6027\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1[83\uff0c84]\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u56de\u987e\u91cd\u7528\u5148\u524d\u627e\u5230\u7684\u8ba1\u5212\u7684\u4e0d\u540c\u6280\u672f\uff1a \u2022 \u7f16\u8bd1\u3002*\u5f53\u73b0\u6709\u7684\u5e7f\u4e49\u8ba1\u5212\u5177\u6709\u5e7f\u4e49\u7b56\u7565\u7684\u5f62\u5f0f\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u7f16\u8bd1\u4e3a\u4e00\u7ec4PDDL\u6d3e\u751f\u7684\u8c13\u8bcd\uff0c\u7b56\u7565\u4e2d\u7684\u6bcf\u4e2a\u89c4\u5219\u90fd\u5305\u542b\u4e00\u4e2a\u8c13\u8bcd\uff0c\u8be5\u8c13\u8bcd\u6355\u83b7\u5e94\u91c7\u53d6\u884c\u52a8\u7684\u4e0d\u540c\u60c5\u51b5[45]\u3002\u56fe13\u8bf4\u660e\u4e86\u6b64\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u663e\u793a\u4e86PDDL\u6d3e\u751f\u8c13\u8bcd\u7684\u793a\u4f8b\uff0c\u8be5\u8c13\u8bcd\u8868\u793a\u7528\u4e8e\u5806\u53e0\u5854\u5f0f\u5854\u76842\u89c4\u5219\u7b56\u7565\u3002\u6211\u4eec\u8fd8\u89e3\u91ca\u8bf4\uff0c\u901a\u8fc7**We also explained that existinggeneralized plans in the form of programs, FSCs or AND/OR graphs, canbe encoded into a classical PDDL planning task by computing the crossproduct between the corresponding automata and the original planningtask [^7, 83, 77]\u8ba1\u7b97\u76f8\u5e94\u81ea\u52a8\u673a\u4e0e\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e4b\u95f4\u7684\u53c9\u79ef\uff0c\u53ef\u4ee5\u5c06\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u5f62\u5f0f\u7684\u73b0\u6709\u5e7f\u4e49\u8ba1\u5212\u7f16\u7801\u4e3a\u7ecf\u5178PDDL\u8ba1\u5212\u4efb\u52a1* \u3002[7\uff0c83\uff0c77] \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u989d\u5916\u72b6\u6001\u53d8\u91cf\u5c06\u6dfb\u52a0\u5230\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u4ee5\u8868\u793a\u4e0e\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u76f8\u5bf9\u5e94\u7684\u81ea\u52a8\u673a\u7684\u72b6\u6001\u548c\u8f6c\u6362\u3002 \u2022 *\u8ba1\u5212\u884c\u52a8*\u7ecf\u5178\u8ba1\u5212\u4e2d\u7684\u52a8\u4f5c\u4e0d\u4ec5\u4ee3\u8868\u539f\u59cb\u52a8\u4f5c\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4ee3\u8868\u5e7f\u4e49\u8ba1\u5212\u672c\u8eab\u3002\u56fe20\u663e\u793a\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684\u8ba1\u5212\u52a8\u4f5c\uff0c\u8be5\u52a8\u4f5c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u901a\u7528\u8ba1\u5212\uff0c\u8be5\u901a\u7528\u8ba1\u5212\u7528\u4e8e\u5c06\u4e00\u4e2ablockworld\u4e2d\u7684\u4efb\u4f55block\u5806\u53e0\u8d77\u6765\uff0c\u5373\u89e3\u51b3\u4efb\u4f55blockworld\u5b9e\u4f8b\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u7b2c\u4e00\u6b65\u3002","title":"\u91cd\u7528\u5e7f\u4e49\u8ba1\u5212Srivastava\u7684\u65b9\u6cd5"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_5","text":"*\u5b8f\u89c2\u884c\u52a8*\u662f\u8ba1\u7b97\u6709\u6548\u89e3\u51b3\u4e0d\u540c\u8ba1\u5212\u4efb\u52a1\u7684\u5e38\u8bc6\u7684\u6700\u65e9\u5efa\u8bae\u4e4b\u4e00[25]\u3002\u6587\u732e\u4e2d\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u7528\u4e8e\u8ba1\u7b97\u5b8f\u52a8\u4f5c[12\uff0c18\uff0c47\uff0c13]\uff0c\u4f46\u662f\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\uff1a \uff081\uff09\u89e3\u51b3\u4e00\u7ec4\u7ecf\u5178\u89c4\u5212\u5b9e\u4f8b\u7684\u8bad\u7ec3\u96c6\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5171\u4eab\u76f8\u540c\u7684\u9886\u57df\u7406\u8bba\uff0c\u4f46\u73b0\u6210\u7684\u7ecf\u5178\u8ba1\u5212\u7a0b\u5e8f\u548c \uff082\uff09\u5728\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\u4e2d\u786e\u5b9a\u7ecf\u5e38\u4e00\u8d77\u4f7f\u7528\u7684\u52a8\u4f5c\u7684\u5b50\u5e8f\u5217\u3002 \u5b8f\u52a8\u4f5c\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u4eec\u5177\u6709\u6807\u51c6\u7ecf\u5178\u8ba1\u5212\u52a8\u4f5c\u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5b83\u4eec\u76f4\u63a5\u6dfb\u52a0\u5230\u57df\u7406\u8bba\u4e2d\uff0c\u800c\u65e0\u9700\u989d\u5916\u7684\u72b6\u6001\u53d8\u91cf\u3002\u8fd9\u4f7f*\u5b8f\u52a8\u4f5c*\u6210\u4e3a\u91cd\u7528\u4e00\u822c\u8ba1\u5212\u77e5\u8bc6\u7684\u5b9e\u7528\u800c\u5f3a\u5927\u7684\u65b9\u6cd5\uff1a\u4e00\u65b9\u9762\uff0c\u4f7f\u7528\u5b8f\u52a8\u4f5c\u8fdb\u884c\u8ba1\u5212\u6216\u6267\u884c\u548c\u9a8c\u8bc1\u5305\u542b\u5b8f\u52a8\u4f5c\u7684\u8ba1\u5212\u90fd\u4e0d\u9700\u8981\u7279\u5b9a\u7684\u7b97\u6cd5\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6dfb\u52a0\u4e0d\u5b8c\u6574\u6216\u4e0d\u6b63\u786e\u7684\u5b8f\u64cd\u4f5c\u5c06\u4e0d\u4f1a\u963b\u6b62\u8ba1\u5212\u8005\u627e\u5230\u53ef\u89e3\u51b3\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u8ba1\u5212\u8005\u603b\u662f\u53ef\u4ee5\u4f7f\u7528\u539f\u59cb\u64cd\u4f5c\u6765\u6784\u5efa\u89e3\u51b3\u65b9\u6848\u3002 \u5b9a\u4e49\u603b\u4f53\u8ba1\u5212\u7b56\u7565\u7684\u5b8f\u52a8\u4f5c\u7684\u4e3b\u8981\u9650\u5236\u662f\u5176\u987a\u5e8f\u6267\u884c\u6d41\u7a0b\uff0c\u8be5\u6d41\u7a0b\u8fc7\u4e8e\u4e25\u683c\u3002\u5373\u4f7f\u5c06\u5b8f\u64cd\u4f5c\u53c2\u6570\u5316\uff0c\u6d89\u53ca\u5b8f\u7684\u89e3\u51b3\u65b9\u6848\u4e5f\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u5176\u4ed6\u95ee\u9898\u3002","title":"\u8ba1\u7b97\u5b8f\u52a8\u4f5c"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_6","text":"*\u5e7f\u4e49\u7b56\u7565*\u662f\u4e00\u7ec4\u89c4\u5219\uff0c\u5b83\u5b9a\u4e49\u72b6\u6001\u548c\u76ee\u6807\u7684\u6620\u5c04\uff0c\u6210\u4f18\u9009*\u52a8\u4f5c\u63a5\u4e0b\u6765\u8981\u6267\u884c\u3002*\u50cf\u5b8f\u52a8\u4f5c\u4e00\u6837\uff0c\u5e7f\u4e49\u7b56\u7565\u4e5f\u5141\u8bb8\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ece\u5171\u4eab\u76f8\u540c\u57df\u7406\u8bba\u7684\u7ecf\u5178\u89c4\u5212\u5b9e\u4f8b\u7684\u4e00\u7ec4\u89e3\u51b3\u65b9\u6848\u4e2d\u5f97\u51fa 18 19 20 \u3002\u4f46\u662f\uff0c\u901a\u7528\u7b56\u7565\u6bd4\u5b8f\u52a8\u4f5c\u66f4\u7075\u6d3b\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5e26\u6709\u5206\u652f\u548c\u5faa\u73af\u7684\u6267\u884c\u6d41\u3002","title":"\u8ba1\u7b97\u5e7f\u4e49\u7b56\u7565"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_7","text":"\u6709\u9650\u72b6\u6001\u63a7\u5236\u5668 \uff08FSC\uff09\u53ef\u4ee5\u7528\u6709\u9650\u6570\u91cf\u7684\u5185\u5b58\u6765\u6cdb\u5316\u7b56\u7565 21 \u3002\u5177\u6709\u5355\u4e00\u72b6\u6001\u7684FSC\u8868\u793a\u7b56\u7565\uff0c\u5373\u65e0\u5185\u5b58\u63a7\u5236\u5668\u3002FSC\u7684\u9644\u52a0\u63a7\u5236\u5668\u72b6\u6001\u4e3a\u5b83\u4eec\u63d0\u4f9b\u4e86\u5185\u5b58\uff0c\u5141\u8bb8\u5728\u7ed9\u5b9a\u76f8\u540c\u89c2\u5bdf\u503c\u7684\u60c5\u51b5\u4e0b\u91c7\u53d6\u4e0d\u540c\u7684\u64cd\u4f5c\u3002FSC\u5f62\u5f0f\u4e3b\u4e49\u4e5f\u53ef\u4ee5\u901a\u8fc7*\u8c03\u7528\u5806\u6808*\u8fdb\u884c\u6269\u5c55\uff0c\u4ee5\u8868\u793a\u5206\u5c42\u548c\u9012\u5f52\u89e3\u51b3\u65b9\u6848 9 \u3002 \u73b0\u6709\u7684\u7528\u4e8e\u8ba1\u7b97\u7528\u4e8e\u5e7f\u4e49\u89c4\u5212\u7684FSC\u7684\u7b97\u6cd5\u9075\u5faa*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u5bf9FSC \u8fdb\u884c*\u7f16\u7a0b*\u4e0e\u9a8c\u8bc1\u76f8\u4ea4\u9519\uff0c\u56e0\u6b64\u5b83\u4eec\u7d27\u5bc6\u5730\u96c6\u6210\u4e86\u89c4\u5212\u548c\u5f52\u7eb3\u3002\u4e3a\u4e86\u4f7fFSC\u7684\u8ba1\u7b97\u6613\u4e8e\u5904\u7406\uff0c\u5b83\u4eec\u9650\u5236\u4e86\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u7684\u7a7a\u95f4\uff0c\u4ece\u800c\u9650\u5236\u4e86FSC\u7684\u6700\u5927\u5927\u5c0f\u3002\u53e6\u5916\uff0c\u4ed6\u4eec\u5f3a\u52a0\u5b9e\u4f8b\u6765\u89e3\u51b3\u5171\u4eab\u95ee\u9898\uff0c\u4e0d\u4ec5\u662f\u9886\u57df\u7406\u8bba\uff08\u52a8\u4f5c\u548c\u8c13\u8bcd\u65b9\u6848\uff09\uff0c\u800c\u4e14\u662f\u6d41\u5229\u7684\u96c6\u5408 8 \u6216*\u53ef\u89c2\u5bdf*\u6d41\u5229\u7684\u5b50\u96c6 13 \u3002 \u7528\u4e8e\u5e7f\u4e49\u8ba1\u5212\u7684FSC\u7684\u8ba1\u7b97\u5305\u62ec\u5c06\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7f16\u8bd1\u4e3a\u53e6\u4e00\u79cd\u95ee\u9898\u89e3\u51b3\u5f62\u5f0f\u7684\u5de5\u4f5c\uff0c\u56e0\u6b64\u5b83\u4eec\u5c06\u4ece\u73b0\u6210\u6c42\u89e3\u5668\u7684\u6700\u65b0\u8fdb\u5c55\u4e2d\u53d7\u76ca\uff08\u4f8b\u5982\uff0c \u7ecf\u5178\u8ba1\u5212 8 \uff0c \u4e00\u81f4\u8ba1\u5212 13 \uff0c CSP 14 \u6216*Prolog\u7a0b\u5e8f* 15 \uff09\u3002\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u9700\u8981FSC\u7684\u884c\u4e3a\u89c4\u8303\uff0c\u8be5\u89c4\u8303\u5305\u62ec\u4ee5\u4e0b\u5206\u7c7b\u7684\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff1a\uff081\uff09\u63a5\u53d7\u6240\u6709\u5bfc\u81f4\u76ee\u6807\u8fbe\u5230\u6ee1\u610f\u72b6\u6001\u7684\u5408\u6cd5\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff1b\uff082\uff09\u62d2\u7edd\u5305\u542b\u91cd\u590d\u914d\u7f6e\u7684\u4e8b\u4ef6\u6267\u884c\u5386\u53f2\uff08\u8868\u660e\u65e0\u9650\u5faa\u73af\uff09\uff0c\u5e76\u4e14\u65e0\u6cd5\u6269\u5c55\uff08\u6307\u793a\u6b7b\u89d2\uff09[43]\u3002","title":"\u8ba1\u7b97\u6709\u9650\u72b6\u6001\u63a7\u5236\u5668"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_8","text":"\u7a0b\u5e8f\u63d0\u9ad8\u4e86FSC\u7684\u53ef\u8bfb\u6027\uff0c\u5b83\u4eec\u5c06\u63a7\u5236\u6d41\u7ed3\u6784\u4e0e\u539f\u59cb\u52a8\u4f5c\u5206\u5f00\u3002\u50cfFSC\u4e00\u6837\uff0c\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u6309\u7167*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\u8fdb\u884c\u8ba1\u7b97\uff0c\u4f8b\u5982\uff0c\u5229\u7528\u5bf9\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u76f8\u540c\u7684\u5b9e\u4f8b\u8fdb\u884c\u7f16\u7a0b\u5e76\u9a8c\u8bc1\u7a0b\u5e8f\u7684\u7f16\u8bd1 8 \u3002 DSPlanners 4 5 \u662f\u5c06\u7a0b\u5e8f\u6982\u62ec\u4e3a\u8ba1\u5212\u7684\u6700\u65e9\u5c1d\u8bd5\u4e4b\u4e00\u3002\u4e00\u4e2a*DSPlanner* \u662f\u53ef\u4ee5\u5305\u542b\u7684if-then-else\u548cwhile\u7ed3\u6784\u57df\u7684\u5177\u4f53\u65b9\u6848\u3002\u8fd9\u4e9b\u6784\u9020\u6839\u636e\u5173\u4e8e\u5f53\u524d\u72b6\u6001\u548c/\u6216\u8ba1\u5212\u4efb\u52a1\u76ee\u6807\u7684FOL\u67e5\u8be2\u5206\u652f\u548c\u5faa\u73af\u7a0b\u5e8f\u7684\u6267\u884c\u63a7\u5236\u6d41\u3002 \u8be5\u7b97\u6cd5\u8ba1\u7b97DSPlanners\u88ab\u79f0\u4e3a\u63d0\u70bc\u5e76\u5b9e\u73b0\u4e86\u4e00\u79cd*\u81ea\u4e0b\u800c\u4e0a*\u7684\u4e00\u7ec4\u5171\u4eab\u540c\u4e00\u4e2a\u57df\u7406\u8bba\u53e4\u5178\u7684\u89c4\u5212\u5b9e\u4f8b\u7684\u65b9\u6cd5\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u63d0\u70bc\u8ba1\u7b97\u8be5\u5b9e\u4f8b\u5e76\u6574\u5408\u5176\u90e8\u5206\u6709\u5e8f\u89c4\u5212\u5230\u73b0\u6709DSPlanner\u5982\u4e0b\u3002\u9996\u5148\uff0cDistill \u63d0\u8d77\u90e8\u5206\u8ba2\u8d2d\u7684\u8ba1\u5212\uff0c\u9009\u62e9\u4e0e\u73b0\u6709DSPlanner \u76f8\u5339\u914d\u7684\u53c2\u6570\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u53c2\u6570\u5316\uff0c\u5219Distill \u5c06\u53d8\u91cf\u540d\u79f0\u968f\u673a\u5206\u914d\u7ed9\u8ba1\u5212\u4e2d\u7684\u5bf9\u8c61\u3002\u7136\u540eDistill \u5c1d\u8bd5\u786e\u5b9a*\u8bed\u53e5*\u548c\u5c55\u5f00\u7684*\u5faa\u73af\u8fed\u4ee3* \u89e3\u51b3\u65b9\u6848\u4e2d\u5c06\u5176\u66ff\u6362\u4e3a\u76f8\u5e94\u7684\u63a7\u5236\u6d41\u7ed3\u6784\u3002 Srivastava\u7b49\u4eba\u5728\u5e7f\u4e49\u89c4\u5212\u65b9\u9762\u7684\u5de5\u4f5c\u3002\u5728\u7a0b\u5e8f\u4e2d\u5f15\u5165\u4e86\u4e00\u79cd\u5f3a\u5927\u800c\u7d27\u51d1\u7684\u7ed3\u6784\uff0c\u79f0\u4e3a*\u9009\u62e9\u52a8\u4f5c\uff0c*\u8be5\u7ed3\u6784\u5c06\u5b58\u5728\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7ed3\u5408\u5728\u4e00\u8d77 22 23 \u3002\u8fd9\u9879\u5de5\u4f5c\u4e2d\u7684\u8f93\u5165\u5b9e\u4f8b\u88ab\u8868\u793a\u4e3a\u5e26\u6709\u4f20\u9012\u95ed\u5305\u7684\u62bd\u8c61FOL\u8868\u793a\u5f62\u5f0f\u3002\u8fd9\u79cd\u5f62\u5f0f\u4e3b\u4e49\u5141\u8bb8\u7528\u65e0\u9650\u591a\u4e2a\u5bf9\u8c61\u6765\u8868\u793a\u8ba1\u5212\u4efb\u52a1\uff0c\u5e76\u4fdd\u8bc1\u6b64\u7c7b\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u5177\u6709\u666e\u904d\u6027\u3002 Srivastava\u7b49\u4eba\u7684\u5e7f\u4e49\u89c4\u5212\u7b97\u6cd5\u3002\u5b9e\u65bd*\u81ea\u4e0b\u800c\u4e0a\u7684*\u7b56\u7565\u3002\u8be5\u7b97\u6cd5\u4ece\u4e00\u4e2a\u7a7a\u7684\u5e7f\u4e49\u8ba1\u5212\u5f00\u59cb\uff0c\u7136\u540e\u901a\u8fc7\u8bc6\u522b\u5b83\u65e0\u6cd5\u89e3\u51b3\u7684\u5b9e\u4f8b\uff0c\u8c03\u7528\u7ecf\u5178\u8ba1\u5212\u5668\u6765\u89e3\u51b3\u8be5\u5b9e\u4f8b\uff0c\u5c06\u83b7\u5f97\u7684\u89e3\u51b3\u65b9\u6848\u5f52\u7eb3\u5e76\u5c06\u5176\u5408\u5e76\u56de\u5e7f\u4e49\u8ba1\u5212\u4e2d\uff0c\u4ece\u800c\u9010\u6b65\u589e\u52a0\u5176\u8986\u76d6\u8303\u56f4\u3002\u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u76f4\u5230\u751f\u6210\u4e00\u4e2a\u6db5\u76d6\u6574\u4e2a\u671f\u671b\u7c7b\u5b9e\u4f8b\u7684\u5e7f\u4e49\u8ba1\u5212\uff08\u6216\u8fbe\u5230\u8ba1\u7b97\u8d44\u6e90\u7684\u9884\u5b9a\u4e49\u9650\u5236\u65f6\uff09\u3002 \u7a0b\u5e8f\u548cFSC\u90fd\u53ef\u4ee5\u7f16\u5165\u5e73\u9762\u9886\u57df\u7406\u8bba 7 8 9 \u3002\u5c31\u50cf\u653f\u7b56\u4e00\u6837\uff0c\u5f53\u7ed9\u5b9a\u7a0b\u5e8f\uff08\u6216FSC\uff09\u6b63\u786e\u65f6\uff0c\u8fd9\u79cd\u7f16\u8bd1\u662f*\u5b89\u5168\u7684*\uff08\u4e0d\u4f1a\u5c06\u53ef\u89e3\u51b3\u7684\u8ba1\u5212\u5b9e\u4f8b\u8f6c\u5316\u4e3a\u4e0d\u53ef\u89e3\u51b3\u7684\uff09\u3002 \u88681\u603b\u7ed3\u4e86\u4e00\u822c\u8ba1\u5212\u7684\u5df2\u5ba1\u67e5\u65b9\u6cd5\u3002\u8be5\u8868\u6307\u793a\u7ed9\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\u8868\u793a\u5f62\u5f0f\u662f\u5426\u5141\u8bb8\u4f7f\u7528 \u53d8\u91cf \uff0c**\u63a7\u5236\u6d41\u7684\u7c7b\u578b**\u4ee5\u53ca\u89e3\u51b3\u65b9\u6848\u7684**\u6267\u884c**\u662f\u5426\u9700\u8981\u7279\u5b9a\u7684\u673a\u5236\u3002 \u6839\u636e\u89e3\u7684\u8868\u793a\u65b9\u6cd5\u5206\u7c7bSummary of the","title":"\u8ba1\u7b97\u7a0b\u5e8f"},{"location":"Papers/A%20review%20of%20generalized%20planning/#diverse-approaches-for-generalized-planning","text":"according to the solution representations\uff1a Variables Control-flow Execution Classical plan ------ ------ Ground actions Macro-Actions Action parameters ------ Lifted actions Generalized Policy Rule parameters Branching and loops Lifted rules DSPlanners Existential Branching and loops Lifted predicatesand lifted actions FSCs Quantified Branching and loops Derived predicates Hierarchical FSCs Quantified and parameters Branching, loops and call stack Derived predicates and Parameter passing Programs Quantified and parameters Branching, loops and call stack Derived predicates and Parameter passing","title":"diverse approaches for generalized planning"},{"location":"Papers/A%20review%20of%20generalized%20planning/#pomdp","text":"*\u7b26\u5408\u8ba1\u5212*\u53ef\u8ba1\u7b97\u4e00\u7cfb\u5217\u4e0e\u4e0d\u540c\u521d\u59cb\u72b6\u6001\u4e00\u81f4\u7684\u52a8\u4f5c\u5e8f\u5217[69]\u3002\u4e0e\u7ecf\u5178\u8ba1\u5212\u6a21\u578b\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u521d\u59cb\u72b6\u6001\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u8fd9\u901a\u8fc7\u6761\u6b3e\u6765\u63cf\u8ff0\u3002\u4e00\u4e2a*\u7b26\u5408\u7684\u8ba1\u5212*\u662f\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\uff0c\u89e3\u51b3\u4e86\u5168\u90e8\u7531\u4e00\u5957\u6ee1\u8db3\u8fd9\u4e9b\u6761\u6b3e\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u7ed9\u51fa\u4e86\u7ecf\u5178\u89c4\u5212\u4efb\u52a1\u3002\u56e0\u4e3a\u52a8\u4f5c\u5177\u6709\u6761\u4ef6\u5f71\u54cd\uff0c\u6240\u4ee5\u6267\u884c\u76f8\u540c\u52a8\u4f5c\u5e8f\u5217\u53ef\u4ee5\u4e3a\u4e0d\u540c\u7684\u521d\u59cb\u72b6\u6001\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u7b26\u5408\u8ba1\u5212\u7684\u4e3b\u8981\u65b9\u6cd5\u662f\uff1a \u2022 *\u51cf\u5c11\u4e0d\u786e\u5b9a\u6027\u3002*\u5c06\u7b26\u5408\u8ba1\u5212\u7f16\u5236\u4e3a\u7ecf\u5178\u8ba1\u5212\u4ee5\u8fdb\u884c\u8ba1\u7b97\uff1a \\1. \u6d88\u9664\u6240\u6709\u76f8\u5173\u4e0d\u786e\u5b9a\u6027\u7684\u8ba1\u5212*\u524d\u7f00*\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u524d\u7f00\u5e94\u7528\u4e4b\u540e\uff0c\u53ea\u6709\u4e00\u4e2a\u72b6\u6001\uff08\u6216\u4e0e\u5b9e\u73b0\u76ee\u6807\u76f8\u5173\u7684\u72b6\u6001\u53d8\u91cf\u5b50\u96c6\u7684\u81f3\u5c11\u4e00\u4e2a\u5c40\u90e8\u72b6\u6001\uff09\u662f\u53ef\u80fd\u7684[69]\u3002 2.\u8ba1\u5212*\u540e\u7f00*\uff0c\u8be5*\u540e\u7f00*\u5c06\u72b6\u6001\uff08\u6216\u90e8\u5206\u72b6\u6001\uff09\uff08\u5df2\u6d88\u9664\u76f8\u5173\u4e0d\u786e\u5b9a\u6027\u7684\u72b6\u6001\uff09\u8f6c\u6362\u4e3a\u5b9e\u73b0\u4e00\u81f4\u8ba1\u5212\u4efb\u52a1\u76ee\u6807\u7684\u72b6\u6001\u3002 \u2022 \u4fe1\u4ef0\u4f20\u64ad\u3002*\u5728\u4fe1\u5ff5\u72b6\u6001\u7a7a\u95f4\u4e2d\u641c\u7d22\uff0c\u5176\u4e2d\uff1a *\u6839*\u4fe1\u5ff5\u72b6\u6001\u8868\u793a\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u7684\u96c6\u5408\uff0c*\u76ee\u6807 \u662f\u4fe1\u5ff5\u72b6\u6001st\uff0c\u4fe1\u5ff5\u72b6\u6001\u4e2d\u7684\u6240\u6709\u53ef\u80fd\u72b6\u6001\u90fd\u6ee1\u8db3\u8ba1\u5212\u4efb\u52a1\u7684\u76ee\u6807\u6761\u4ef6[39\uff0c15] \u3002\u5c3d\u7ba1\u5148\u524d\u7684\u65b9\u6cd5\u5229\u7528\u4e86\u7ecf\u5178\u7684\u8ba1\u5212\u673a\u5236\uff0c\u4f46\u6b64\u65b9\u6cd5\u9700\u8981\uff081\uff09\u7d27\u51d1\u8868\u793a\u548c\u66f4\u65b0\u4fe1\u5ff5\u72b6\u6001\u7684\u673a\u5236\uff0c\u4ee5\u53ca\uff082\uff09\u6709\u6548\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u6765\u6307\u5bfc\u5728\u4fe1\u5ff5\u72b6\u6001\u7a7a\u95f4\u4e2d\u8fdb\u884c\u641c\u7d22\u3002 *\u5076\u7136\u6027\u8ba1\u5212*\u901a\u8fc7\u611f\u77e5\u6a21\u578b\u6269\u5c55\u4e86\u4e00\u81f4\u7684\u8ba1\u5212\u6a21\u578b\u3002\u8be5\u611f\u6d4b\u6a21\u578b\u662f\u4e00\u79cd\u529f\u80fd\uff0c\u53ef\u4ee5\u5c06\u72b6\u6001\u64cd\u4f5c\u5bf9\uff08\u7cfb\u7edf\u7684\u771f\u5b9e\u72b6\u6001\u548c\u6700\u540e\u5b8c\u6210\u7684\u64cd\u4f5c\uff09\u6620\u5c04\u5230\u4e00\u7ec4\u975e\u7a7a\u7684\u89c2\u5bdf\u503c\u4e2d[1\uff0c2]\u3002\u89c2\u5bdf\u4ec5\u63d0\u4f9b\u6709\u5173\u7cfb\u7edf\u771f\u5b9e\u72b6\u6001\u7684\u90e8\u5206\u4fe1\u606f\uff0c\u56e0\u4e3a\u76f8\u540c\u7684\u89c2\u5bdf\u53ef\u80fd\u5904\u4e8e\u4e0d\u540c\u7684\u72b6\u6001\u3002\u4e00\u4e2a*\u5076\u7136\u7684\u8ba1\u5212*\u5fc5\u987b\u6ee1\u8db3\uff1a \u2022\u5b83\u7684\u6267\u884c\u4ee5\u6709\u9650\u7684\u6b65\u9aa4\u8fbe\u5230\u76ee\u6807\u4fe1\u5ff5\u72b6\u6001\uff08\u4fe1\u5ff5\u4e2d\u7684\u6240\u6709\u72b6\u6001\u90fd\u6ee1\u8db3\u8ba1\u5212\u4efb\u52a1\u7684\u76ee\u6807\u6761\u4ef6\uff09\u3002 \u2022\u5206\u652f\u548c\u5faa\u73af\u7684\u6761\u4ef6\u662f\u6307\u89c2\u5bdf\u503c\uff08\u6216\u53ef\u89c2\u5bdf\u5230\u7684\u72b6\u6001\u53d8\u91cf\u7684\u5b50\u96c6\uff09\u3002 \u50cf\u5e7f\u4e49\u8ba1\u5212\u4e00\u6837\uff0c\u6216\u6709\u8ba1\u5212\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u4f8b\u5982\u7b56\u7565\uff0cAND / OR\u56fe\uff0cFSC\u6216\u7a0b\u5e8f[10]\u3002 *POMDP\u89c4\u5212*\u6269\u5c55\u4e86\u5076\u7136\u6027\u89c4\u5212\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5141\u8bb8\u901a\u8fc7\u6982\u7387\u5206\u5e03\u5bf9\u4e0d\u786e\u5b9a\u6027\u8fdb\u884c\u7f16\u7801\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u96c6\u548c\u53ef\u80fd\u7684\u89c2\u5bdf\u503c\u96c6[32]\u3002\u5c31\u8fd9\u4e00\u70b9\u800c\u8a00\uff0c *\u8d1d\u53f6\u65af*\u89c4\u5219\u7528\u4e8e\u5728\u52a8\u4f5c\u5e94\u7528\u4e4b\u540e\u6216\u89c2\u5bdf\u5f53\u524d\u72b6\u6001\u4e4b\u540e\u66f4\u65b0\u4fe1\u5ff5\u72b6\u6001\u3002POMDP\u89e3\u51b3\u65b9\u6848\u7684\u76ee\u7684\u662f\u4f7f\u76ee\u6807\u7684\u9884\u671f\u6210\u672c\u6700\u5927\u5316\uff0c\u56e0\u6b64POMDP\u89c4\u5212\u6210\u4e3a\u4f18\u5316\u4efb\u52a1\u3002 \u6700\u4f73\u7684\u4e00\u81f4\u6027/\u4e34\u65f6/ POMDP\u8ba1\u5212\u662f\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u5c06\u5b9e\u73b0\u76ee\u6807\u7684\u6210\u672c\u6700\u5c0f\u5316\u7684\u8ba1\u5212\u3002\u5e7f\u4e49\u89c4\u5212\u53ef\u4ee5\u770b\u4f5c\u662f\u7279\u9063\u961f/ POMDP\u89c4\u5212\u7684\u4e00\u4e2a\u7279\u5b9a\u793a\u4f8b\uff0c\u5176\u4e2d\uff1a\uff081\uff09\u8981\u89e3\u51b3\u7684\u5b9e\u4f8b\u5177\u6709\u76f8\u540c\u7684\u76ee\u6807\uff0c\uff082\uff09\u5b9e\u4f8b\u7684\u521d\u59cb\u72b6\u6001\u662f\u4e00\u7ec4\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u4e2d\u7684\u4e00\u4e2a\u72b6\u6001\u3002 \uff083\uff09\u6709\u5145\u5206\u7684\u53ef\u89c2\u5bdf\u6027\uff0c\u56e0\u6b64\u5206\u652f\u548c\u5faa\u73af\u7684\u6761\u4ef6\u53ef\u4ee5\u5f15\u7528\u4efb\u4f55\u72b6\u6001\u53d8\u91cf\u7684\u503c\u3002","title":"\u90e8\u5206\u53ef\u89c2\u5bdf\u6027\u4e0b\u7684\u8ba1\u5212\uff1a\u4e00\u81f4\uff0c\u5076\u7136\u548cPOMDP\u8ba1\u5212"},{"location":"Papers/A%20review%20of%20generalized%20planning/#62","text":"\u81ea\u4ece\u8ba1\u5212\u7814\u7a76\u5f00\u59cb\u4ee5\u6765\uff0c*\u63a7\u5236\u77e5\u8bc6*\u5df2\u663e\u793a\u51fa\u6709\u6548\u7684\u65b9\u6cd5\u6765\u63d0\u9ad8\u8ba1\u5212\u8005\u7684\u53ef\u6269\u5c55\u6027[5\uff0c66]\u3002IPC-2002\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\uff0c\u5728\u8be5\u8ba1\u5212\u4e2d\uff0c\u5229\u7528**\u9886\u57df\u7279\u5b9a\u63a7\u5236\u77e5\u8bc6\uff08DCK\uff09**\u7684\u8ba1\u5212\u8005\u6bd4\u6700\u65b0\u7684\u8ba1\u5212\u8005\u8981\u5feb\u51e0\u4e2a\u6570\u91cf\u7ea7[54]\u3002 DCK [7]\u7684\u7c7b\u4f3c\u4e8e\u7b97\u6cd5\u7684\u8868\u793a\u5f62\u5f0f\u4e0e\u5e7f\u4e49\u8ba1\u5212\u975e\u5e38\u76f8\u4f3c\u3002\u5b9e\u9645\u4e0a\uff0cDCK\u548c\u5e7f\u4e49\u8ba1\u5212\u90fd\u4ee3\u8868\u4e86\u9002\u7528\u4e8e\u89e3\u51b3\u4e0d\u540c\u8ba1\u5212\u5b9e\u4f8b\u7684\u901a\u7528\u7b56\u7565\u3002\u5c3d\u7ba1\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u5f88\u5c0f\uff0c\u4f46\u53ef\u4ee5\u58f0\u79f0\u5e7f\u4e49\u8ba1\u5212\u662f\u4e00\u79cd*\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c \u4e0d\u9700\u8981\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u5e94\u7528\u8ba1\u5212\u7a0b\u5e8f\u3002\u53e6\u4e00\u65b9\u9762\uff0cDCK\u5bf9\u5e94\u4e8e*\u90e8\u5206\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848 \uff08\u5305\u542b\u975e\u786e\u5b9a\u6027\u6784\u9020\u548c\u8ba1\u5212\u8005\u5728\u751f\u6210\u8ba1\u5212\u65f6\u8981\u786e\u5b9a\u7684\u7f3a\u5931/\u672a\u5b8c\u6210\u90e8\u5206\uff09\u3002\u56e0\u6b64\uff0cDCK\u8981\u6c42\u8ba1\u5212\u4eba\u5458\u9488\u5bf9\u7ed9\u5b9a\u7684\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u63d0\u4f9b**\u5b8c\u5168\u6307\u5b9a\u7684**\u89e3\u51b3\u65b9\u6848\u3002 \u5b9a\u4e49DCK\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u5df2\u89e3\u51b3\u5b9e\u4f8b\u7684\u6570\u636e\u5e93\u3002 \u5b9e\u9645\u4e0a\uff0c\u5e7f\u4e49\u8ba1\u5212\u7684\u53e6\u4e00\u79cd\u89c2\u70b9\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7d27\u51d1\u7684\u8ba1\u5212\u5e93\u3002 \u57fa\u4e8e\u6848\u4f8b\u7684\u8ba1\u5212 \uff08CBP\uff09\u662f\u4e00\u79cd\u81ea\u52a8\u5316\u8ba1\u5212\u7684\u65b9\u6cd5\uff0c\u65e8\u5728\u901a\u8fc7\u91cd\u7528\u4ee5\u524d\u627e\u5230\u7684\u89e3\u51b3\u65b9\u6848\u6765\u8282\u7701\u8ba1\u7b97\u91cf[11]\u3002 CBP\u7cfb\u7edf\u5b9e\u73b0\u4e86\u8bc6\u522b\u4e0e\u8981\u89e3\u51b3\u7684\u5b9e\u4f8b\u76f8\u4f3c\u7684\u5b9e\u4f8b\u7684*\u68c0\u7d22*\u673a\u5236\uff0c\u4ee5\u53ca\u4fee\u590d\u4e86\u6240\u68c0\u7d22\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u7f3a\u9677\u4ee5\u4f7f\u5176\u9002\u7528\u4e8e\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u7684*\u9002\u5e94*\u673a\u5236\u3002CBP\u7684\u68c0\u7d22\u548c\u9002\u5e94\u673a\u5236\u4e0e*\u81ea\u4e0b\u800c\u4e0a*\u6709\u5173\u5e7f\u4e49\u89c4\u5212\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u8bc6\u522b\u7ed9\u5b9a\u7684\u5e7f\u4e49\u89c4\u5212\u4f55\u65f6\u4e0d\u8986\u76d6\u5b9e\u4f8b\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u8c03\u6574\u4ee5\u8986\u76d6\u5b9e\u4f8b[97\uff0c90]\u3002\u9075\u5faa\u72ec\u7acb\u4e8e\u57df\u7684\u65b9\u6cd5\u4e3a\u5927\u578b\u6848\u4f8b\u5e93\u5f00\u53d1\u6b64\u7c7b\u673a\u5236\u4ecd\u7136\u662f\u4e00\u4e2a\u6311\u6218\u3002 \u8868\u793a\u548c\u5229\u7528DCK\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\u4e3b\u4e49\u662f***\u5206\u5c42\u8ba1\u5212***\u3002\u4e0e\u7ecf\u5178\u8ba1\u5212\u4e00\u6837\uff0c\u5206\u5c42\u8ba1\u5212\u5904\u7406\u786e\u5b9a\u6027\u548c\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u4f46\u4f7f\u7528\u4e0d\u540c\u7684\u4efb\u52a1\u8868\u793a\u5f62\u5f0f\u3002\u5728\u4f20\u7edf\u7684\u8ba1\u5212\u884c\u52a8\u4e2d\uff0c\u5176\u52a8\u4f5c\u7684\u524d\u63d0\u6761\u4ef6\u662f\u540e\u7ee7\u6761\u4ef6\uff0c\u800c\u8ba1\u5212\u8005\u7684\u9009\u62e9\u548c\u6392\u5e8f\u662f\u7531\u8ba1\u5212\u8005\u81ea\u52a8\u8ba1\u7b97\u7684\uff0c\u800c *\u5c42\u7ea7\u8ba1\u5212\u5219*\u6307\u5b9a\u4e86\u89e3\u51b3\u65b9\u6848\u7684\u8349\u56fe\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\uff081\uff09\u8981\u8ffd\u6c42\u7684\u5b50\u76ee\u6807\u7684\u989d\u5916\u4fe1\u606f[87]\uff0c\u548c/\u6216\uff082\uff09\u53ef\u4ee5\u91c7\u53d6\u54ea\u4e9b\u884c\u52a8\u6765\u5b9e\u73b0\u7ed9\u5b9a\u7684\u5b50\u76ee\u6807[66]\u3002 \u5728\u5206\u5c42\u8ba1\u5212\u4e2d\uff0c\u8981\u89e3\u51b3\u7684\u4efb\u52a1\u7684\u8868\u793a\u5f62\u5f0f\u4e0e\u89e3\u51b3\u65b9\u6848\u4e4b\u95f4\u7684\u5206\u79bb\u5e76\u4e0d\u50cf\u4f20\u7edf\u8ba1\u5212\u4e2d\u90a3\u4e48\u6e05\u6670\u3002\u5c42\u6b21\u8ba1\u5212\u4efb\u52a1\u53ef\u4ee5\u7406\u89e3\u4e3a\u90e8\u5206\u6307\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\uff08\u6216\u7279\u5b9a\u4e8e\u9886\u57df\u7684\u8ba1\u5212\u8005\uff09\uff0c\u5176\u4e2d\uff0c\u901a\u8fc7\u8fd0\u884c\u5c42\u6b21\u8ba1\u5212\u5668\u53ef\u4ee5\u786e\u5b9a\u8ba1\u5212\u7684\u7f3a\u5931\u90e8\u5206\u3002\u53e4\u5178\u8ba1\u5212\u8005\u7684\u76ee\u7684\u662f\u8ba1\u7b97\u5c06\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e3a\u76ee\u6807\u72b6\u6001\u7684\u4e00\u7cfb\u5217\u9002\u7528\u52a8\u4f5c\uff0c\u800c\u5206\u7ea7\u8ba1\u5212\u8005\u5219\u8ba1\u7b97\u51fa\u4ee5\u4e0b\u7684\u9002\u7528\u52a8\u4f5c\u7684\u5e8f\u5217\uff1a\uff081\uff09\u5c06\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e3a\u76ee\u6807\u72b6\u6001\uff0c\u4ee5\u53ca\uff082\uff09 \uff0c\u6b64\u8f6c\u6362\u7b26\u5408\u7ed9\u5b9a\u7684\u5c42\u6b21\u7ed3\u6784\u3002","title":"6.2\u5177\u6709\u63a7\u5236\u77e5\u8bc6\u7684\u8ba1\u5212"},{"location":"Papers/A%20review%20of%20generalized%20planning/#golog","text":"\u5728Golog\u7cfb\u5217\u52a8\u4f5c\u8bed\u8a00\u5df2\u88ab\u8bc1\u660e\u662f\u5bf9\u81ea\u4e3b\u4ee3\u7406 24 \u7684\u9ad8\u7ea7\u63a7\u5236\u4e00\u4e2a\u6709\u7528\u7684\u5e73\u5747\u503c\u3002\u9664\u4e86\u6761\u4ef6\uff0c\u5faa\u73af\u548c\u9012\u5f52\u8fc7\u7a0b\u5916\uff0cGolog \u7a0b\u5e8f\u7684\u4e00\u4e2a\u6709\u8da3\u529f\u80fd\u662f\u5b83\u4eec\u53ef\u4ee5\u5305\u542b\u4e0d\u786e\u5b9a\u7684\u90e8\u5206\u3002\u7532\u679c\u6d1b\u7a0b\u5e8f\u4e0d\u9700\u8981\u8868\u793a\u5b8c\u5168\u6307\u660e\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5b83\u7684\u4e00\u4e2a\u8349\u56fe\uff0c\u5176\u4e2d\u975e\u786e\u5b9a\u6027\u90e8\u5206\u662f\u95f4\u9699\u8981\u7531\u7cfb\u7edf\u88ab\u586b\u5145\u3002\u6b64\u529f\u80fd\u4f7fGolog \u7a0b\u5e8f\u5458\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u4ee5\u4e0b\u5404\u9879\u4e4b\u95f4\u9009\u62e9\u5408\u9002\u7684\u5e73\u8861\u70b9\uff1a \u2022\u786e\u5b9a\u9884\u5b9a\u4e49\u7684\u884c\u4e3a\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u8f83\u5927\u7684\u7a0b\u5e8f\u3002 \u2022\u901a\u8fc7\u641c\u7d22\u4fdd\u7559\u7cfb\u7edf\u8981\u89e3\u51b3\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u66f4\u957f\u7684\u8ba1\u7b97\u65f6\u95f4\u3002 \u57fa\u672c\u7684Golog \u89e3\u91ca\u5668\u4f7f\u7528PROLOG\u56de\u6eaf\u673a\u5236\u6765\u89e3\u6790\u641c\u7d22\u3002\u8fd9\u79cd\u673a\u5236\u57fa\u672c\u4e0a\u76f8\u5f53\u4e8e\u76f2\u76ee\u641c\u7d22\uff0c\u56e0\u6b64\uff0c\u5728\u89e3\u51b3\u8ba1\u5212\u4efb\u52a1\u65f6\uff0c\u9664\u4e86\u6700\u5c0f\u7684\u5b9e\u4f8b\u5927\u5c0f\u4e4b\u5916\uff0c\u5b83\u5f88\u5feb\u5c31\u53d8\u5f97\u4e0d\u53ef\u884c\u4e86\u3002IndiGolog [80]\u6269\u5c55\u4e86Golog\uff0c\u4f7f\u5176\u5305\u542b\u8bb8\u591a\u5185\u7f6e\u7684\u8ba1\u5212\u673a\u5236\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u5229\u7528Golog\u548cPDDL\u4e4b\u95f4\u7684\u8bed\u4e49\u517c\u5bb9\u6027 26 \uff0c\u5e76\u4e14\u53ef\u4ee5\u5d4c\u5165PDDL\u89c4\u5212\u5668 27 \u6765\u89e3\u51b3\u672c\u8d28\u4e0a\u662f\u7ec4\u5408\u7684\u5b50\u95ee\u9898\u3002","title":"GOLOG"},{"location":"Papers/A%20review%20of%20generalized%20planning/#64","text":"\u7a0b\u5e8f\u7efc\u5408\u662f\u81ea\u52a8\u751f\u6210\u6ee1\u8db3\u7ed9\u5b9a\u9ad8\u7ea7\u89c4\u8303\u7684\u7a0b\u5e8f\u7684\u4efb\u52a1\u3002\u8be5\u7814\u7a76\u9886\u57df\u7684\u8bb8\u591a\u60f3\u6cd5\u90fd\u4e0e\u5e7f\u4e49\u89c4\u5212\u6709\u5173\uff0c\u4f46\u662f\u7531\u4e8e\u5e7f\u4e49\u89c4\u5212\u9075\u5faa\u9886\u57df\u65e0\u5173\u7684\u65b9\u6cd5\u5e76\u9488\u5bf9\u72b6\u6001\uff0c\u52a8\u4f5c\u548c\u76ee\u6807\u5904\u7406\u5176\u81ea\u5df1\u7684\u7279\u5b9a\u8868\u793a\u5f62\u5f0f\uff0c\u56e0\u6b64\u5b83\u4eec\u5e76\u4e0d\u7acb\u5373\u9002\u7528\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u56de\u987e\u4e86\u4e24\u79cd\u6700\u6210\u529f\u7684\u7a0b\u5e8f\u7efc\u5408\u65b9\u6cd5\uff1a \u2022 \u793a\u4f8b\u7f16\u7a0b \uff08PbE\uff09\uff0c\u8ba1\u7b97\u4e0e\u4e00\u7ec4\u7ed9\u5b9a\u7684\u8f93\u5165\u8f93\u51fa\u793a\u4f8b\u4e00\u81f4\u7684\u7a0b\u5e8f\u96c6\u3002\u8f93\u5165-\u8f93\u51fa\u793a\u4f8b\u5bf9\u4e8e\u975e\u7a0b\u5e8f\u5458\u6765\u8bf4\u5f88\u76f4\u89c2\uff0c\u53ef\u4ee5\u521b\u5efa\u7a0b\u5e8f\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u89c4\u8303\u4f7f\u7a0b\u5e8f\u7efc\u5408\u6bd4\u5bf9\u62bd\u8c61\u7a0b\u5e8f\u72b6\u6001\u8fdb\u884c\u63a8\u7406\u66f4\u5bb9\u6613\u5904\u7406\u3002PbE\u6280\u672f\u5df2\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u90e8\u7f72\uff0c\u5e76\u4e14\u662fOffice 2013\u4e2dExcel \u7684Flash Fill \u529f\u80fd\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u529f\u80fd\u53ef\u751f\u6210\u7528\u4e8e\u5b57\u7b26\u4e32\u8f6c\u6362\u7684\u7a0b\u5e8f 28 \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u79f0\u4e3a**version space algebras** \u7248\u672c\u7a7a\u95f4\u4ee3\u6570 29 \u7684\u6570\u636e\u7ed3\u6784\u4ee5\u53d7\u9650\u7684\u7279\u5b9a\u9886\u57df\u8bed\u8a00\uff08DSL\uff09\u7b80\u6d01\u5730\u8868\u793a\u4e86\u4e00\u7ec4\u5408\u6210\u7a0b\u5e8f\u3002\u4f7f\u7528\u5b9e\u73b0\u5206\u800c\u6cbb\u4e4b\u65b9\u6cd5\u7684\u7279\u5b9a\u9886\u57df\u641c\u7d22\u6765\u8ba1\u7b97\u7a0b\u5e8f\u3002 \u2022\u5728\u201c \u901a\u8fc7\u8349\u56fe\u8fdb\u884c\u7f16\u7a0b \uff08PbS\uff09\u201d\u4e2d\uff0c\u7a0b\u5e8f\u5458\u63d0\u4f9b\u4e86\u90e8\u5206\u6307\u5b9a\u7684\u7a0b\u5e8f\uff0c\u5373\u8868\u793a\u4e00\u79cd\u5b9e\u73b0\u7684\u9ad8\u7ea7\u7ed3\u6784\u4f46\u7559\u4e0b\u672a\u5b9a\u4e49\u7ec6\u8282\u7684\u4f4e\u7ea7\u7ec6\u8282\u7684\u7a0b\u5e8f\uff0c\u8be5\u7ec6\u8282\u7531\u5408\u6210\u5668\u786e\u5b9a 30 \u3002\u8fd9\u79cd\u5f62\u5f0f\u7684\u7a0b\u5e8f\u7efc\u5408\u4f9d\u9760\u4e00\u79cd\u79f0\u4e3a**SKETCH**\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u7ed8\u5236\u90e8\u5206\u7a0b\u5e8f\u3002PbS\u5728\u7531\u4e24\u4e2a\u901a\u4fe1\u7684SAT\u89e3\u7b97\u5668\uff08\u5f52\u7eb3\u5408\u6210\u5668\u548c\u9a8c\u8bc1\u5668\uff09\u6784\u5efa\u7684\u5408\u6210\u9a8c\u8bc1\u5faa\u73af\u4e0a\u5b9e\u73b0\u4e86\u53cd\u4f8b\u9a71\u52a8\u7684\u8fed\u4ee3\uff0c\u4ee5\u81ea\u52a8\u751f\u6210\u6d4b\u8bd5\u8f93\u5165\u5e76\u786e\u4fdd\u7a0b\u5e8f\u6ee1\u8db3\u5b83\u4eec\u3002\u5c3d\u7ba1\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u7684\u5408\u6210\u6bd4NP\u7684\u5b8c\u6210\u56f0\u96be\uff0c\u4f46\u8fd9\u79cd\u53cd\u4f8b\u9a71\u52a8\u7684\u641c\u7d22\u4ec5\u5728\u89e3\u51b3\u4e86\u5c11\u6570SAT\u5b9e\u4f8b\u540e\u5c31\u7ec8\u6b62\u4e86\u8bb8\u591a\u5b9e\u9645\u95ee\u9898 31 \u3002 \u4ee5\u524d\u7684\u5de5\u4f5c\u662f*\u901a\u8fc7\u793a\u4f8b*\u8fdb\u884c *\u7f16\u7a0b\u7684*\u4ece\u8f93\u5165/\u8f93\u51fa\u793a\u4f8b\u4e2d\u5408\u6210\u89e3\u6790\u5668\u7684\u6280\u672f 32 \u3002","title":"6.4\u7a0b\u5e8f\u7efc\u5408"},{"location":"Papers/A%20review%20of%20generalized%20planning/#_9","text":"\u5e7f\u4e49\u8ba1\u5212\u80fd\u591f\u89e3\u51b3\u7ecf\u5178\u8ba1\u5212\u8303\u56f4\u4e4b\u5916\u7684\u8ba1\u5212\u4efb\u52a1\uff1a\u5b83\u4eec\u53ef\u4ee5\u89e3\u51b3\u5305\u542b\u591a\u4e2a\u5b9e\u4f8b\u6216\u5bf9\u8c61\u6570\u91cf\u4e0d\u53d7\u9650\u5236\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u4ee5\u53ca\u5177\u6709\u90e8\u5206\u53ef\u89c2\u5bdf\u6027\u548c\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5c\u7684\u8ba1\u5212\u4efb\u52a1[10\uff0c44\uff0c 91\uff0c43]\u3002\u5e7f\u4e49\u89c4\u5212 \u8fd9\u662f\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u79cd\u6709\u5e0c\u671b\u7684\u8303\u4f8b\uff0c\u4f46\u662f\u9700\u8981\u8fdb\u4e00\u6b65\u7814\u7a76\u4ee5\u6709\u6548\u89e3\u51b3\u4efb\u610f\u8ba1\u5212\u4efb\u52a1\u3002 \u2022 ***\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7684\u8868\u793a**\u3002*\u9690\u5f0f\u8868\u793a\u5141\u8bb8\u5904\u7406\u5927\u91cf\u8ba1\u5212\u5b9e\u4f8b\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u8868\u793a\u9700\u8981\u7279\u5b9a\u7684\u72b6\u6001\u6f14\u8fdb\u673a\u5236\u4ee5\u53ca\u6d4b\u8bd5\u76ee\u6807\u548c\u64cd\u4f5c\u524d\u63d0\u6761\u4ef6\u7684\u673a\u5236\uff0c\u8fd9\u4e9b\u673a\u5236\u4e0e\u73b0\u6210\u7684\u8ba1\u5212\u7a0b\u5e8f\u4e2d\u4f20\u7edf\u5b9e\u73b0\u7684\u673a\u5236\u4e0d\u540c\u3002 \u9664\u4e86\u8868\u793a\u5f62\u5f0f\u4e3b\u4e49\u4e4b\u5916\uff0c\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7ed9\u5b9a\u7684\u5b9e\u4f8b\u96c6\u8fd8\u4f1a\u5f71\u54cd\u7528\u4e8e\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u6027\u80fd\u3002\u6709\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528*\u6781\u7aef\u6848\u4f8b*\u6784\u5efa\u5c11\u91cf\u4ee3\u8868\u6027\u5b9e\u4f8b*\u3002*\u6781\u7aef\u60c5\u51b5\u5c06\u72b6\u6001\u53d8\u91cf\u63a8\u5230\u5176\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\uff0c\u56e0\u6b64\u4ec5\u5728\u90a3\u4e9b\u7279\u5b9a\u72b6\u6001\u4e0b\u624d\u8003\u8651\u8ba1\u5212\u884c\u4e3a\uff0c\u800c\u4e0d\u662f\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5b9e\u4f8b\u3002\u5bf9\u4e8e\u4e00\u822c\u60c5\u51b5\uff0c\u5982\u6b64\u9891\u7e41\u5730\u81ea\u52a8\u8bc6\u522b\u5c11\u91cf\u4ee3\u8868\u6027\u5b9e\u4f8b\u5f88\u590d\u6742\uff0c\u56e0\u6b64\u4ecd\u7136\u9700\u8981\u624b\u52a8\u5b8c\u6210\u5bf9\u901a\u7528\u8ba1\u5212\u4efb\u52a1\u4e2d\u4ee3\u8868\u6027\u5b9e\u4f8b\u7684\u9009\u62e9\u3002 \u81ea\u52a8\u786e\u5b9a\u5b9e\u4f8b\u4ee5\u8ba1\u7b97\u901a\u7528\u89e3\u51b3\u65b9\u6848\u7684\u7b2c\u4e00\u6b65\u662f\u8868\u5f81\u5c06\u7b56\u7565\u901a\u7528\u5316\u4e3a\u5176\u4ed6\u95ee\u9898\u7684\u6761\u4ef6[9]\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e3a\u81ea\u52a8\u751f\u6210\u8ba1\u7b97\u6982\u62ec\u5316\u89e3\u51b3\u65b9\u6848\u6240\u9700\u7684\u6700\u7b80\u5355\u5b9e\u4f8b\u96c6\u7684\u65b9\u6cd5\u7684\u5f00\u53d1\u6253\u5f00\u4e86\u5927\u95e8\u3002 \u2022 *\u5e7f\u4e49\u8ba1\u5212\u7684\u8ba1\u7b97\u3002*\u5f53\u524d\u7528\u4e8e\u5e7f\u4e49\u89c4\u5212\u7684\u7b97\u6cd5\u53ea\u80fd\u89e3\u51b3\u76f8\u5bf9\u8f83\u5c0f\u7684\u4efb\u52a1\u3002\u8fdb\u4e00\u6b65\u7814\u7a76\u5e7f\u4e49\u89c4\u5212\u7684\u7279\u5b9a\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u81ea\u52a8\u8bc6\u522b\u76f8\u5173\u72b6\u6001\u53d8\u91cf\uff08\u4f8b\u5982\uff0c\u67e5\u627e\u53ef\u80fd\u51fa\u73b0\u5728\u5faa\u73af\u548c\u5206\u652f\u6761\u4ef6\u4e0b\u7684\u72b6\u6001\u53d8\u91cf\u7684\u5b50\u96c6\uff09\u6216\u76ee\u6807\u7684\u81ea\u52a8\u5e8f\u5217\u5316\uff0c\u53ef\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u6982\u62ec\u8ba1\u5212\u8005\u3002 \u7279\u5b9a\u9886\u57df\u7684\u5206\u89e3\u8fd8\u53ef\u4ee5\u89e3\u51b3\u66f4\u5177\u6311\u6218\u6027\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1[83]\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u5206\u89e3\u76ee\u524d\u662f\u624b\u5de5\u5b8c\u6210\u7684\uff0c\u5982\u4f55\u4ece\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u7684\u8868\u793a\u4e2d\u81ea\u52a8\u8ba1\u7b97\u5b83\u4eec\u4ecd\u7136\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c*\u89c4\u5212\u5730\u6807*\u53ef\u80fd\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u7814\u7a76\u65b9\u5411[40]\u3002\u53e6\u4e00\u79cd\u63d0\u9ad8\u5e7f\u4e49\u89c4\u5212\u8005\u53ef\u6269\u5c55\u6027\u7684\u5de5\u4f5c\u7ebf\u662f\u63a2\u7d22\u5c06\u7ed9\u5b9a\u89c4\u5212\u4efb\u52a1\u8f6c\u6362\u4e3a\u8f83\u5c0f\u7684\u4efb\u52a1\u7684\u65b9\u6cd5\uff0c\u8be5\u4efb\u52a1\uff081\uff09\u53ef\u901a\u8fc7\u76f8\u540c\u7684\u5e7f\u4e49\u8ba1\u5212\u89e3\u51b3\uff0c\u800c\uff082\uff09\u5177\u6709\u66f4\u6613\u4e8e\u5904\u7406\u7684\u641c\u7d22\u7a7a\u95f4[9]\u3002 \u5173\u4e8e\u901a\u7528\u8ba1\u5212\u7684\u91cd\u7528\uff0c\u5173\u952e\u95ee\u9898\u662f\u9488\u5bf9\u7ed9\u5b9a\u8ba1\u5212\u5b9e\u4f8b\u7684\u7ed9\u5b9a\u901a\u7528\u8ba1\u5212\u7684\u9002\u7528\u6027\u8bc4\u4f30\uff08\u4f8b\u5982*\u57fa\u4e8e\u6848\u4f8b\u7684\u8ba1\u5212\u7684*\u76f8\u4f3c\u6027\u5ea6\u91cf*\uff09\uff0c*\u4ee5\u53ca\u4e0d\u5b8c\u6574\u6216\u4e0d\u6b63\u786e\u7684\u901a\u7528\u8ba1\u5212\u7684\u91cd\u7528\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u73b0\u6709\u7684\u5e7f\u4e49\u8ba1\u5212\u7528\u4f5c*\u7279\u5b9a*\u4e8e*\u9886\u57df\u7684\u8bd5\u63a2\u6cd5*\u6216*\u9996\u9009\u9879*\u662f\u4e00\u79cd\u66f4\u5b89\u5168\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8feb\u4f7f\u6bcf\u4e2a\u65f6\u523b\u90fd\u9075\u5faa\u5e7f\u4e49\u8ba1\u5212\u3002 \u2022 ***\u5e7f\u4e49\u8ba1\u5212\u7684\u8868\u793a**\u3002*\u4e0e\u4ec5\u5305\u542b\u4e00\u7cfb\u5217\u5730\u9762\u884c\u52a8\u7684\u8ba1\u5212\u76f8\u6bd4\uff0c\u5305\u542b\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7684\u901a\u7528\u8ba1\u5212\u9700\u8981\u66f4\u590d\u6742\u7684\u6267\u884c\u673a\u5236\uff0c\u4f46\u5b83\u4eec\u53ef\u80fd\u80fd\u591f\u4ee3\u8868\u66f4\u591a\u4efb\u52a1\u3002\u5bf9\u4e8e\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u76f8\u540c\u7684\u4e3b\u5f20\u4e5f\u9002\u7528\u4e8e\u90e8\u5206\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff08\u5176\u6267\u884c\u66f4\u4e3a\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u8ba1\u5212\u8005\uff09\u3002\u5bf9\u4e8e\u4e00\u822c\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u786e\u5b9a\u66f4\u9002\u5408\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u7684\u7c7b\u578b\u4e5f\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\u3002 \u5e7f\u4e49\u8ba1\u5212\u7684\u8ba1\u7b97\u53d7\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7ed9\u5b9a\u7684\u5b9e\u4f8b\u7684\u7ea6\u675f\uff0c\u4f46\u4e5f\u53d7\u7ed9\u5b9a\u72b6\u6001\uff0c\u52a8\u4f5c\u548c\u76ee\u6807\u7f16\u7801\u7684\u8868\u793a\u5f62\u5f0f\u7684\u7ea6\u675f\u3002\u81ea\u52a8\u751f\u6210\u66ff\u4ee3\u8868\u793a\u4ee5\u5141\u8bb8\u66f4\u6709\u6548\u5730\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u662f\u4e00\u4e2a\u6709\u524d\u9014\u7684\u7814\u7a76\u65b9\u5411\uff0c\u4e0e\u4ee5\u524d\u6709\u5173AI\u7684\u7814\u7a76\uff08\u4f8b\u5982ILP \u8c13\u8bcd\u53d1\u660e [19]\u6216ML\u4e2d\u7684*\u7279\u5f81\u751f\u6210\uff09*\u6709\u591a\u4e2a\u94fe\u63a5\u3002 \u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u5e7f\u4e49\u8ba1\u5212\u662f\u751f\u6210\u578b\u6a21\u578b\uff0c\u53ef\u4ee5\u89e3\u51b3\u8ba1\u5212\u4e4b\u5916\u7684\u4efb\u52a1\u3002\u4f8b\u5982\uff0c\u7ed9\u5b9a\u901a\u7528\u8ba1\u5212\u548c\u6267\u884c\u8ddf\u8e2a\uff0c\u53ef\u4ee5\u5c06*\u89e3\u6790\u4efb\u52a1*\u5b9a\u4e49\u4e3a\u786e\u5b9a\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u7ed9\u5b9a\u7684\u901a\u7528\u8ba1\u5212\u751f\u6210\u8be5\u6267\u884c\u8ddf\u8e2a\u7684\u4efb\u52a1\u3002 \u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u5bf9\u8c61\u5206\u7c7b[55]\u6709\u7528\uff0c\u4f46\u5bf9\u76ee\u6807\u8bc6\u522b[76]\u548c\u4efb\u52a1\u5206\u7c7b[86]\u4e5f\u6709\u7528\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0e\u7528\u4e8e\u5e7f\u4e49\u8ba1\u5212\u7684\u8ba1\u7b97\u975e\u5e38\u7c7b\u4f3c\u7684\u6280\u672f\u6765\u5b9e\u73b0\u8fd9\u4e9b\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u3002\u51fa\u4e8e\u540c\u6837\u7684\u8003\u8651\uff0c\u4ee5\u524d\u7684\u5de5\u4f5c\u662f*\u901a\u8fc7\u793a\u4f8b*\u8fdb\u884c *\u7f16\u7a0b\u7684*\u4ece\u8f93\u5165/\u8f93\u51fa\u793a\u4f8b\u4e2d\u5408\u6210\u89e3\u6790\u5668\u7684\u6280\u672f 32 \u3002\u5bf9\u4e8e\u5c0f\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u7684\u7ecf\u5178\u89c4\u5212\u5df2\u7ecf\u89e3\u51b3\u4e86\u8be5\u4efb\u52a1[85]\uff0c\u4f46\u662f\uff0c\u5fc5\u987b\u505a\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\u4ee5\u6784\u5efa\u66f4\u5177\u6311\u6218\u6027\u7684\u89e3\u6790\u5668\u3002 \u53c2\u8003 Alexandre Albore, H \u0301ector Palacios, and Hector Geffner. A translation-based approach to contingent planning. InIJCAI, 2009 \u21a9 Carmel Domshlak. Fault tolerant planning: Complexity and compilation.InICAPS, 2013. \u21a9 Christian Muise, Sheila A. McIlraith, and Vaishak Belle.Non-deterministic planning with conditional effects. InICAPS, 2014 \u21a9 Elly Winner and Manuela Veloso. Distill: Learning domain-specific plan-ners by example. InICML, 2003. \u21a9 \u21a9 \u21a9 \u21a9 Elly Winner and Manuela Veloso. Loopdistill: Learning looping domain-specific planners from example plans. InICAPS, Workshop on ArtificialIntelligence Planning and Learning, 2007. \u21a9 \u21a9 C \u21a9 Jorge A Baier, Christian Fritz, and Sheila A McIlraith. Exploiting proce-dural domain control knowledge in state-of-the-art planners. InICAPS,2007. \u21a9 Javier Segovia-Aguas, Sergio Jim \u0301enez, and Anders Jonsson. Generalizedplanning with procedural domain control knowledge. InICAPS, 2016 \u21a9 \u21a9 \u21a9 \u21a9 Javier Segovia-Aguas, Sergio Jim \u0301enez, and Anders Jonsson. Hierarchicalfinite state controllers for generalized planning. InIJCAI, 2016. \u21a9 \u21a9 Thomas M Mitchell.Machine Learning. McGraw-Hill, Inc., New York,NY, USA, 1 edition, 1997. \u21a9 Paul E Utgoff. Incremental induction of decision trees.Machine learning,4(2):161\u2013186, 1989. \u21a9 Sergio Jim \u0301enez and Anders Jonsson. Computing Plans with Control Flowand Procedures Using a Classical Planner. InSOCS, 2015. \u21a9 Blai Bonet, H \u0301ector Palacios, and Hector Geffner. Automatic derivation offinite-state machines for behavior control. InAAAI, 2010. \u21a9 \u21a9 \u21a9 C \u0301edric Pralet, G \u0301erard Verfaillie, Michel Lema\u02c6\u0131tre, and Guillaume Infantes.Constraint-based controller synthesis in non-deterministic and partiallyobservable domains. InECAI, 2010. \u21a9 \u21a9 Yuxiao Hu and Giuseppe De Giacomo. A generic technique for synthesiz-ing bounded finite-state controllers. InICAPS, 2013. \u21a9 \u21a9 Miquel Ramirez and Hector Geffner. Heuristics for planning, plan recog-nition and parsing.arXiv preprint arXiv:1605.05807, 2016 \u21a9 Mario Mart \u0301\u0131n and Hector Geffner. Learning generalized policies fromplanning examples using concept languages.Applied Intelligence, 20(1):9\u201319, 2004. \u21a9 Sungwook Yoon, Alan Fern, and Robert Givan. Learning control knowl-edge for forward search planning.The Journal of Machine Learning Re-search, 9:683\u2013718, 2008. \u21a9 Tomas De la Rosa, Sergio Jim \u0301enez, Raquel Fuentetaja, and Daniel Bor-rajo. Scaling up heuristic planning with relational decision trees.Journalof Artificial Intelligence Research, 40:767\u2013813, 2011. \u21a9 Blai Bonet and Hector Geffner. Policies that generalize: Solving manyplanning problems with the same policy.IJCAI, 2015. \u21a9 Siddharth Srivastava, Neil Immerman, and Shlomo Zilberstein. A newrepresentation and associated algorithms for generalized planning.Artifi-cial Intelligence, 175(2):615 \u2013 647, 2011. \u21a9 Siddharth Srivastava, Neil Immerman, Shlomo Zilberstein, and TianjiaoZhang. Directed search for generalized plans using classical planners. InICAPS, 2011. \u21a9 Hector J Levesque, Raymond Reiter, Yves Lesp \u0301erance, Fangzhen Lin, andRichard B Scherl. Golog: A logic programming language for dynamicdomains.The Journal of Logic Programming, 31(1-3):59\u201383, 1997. \u21a9 Sebastian Sardina, Giuseppe De Giacomo, Yves Lesp \u0301erance, and Hector JLevesque. On the semantics of deliberation in indigologfrom theory toimplementation.Annals of Mathematics and Artificial Intelligence, 41(2-4):259\u2013299, 2004. \u21a9 Gabriele R \u0308oger, Malte Helmert, and Bernhard Nebel. On the relativeexpressiveness of adl and golog: The last piece in the puzzle. InKR, 2008 \u21a9 Jens Cla\u00dfen, Viktor Engelmann, Gerhard Lakemeyer, and Gabriele R \u0308oger.Integrating golog and planning: An empirical evaluation.InNon-Monotonic Reasoning Workshop, 2008 \u21a9 Sumit Gulwani. Automating string processing in spreadsheets using input-output examples. InACM SIGPLAN Notices, volume 46, pages 317\u2013330.ACM, 201 \u21a9 Thomas M Mitchell. Generalization as search.Artificial intelligence,18:203\u2013226, 1982. \u21a9 Armando Solar-Lezama, Liviu Tancau, Rastislav Bodik, Sanjit Seshia,and Vijay Saraswat. Combinatorial sketching for finite programs.ACMSIGOPS Operating Systems Review, 40:404\u2013415, 2006 \u21a9 Brenden M Lake, Ruslan Salakhutdinov, and Joshua B Tenenbaum.Human-level concept learning through probabilistic program induction.Science, 350(6266):1332\u20131338, 2015. \u21a9 Alan Leung, John Sarracino, and Sorin Lerner. Interactive parser synthesisby example. InACM SIGPLAN Notices, volume 50, pages 565\u2013574. ACM,2015 \u21a9 \u21a9 Rajeev Alur, Rastislav Bodik, Garvit Juniwal, Milo MK Martin, MukundRaghothaman, Sanjit A Seshia, Rishabh Singh, Armando Solar-Lezama,Emina Torlak, and Ab hishek Udupa. Syntax-guided synthesis.Depend-able Software Systems Engineering, 40:1\u201325, 2015. \u21a9 Sumit Gulwani, Jose Hernandez-Orallo, Emanuel Kitzelmann, Stephen HMuggleton, Ute Schmid, and Benjamin Zorn. Inductive programming meets the real world.Communications of the ACM, 58:90\u201399, 2015. \u21a9 Emina Torlak and Rastislav Bodik. Growing solver-aided languages with rosette. InACM international symposium on New ideas, new paradigms,and reflections on programming & software, pages 135\u2013152. ACM, 2013. \u21a9","title":"\u603b\u7ed3"},{"location":"Papers/GP_summary/","text":"GP summary 1.1. \u7ecf\u5178\u95ee\u9898\u4f8b\u5b50 2. Generalized planning\u901a\u7528\u89c4\u5212 2.1. \u81ea\u52a8\u89c4\u5212 2.2. QNP 3. \u7ed3\u5408\u903b\u8f91\u795e\u7ecf\u673a 3.1.1. SAT 3.1.2. Complexity 3.2. \u5176\u4ed6\u76f8\u5173\u7684\u8bba\u6587\u4e66\u7c4d Zotero + Web of Science\uff0c\u5982\u4f55\u505a\u6587\u732e\u6cdb\u8bfb GP summary \u00b6 1.1. \u7ecf\u5178\u95ee\u9898\u4f8b\u5b50 \u00b6 Aminof, B., Giacomo, G. D., Murano, A., & Rubin, S. (2019). Planning under ltl environment specifications. In Proc. ICAPS, pp. 31-39.\u79ef\u6728\u4e16\u754cQNP\u5b9e\u4f8b Bonet, B., Frances, G., & Geffner, H. (2019). Learning features and abstract actions for computing generalized plans. In Proc.AAAI.\u77f3\u5934\u4e16\u754c \\(Q_{clear}\\) \u548cG ripper\u4f8b\u5b50 Bonet, B., & Geffner, H. (2015). Policies that generalize: Solving many planning problems with the same policy.. In IJCAI, pp. 2798-2804.\u5f88\u591a\u7ecf\u5178\u95ee\u9898 2. Generalized planning\u901a\u7528\u89c4\u5212 \u00b6 Jimenez, S., Segovia-Aguas, J., & Jonsson, A. (2019). \u7efc\u8ff0A review of Generalized planning . The Knowledge Engineering Review, 34. Aguas, J. S., Celorrio, S. J., , & Jonsson, A. (2016). Generalized planning with procedural domain control knowledge. In Proc. ICAPS. Belle, V., & Levesque, H. J. (2016). Foundations for Generalized planning in unbounded stochastic domains. In KR, pp. 380-389. Bercher, P., & Mattmuller, R. (2009). Solving non-deterministic planning problems with pattern database heuristics. In Proc. German Conf. on AI (KI), pp. 57-64. Springer. Bonet, B., Palacios, H., & Geffner, H. (2009). Automatic derivation of memoryless policies and finite-state controllers using classical planners. In Proc. ICAPS-09, pp. 34-41. Bonet, B., De Giacomo, G., Geffner, H., & Rubin, S. (2017). Generalized planning : Nondeterministic abstractions and trajectory constraints. In Proc. IJCAI. Bonet, B., & Geffner, H. (2018). Features, projections, and representation change for Generalized planning . In Proceedings of the 27 th International Joint Conference on Artificial Intelligence, pp. 4667-4673. AAAI Press.\u628aGP\u6620\u5c04QNP\u6c42\u89e3 Bonet, B., Palacios, H., & Geffner, H. (2009). Automatic derivation of memoryless policies and finite-state controllers using classical planners. In ICAPS . Bueno, T. P., de Barros, L. N., Maua, D. D., & Sanner,S. (2019). Deep reactive policies for planning in stochastic nonlinear domains. In AAAI , Vol. 33, pp. 7530-7537. Camacho, A., Bienvenu, M., & McIlraith, S. A. (2019). Towards a unified view of ai planning and reactive synthesis. In Proc. ICAPS, pp. 58-67. Cimatti, A., Pistore, M., Roveri, M., & Traverso, P. (2003). Weak, strong, and strong cyclic planning via symbolic model checking. Artificial Intelligence, 147 (1-2), 35-84.**** Fikes, R., & Nilsson, N. (1971). STRIPS: A new approach to the application of theorem proving to problem solving. Artificial Intelligence, 1, 27-120.**\u7d27\u51d1\u63cf\u8ff0STRIPS**\u89c4\u5212\u8bed\u8a00 Geffner, T., & Geffner, H. (2018). Compact policies for fully observable non-deterministic planning as sat. In *Proc. ICAPS.*\u628aFOND\u95ee\u9898\u8f6c\u6362\u4e3aSAT\u95ee\u9898\u6c42\u89e3\u90a3\u4e2agithub\u6e90\u7801\u7a0b\u5e8f\u5305\u5bf9\u5e94\u8bba\u6587 Hu, Y., & De Giacomo, G. (2011). Generalized planning : Synthesizing plans that work for multiple environments. In IJCAI, pp. 918-923. Illanes, L., & McIlraith, S. A. (2019). Generalized planning via abstraction: arbitrary numbers of objects. In Proc. AAAI. Martin, M., & Geffner, H. (2004). Learning generalized policies from planning examples using concept languages. Appl. Intelligence, 20 (1), 9-19. Muise, C. J., McIlraith, S. A., & Beck, C. (2012). Improved non-deterministic planning by exploiting state relevance. In Proc. ICAPS. 2.1. \u81ea\u52a8\u89c4\u5212 \u00b6 Geffner, H., & Bonet, B. (2013). A *Concise Introduction to Models and Methods for Automated Planning.* Morgan & Claypool Publishers.\u8bb2FOND\u95ee\u9898 Ghallab, M., Nau, D., & Traverso, P. (2016). Automated planning and acting. CambridgeUniversity Press. 2.2. QNP \u00b6 Srivastava, S., Zilberstein, S., Immerman, N., & Geffner, H. (2011). Qualitative numeric planning. In AAAI.\u5f88\u8be6\u7ec6\u8fd9\u91cc\u8bf4FOND\u95ee\u9898\u7684\u89e3\u5bf9\u5e94\u7740QNP\u95ee\u9898\u7684\u89e3(\u4e0d\u662f\u4e92\u63a8)\u8fd8\u6709SCC\u7b97\u6cd5\u7b49\u5b66\u957f\u5df2\u7ecf\u62a5\u544a\u8fc7 Srivastava, S., Immerman, N., & Zilberstein, S. (2011). A new representation and associated algorithms for Generalized planning . Artificial Intelligence, 175 (2), 615-647.\u4ecb\u7ecdQNP\u5f88\u6709\u7528\u5730\u8868\u8ff0\u201cGP\u901a\u7528\u89c4\u5212\u201d 3. \u7ed3\u5408\u903b\u8f91\u795e\u7ecf\u673a \u00b6 Garnelo, M., & Shanahan, M. (2019). Reconciling deep learning with symbolic artificial intelligence: representing objects and relations. Current Opinion in Behavioral Sciences, 29, 17-23.<--- \u5c06\u6df1\u5ea6\u5b66\u4e60\u4e0e\u7b26\u53f7\u4eba\u5de5\u667a\u80fd\u76f8\u7ed3\u5408\uff1a\u8868\u793a\u5bf9\u8c61\u548c\u5173\u7cfb Toyer, S., Trevizan, F., Thiebaux, S., & Xie, L. (2018). Action schema networks: Generalised policies with deep learning. In AAAI.\u795e\u7ecf\u7f51\u7edc\u751f\u6210\u901a\u7528\u7b56\u7565 Groshev, E., Goldstein, M., Tamar, A., Srivastava, S., & Abbeel, P. (2018). Learning generalized reactive policies using deep neural networks. In Proc. ICAPS, Vol. 2018, pp. 408-416.\u795e\u7ecf\u7f51\u7edc\u751f\u6210\u7b56\u7565 Fern, A., Yoon, S., & Givan, R. (2004). Approximate policy iteration with a policy language bias. In Advances in neural information processing systems, pp. 847-854. Boutilier, C., Reiter, R., & Price, B. (2001). Symbolic dynamic programming for first-order MDPs. In Proc. IJCAI, Vol. 1, pp. 690-700.\u4e00\u9636\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u52a8\u6001\u7f16\u7a0b\uff08\u6211\u89c9\u5f97**MDP**\u9a6c\u5c14\u53ef\u592b\u6570\u5b66\u5316\u7684\u7814\u7a76\u8fc7\u7a0b\u5f88\u660e\u663e\u5c31\u662f\u65e0\u7f1d\u5bf9\u63a5**RL**\u5f3a\u5316\u5b66\u4e60\u7684\u6d3b\u513f\uff09 Van Otterlo, M. (2012). Solving relational and first-order logical markov decision processes: A survey. In Wiering, M., & van Otterlo, M. (Eds.), Reinforcement Learning, pp. 253-292. Springer. Sukhbaatar, S., Szlam, A., Synnaeve, G., Chintala, S., & Fergus, R. (2015). Mazebase: A sandbox for learning from games. arXiv preprint arXiv:1511.07401. Wang, C., Joshi, S., & Khardon, R. (2008). First order decision diagrams for relational MDPs. Journal of Artificial Intelligence Research, 31, 431-472.\u4e00\u9636\u51b3\u7b56\u56fe\u5bf9\u5e94\u6c42\u89e3MDP Sanner, S., & Boutilier, C. (2009). Practical solution techniques for first-order MDPs. Artificial Intelligence, 173 (5-6), 748-788. Nebel, B. (2000). On the compilability and expressive power of propositional planning. Journal of Artificial Intelligence Research, 12, 271-315. Khardon, R. (1999). Learning action strategies for planning domains. Artificial Intelligence, 113, 125-148. Issakkimuthu, M., Fern, A., & Tadepalli, P. (2018). Training deep reactive policies for probabilistic planning problems. In *ICAPS.*\u6982\u7387\u89c4\u5212\u95ee\u9898 3.1.1. SAT \u00b6 Een, N., & Sorensson, N. (2004). An extensible SAT-solver. Lecture notes in computer science, 2919, 502-518. 3.1.2. Complexity \u00b6 Rintanen, J. (2004). Complexity of planning with partial observability.. In Proc. ICAPS, pp. 345-354. Levesque, H. J. (2005). Planning with loops. In IJCAI, pp. 509-515.\u6307\u6570\u590d\u6742\u5ea6 Littman, M. L., Goldsmith, J., & Mundhenk, M. (1998). The computational complexity of probabilistic planning. Journal of Artificial Intelligence Research, 9, 1-36.\u8868\u660eQNP\u95ee\u9898\u6709\u7740\u6307\u6570\u7684\u590d\u6742\u5ea6 3.2. \u5176\u4ed6\u76f8\u5173\u7684\u8bba\u6587\u4e66\u7c4d \u00b6 Russell, S., & Norvig, P. (2002). Artificial Intelligence: A Modern Approach. Prentice Hall. 2 nd Edition.\u4e66\u7c4d\u4eba\u5de5\u667a\u80fd Sipser, M. (2006). Introduction to Theory of Computation (2 nd edition). Thomson Course Technology, Boston, MA.\u6559\u6750 Cimatti, A., Roveri, M., & Traverso, P. (1998). Automatic OBDD-based \u5f88\u706b\u7684\u4e00\u79cd\u7d27\u51d1\u8868\u8fbe\u7ed3\u6784generation of universal plans in non-deterministic domains. In Proc. AAAI-98, pp. 875-881. Bajpai, A. N., Garg, S., et al. (2018). Transfer of deep reactive policies for mdp planning. In Advances in Neural Information Processing Systems, pp. 10965-10975.\u901a\u7528\u89c4\u5212\u65e0\u9650\u968f\u673a\u57df Helmert, M. (2002). Decidability and undecidability results for planning with numerical state variables.. In Proc. AIPS, pp. 44-53. Hu, Y., & De Giacomo, G. (2013). A generic technique for synthesizing bounded finite-state controllers. In Proc. ICAPS. Srivastava, S., Zilberstein, S., Gupta, A., Abbeel, P., & Russell, S. (2015). Tractability of planning with loops. In Proc. AAAI. Tarjan, R. (1972). Depth-first search and linear graph algorithms. SIAM journal on computing, 1 (2), 146-160. Pnueli, A. (1977). The temporal logic of programs. In 18 th Annual Symposium on Foundations of Computer Science, pp. 46-57. IEEE. Pnueli, A., & Rosner, R. (1989). On the synthesis of an asynchronous reactive module. In ICALP, pp. 652-671.","title":"GP_summary"},{"location":"Papers/GP_summary/#gp-summary","text":"","title":"GP summary"},{"location":"Papers/GP_summary/#11","text":"Aminof, B., Giacomo, G. D., Murano, A., & Rubin, S. (2019). Planning under ltl environment specifications. In Proc. ICAPS, pp. 31-39.\u79ef\u6728\u4e16\u754cQNP\u5b9e\u4f8b Bonet, B., Frances, G., & Geffner, H. (2019). Learning features and abstract actions for computing generalized plans. In Proc.AAAI.\u77f3\u5934\u4e16\u754c \\(Q_{clear}\\) \u548cG ripper\u4f8b\u5b50 Bonet, B., & Geffner, H. (2015). Policies that generalize: Solving many planning problems with the same policy.. In IJCAI, pp. 2798-2804.\u5f88\u591a\u7ecf\u5178\u95ee\u9898","title":"1.1. \u7ecf\u5178\u95ee\u9898\u4f8b\u5b50"},{"location":"Papers/GP_summary/#2-generalized-planning","text":"Jimenez, S., Segovia-Aguas, J., & Jonsson, A. (2019). \u7efc\u8ff0A review of Generalized planning . The Knowledge Engineering Review, 34. Aguas, J. S., Celorrio, S. J., , & Jonsson, A. (2016). Generalized planning with procedural domain control knowledge. In Proc. ICAPS. Belle, V., & Levesque, H. J. (2016). Foundations for Generalized planning in unbounded stochastic domains. In KR, pp. 380-389. Bercher, P., & Mattmuller, R. (2009). Solving non-deterministic planning problems with pattern database heuristics. In Proc. German Conf. on AI (KI), pp. 57-64. Springer. Bonet, B., Palacios, H., & Geffner, H. (2009). Automatic derivation of memoryless policies and finite-state controllers using classical planners. In Proc. ICAPS-09, pp. 34-41. Bonet, B., De Giacomo, G., Geffner, H., & Rubin, S. (2017). Generalized planning : Nondeterministic abstractions and trajectory constraints. In Proc. IJCAI. Bonet, B., & Geffner, H. (2018). Features, projections, and representation change for Generalized planning . In Proceedings of the 27 th International Joint Conference on Artificial Intelligence, pp. 4667-4673. AAAI Press.\u628aGP\u6620\u5c04QNP\u6c42\u89e3 Bonet, B., Palacios, H., & Geffner, H. (2009). Automatic derivation of memoryless policies and finite-state controllers using classical planners. In ICAPS . Bueno, T. P., de Barros, L. N., Maua, D. D., & Sanner,S. (2019). Deep reactive policies for planning in stochastic nonlinear domains. In AAAI , Vol. 33, pp. 7530-7537. Camacho, A., Bienvenu, M., & McIlraith, S. A. (2019). Towards a unified view of ai planning and reactive synthesis. In Proc. ICAPS, pp. 58-67. Cimatti, A., Pistore, M., Roveri, M., & Traverso, P. (2003). Weak, strong, and strong cyclic planning via symbolic model checking. Artificial Intelligence, 147 (1-2), 35-84.**** Fikes, R., & Nilsson, N. (1971). STRIPS: A new approach to the application of theorem proving to problem solving. Artificial Intelligence, 1, 27-120.**\u7d27\u51d1\u63cf\u8ff0STRIPS**\u89c4\u5212\u8bed\u8a00 Geffner, T., & Geffner, H. (2018). Compact policies for fully observable non-deterministic planning as sat. In *Proc. ICAPS.*\u628aFOND\u95ee\u9898\u8f6c\u6362\u4e3aSAT\u95ee\u9898\u6c42\u89e3\u90a3\u4e2agithub\u6e90\u7801\u7a0b\u5e8f\u5305\u5bf9\u5e94\u8bba\u6587 Hu, Y., & De Giacomo, G. (2011). Generalized planning : Synthesizing plans that work for multiple environments. In IJCAI, pp. 918-923. Illanes, L., & McIlraith, S. A. (2019). Generalized planning via abstraction: arbitrary numbers of objects. In Proc. AAAI. Martin, M., & Geffner, H. (2004). Learning generalized policies from planning examples using concept languages. Appl. Intelligence, 20 (1), 9-19. Muise, C. J., McIlraith, S. A., & Beck, C. (2012). Improved non-deterministic planning by exploiting state relevance. In Proc. ICAPS.","title":"2. Generalized planning\u901a\u7528\u89c4\u5212"},{"location":"Papers/GP_summary/#21","text":"Geffner, H., & Bonet, B. (2013). A *Concise Introduction to Models and Methods for Automated Planning.* Morgan & Claypool Publishers.\u8bb2FOND\u95ee\u9898 Ghallab, M., Nau, D., & Traverso, P. (2016). Automated planning and acting. CambridgeUniversity Press.","title":"2.1. \u81ea\u52a8\u89c4\u5212"},{"location":"Papers/GP_summary/#22-qnp","text":"Srivastava, S., Zilberstein, S., Immerman, N., & Geffner, H. (2011). Qualitative numeric planning. In AAAI.\u5f88\u8be6\u7ec6\u8fd9\u91cc\u8bf4FOND\u95ee\u9898\u7684\u89e3\u5bf9\u5e94\u7740QNP\u95ee\u9898\u7684\u89e3(\u4e0d\u662f\u4e92\u63a8)\u8fd8\u6709SCC\u7b97\u6cd5\u7b49\u5b66\u957f\u5df2\u7ecf\u62a5\u544a\u8fc7 Srivastava, S., Immerman, N., & Zilberstein, S. (2011). A new representation and associated algorithms for Generalized planning . Artificial Intelligence, 175 (2), 615-647.\u4ecb\u7ecdQNP\u5f88\u6709\u7528\u5730\u8868\u8ff0\u201cGP\u901a\u7528\u89c4\u5212\u201d","title":"2.2. QNP"},{"location":"Papers/GP_summary/#3","text":"Garnelo, M., & Shanahan, M. (2019). Reconciling deep learning with symbolic artificial intelligence: representing objects and relations. Current Opinion in Behavioral Sciences, 29, 17-23.<--- \u5c06\u6df1\u5ea6\u5b66\u4e60\u4e0e\u7b26\u53f7\u4eba\u5de5\u667a\u80fd\u76f8\u7ed3\u5408\uff1a\u8868\u793a\u5bf9\u8c61\u548c\u5173\u7cfb Toyer, S., Trevizan, F., Thiebaux, S., & Xie, L. (2018). Action schema networks: Generalised policies with deep learning. In AAAI.\u795e\u7ecf\u7f51\u7edc\u751f\u6210\u901a\u7528\u7b56\u7565 Groshev, E., Goldstein, M., Tamar, A., Srivastava, S., & Abbeel, P. (2018). Learning generalized reactive policies using deep neural networks. In Proc. ICAPS, Vol. 2018, pp. 408-416.\u795e\u7ecf\u7f51\u7edc\u751f\u6210\u7b56\u7565 Fern, A., Yoon, S., & Givan, R. (2004). Approximate policy iteration with a policy language bias. In Advances in neural information processing systems, pp. 847-854. Boutilier, C., Reiter, R., & Price, B. (2001). Symbolic dynamic programming for first-order MDPs. In Proc. IJCAI, Vol. 1, pp. 690-700.\u4e00\u9636\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b\u52a8\u6001\u7f16\u7a0b\uff08\u6211\u89c9\u5f97**MDP**\u9a6c\u5c14\u53ef\u592b\u6570\u5b66\u5316\u7684\u7814\u7a76\u8fc7\u7a0b\u5f88\u660e\u663e\u5c31\u662f\u65e0\u7f1d\u5bf9\u63a5**RL**\u5f3a\u5316\u5b66\u4e60\u7684\u6d3b\u513f\uff09 Van Otterlo, M. (2012). Solving relational and first-order logical markov decision processes: A survey. In Wiering, M., & van Otterlo, M. (Eds.), Reinforcement Learning, pp. 253-292. Springer. Sukhbaatar, S., Szlam, A., Synnaeve, G., Chintala, S., & Fergus, R. (2015). Mazebase: A sandbox for learning from games. arXiv preprint arXiv:1511.07401. Wang, C., Joshi, S., & Khardon, R. (2008). First order decision diagrams for relational MDPs. Journal of Artificial Intelligence Research, 31, 431-472.\u4e00\u9636\u51b3\u7b56\u56fe\u5bf9\u5e94\u6c42\u89e3MDP Sanner, S., & Boutilier, C. (2009). Practical solution techniques for first-order MDPs. Artificial Intelligence, 173 (5-6), 748-788. Nebel, B. (2000). On the compilability and expressive power of propositional planning. Journal of Artificial Intelligence Research, 12, 271-315. Khardon, R. (1999). Learning action strategies for planning domains. Artificial Intelligence, 113, 125-148. Issakkimuthu, M., Fern, A., & Tadepalli, P. (2018). Training deep reactive policies for probabilistic planning problems. In *ICAPS.*\u6982\u7387\u89c4\u5212\u95ee\u9898","title":"3. \u7ed3\u5408\u903b\u8f91\u795e\u7ecf\u673a"},{"location":"Papers/GP_summary/#311-sat","text":"Een, N., & Sorensson, N. (2004). An extensible SAT-solver. Lecture notes in computer science, 2919, 502-518.","title":"3.1.1. SAT"},{"location":"Papers/GP_summary/#312-complexity","text":"Rintanen, J. (2004). Complexity of planning with partial observability.. In Proc. ICAPS, pp. 345-354. Levesque, H. J. (2005). Planning with loops. In IJCAI, pp. 509-515.\u6307\u6570\u590d\u6742\u5ea6 Littman, M. L., Goldsmith, J., & Mundhenk, M. (1998). The computational complexity of probabilistic planning. Journal of Artificial Intelligence Research, 9, 1-36.\u8868\u660eQNP\u95ee\u9898\u6709\u7740\u6307\u6570\u7684\u590d\u6742\u5ea6","title":"3.1.2. Complexity"},{"location":"Papers/GP_summary/#32","text":"Russell, S., & Norvig, P. (2002). Artificial Intelligence: A Modern Approach. Prentice Hall. 2 nd Edition.\u4e66\u7c4d\u4eba\u5de5\u667a\u80fd Sipser, M. (2006). Introduction to Theory of Computation (2 nd edition). Thomson Course Technology, Boston, MA.\u6559\u6750 Cimatti, A., Roveri, M., & Traverso, P. (1998). Automatic OBDD-based \u5f88\u706b\u7684\u4e00\u79cd\u7d27\u51d1\u8868\u8fbe\u7ed3\u6784generation of universal plans in non-deterministic domains. In Proc. AAAI-98, pp. 875-881. Bajpai, A. N., Garg, S., et al. (2018). Transfer of deep reactive policies for mdp planning. In Advances in Neural Information Processing Systems, pp. 10965-10975.\u901a\u7528\u89c4\u5212\u65e0\u9650\u968f\u673a\u57df Helmert, M. (2002). Decidability and undecidability results for planning with numerical state variables.. In Proc. AIPS, pp. 44-53. Hu, Y., & De Giacomo, G. (2013). A generic technique for synthesizing bounded finite-state controllers. In Proc. ICAPS. Srivastava, S., Zilberstein, S., Gupta, A., Abbeel, P., & Russell, S. (2015). Tractability of planning with loops. In Proc. AAAI. Tarjan, R. (1972). Depth-first search and linear graph algorithms. SIAM journal on computing, 1 (2), 146-160. Pnueli, A. (1977). The temporal logic of programs. In 18 th Annual Symposium on Foundations of Computer Science, pp. 46-57. IEEE. Pnueli, A., & Rosner, R. (1989). On the synthesis of an asynchronous reactive module. In ICALP, pp. 652-671.","title":"3.2. \u5176\u4ed6\u76f8\u5173\u7684\u8bba\u6587\u4e66\u7c4d"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/","text":"1. Generalized Planning With Deep Reinforcement Learning 1.1. \u76f8\u5173\u5de5\u4f5c 1.1.1. 2\u80cc\u666f 1.1.1.1. 2.1\u7ecf\u5178\u89c4\u5212 1.1.1.2. \u5f3a\u5316\u5b66\u4e60 1.1.2. **\u5b66\u4e60generalized policy 1.1.2.1. 3.1\u72b6\u6001\u8868\u793a 1.1.2.2. 3.2\u56fe\u5f62\u5d4c\u5165 1.1.2.3. 3.3\u653f\u7b56\u4ee3\u8868 1.1.2.4. 3.4\u7a0b\u5e8f\u8bad\u7ec3 1.1.2.5. 3.5\u63a8\u7406\u8fc7\u7a0b\u4e2d\u7684\u8ba1\u5212 1.1.3. 5\u4e2a\u5b9e\u9a8c 1.1.3.1. 5.1\u57df 1.1.3.2. 5.2\u5b9e\u9a8c\u8bbe\u5b9a 1.1.3.3. 5.3\u57fa\u51c6 1.1.3.4. 5.4\u8bc4\u4f30\u6307\u6807 1.1.3.5. 5.5\u7ed3\u679c 1.1.4. \u7ed3\u8bba\u4e0e\u672a\u6765\u5de5\u4f5c 1. Generalized Planning With Deep Reinforcement Learning \u00b6 \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4f7f\u7528\uff0c\u4ee5\u5b66\u4e60\u6b64\u7c7b\u5e7f\u4e49\u7b56\u7565\uff0c\u5e76\u8bc1\u660e\u5b83\u4eec\u53ef\u4ee5\u63a8\u5e7f\u5230\u5b9e\u4f8b\u4e0a\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u6bd4\u5728\u5176\u4e0a\u8fdb\u884c\u8bad\u7ec3\u7684\u5b9e\u4f8b\u5927\u51e0\u4e2a\u6570\u91cf\u7ea7 \u53e4\u5178\u8ba1\u5212\u4e0e\u67e5\u627e\u8ba1\u5212\u6216\u52a8\u4f5c\u5e8f\u5217\u6709\u5173\uff0c\u5f53\u5c06\u8fd9\u4e9b\u8ba1\u5212\u6216\u52a8\u4f5c\u5e8f\u5217\u5e94\u7528\u4e8e\u4e00\u7ec4\u903b\u8f91\u8c13\u8bcd\u6240\u6307\u5b9a\u7684\u67d0\u4e9b\u521d\u59cb\u6761\u4ef6\u65f6\uff0c\u4f1a\u5c06\u73af\u5883\u5e26\u5165\u6ee1\u8db3\u4e00\u7ec4\u76ee\u6807\u8c13\u8bcd\u7684\u72b6\u6001\u3002\u8fd9\u901a\u5e38\u662f\u901a\u8fc7\u67d0\u79cd\u542f\u53d1\u5f0f\u641c\u7d22\u8fc7\u7a0b\u6267\u884c\u7684\uff0c\u751f\u6210\u7684\u8ba1\u5212\u4ec5\u9002\u7528\u4e8e\u5df2\u89e3\u51b3\u7684\u7279\u5b9a\u5b9e\u4f8b\u3002\u4f46\u662f\uff0c\u53ef\u80fd\u4f1a\u6709\u66f4\u597d\u7684\u7ed3\u679c\u662f\u627e\u5230\u67d0\u79cd\u66f4\u9ad8\u7ea7\u522b\u7684\u8ba1\u5212\uff0c\u8be5\u8ba1\u5212\u53ef\u4ee5\u89e3\u51b3\u8bb8\u591a\u5c5e\u4e8e\u540c\u4e00\u57df\u7684\u5b9e\u4f8b\uff0c\u4ece\u800c\u5171\u4eab\u4e00\u4e2a\u57fa\u7840\u7ed3\u6784\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u79cd\u66f4\u9ad8\u7ea7\u522b\u8ba1\u5212\u7684\u65b9\u6cd5\u7684\u7814\u7a76\u79f0\u4e3a\u901a\u7528\u8ba1\u5212\u3002\u901a\u7528\u8ba1\u5212\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u6240\u6709\u7ecf\u5178\u8ba1\u5212\u9886\u57df\uff0c\u4f46\u662f\u5728\u4ec5\u5e0c\u671b\u627e\u5230\u76ee\u6807\u4ee4\u4eba\u6ee1\u610f\u7684\u89e3\u51b3\u65b9\u6848\u7684\u60c5\u51b5\u4e0b\uff0c\u9488\u5bf9\u53ef\u80fd\u7684\u9886\u57df\u627e\u5230\u6b64\u7c7b\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u907f\u514d\u6267\u884c\u8ba1\u7b97\u5bc6\u96c6\u578b\u641c\u7d22\u7684\u9700\u6c42\u3002\u4e3a\u4e86\u7ed9\u51fa\u8fd9\u6837\u4e00\u4e2a\u5e7f\u4e49\u8ba1\u5212\u7684\u4f8b\u5b50\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7b80\u5316\u7684Blocksworld\u57df\u3002\u5728\u8fd9\u4e2a\u9886\u57df\u4e2d\uff0c\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u5757\u53ef\u4ee5\u76f8\u4e92\u5806\u53e0\u6216\u6563\u5e03\u5728\u5730\u677f\u4e0a\uff0c\u5e76\u4e14\u76ee\u6807\u662f\u5806\u53e0\u548c\u5806\u53e0\u5757\uff0c\u4ee5\u4fbf\u6211\u4eec\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u5f97\u51fa\u76ee\u6807\u914d\u7f6e\u3002\u5bfb\u627e\u4e00\u4e2a\u53ef\u4ee5\u4ee5\u6700\u4f73\u6b65\u9aa4\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u8ba1\u5212\u901a\u5e38\u5f88\u96be\u505a\u5230 \u5728\u8fd9\u4e2a\u9886\u57df\u4e2d\uff0c\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u5757\u53ef\u4ee5\u76f8\u4e92\u5806\u53e0\u6216\u6563\u5e03\u5728\u5730\u677f\u4e0a\uff0c\u5e76\u4e14\u76ee\u6807\u662f\u5806\u53e0\u548c\u5806\u53e0\u5757\uff0c\u4ee5\u4fbf\u6211\u4eec\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u5f97\u51fa\u76ee\u6807\u914d\u7f6e\u3002\u5bfb\u627e\u4e00\u4e2a\u53ef\u4ee5\u5728\u6700\u4f73\u6b65\u9aa4\u4e2d\u5b8c\u6210\u7684\u8ba1\u5212\u901a\u5e38\u5f88\u96be\u505a\u5230 \u5728\u8fd9\u4e2a\u9886\u57df\u4e2d\uff0c\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u5757\u53ef\u4ee5\u76f8\u4e92\u5806\u53e0\u6216\u6563\u5e03\u5728\u5730\u677f\u4e0a\uff0c\u5e76\u4e14\u76ee\u6807\u662f\u5806\u53e0\u548c\u5806\u53e0\u5757\uff0c\u4ee5\u4fbf\u6211\u4eec\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u5f97\u51fa\u76ee\u6807\u914d\u7f6e\u3002\u5bfb\u627e\u4e00\u4e2a\u53ef\u4ee5\u4ee5\u6700\u4f73\u6b65\u9aa4\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u8ba1\u5212\u901a\u5e38\u5f88\u96be\u505a\u5230[ 10] \uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u6ee1\u8db3\u76ee\u6807\u4e14\u4e0d\u8003\u8651\u6210\u672c\u7684\u8ba1\u5212\uff1a 1.\u62c6\u5f00\u6240\u6709\u79ef\u6728\uff0c\u4f7f\u5176\u6563\u843d\u5728\u5730\u677f\u4e0a 2.\u6839\u636e\u76ee\u6807\u914d\u7f6e\uff0c\u4ece\u8f83\u4f4e\u7684\u5757\u5f00\u59cb\u5806\u53e0\u5757 \u8fd9\u79cd\u7b56\u7565\u4e0d\u662f\u6700\u4f73\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u6839\u636e\u76ee\u6807\u89c4\u8303\u5bf9\u5df2\u7ecf\u653e\u7f6e\u5728\u9002\u5f53\u4f4d\u7f6e\u7684\u5757\u8fdb\u884c\u5806\u53e0\uff0c\u4f46\u662f\u5bf9\u4e8e\u7b80\u5316\u540e\u7684Blocksworld\u57df\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u5b83\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6ee1\u8db3\u76ee\u6807\u7684\u8ba1\u5212\u3002\u8fd9\u6837\u7684\u7b3c\u7edf\u7b56\u7565\u4e5f\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u7b56\u7565\uff0c\u5b83\u589e\u52a0\u4e86\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60\u5b83\u7684\u53ef\u80fd\u6027\u3002 \u5b66\u4e60\u3002\u673a\u5668\u5b66\u4e60\u7406\u8bba\u901a\u5e38\u5047\u8bbe\u6211\u4eec\u7684\u8bad\u7ec3\u6570\u636e\u5206\u5e03\u53ef\u4ee5\u4ee3\u8868\u6d4b\u8bd5\u6570\u636e\u5206\u5e03\uff0c\u4ece\u800c\u8bc1\u660e\u6211\u4eec\u7684\u671f\u671b\u662f\u6211\u4eec\u7684\u6a21\u578b\u53ef\u4ee5\u5f88\u597d\u5730\u63a8\u5e7f\u5230\u6d4b\u8bd5\u6570\u636e\u3002\u5728\u4e00\u822c\u7684\u8ba1\u5212\u4e2d\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6d4b\u8bd5\u5b9e\u4f8b\u53ef\u80fd\u6bd4\u8bad\u7ec3\u5b9e\u4f8b\u5927\u5f97\u591a\uff0c\u56e0\u6b64\u8fdc\u8fdc\u8d85\u51fa\u4e86\u8bad\u7ec3\u8303\u56f4\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\uff0c\u4ee5\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u7684\u5f62\u5f0f\u5177\u6709**\u6b63\u786e\u7684**\u5f52\u7eb3\u504f\u5dee\u53ef\u4ee5\u5bfc\u81f4\u6a21\u578b\u6709\u6548\u5730\u5b66\u4e60\u7c7b\u4f3c\u4e8e\u4e00\u822c\u539f\u7406\u7684\u7b56\u7565\uff0c\u5e76\u4e14\u53ef\u4ee5\u89e3\u51b3\u6bd4\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u5927\u51e0\u4e2a\u6570\u91cf\u7ea7\u7684\u95ee\u9898\u3002 1.1. \u76f8\u5173\u5de5\u4f5c \u00b6 \u591a\u5e74\u6765\uff0c\u5b66\u4e60\u8ba1\u5212\u4e00\u76f4\u662f\u7814\u7a76\u7684\u6d3b\u8dc3\u8bdd\u9898\uff0c\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u5c1d\u8bd5\u5b66\u4e60\u5b8c\u6574\u6c42\u89e3\u5668\u7684\u4e0d\u540c\u65b9\u9762\u3002\u4e00\u4e9b\u5de5\u4f5c\u5c1d\u8bd5\u4f7f\u7528\u5176\u4ed6\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u751f\u6210\u7684\u7279\u5f81\u6765\u5b66\u4e60\u7279\u5b9a\u57df\u7684\u72b6\u6001\u7684\u542f\u53d1\u5f0f\u503c\uff0c\u4f8b\u5982[ 28] \uff0c\u8be5\u529f\u80fd\u901a\u8fc7\u56de\u5f52\u6765\u5b66\u4e60\u542f\u53d1\u5f0f\u503c\u3002[ 7] \u7b49\u6700\u65b0\u4f5c\u54c1\u901a\u8fc7\u4f7f\u7528RankSVM [ 13] \u5b66\u4e60\u5bf9\u540e\u7ee7\u56fd\u5bb6\u8fdb\u884c\u6392\u540d\u3002\u3002\u8fd9\u4e9b\u7c7b\u578b\u7684\u65b9\u6cd5\u6ca1\u6709\u4ece\u95ee\u9898\u63cf\u8ff0\u4e2d\u660e\u786e\u4f7f\u7528\u72b6\u6001\u6216\u76ee\u6807\u4fe1\u606f\uff0c\u800c\u662f\u5b66\u4e60\u4f7f\u7528\u624b\u5de5\u5236\u4f5c\u7684\u529f\u80fd\uff0c\u6b64\u5916\uff0c\u4e5f\u6ca1\u6709\u9488\u5bf9\u53ef\u7528\u64cd\u4f5c\u5b66\u4e60\u660e\u786e\u7684\u8ba1\u5212\u7b56\u7565\u3002\u4e0e\u6b64\u76f8\u53cd\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5b66\u4e60\u9488\u5bf9\u660e\u786e\u72b6\u6001\u548c\u76ee\u6807\u7684\u8ba1\u5212\u7b56\u7565\uff0c\u8fd9\u4e9b\u7b56\u7565\u548c\u7b56\u7565\u76f4\u63a5\u9009\u62e9\u8981\u91c7\u53d6\u7684\u884c\u52a8\u3002 \u5176\u4ed6\u5de5\u4f5c\uff0c\u4f8b\u5982[ 23] \uff0c[ 8] \u548c[ 9] \uff0c\u4f7f\u7528\u95ee\u9898\u7684\u5b9e\u9645\u72b6\u6001\u4f5c\u4e3a\u8f93\u5165\u548c\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5b66\u4e60\u4e86\u9488\u5bf9\u64cd\u4f5c\u7684\u660e\u786e\u8ba1\u5212\u7b56\u7565\uff0c\u4f46\u662f\u4f9d\u8d56\u4e8e\u5bf9\u95ee\u9898\u7684\u76f4\u89c2\u8868\u793a\u3002\u8fd9\u5c06\u5b83\u4eec\u7684\u4f7f\u7528\u9650\u5236\u4e3a\u53ef\u4ee5\u4f7f\u7528\u89c6\u89c9\u8868\u793a\u7684\u57df\u3002\u53e6\u4e00\u4e2a\u5c40\u9650\u6027\u662f[ 23] \u548c[ 8] \u53e6\u5916\u8fd8\u4f9d\u8d56\u4e8e\u8ba1\u5212\u7b97\u6cd5\u751f\u6210\u7684\u6210\u529f\u8ba1\u5212\uff0c\u5e76\u4f7f\u7528\u6a21\u4eff\u5b66\u4e60\u6765\u5b66\u4e60\u7b56\u7565\uff0c\u800c [ 9] \u4e3a\u6b64\u76ee\u7684\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u4e0d\u4f9d\u8d56\u4e8e\u89c6\u89c9\u8868\u793a\u6216\u901a\u8fc7\u89c4\u5212\u7b97\u6cd5\u751f\u6210\u7684\u6210\u529f\u8ba1\u5212\uff0c\u800c\u662f\u901a\u8fc7**\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u901a\u8fc7\u53cd\u590d\u8bd5\u9a8c\u76f4\u63a5\u4ecePDDL\u8868\u793a\u4e2d\u5b66\u4e60\u95ee\u9898**\u3002 \u4e00\u4e9b\u5de5\u4f5c\u5df2\u7ecf\u5f00\u59cb\u7814\u7a76\u72b6\u6001\u56fe\u8868\u793a\u7684\u4f7f\u7528\u4ee5\u53ca\u4e0d\u540c\u79cd\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u5b66\u4e60\u7b56\u7565\u6216\u542f\u53d1\u5f0f\u65b9\u6cd5\u65b9\u9762\u7684\u7528\u9014\u3002\u5728[ 24] \u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u72ec\u7279\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u79f0\u4e3a\u52a8\u4f5c\u6a21\u5f0f\u7f51\u7edc\uff08ASNet\uff09\uff0c\u8be5\u7f51\u7edc\u7531\u4ea4\u66ff\u7684\u52a8\u4f5c\u5c42\u548c\u547d\u9898\u5c42\u7ec4\u6210\uff0c\u4ee5\u5b66\u4e60\u8ba1\u5212\u7b56\u7565\u3002\u5b83\u4eec\u5c06\u72b6\u6001\u8868\u793a\u4e3a\u56fe\u5f62\uff0c\u5728\u56fe\u5f62\u4e2d\u5bf9\u8c61\u548c\u52a8\u4f5c\u76f8\u4e92\u8fde\u63a5\uff0c\u5e76\u6765\u56de\u4f20\u64ad\u4fe1\u606f\u4ee5\u6700\u7ec8\u8f93\u51fa\u52a8\u4f5c\u7684\u6982\u7387\u3002\u4ed6\u4eec\u901a\u8fc7\u6a21\u4eff\u5176\u4ed6\u8ba1\u5212\u8005\u751f\u6210\u7684\u8ba1\u5212\u6765\u8bad\u7ec3\u81ea\u5df1\u7684ASNet\uff0c\u5e76\u4f7f\u7528\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u503c\u6765\u589e\u52a0\u8f93\u5165\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\u5728\u4ed6\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0c\u4ed6\u4eec\u4e3b\u8981\u5173\u6ce8\u968f\u673a\u8ba1\u5212\u95ee\u9898\uff0c\u5e76\u8bc1\u660e\u4ed6\u4eec\u8bad\u7ec3\u6709\u7d20\u7684\u7b56\u7565\u53ef\u4ee5\u63a8\u5e7f\u5230\u6bd4\u8bad\u7ec3\u6709\u7d20\u7684\u66f4\u5927\u7684\u5b9e\u4f8b\u3002ASNet\u7684\u5c40\u9650\u6027\u662f\u5176\u56fa\u5b9a\u7684\u63a5\u53d7\u9886\u57df\uff0c\u8fd9\u9650\u5236\u4e86\u4ed6\u4eec\u5bf9\u957f\u94fe\u8fdb\u884c\u63a8\u7406\u7684\u80fd\u529b\uff0c\u800c\u6211\u4eec\u7684\u5de5\u4f5c\u65e0\u6cd5\u5206\u4eab\u8fd9\u4e00\u70b9\u3002 \u5728\u6700\u8fd1\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0c[ 20] \u63d0\u51fa\u4e86[ 4] \u7684\u6269\u5c55\u5230\u8d85\u56fe\uff0c\u5e76\u7528\u5b83\u6765\u5b66\u4e60\u8868\u793a\u89c4\u5212\u95ee\u9898\u7684\u5220\u9664\u677e\u5f1b\u72b6\u6001\u7684\u8d85\u56fe\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u4ed6\u4eec\u4f7f\u7528\u8ba1\u5212\u7b97\u6cd5\u751f\u6210\u7684\u6700\u4f73\u542f\u53d1\u5f0f\u503c\u7684\u6709\u76d1\u7763\u5b66\u4e60\uff0c\u7136\u540e\u5c06\u6240\u5f97\u7684\u795e\u7ecf\u7f51\u7edc\u7528\u4f5c\u641c\u7d22\u7b97\u6cd5\u4e2d\u7684\u542f\u53d1\u5f0f\u51fd\u6570\u3002\u4e0e\u6b64\u76f8\u53cd\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4fa7\u91cd\u4e8e\u5b66\u4e60\u7b56\u7565\uff0c\u56e0\u4e3a\u5728\u795e\u7ecf\u7f51\u7edc\u4e0a\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u6b63\u5411\u4f20\u9012\u624d\u80fd\u5728\u6bcf\u79cd\u72b6\u6001\u4e0b\u505a\u51fa\u51b3\u5b9a\uff0c\u56e0\u6b64\u5728\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8282\u7701\u66f4\u591a\u65f6\u95f4\u3002\u4f7f\u7528\u542f\u53d1\u5f0f\u4f30\u8ba1\u9700\u8981\u4f30\u8ba1\u72b6\u6001\u7684\u6240\u6709\u540e\u7ee7\u72b6\u6001\uff0c\u4ee5\u4fbf\u9009\u62e9\u6700\u4f73\u64cd\u4f5c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u589e\u52a0\u8fd0\u884c\u65f6\u95f4\u3002\u53e6\u4e00\u4e2a\u533a\u522b\u662f\u6211\u4eec\u7684\u5de5\u4f5c\u76f4\u63a5\u5728\u72b6\u6001\u4e0a\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u5220\u9664\u677e\u5f1b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u9650\u5236\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u529f\u80fd\uff0c\u56e0\u4e3a\u7701\u7565\u4e86\u4e00\u4e9b\u4fe1\u606f\u3002[ 15] \uff0c[ 29] \u548c[ 5] \u3002 1.1.1. 2\u80cc\u666f \u00b6 1.1.1.1. 2.1\u7ecf\u5178\u89c4\u5212 \u00b6 \u53e4\u5178\u8ba1\u5212\u4f7f\u7528\u4eceSTRIPS\u5efa\u6a21\u8bed\u8a00[ 6] \u6d3e\u751f\u800c\u6765\u7684\u6b63\u5f0f\u63cf\u8ff0\u8bed\u8a00\uff0c\u79f0\u4e3a\u8ba1\u5212\u9886\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09[ 14] \uff0c\u4ee5\u5b9a\u4e49\u95ee\u9898\u9886\u57df\u53ca\u5176\u76f8\u5e94\u7684\u72b6\u6001\u548c\u76ee\u6807\u3002\u6211\u4eec\u5173\u6ce8\u7684\u662f\u4ee4\u4eba\u6ee1\u610f\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u5b83\u53ef\u4ee5\u7531\u96c6\u5408*\uff08F\uff0cO\uff0cI\uff0cG\uff09\u5b9a\u4e49*\uff0c\u5176\u4e2d*F*\u662f\u4e00\u7ec4\u547d\u9898\uff08\u6216\u8c13\u8bcd\uff09\uff0c\u5b83\u4eec\u63cf\u8ff0\u4efb\u52a1\u5b9e\u4f8b\u4e2d\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u5c5e\u6027\u53ca\u5176\u5173\u7cfb\uff0c O*\u662f\u4e00\u7ec4\u8fd0\u7b97\u7b26\uff08\u6216\u64cd\u4f5c\u7c7b\u578b\uff09\uff0cICF\u662f\u521d\u59cb\u72b6\u6001\uff0c\u800cGCF\u662f\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u52a8\u4f5c\u7c7b\u578bGO\u90fd\u7531\u4e09\u5143\u7ec4 \uff08Pre\uff08o\uff09\uff0cAdd\uff08o\uff09\uff0cDel\uff08o\uff09\uff09\u5b9a\u4e49\uff0c \u5176\u4e2d\u524d\u63d0\u4e3a*Pre\uff08o\uff09*\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u5fc5\u987b\u5177\u6709\u6b63\u786e\u7684\u503c\u624d\u80fd\u9002\u7528\u4e8e\u8be5\u64cd\u4f5c\uff0c*Add\uff08o\uff09*\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u5728\u5e94\u7528\u540e\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3a\u771f\uff0c\u800cDel\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3afalse\u6839\u636e\u7533\u8bf7\u3002\u6211\u4eec\u8bd5\u56fe\u627e\u5230\u4e00\u4e2a\u8ba1\u5212\u6216\u4e00\u7cfb\u5217\u884c\u52a8\uff0c\u8fd9\u4e9b\u884c\u52a8\u6216\u884c\u52a8\u5e8f\u5217\u4e00\u65e6\u5e94\u7528\uff0c\u5c31\u4f1a\u5728\u4e00\u5b9a\u65f6\u9650\u6216\u9884\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u5185\u5bfc\u81f4\u72b6\u6001\u4e3a*G C\u7684\u72b6\u6001\u3002\u67e5\u627e\u8ba1\u5212\u4efb\u52a1\u7684\u8ba1\u5212\u901a\u5e38\u662f\u901a\u8fc7\u542f\u53d1\u5f0f\u641c\u7d22\u65b9\u6cd5\u6765\u5b8c\u6210\u7684\uff0c\u4f46\u662f\uff0c\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4e13\u6ce8\u4e8e\u5b66\u4e60\u53cd\u5e94\u5f0f\u8ba1\u5212\u7b56\u7565\uff0c\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u5728\u7279\u5b9a\u9886\u57df\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u540e\u63a8\u5e7f\u5230\u540c\u4e00\u9886\u57df\u4e2d\u65b0\u7684\u770b\u4e0d\u89c1\u7684\u5b9e\u4f8b\u3002 1.1.1.2. \u5f3a\u5316\u5b66\u4e60 \u00b6 \u4e0d\u540c\u4e8e\u5e38\u89c1\u7684 \\(<S,A,R,P,\\gamma \\text{\u6298\u6263\u7387}>\\) \u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5904\u7406\u987a\u5e8f\u51b3\u7b56\u95ee\u9898\u7684\u5b66\u4e60\u7b56\u7565\u3002RL\u7b97\u6cd5\u6700\u5e38\u5047\u8bbe\u53ef\u4ee5\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\uff0c\u5728\u6709\u9650\u6c34\u5e73\u60c5\u51b5\u4e0b\u7531\u5143\u7ec4\uff08S\uff0cA\uff0c R\uff0cP \uff0c T \uff0cp\uff09\u5b9a\u4e49\uff0c\u5176\u4e2d*S*\u662f\u72b6\u6001\uff0cA\u662f\u52a8\u4f5c\u96c6\u5408\uff0c R*\u662f\u5c06\u72b6\u6001\u6216\u72b6\u6001\u52a8\u4f5c\u6620\u5c04\u5230\u6807\u91cf\u5956\u52b1\u7684\u5956\u52b1\u51fd\u6570\uff0cP\u662f\u8fc7\u6e21\u6982\u7387\u51fd\u6570\uff0c\u4f7f\u5f97 \\(p\uff08s' | s,a\uff09= P\uff08s'\uff0cs\uff0c a\uff09\\) * \uff08\u786e\u5b9a\u6027\u7b56\u7565=1\uff09**\uff0cT\u662f\u4efb\u52a1\u8303\u56f4\uff0c*p*\u662f\u521d\u59cb\u72b6\u6001\u7684\u5206\u5e03\u3002 \u5728\u8f83\u5927\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u80fd\u5e0c\u671b\u5c06\u6211\u4eec\u7684\u7b56\u7565\u8868\u793a\u4e3a\u8868\u683c( Q\u8868\u683c )\uff0c\u56e0\u6b64\u88ab\u8feb\u4f7f\u7528\u51fd\u6570\u903c\u8fd1\u5668\uff08 Deep Q network \u7684target network \uff09\u6765\u8868\u793a\u5e26\u6709\u67d0\u4e9b\u53c2\u6570*6*\u7684\u7b56\u7565*\u3002*\u6211\u4eec\u4e13\u6ce8\u4e8e\u968f\u673a\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u6620\u5c04\u72b6\u6001\u548c\u52a8\u4f5c\u6982\u7387\uff0c\u4f8b\u5982p\uff08a | s\uff09-\uff08a | s\uff09\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8e\u7b56\u7565\u68af\u5ea6\u7684\u65b9\u6cd5\u8fdb\u884c\u4f18\u5316 \u6211\u4eec\u7684\u653f\u7b56[ 27] \u3002\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u91c7\u6837\u4f30\u8ba1\u76ee\u6807\u51fd\u6570\u76f8\u5bf9\u4e8e\u7b56\u7565\u53c2\u6570\u7684\u68af\u5ea6\u3002\u5728\u5b9e\u65bd\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u6837\u672c\u8f68\u8ff9\u8ba1\u7b97\u51fa\u7684\u201c\u4f2a\u635f\u5931\u201d\u7684\u68af\u5ea6\u6765\u4f30\u7b97\u7b56\u7565\u68af\u5ea6 \u8fd1\u7aef\u7b56\u7565\u4f18\u5316\uff08PPO\uff09[ 19] \u662f\u4e00\u79cd\u57fa\u4e8e\u7b56\u7565\u68af\u5ea6\u7684\u7b97\u6cd5\uff0c\u65e8\u5728\u901a\u8fc7\u5bf9\u6536\u96c6\u5230\u7684\u6570\u636e\u8fdb\u884c\u591a\u6b21\u68af\u5ea6\u66f4\u65b0\uff0c\u7136\u540e\u4e22\u5f03\u5b83\u6765\u6536\u96c6\u66f4\u591a\u6570\u636e\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5229\u7528\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6536\u96c6\u5230\u7684\u6570\u636e\u3002\u4e3a\u4e86\u907f\u514d\u53ef\u80fd\u56e0\u8f83\u5927\u7684\u7b56\u7565\u66f4\u65b0\u800c\u5f15\u8d77\u7684\u7a33\u5b9a\u6027\u95ee\u9898\uff0cPPO\u4f7f\u7528\u7279\u6b8a\u7684\u88c1\u526a\u76ee\u6807\u6765\u963b\u6b62\u5f53\u524d\u7b56\u7565\u4e0e\u6570\u636e\u6536\u96c6\u7b56\u7565\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4ece\u800c\u5b9a\u4e49\u4f18\u5316\u95ee\u9898 1.1.2. **\u5b66\u4e60generalized policy \u00b6 1.1.2.1. 3.1\u72b6\u6001\u8868\u793a \u00b6 \u6211\u4eec\u9009\u62e9\u5c06\u6211\u4eec\u72b6\u6001\u4e2d\u7684\u72b6\u6001\u8868\u793a\u4e3a\u56fe\u5f62\uff0c\u5e76\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u7ed9\u5b9a\u72b6\u6001\u4e2d\u5bf9\u8c61\u4e4b\u95f4\u7684\u5c5e\u6027\u548c\u5173\u7cfb\u3002\u6211\u4eec\u7684\u6846\u67b6\u5728PDDL\u5efa\u6a21\u8bed\u8a00\u6307\u5b9a\u7684\u95ee\u9898\u57df\u4e0a\u8fd0\u884c\uff0c\u5728\u8be5\u95ee\u9898\u57df\u4e2d\uff0c\u95ee\u9898\u5b9e\u4f8b\u7531\u5bf9\u8c61\u5217\u8868\u548c\u8c13\u8bcd\u5217\u8868\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u63cf\u8ff0\u8fd9\u4e9b\u5bf9\u8c61\u7684\u5c5e\u6027\u4ee5\u53ca\u5f53\u524d\u72b6\u6001\u4e0b\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6211\u4eec\u5c06\u81ea\u5df1\u9650\u5236\u5728\u8c13\u8bcd\u7684Arity\u4e0d\u8d85\u8fc72\u7684\u57df\u4e2d\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u91cd\u5927\u9650\u5236\uff0c\u56e0\u4e3a\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8f83\u9ad8Arity\u8c13\u8bcd\u53ef\u4ee5\u5206\u89e3\u4e3a\u51e0\u4e2a\u8f83\u4f4eArity\u8c13\u8bcd\u3002\u6211\u4eec\u7684\u56fe\u7531\u5168\u5c40\u7279\u5f81\uff0c\u8282\u70b9\u7279\u5f81\u548c\u8fb9\u7f18\u7279\u5f81\u7ec4\u6210\uff0c\u5982[ 4]\u6240\u793a \u3002\u6211\u4eec\u8868\u793a\u5168\u5c40\u7279\u5f81*U* \uff0c\u8282\u70b9V\u548c\u8fb9*E.*\u5168\u5c40\u7279\u5f81\u8868\u793a\u95ee\u9898\u5b9e\u4f8b\u6216\u5b9e\u4f53\u7684\u5c5e\u6027\u5bf9\u4e8e\u8be5\u57df\u800c\u8a00\u662f\u552f\u4e00\u7684\uff0c\u4f8b\u5982Blocksworld\u57df\u4e2d\u7684\u6307\u9488\uff0c\u5e76\u7531\u8be5\u57df\u76840\u5ea6\u8c13\u8bcd\u786e\u5b9a\u3002\u8282\u70b9\u7279\u5f81\u8868\u793a\u57df\u4e2d\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u4f8b\u5982\u5b83\u4eec\u7684\u7c7b\u578b\uff09\uff0c\u5e76\u75311-arity\u8c13\u8bcd\u786e\u5b9a\u3002\u6700\u540e\uff0c\u8fb9\u7f18\u7279\u5f81\u4ee3\u8868\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u75312 arar\u8c13\u8bcd\u786e\u5b9a\u3002 \u5f53\u751f\u6210PDDL\u5b9e\u4f8b\u72b6\u6001\u7684\u56fe\u5f62\u8868\u793a\u65f6\uff0c\u5c06\u4e3a\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u8282\u70b9\u7684\u5b8c\u6574\u56fe\u5f62\u3002\u5bf9\u4e8e\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u8c13\u8bcd\uff0c\u5c06\u5bf9\u5e94\u7684\u7279\u5f81\u5206\u914d\u4e3a\u4e8c\u8fdb\u5236\u503c1\uff0c\u5e76\u5047\u5b9a\u6240\u6709\u5176\u4ed6\u7279\u5f81\u5747\u4e3afalse\uff0c\u5176\u503c\u4e3a0\u3002\u4e3a\u4e86\u5c06\u76ee\u6807\u914d\u7f6e\u5305\u62ec\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\u4e2d\uff0c\u76ee\u6807\u8c13\u8bcd\u51e0\u4e4e\u88ab\u89c6\u4e3a\u53e6\u4e00\u4e2a\u72b6\u6001\u56fe\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e24\u4e2a\u56fe\u8fde\u63a5\u5728\u4e00\u8d77\u4ee5\u5f62\u6210\u72b6\u6001\u76ee\u6807\u7684\u5355\u4e2a\u8868\u793a\u5f62\u5f0f\u3002\u72b6\u6001\u56fe\u548c\u76ee\u6807\u56fe\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u76ee\u6807\u56fe\u4e2d\uff0c\u503c\u4e3a0\u7684\u7279\u5f81\u8868\u793a\u6ca1\u6709\u8d21\u732e\u76ee\u6807\uff1b\u5728\u72b6\u6001\u56fe\u4e2d\uff0c\u503c\u4e3a0\u7684\u7279\u5f81\u610f\u5473\u7740\u8c13\u8bcd\u88ab\u5206\u914d\u4e86\u9519\u8bef\u503c\u3002 \u5728\u6574\u4e2a\u5de5\u4f5c\u4e2d\u4f7f\u7528\u7684\u7ecf\u5178\u89c4\u5212\u9886\u57df\u662f\u786e\u5b9a\u6027\u7684\u548c\u9a6c\u5c14\u53ef\u592b\u5f0f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u524d\u72b6\u6001\u62e5\u6709\u6240\u6709\u5fc5\u9700\u7684\u4fe1\u606f\u4ee5\u6700\u4f73\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5c3d\u7ba1\u5177\u6709\u6b64\u5c5e\u6027\uff0c\u6211\u4eec\u53d1\u73b0 \u9664\u4e86\u5f53\u524d\u72b6\u6001\u5916\uff0c\u8fc7\u53bb\u7684\u72b6\u6001\u8fd8\u6709\u52a9\u4e8e\u5b66\u4e60\u8fc7\u7a0b\u5e76\u63d0\u9ad8\u5bf9\u8f83\u5927\u5b9e\u4f8b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u5c3d\u7ba1\u8fd9\u4e0d\u662f\u4e25\u683c\u5fc5\u8981\u7684\uff0c\u4f46\u6211\u4eec\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u6b64\u6b65\u9aa4\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5e2e\u52a9\u653f\u7b56\u7f13\u89e3\u201c\u6765\u56de\u201d\u884c\u4e3a\uff0c\u8fd9\u5728\u653f\u7b56\u66f4\u5bb9\u6613\u72af\u9519\u8bef\u7136\u540e\u5c1d\u8bd5\u5c1d\u8bd5\u7684\u8f83\u5927\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528\u3002\u7ea0\u6b63\u5b83\u4eec\u3002\u6dfb\u52a0\u6b64\u5386\u53f2\u8bb0\u5f55\u5f88\u7b80\u5355\uff1b\u6211\u4eec\u53ea\u9700\u5c06K\u4e2a\u5148\u524d\u72b6\u6001\u548c\u5f53\u524d\u72b6\u6001\u7684\u56fe\u8fde\u63a5\u8d77\u6765\uff0c\u7136\u540e\u5982\u524d\u6240\u8ff0\u5c06\u76ee\u6807\u56fe\u8fde\u63a5\u8d77\u6765\u3002\u6211\u4eec\u6d4b\u8bd5\u4e86\u51e0\u4e2a\u8fd9\u6837\u7684\u5386\u53f2\u89c6\u91ce\uff0c\u53d1\u73b0\u4ec5\u6dfb\u52a0\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u4f1a\u5e26\u6765\u603b\u4f53\u4e0a\u6700\u4f73\u7684\u6027\u80fd\u548c\u901a\u7528\u6027\u3002\u5728\u56fe 1\u4e2d \u53ef\u4ee5\u770b\u5230\u6765\u81eaBlocksworld\u57df\u7684\u72b6\u6001\u76ee\u6807\u56fe\u7684\u793a\u4f8b \u548c 2\uff0c \u663e\u793a\u5177\u67093\u4e2a\u5757\u7684\u5b9e\u4f8b\u3002 1.1.2.2. 3.2\u56fe\u5f62\u5d4c\u5165 \u00b6 \u4e3a\u4e86\u4f7f\u7528\u72b6\u6001\u76ee\u6807\u7684\u56fe\u5f62\u8868\u793a\u6765\u5b66\u4e60\u597d\u7684\u7b56\u7565\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528\u56fe\u5f62\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u5c06\u56fe\u5f62\u7684\u8282\u70b9\uff0c\u8fb9\u7f18\u548c\u5168\u5c40\u7279\u5f81\u5d4c\u5165\u5230\u5404\u81ea\u7684\u6f5c\u5728\u7a7a\u95f4\u4e2d\u3002GNN\u5728\u56fe\u7684\u4e0d\u540c\u7ec4\u4ef6\u4e4b\u95f4\u6267\u884c\u6d88\u606f\u4f20\u9012\uff0c\u4ece\u800c\u5141\u8bb8\u6709\u7528\u7684\u4fe1\u606f\u6d41\u52a8\u3002\u6211\u4eec\u4f7f\u7528\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684GNN\u5757\uff0c\u6bcf\u79cd\u5757\u90fd\u5728\u56fe\u5185\u5b9e\u65bd\u4e0d\u540c\u6837\u5f0f\u7684\u4fe1\u606f\u6d41\uff0c\u56e0\u6b64\u6bd4\u5176\u4ed6\u7c7b\u578b\u66f4\u9002\u5408\u67d0\u4e9b\u95ee\u9898\u9886\u57df\u3002\u5728\u8fd9\u4e24\u79cd\u7c7b\u578b\u4e2d\uff0c\u66f4\u65b0\u987a\u5e8f\u76f8\u4f3c\uff0c\u5e76\u91c7\u7528\u4ee5\u4e0b\u5e38\u89c1\u5f62\u5f0f\uff1a 1.\u4f7f\u7528\u5148\u524d\u7684\u8fb9\u7f18\u548c\u8fd9\u4e9b\u8fb9\u7f18\u7684\u201c\u539f\u59cb\u201d\u8282\u70b9\u66f4\u65b0\u8fb9\u7f18\u3002 2.\u4f7f\u7528\u5148\u524d\u7684\u8282\u70b9\uff0c\u4f20\u5165\u7684\u66f4\u65b0\u8fb9\u548c\u5168\u5c40\u7279\u5f81\u66f4\u65b0\u8282\u70b9\u3002 3.\u4f7f\u7528\u5148\u524d\u7684\u5168\u5c40\u53d8\u91cf\u548c\u66f4\u65b0\u7684\u8282\u70b9\u7684\u805a\u5408\u6765\u66f4\u65b0\u5168\u5c40\u53d8\u91cf\u3002 \u6211\u4eec\u4f7f\u7528\u7684\u7b2c\u4e00\u79cd\u5757\u7c7b\u578b\u7c7b\u4f3c\u4e8e[ 4]\u4e2d \u63cf\u8ff0\u7684\u5757\u7c7b\u578b\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a**Graph Network\u5757**\uff08GN\u5757\uff09\u3002\u4ece\u6570\u5b66\u4e0a\u8bb2\uff0c\u6b64\u5757\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c \u5728\u4ee5\u4e0a\u8868\u793a\u4e2d\uff0c \u662f\u975e\u7ebf\u6027\uff0c\u4f8b\u5982\u6574\u6d41\u7ebf\u6027\u5355\u5143\uff0c \u662f\u8282\u70b9\u65b9\u5f0f\u7684\u6700\u5927\u6c60\u64cd\u4f5c\uff0c\u5e76\u4e14W\uff0c*b*\u662f\u5404\u81ea\u7684\u6743\u91cd\u77e9\u9635\u548c\u504f\u5dee\u3002\u5728GN\u5757\u4e2d\uff0c\u8282\u70b9\u4e0d\u52a0\u9009\u62e9\u5730\u4ece\u5176\u76f8\u90bb\u8282\u70b9\u63a5\u6536\u6d88\u606f\uff0c\u8be5\u6d88\u606f\u5f88\u597d\u5730\u5728\u6574\u4e2a\u56fe\u4e0a\u4f20\u64ad\u4e00\u822c\u4fe1\u606f\uff0c\u4f46\u5728\u9700\u8981\u65f6\u66f4\u96be\u4f20\u9012\u7279\u5b9a\u7684\u4fe1\u606f\u4f4d\u3002 \u7b2c\u4e8c\u79cd\u7c7b\u578b\u7684\u5757\u65e8\u5728\u89e3\u51b3GN\u5757\u7684\u7f3a\u70b9\uff0c\u5e76\u4e3a\u6b64\u76ee\u7684\u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u6ce8\u673a\u5236\u3002\u6211\u4eec\u5c06\u7b2c\u4e8c\u4e2a\u5757\u547d\u540d\u4e3a**Graph Network Attention\u5757**\uff08GNAT\u5757\uff09\uff0c\u4e0e[ 26] \u7684Graph Attention Network\u4e0d\u540c\uff0c\u5b83\u4f7f\u7528\u7684\u6ce8\u610f\u529b\u673a\u5236\u7c7b\u4f3c\u4e8e[ 25] \u7684Transformer\u6a21\u578b\u3002\u8be5\u5757\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u5728\u4e0a\u9762\u7684\u8868\u793a\u4e2d\uff0c^\u662f\u6309\u8282\u70b9\u6c42\u548c\u7684\u64cd\u4f5c\uff0c\u00a9\u662fHadamard\u4e58\u79ef\uff0c*W*\u548c*b*\u5206\u522b\u662f\u6743\u91cd\u77e9\u9635\u548c\u504f\u5dee\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u901a\u8fc7\u8d4b\u4e88\u8282\u70b9\u4ee5\u4e13\u6ce8\u4e8e\u7279\u5b9a\u6d88\u606f\u7684\u80fd\u529b\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u5757\u5141\u8bb8\u67d0\u4e9b\u4fe1\u606f\u4f4d\u4ee5\u66f4\u6709\u610f\u7684\u65b9\u5f0f\u5728\u56fe\u4e2d\u4f20\u64ad\u3002\u5728\u6784\u5efa\u6211\u4eec\u7684GNN\u6a21\u578b\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5806\u53e0\u8fd9\u4e9b\u7c7b\u578b\u7684\u51e0\u4e2a\u5757\uff08\u53ca\u5176\u7ec4\u5408\uff09\u4ee5\u83b7\u5f97\u66f4\u6df1\u7684\u56fe\u5d4c\u5165\u80fd\u529b\u3002\u5728\u6211\u4eec\u7684\u5927\u591a\u6570\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u4e2a\u5757\uff0c\u4e24\u4e2a\u8fde\u7eed\u7684GN\u5757\uff0c\u6216\u8005\u4e00\u4e2aGNAT\u5757\uff0c\u540e\u8ddf\u4e00\u4e2aGN\u5757\u3002\u6b63\u5982\u6211\u4eec\u5c06\u5728\u5b9e\u9a8c\u90e8\u5206\u4e2d\u5c55\u793a\u7684\u90a3\u6837\uff0c\u6bcf\u79cd\u914d\u7f6e\u90fd\u64c5\u957f\u89e3\u51b3\u4e0d\u540c\u7684\u95ee\u9898\u3002 1.1.2.3. 3.3\u653f\u7b56\u4ee3\u8868 \u00b6 \u4e0e\u5e38\u89c4\u7684\u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\u4e0d\u540c\uff0c\u5728\u5e38\u89c4\u7684\u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\u4e2d\uff0c\u4e00\u7ec4\u52a8\u4f5c\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u65b9\u4fbf\u5730\u8fdb\u884c\u5904\u7406\uff0c\u800c\u5728\u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u4e2d\uff0c\u4e00\u7ec4\u52a8\u4f5c\u53d6\u51b3\u4e8e\u72b6\u6001\uff0c\u5e76\u4e14\u72b6\u6001\u4e4b\u95f4\u7684\u5927\u5c0f\u4e0d\u540c\u3002\u5728PDDL\u4e2d\uff0c\u6bcf\u4e2a\u57df\u63cf\u8ff0\u90fd\u5b9a\u4e49\u4e86\u4e00\u7ec4\u52a8\u4f5c\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u8fd9\u4e9b\u52a8\u4f5c\u7c7b\u578b\u7f6e\u4e8e\u72b6\u6001\u57fa\u7840\u4e0a\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002\u6bcf\u79cd\u52a8\u4f5c\u7c7b\u578b\u90fd\u63a5\u6536\u4e00\u7ec4\u53c2\u6570\uff0c\u5e76\u4e14\u4e3a\u4e86\u9002\u7528\uff0c\u8be5\u52a8\u4f5c\u7684\u53c2\u6570\u5fc5\u987b\u7b26\u5408\u4e00\u7ec4\u524d\u63d0\u6761\u4ef6\u3002\u4f8b\u5982\uff0cBlocksworld\u57df\u5177\u6709\u4e00\u79cd\u79f0\u4e3a\u201c\u62fe\u53d6\u201d\u7684\u52a8\u4f5c\u7c7b\u578b\uff0c\u8be5\u52a8\u4f5c\u7c7b\u578b\u5c06\u5355\u4e2a\u5757\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002\u8be5\u5757\u5fc5\u987b\u662f\u201c clear\u201d\uff0c\u201c on-table\u201d\u4e14\u201c arm-empty\u201d\u5c5e\u6027\u5fc5\u987b\u4e3atrue\uff0c\u6b64\u64cd\u4f5c\u624d\u9002\u7528\u3002\u53ef\u4ee5\u62fe\u53d6\u7b26\u5408\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u7684\u6240\u6709\u5757\uff0c\u5e76\u4ee3\u8868\u552f\u4e00\u7684\u52a8\u4f5c\u3002\u9664\u4e86\u5148\u51b3\u6761\u4ef6\u5916\uff0c\u6bcf\u79cd\u52a8\u4f5c\u7c7b\u578b\u8fd8\u5177\u6709\u5728\u5e94\u7528\u52a8\u4f5c\u65f6\u5f15\u8d77\u72b6\u6001\u7684\u6548\u679c\u3002\u5176\u4e2d\u4e00\u4e9b\u5f71\u54cd\u53ef\u80fd\u662f\u6b63\u9762\u7684\uff08\u72b6\u6001\u7684\u67d0\u4e9b\u8c13\u8bcd\u5c06\u91c7\u7528\u771f\u503c\uff09\uff0c\u800c\u67d0\u4e9b\u8d1f\u9762\u5f71\u54cd\uff08\u72b6\u6001\u7684\u8c13\u8bcd\u5c06\u91c7\u7528\u5047\u503c\uff09\u3002 \u5728\u8ba1\u5212\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\u90fd\u4f1a\u7ed9\u51fa\u5f53\u524d\u72b6\u6001\u548c\u9002\u7528\u52a8\u4f5c\u7684\u5217\u8868\u3002\u4e3a\u4e86\u4ee5\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u8868\u793a\u52a8\u4f5c\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u5bf9\u5176\u5b66\u4e60\u7b56\u7565\uff0c\u6211\u4eec\u9009\u62e9\u6309\u7167\u52a8\u4f5c\u7684\u6548\u679c\u6765\u63cf\u8ff0\u52a8\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u662f\u505a\u51fa\u51b3\u7b56\u6240\u5fc5\u9700\u7684\u8981\u7d20\u3002\u7531\u4e8e\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\u5728\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5411\u4ee3\u7406\u63d0\u4f9b\u4e86\u6240\u6709\u6cd5\u5f8b\u8bc9\u8bbc\uff0c\u56e0\u6b64\u6211\u4eec\u5ffd\u7565\u4e86\u524d\u63d0\u6761\u4ef6\uff08\u6240\u6709\u6cd5\u5f8b\u8bc9\u8bbc\u90fd\u6ee1\u8db3\u4e86\u524d\u63d0\u6761\u4ef6\uff09\u3002\u6bcf\u4e2a\u52a8\u4f5c\u90fd\u7531\u51e0\u79cd\u6548\u679c\u7ec4\u6210\uff0c\u6bcf\u79cd\u6548\u679c\u90fd\u6d89\u53ca\u72b6\u6001\u7684\u4e0d\u540c\u65b9\u9762\uff0c\u53ef\u4ee5\u662f\u6b63\u9762\u7684\u4e5f\u53ef\u4ee5\u662f\u8d1f\u9762\u7684\u3002\u6839\u636e\u6548\u679c\u7684\u7c7b\u578b\uff08\u5168\u5c40\u6548\u679c\uff0c\u8282\u70b9\u6548\u679c\u6216\u8fb9\u7f18\u6548\u679c\uff09\u5c06\u6548\u679c\u805a\u5728\u4e00\u8d77\uff0c\u548c\u8868\u793a\u4e3a\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u5d4c\u5165\u548c\u4e00\u4e2a\u70ed\u5411\u91cf\u7684\u4e32\u8054\uff0c\u8be5\u5411\u91cf\u63cf\u8ff0\u54ea\u4e2a\u8c13\u8bcd\u5df2\u66f4\u6539\u4ee5\u53ca\u5176\u4e3a\u6b63\u8fd8\u662f\u8d1f\u3002\u8fd9\u4e2a\u4e00\u5143\u5411\u91cf\u5728\u76f8\u5e94\u8f93\u5165\u5206\u91cf\u7684\u7ef4\u5ea6\u4e0a*\uff08d v*\u4e3a\u4f8b\u5982\u8282\u70b9\u6548\u5e94\uff09\u5e76\u5305\u542b1\u8868\u793a\u6b63\u4f5c\u7528\u6216-1\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u8c13\u8bcd\u7684\u8d1f\u9762\u5f71\u54cd\u3002\u6bcf\u4e2a\u6548\u679c\u90fd\u4f1a\u6839\u636e\u5176\u7c7b\u578b\u7531\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\u8fdb\u884c\u8f6c\u6362\uff0c\u7136\u540e\u5c06\u5df2\u8f6c\u6362\u7684\u6548\u679c\u5206\u6563\u56de\u5176\u539f\u59cb\u52a8\u4f5c\u3002\u5c06\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6548\u679c\u6c47\u603b\u5728\u4e00\u8d77\uff0c\u4ee5\u5f62\u6210\u8be5\u52a8\u4f5c\u7684\u5355\u4e2a\u5411\u91cf\u8868\u793a\uff0c\u6700\u7ec8\u5c06\u5176\u9988\u9001\u5230\u7b56\u7565\u795e\u7ecf\u7f51\u7edc\u3002\u56fe 4 \u8bf4\u660e\u4e86\u52a8\u4f5c\u8868\u793a\u7684\u8fc7\u7a0b\u3002 \u6700\u7ec8\u7b56\u7565\u662fMLP\uff0c\u5b83\u4e3a\u6bcf\u4e2a\u52a8\u4f5c\u8f93\u51fa\u5355\u4e2a\u6807\u91cf\uff0c\u7136\u540e\u901a\u8fc7softmax\u64cd\u4f5c\u5bf9\u8fd9\u4e9b\u6807\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u4ee5\u83b7\u53d6\u52a8\u4f5c\u7684\u79bb\u6563\u5206\u5e03\u3002\u53e6\u5916\uff0c\u53e6\u4e00\u4e2aMLP\u63d0\u53d6\u56fe\u5f62\u7684\u6700\u7ec8\u5168\u5c40\u7279\u5f81\u5d4c\u5165\u5e76\u8f93\u51fa\u72b6\u6001\u7684\u9884\u6d4b\u503c\uff0c\u4ee5\u7528\u4e8eRL\u7b97\u6cd5\u4e2d\u7684\u4f18\u52bf\u4f30\u8ba1\u3002 1.1.2.4. 3.4\u7a0b\u5e8f\u8bad\u7ec3 \u00b6 \u7531\u4e8e\u8fd9\u9879\u5de5\u4f5c\u7684\u91cd\u70b9\u662f\u627e\u5230\u53ef\u884c\u7684\u8ba1\u5212\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u5e26\u6709\u4e8c\u5143\u5956\u52b1\u7684\u7a00\u758f\u5956\u52b1\u95ee\u9898\u3002\u5982\u679c\u4ee3\u7406\u6ee1\u8db3\u9884\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u76ee\u6807\uff0c\u5219\u5f97\u52301\u7684\u5956\u52b1\uff0c\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\uff0c\u5219\u6ca1\u6709\u4efb\u4f55\u5956\u52b1\u3002\u4e3a\u4e86\u786e\u5b9a\u9002\u5f53\u7684\u65f6\u9650\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5e38\u7528\u7684**hff**\u542f\u53d1\u5f0f\u65b9\u6cd5[ 12] \uff0c\u5b83\u89e3\u51b3\u4e86\u7ebf\u6027\u65f6\u95f4\u95ee\u9898\u7684\u677e\u5f1b\u5f62\u5f0f\uff08\u677e\u5f1b\u95ee\u9898\u6ca1\u6709\u8d1f\u9762\u5f71\u54cd\uff09\u3002\u6211\u4eec\u91c7\u7528\u677e\u5f1b\u8ba1\u5212\u7684\u957f\u5ea6\uff0c\u5e76\u5c06\u5176\u4e58\u4ee55\u7684\u5e38\u6570\u4ee5\u83b7\u5f97\u5730\u5e73\u7ebf\u7684\u957f\u5ea6\u3002 \u4e3a\u4e86\u8bad\u7ec3\u6211\u4eec\u7684\u7b56\u7565\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u8fd1\u7aef\u7b56\u7565\u4f18\u5316\uff08PPO\uff09[ 19]\uff0c \u56e0\u4e3a\u5b83\u7b80\u5355\u6613\u7528\u4e14\u6027\u80fd\u826f\u597d\u3002\u4e3a\u4e86\u89e3\u51b3\u7a00\u758f\u5956\u52b1\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6700\u521d\u4f7f\u7528Hindsight Experience Replay DQN [ 2] \u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u89e3\u51b3\u7a00\u758f\u76ee\u6807\u8fbe\u6210\u95ee\u9898\u7684\u80fd\u529b\uff0c\u4f46\u662f\u53d1\u73b0\u5b83\u5f15\u5165\u4e86\u5f88\u591a\u504f\u89c1\u5e76\u5bfc\u81f4\u6027\u80fd\u4e0d\u7406\u60f3\u3002\u4e3a\u4e86\u8ba9\u6211\u4eec\u7684\u653f\u7b56\u80fd\u591f\u4ece\u7a00\u758f\u7684\u4e8c\u8fdb\u5236\u5956\u52b1\u4e2d\u5b66\u4e60\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u4e00\u79cd \u66f4\u7b80\u5355\u7684\u65b9\u6cd5 \u6211\u4eec\u6839\u636e\u5b9e\u4f8b\u5927\u5c0f\u7684\u5206\u5e03\u751f\u6210\u4e86\u6bcf\u4e2a\u8bad\u7ec3\u60c5\u8282\uff0c\u5b9e\u4f8b\u5927\u5c0f\u7684\u5206\u5e03\u5c0f\u5230\u8db3\u4ee5\u88ab\u968f\u673a\u521d\u59cb\u5316\u7684\u7b56\u7565\u89e3\u51b3\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u4f7f\u7b56\u7565\u5f97\u4ee5\u53d1\u5c55\uff0c\u6700\u7ec8\u89e3\u51b3\u5206\u53d1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u5927\u5c0f\uff0c\u800c\u65e0\u9700\u624b\u52a8\u8c03\u6574\u8bfe\u7a0b\u8868\u3002\u5c3d\u7ba1\u8bbe\u7f6e\u6b64\u5206\u5e03\u9700\u8981\u624b\u52a8\u5b8c\u6210\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u901a\u8fc7\u4f7f\u7528\u968f\u673a\u672a\u7ecf\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u7b80\u5355\u7684\u8bd5\u9a8c\u548c\u9519\u8bef\uff0c\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5feb\u6377\u5730\u5b8c\u6210\u6b64\u4efb\u52a1\u3002 \u6211\u4eec\u5bf9\u6807\u51c6PPO\u7b97\u6cd5\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c0f\u8c03\u6574\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u672c\u4f8b\u7684\u6027\u80fd\u3002\u8bb8\u591aRL\u7b97\u6cd5\u7684\u5b9e\u73b0\u4f1a\u5728\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u4e4b\u524d\u9488\u5bf9\u56fa\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u63a8\u51fa\u7b56\u7565\uff0c\u901a\u5e38\u4f1a\u5728\u8fc7\u7a0b\u5b8c\u6210\u4e4b\u524d\u7ec8\u6b62\u60c5\u8282\uff0c\u5e76\u4f7f\u7528\u8bf8\u5982Generalized Advantage Estimation [ 18] \u548c\u81ea\u4e3e\u503c\u4f30\u8ba1\u4e4b\u7c7b\u7684\u65b9\u6cd5\u6765\u4f30\u8ba1\u6536\u76ca [16] ] \u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u5143\u7d20\u4f1a\u7ed9\u6211\u4eec\u7684\u5b66\u4e60\u8fc7\u7a0b\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u504f\u89c1\uff0c\u800c\u662f\u4f7f\u7528\u7ecf\u9a8c\u6027\u56de\u62a5\u800c\u4e0d\u662f\u5f15\u5bfc\u4ef7\u503c\u4f30\u7b97\u6765\u8ba1\u7b97\u4f18\u52bf\uff0c\u4ece\u800c\u9010\u6b65\u63a8\u5e7f\u6bcf\u4e2a\u60c5\u8282\u76f4\u81f3\u7ec8\u6b62\u3002\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u4f7f\u7528\u8bb8\u591a\u63a8\u5e7f\u548c\u5927\u6279\u91cf\u751f\u4ea7\u6709\u52a9\u4e8e\u7a33\u5b9a\u5b66\u4e60\u8fc7\u7a0b\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u6700\u7ec8\u6027\u80fd\uff0c\u56e0\u6b64\u6211\u4eec\u8fdb\u884c\u4e86100\u96c6\u7684\u63a8\u5e7f\uff0c\u5e76\u4f7f\u7528\u7ed3\u679c\u6570\u636e\u5728\u6bcf\u6b21\u5b66\u4e60\u8fed\u4ee3\u65f6\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7b97\u6cd5\u3002 1.1.2.5. 3.5\u63a8\u7406\u8fc7\u7a0b\u4e2d\u7684\u8ba1\u5212 \u00b6 \u4e3a\u4e86\u63d0\u9ad8\u901a\u7528\u7b56\u7565\u5728\u6d4b\u8bd5\u671f\u95f4\u4f7f\u7528\u989d\u5916\u65f6\u95f4\u7684\u80fd\u529b\uff0c\u6211\u4eec\u5728\u641c\u7d22\u7b97\u6cd5\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e9b\u7b56\u7565\uff0c\u5c31\u50cf[ 21] \uff0c[ 3] \u7b49\u5176\u4ed6\u8bb8\u591a\u4f5c\u54c1\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u5408\u6210\u5728\u8bf8\u5982Go\u548cChess [ 22]\u7684 \u96f6\u548c\u6e38\u620f\u4e2d\u83b7\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u5176\u4e2d\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\u4e0e\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22\u7b97\u6cd5\u7ed3\u5408\u4f7f\u7528\uff0c\u8fd9\u4fc3\u4f7f\u5176\u4ed6\u4f5c\u8005\u751a\u81f3\u5bf9\u975e\u6e38\u620f\u95ee\u9898[ 1] \u3002\u6211\u4eec\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4e13\u95e8\u9488\u5bf9\u5177\u6709\u5f3a\u53cd\u5e94\u6027\u7b56\u7565\u7684\u786e\u5b9a\u6027\u8ba1\u5212\u95ee\u9898\u8bbe\u8ba1\u641c\u7d22\u7b97\u6cd5\u3002\u6211\u4eec\u7684\u7b97\u6cd5\u4ee5\u7ecf\u5178\u7684\u8d2a\u5a6a\u6700\u4f73\u4f18\u5148\u641c\u7d22\uff08GBFS\uff09\u7b97\u6cd5\u4e3a\u57fa\u7840\uff0c\u4f46\u662f\u4ee5\u51e0\u79cd\u5173\u952e\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5145\u3002\u5728\u6807\u51c6GBFS\u4e2d\uff0c\u4ece\u6839\u8282\u70b9\u6784\u5efa\u4e00\u4e2a\u641c\u7d22\u6811\uff0c\u5e76\u4e14\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u4ece\u6253\u5f00\u5217\u8868\u4e2d\u63d0\u53d6\u542f\u53d1\u5f0f\u4f30\u8ba1\u6700\u4f73\u7684\u8282\u70b9\uff0c\u8fdb\u884c\u6269\u5c55\u5e76\u5c06\u5176\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u6253\u5f00\u5217\u8868\u4e2d\uff0c\u5e76\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u5230\u627e\u5230\u76ee\u6807\u8282\u70b9\u6216\u76f4\u5230\u8d85\u65f6\u4e3a\u6b62\u3002\u6211\u4eec\u7684\u7b97\u6cd5\u79f0\u4e3aGBFS-GNN\uff0c\u5b83\u6267\u884c\u7c7b\u4f3c\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u4f7f\u7528\u7b56\u7565\u548c\u503c\u51fd\u6570\u4e3a\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u542f\u53d1\u5f0f\u503c\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u6269\u5c55\u8282\u70b9\u6267\u884c\u5b8c\u6574\u90e8\u7f72\u3002\u6269\u5c55\u8282\u70b9\u7684\u540e\u4ee3\u5c06\u6dfb\u52a0\u5230\u6253\u5f00\u5217\u8868\u4e2d\uff0c\u4f46\u662f\u5728\u8f6c\u51fa\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5176\u4f59\u8282\u70b9\u5219\u4e0d\u662f\uff0c\u4ee5\u907f\u514d\u5927\u95ee\u9898\u4e2d\u5185\u5b58\u6d88\u8017\u7684\u5feb\u901f\u589e\u957f\u3002\u641c\u7d22\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u72b6\u6001-\u52a8\u4f5c\u5bf9\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8282\u70b9\u4f7f\u7528\u4ee5\u4e0b\u542f\u53d1\u5f0f\u4f30\u8ba1 1.1.3. 5\u4e2a\u5b9e\u9a8c \u00b6 1.1.3.1. 5.1\u57df \u00b6 \u6211\u4eec\u8bc4\u4f30\u4e86\u4e94\u4e2a\u5e38\u89c1\u7684\u7ecf\u5178\u89c4\u5212\u9886\u57df\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u9886\u57df\u662f\u4eceIPC\u89c4\u5212\u7ade\u8d5b\u96c6\u5408\u4e2d\u9009\u62e9\u7684\uff0c\u5176\u9886\u57df\u8c13\u8bcd\u4e0d\u5927\u4e8e2\uff1a \u2022Blocksworld\uff084 op\uff09\uff1a\u673a\u68b0\u624b\u5fc5\u987b\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u79fb\u52a8\u79ef\u6728\uff0c\u4ee5\u4fbf\u6839\u636e\u76ee\u6807\u914d\u7f6e\u8fdb\u884c\u6392\u5217\u3002 \u2022\u536b\u661f\uff1a\u4e00\u7ec4\u536b\u661f\u5fc5\u987b\u62cd\u6444\u4f4d\u7f6e\u7684\u56fe\u50cf\uff0c\u6bcf\u4e2a\u56fe\u50cf\u90fd\u5177\u6709\u6307\u5b9a\u7c7b\u578b\u7684\u4f20\u611f\u5668\u3002 \u2022\u7269\u6d41\uff1a\u5fc5\u987b\u5c06\u5305\u88f9\u8fd0\u9001\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u4f7f\u7528\u98de\u673a\u548c\u5361\u8f66\u5728\u57ce\u5e02\u548c\u5730\u70b9\u4e4b\u95f4\u79fb\u52a8\u5305\u88f9\u3002 \u2022\u5939\u722a\uff1a\u53cc\u81c2\u673a\u5668\u4eba\u5fc5\u987b\u5c06\u7403\u4eceA\u5ba4\u4f20\u9001\u5230B\u5ba4\u3002 \u2022\u6e21\u8f6e\uff1a\u6e21\u8f6e\u5fc5\u987b\u5c06\u6c7d\u8f66\u4ece\u6700\u521d\u7684\u4f4d\u7f6e\u8fd0\u8f93\u5230\u6307\u5b9a\u7684\u76ee\u6807\u4f4d\u7f6e\u3002 \u8fd9\u4e94\u4e2a\u9886\u57df\u7684\u5171\u540c\u70b9\u5728\u4e8e\uff0c\u53ef\u4ee5\u4e3a\u5b83\u4eec\u5236\u5b9a\u7b80\u5355\u7684\u901a\u7528\u8ba1\u5212\uff0c\u4ece\u800c\u80fd\u591f\u89e3\u51b3\u4efb\u610f\u5927\u7684\u5b9e\u4f8b\u3002\u6211\u4eec\u5e0c\u671b\u8bc1\u660e\u6211\u4eec\u7684\u65b9\u6cd5\u80fd\u591f\u4ea7\u751f\u89e3\u51b3\u6bd4\u5b9e\u4f8b\u5927\u5f97\u591a\u7684\u5b9e\u4f8b\u7684\u7b56\u7565\uff0c\u4ece\u800c\u81ea\u52a8\u53d1\u73b0\u8fd9\u6837\u7684\u5e7f\u4e49\u8ba1\u5212\u3002\u6709\u4e9b\u9886\u57df\u6bd4\u5176\u4ed6\u9886\u57df\u5bb9\u6613\uff0c\u5e76\u4e14\u5728\u5e7f\u4e49\u8ba1\u5212\u5f88\u5bb9\u6613\u63cf\u8ff0\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7ecf\u5e38\u76ee\u7779\u8be5\u653f\u7b56\u975e\u5e38\u6210\u529f\u5730\u63a8\u5e7f\u3002\u4f8b\u5982\uff0cGripper\u57df\u5177\u6709\u975e\u5e38\u7b80\u5355\u7684\u7b56\u7565\uff08\u6bcf\u6b21\u5230B\u5ba4\u90fd\u6293\u4f4f2\u4e2a\u7403\uff09\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u4e86\u6700\u4f73\u7b56\u7565\uff0c\u5373\u4f7f\u5bf9\u4e8e\u6570\u767e\u4e2a\u7403\u7684\u5b9e\u4f8b\uff0c\u901a\u5e38\u4ecd\u7136\u8868\u73b0\u6700\u4f73\u3002\u4e3a\u4e86\u8bc1\u660e\u6211\u4eec\u7684\u653f\u7b56\u786e\u5b9e\u80fd\u5f88\u597d\u5730\u63a8\u5e7f\uff0c \u2022\u5bf9\u4e8eBlocksworld\u57df\uff0c\u6211\u4eec\u57284\u4e2a\u5757\u7684\u5b9e\u4f8b\u4e0a\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b56\u7565\uff0c\u5e76\u57285-100\u4e2a\u5757\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 \u2022\u5bf9\u4e8e\u201c\u536b\u661f\u201d\u9886\u57df\uff0c\u6211\u4eec\u5bf9\u4f7f\u75281-3\u9897\u536b\u661f\uff0c\u6bcf\u9897\u536b\u661f1-3\u53f0\u4eea\u5668\uff0c1-3\u79cd\u4eea\u5668\uff0c2-3\u4e2a\u76ee\u6807\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u653f\u7b56\u57f9\u8bad\uff0c\u5e76\u9488\u5bf9\u4f7f\u75281-14\u9897\u536b\u661f\uff0c2-11\u53f0\u4eea\u5668\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u6bcf\u4e2a\u536b\u661f\uff0c1-6\u79cd\u4eea\u5668\u548c2-42\u4e2a\u76ee\u6807\u3002 \u2022\u5bf9\u4e8e\u7269\u6d41\u9886\u57df\uff0c\u6211\u4eec\u9488\u5bf9\u4f7f\u75282-3\u67b6\u98de\u673a\uff0c2-3\u4e2a\u57ce\u5e02\uff0c\u6bcf\u4e2a\u57ce\u5e022-3\u4e2a\u5730\u70b9\uff0c1-2\u4e2a\u5305\u88f9\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b56\u7565\uff0c\u5e76\u8bc4\u4f30\u4e86\u4f7f\u75284-12\u67b6\u98de\u673a\uff0c4-15\u4e2a\u57ce\u5e02\uff0c1\u4e2a\u5b9e\u4f8b\u7684\u5b9e\u4f8b\u6bcf\u4e2a\u57ce\u5e02-6\u4e2a\u5730\u70b9\u548c8-40\u4e2a\u5305\u88f9\u3002 \u2022\u5bf9\u4e8eGripper\u57df\uff0c\u6211\u4eec\u9488\u5bf93\u4e2a\u7403\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b56\u7565\uff0c\u5e76\u9488\u5bf95-200\u4e2a\u7403\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 \u2022\u5bf9\u4e8eFerry\u57df\uff0c\u6211\u4eec\u9488\u5bf9\u5177\u67093-4\u4e2a\u4f4d\u7f6e\uff0c2-3\u4e2a\u6c7d\u8f66\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b56\u7565\uff0c\u5e76\u9488\u5bf9\u5177\u67094-40\u4e2a\u4f4d\u7f6e\u548c2-120\u4e2a\u6c7d\u8f66\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 1.1.3.2. 5.2\u5b9e\u9a8c\u8bbe\u5b9a \u00b6 \u4e3a\u4e86\u8bad\u7ec3\u6211\u4eec\u7684\u7b56\u7565\uff0c\u6211\u4eec\u4f9d\u9760\u5b9e\u4f8b\u751f\u6210\u5668\u6765\u4ea7\u751f\u968f\u673a\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u65b9\u6cd5\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6240\u6709\u7b56\u7565\u90fd\u7ecf\u8fc71000\u6b21\u8fed\u4ee3\u8bad\u7ec3\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u6709100\u4e2a\u8bad\u7ec3\u60c5\u8282\u548c\u591a\u8fbe20\u4e2a\u6e10\u53d8\u66f4\u65b0\u6b65\u9aa4\u3002\u5b9e\u9a8c\u662f\u5728\u4e00\u53f0\u88c5\u6709i7-8700K\u5904\u7406\u5668\u548c\u4e00\u4e2aNVIDIA GTX 1070 GPU\u7684\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u7684\u3002\u6211\u4eec\u5bf9\u6240\u6709\u4e94\u4e2a\u57df\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u8bad\u7ec3\u8d85\u53c2\u6570\uff0c\u4f46\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7565\u6709\u4e0d\u540c\u3002\u6211\u4eec\u4f7f\u7528\u4e86256\u4e2a\u9690\u85cf\u8868\u793a\u5f62\u5f0f\u548cReLU\u6fc0\u6d3b\uff0c\u4e00\u4e2a\u5b66\u4e60\u73870.0001\uff0c\u4e00\u4e2a\u6298\u73b0\u56e0\u5b500.99\uff0c\u4e00\u4e2a\u71b5\u5956\u52b10.01\uff0c\u4e00\u4e2a\u526a\u5207\u6bd40.2\u548c\u4e00\u4e2aKL\u53d1\u6563\u89d2\u53c2\u65700.01\u3002\u5bf9\u4e8eBlocksworld\u548cGripper\u57df\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u5c42GNN\uff0c\u4e24\u5c42\u90fd\u662fGN\u5757\u7c7b\u578b\uff0c\u5bf9\u4e8eSatellite\uff0c\u6e21\u8f6e\u548c\u7269\u6d41\u9886\u57df\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u5c42GNN\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2aGNAT\u5757\u548c\u4e00\u4e2aGN\u5757\u3002\u6211\u4eec\u7684\u4ee3\u7801\u662f\u7528Python\u5b9e\u73b0\u7684\uff0c\u800c\u795e\u7ecf\u7f51\u7edc\u548c\u5b66\u4e60\u7b97\u6cd5\u662f\u4f7f\u7528PyTorch\u5b9e\u73b0\u7684[ 17] \u3002 1.1.3.3. 5.3\u57fa\u51c6 \u00b6 \u6211\u4eec\u7684\u8bc4\u4f30\u91cd\u70b9\u662f\u89e3\u51b3\u5e7f\u4e49\u89c4\u5212\u57df\u7684\u5927\u578b\u5b9e\u4f8b\uff0c\u5e76\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u7ecf\u5178\u89c4\u5212\u5668\u8fdb\u884c\u6bd4\u8f83\u3002\u5176\u4ed6\u57fa\u4e8e\u5b66\u4e60\u7684\u65b9\u6cd5\u6216\u8005\u5728\u64b0\u5199\u672c\u6587\u65f6\u6ca1\u6709\u53ef\u7528\u7684\u4ee3\u7801\uff08\u4f8b\u5982 [ 20] \uff09\uff0c\u6216\u8005\u56fa\u6709\u5730\u5728\u6269\u5c55\u5230\u5927\u95ee\u9898\u65f6\u53d7\u5230\u9650\u5236\uff08\u4f8b\u5982[ 24] \uff09\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u4e86\u66f4\u901a\u7528\u7684\u57fa\u51c6\u7ecf\u5178\u8ba1\u5212\u5668\u7684\u5f62\u5f0f\uff0c\u5982\u679c\u6709\u8db3\u591f\u7684\u65f6\u95f4\u548c\u5185\u5b58\uff0c\u5b83\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u95ee\u9898\u3002\u6211\u4eec\u4e0e**Fast-Downward**\u5feb\u901f\u4e0b\u964d\u6bd4\u8f83[ 11] \uff0c\u8fd9\u662f\u6700\u65b0\u7684\u6846\u67b6\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u4f7f\u7528Pyper plan\u4f5c\u4e3a\u6a21\u578b\u548c\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\uff0c\u5b83\u662f\u57fa\u4e8ePython\u7684\u6846\u67b6\u3002\u6211\u4eec\u4f7f\u7528LAMA\u4f18\u5148\u914d\u7f6e\u4f5c\u4e3a\u5feb\u901f\u5411\u4e0b\u7684\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5b83\u662f\u6027\u80fd\u6700\u9ad8\u7684\u7ade\u4e89\u6027\u6ee1\u610f\u8ba1\u5212\u7b97\u6cd5\u3002 1.1.3.4. 5.4\u8bc4\u4f30\u6307\u6807 \u00b6 \u7531\u4e8e\u6211\u4eec\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u4ee4\u4eba\u6ee1\u610f\u7684\u8ba1\u5212\u4e0a\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u6210\u529f\u7387\u7528\u4f5c\u4e3b\u8981\u6307\u6807\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a\u57df\u5728\u4e00\u7ec450\u4e2a\u4f38\u51fa\u7684\u8bc4\u4f30\u5b9e\u4f8b\u4e0a\u8fd0\u884cGBFS-GNN\u548c\u5feb\u901f\u5411\u4e0b\uff0c\u5e76\u9488\u5bf9\u6bcf\u4e2a\u5b9e\u4f8b\u5728600\u79d2\u7684\u56fa\u5b9a\u65f6\u95f4\u9650\u5236\u5185\u8fd0\u884c\u6bcf\u79cd\u65b9\u6cd5\uff0c\u7136\u540e\u9488\u5bf9\u65f6\u95f4\u7ed8\u5236\u6bcf\u79cd\u65b9\u6cd5\u7684\u6210\u529f\u7387\u9650\u5236\u548c\u9650\u5236\u6269\u5c55\u72b6\u6001\u7684\u6570\u91cf\uff0c\u4ee5\u67e5\u770b\u6bcf\u79cd\u65b9\u6cd5\u5982\u4f55\u5728\u7ed9\u5b9a\u7684\u8ba1\u7b97\u4e0b\u8fdb\u884c\u7f29\u653e\u3002\u6839\u636e\u5e7f\u6cdb\u7684\u5206\u5e03\u751f\u6210\u8bc4\u4f30\u5b9e\u4f8b\uff0c\u4ee5\u4fbf\u5bf9\u5927\u5c0f\u5b9e\u4f8b\u8fdb\u884c\u91c7\u6837\u3002 1.1.3.5. 5.5\u7ed3\u679c \u00b6 \u73b0\u5728\uff0c\u6211\u4eec\u4ecb\u7ecd\u6211\u4eec\u7684\u7ed3\u679c\u3002\u56fe 6 \u663e\u793a\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u4e94\u4e2a\u57df\u7684\u5feb\u901f\u5411\u4e0b\u6bd4\u8f83\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002\u8fd9\u4e9b\u56fe\u663e\u793a\u4e86\u6210\u529f\u7387\u4e0e\u6269\u5c55\u72b6\u6001\u6570\u7684\u51fd\u6570\u5173\u7cfb\uff0c\u5e76\u8868\u660e\u4e0e5\u4e2a\u57df\u4e2d\u76844\u4e2a\u9886\u57df\u7684\u7ecf\u5178\u89c4\u5212\u5668\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u7684\u7f29\u653e\u6bd4\u4f8b\u786e\u5b9e\u6709\u5229\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u6211\u4eec\u7684\u653f\u7b56\u666e\u904d\u63a8\u5e7f\u76844\u4e2a\u9886\u57df\u4e2d\uff0cGBFS-GNN\u51e0\u4e4e\u4e0d\u9700\u8981\u641c\u7d22\u3002\u5728\u8fd9\u4e9b\u9886\u57df\u4e2d\uff0c\u9664\u4e86\u6700\u56f0\u96be\u7684\u60c5\u51b5\u5916\uff0c\u53ea\u8981\u8d2a\u5a6a\u5730\u9075\u5faa\u7b56\u7565\u5373\u53ef\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002\u6211\u4eec\u7684\u641c\u7d22\u7b97\u6cd5\u5efa\u7acb\u5728\u8fd9\u79cd\u6cdb\u5316\u80fd\u529b\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u5728\u641c\u7d22\u65f6\u4f7f\u7528\u4e86\u5c11\u91cf\u7684\u5b8c\u6574\u7b56\u7565\u90e8\u7f72\u3002 \u5728\u56fe 7\u4e2d\uff0c \u6211\u4eec\u6bd4\u8f83\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u548c\u5feb\u901f\u5411\u4e0b\u65b9\u6cd5\uff0c\u5e76\u9488\u5bf9\u7ed9\u5b9a\u7684\u8fd0\u884c\u65f6\u95f4\u7ed8\u5236\u4e86\u6210\u529f\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5373\u4f7f\u5feb\u901f\u5411\u4e0b\u7248\u672c\u5177\u6709\u9ad8\u5ea6\u4f18\u5316\u7684C ++\u5b9e\u73b0\uff0c\u5e76\u4f7f\u7528\u590d\u6742\u7684\u5efa\u6a21\u5de5\u5177\u6765\u6709\u6548\u5730\u89e3\u51b3\u8ba1\u5212\u95ee\u9898\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u8fd8\u662f\u5728\u4e00\u4e2a\u9886\u57df\uff08Blocksworld\uff09\u4e2d\u514b\u670d\u4e86\u5b83\uff0c\u800c\u5728\u5176\u4ed6\u4e09\u4e2a\u9886\u57df\u4e2d\u5c06\u5176\u7d27\u5bc6\u5339\u914d\u3002\u5c3d\u7ba1GBFS-GNN\u4f7f\u7528\u7684\u540e\u7ee7\u72b6\u6001\u548c\u6cd5\u5f8b\u884c\u52a8\u751f\u6210\u5668\u7684\u901f\u5ea6\u6bd4\u5feb\u901f\u5411\u4e0b\u7684\u901f\u5ea6\u6162\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u4f46\u6211\u4eec\u7684\u65b9\u6cd55\u7684\u6cdb\u5316\u80fd\u529b\u4f7f\u5176\u4e0e\u7ecf\u5178\u8ba1\u5212\u7a0b\u5e8f\u7684\u6700\u65b0\u5b9e\u73b0\u65b9\u5f0f\u76f8\u6bd4\u5177\u6709\u7ade\u4e89\u529b\u3002 \u5173\u4e8e\u6211\u4eec\u7684\u65b9\u6cd5\u7684\u6cdb\u5316\u6027\u80fd\u7684\u4e00\u4e2a\u660e\u663e\u4f8b\u5916\u662f\u7269\u6d41\u9886\u57df\u3002\u6211\u4eec\u7684\u7b56\u7565\u5728\u8bad\u7ec3\u5b9e\u4f8b\u4e0a\u6210\u529f\u53d6\u5f97\u4e86\u826f\u597d\u7684\u6027\u80fd\uff0c\u4f46\u662f\u672a\u80fd\u63a8\u5e7f\u5230\u66f4\u5927\u7684\u5b9e\u4f8b\u5c3a\u5bf8\uff0c\u56e0\u6b64\u5728\u8be5\u9886\u57df\u7684\u5feb\u901f\u964d\u7ea7\u8fdc\u8fdc\u8d85\u51fa\u4e86\u6211\u4eec\u7684\u7b56\u7565\u3002\u5728\u57df\u4e2d\uff0c\u7269\u6d41\u57df\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u4e2d\u7684\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u5305\u542b\u66f4\u7d27\u5bc6\u7684\u8026\u5408\u3002\u4f8b\u5982\uff0c\u5728\u201c\u536b\u661f\u201d\u57df\u4e2d\uff0c\u4ece\u7b56\u7565\u53ef\u4ee5\u5177\u6709\u591a\u4e2a\u201c\u534a\u719f\u201d\u76ee\u6807\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u800c\u4e0d\u4f1a\u53d7\u5230\u5e72\u6270\u7684\u610f\u4e49\u4e0a\u8bf4\uff0c\u6821\u51c6\u4eea\u5668\u6216\u5bf9\u76ee\u6807\u6210\u50cf\u4e0d\u4f1a\u5e72\u6270\u5176\u4ed6\u536b\u661f\u3002\u5728\u7269\u6d41\u9886\u57df\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u5305\u88f9\u90fd\u5171\u4eab\u5361\u8f66\u548c\u98de\u673a\uff0c\u5e76\u4e14\u79fb\u52a8\u7279\u5b9a\u5361\u8f66\u6765\u6361\u62fe\u5305\u88f9\u53ef\u80fd\u4f1a\u5e72\u6270\u539f\u672c\u6253\u7b97\u5728\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u6361\u62fe\u7684\u53e6\u4e00\u4e2a\u5305\u88f9\u3002\u4e0d\u540c\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u53ef\u80fd\u4f1a\u9f13\u52b1\u8be5\u7b56\u7565\u5728\u5355\u4e2a\u76ee\u6807\u4e0a\u4fdd\u6301\u201c\u56fa\u5b9a\u201d\uff0c\u76f4\u5230\u6ee1\u8db3\u4e3a\u6b62\u518d\u8f6c\u5411\u53e6\u4e00\u4e2a\u76ee\u6807\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u89e3\u51b3\u7269\u6d41\u9886\u57df\u548c\u5176\u4ed6\u7c7b\u4f3c\u7c7b\u578b\u7684\u95ee\u9898\u3002 1.1.4. \u7ed3\u8bba\u4e0e\u672a\u6765\u5de5\u4f5c \u00b6 \u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u7814\u7a76\u4e86\u56fe\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u5b66\u4e60\u901a\u7528\u89c4\u5212\u7b56\u7565\u7684\u80fd\u529b\uff0c\u8be5\u89c4\u5212\u7b56\u7565\u53ef\u4ee5\u89e3\u51b3\u6bd4\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5b9e\u4f8b\u5927\u5f97\u591a\u7684\u5b9e\u4f8b\uff0c\u4ece\u800c\u6709\u6548\u5730\u63a8\u5e7f\u4e86\u539f\u7406\u3002\u4e0e\u67d0\u4e9b\u5176\u4ed6\u65b9\u6cd5\u4e0d\u540c\uff0c\u6211\u4eec\u7684\u65b9\u6cd5**\u4e0d\u4f9d\u8d56\u4e8e\u73b0\u6709**\u8ba1\u5212\u4eba\u5458\u63d0\u4f9b\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\uff0c\u4e5f**\u4e0d\u4f9d\u8d56\u4e8e\u542f\u53d1\u5f0f\u65b9\u6cd5**\u6765\u63d0\u9ad8\u6027\u80fd\u3002\u6211\u4eec\u8fdb\u4e00\u6b65\u4ecb\u7ecdGBFS-GNN\uff0c\u8fd9\u662f\u4e00\u79cd\u641c\u7d22\u7b97\u6cd5\uff0c\u53ef\u5229\u7528\u9ad8\u6027\u80fd\u53cd\u5e94\u7b56\u7565\u7684\u53ef\u7528\u6027\u6765\u5feb\u901f\u627e\u5230\u8d85\u5927\u578b\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u6211\u4eec\u7684\u7b56\u7565\u662f\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60\u4ece\u5934\u5f00\u59cb\u5b66\u4e60\u7684\uff0c\u5e76\u4e0eGBFS-GNN\u7ed3\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6027\u80fd\uff0c\u5728\u6269\u5c55\u72b6\u6001\u65b9\u9762\u8d85\u8d8a\u4e86\u6700\u5148\u8fdb\u7684\u72b6\u6001\u89c4\u5212\u5e08\u7684\u9ad8\u5ea6\u4f18\u5316\u5b9e\u73b0\uff0c\u5e76\u4e14\u5728\u8fd0\u884c\u65f6\u95f4\u65b9\u9762\u53ef\u4ee5\u4e0e\u4e4b\u5ab2\u7f8e\u3002 \u76f8\u5173 1 \u548c\u6587\u732e 2 \u3002 \u53c2\u8003 GICystems \u21a9 Checking \u21a9","title":"GPwithDeep-RL"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1-generalized-planning-with-deep-reinforcement-learning","text":"\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4f7f\u7528\uff0c\u4ee5\u5b66\u4e60\u6b64\u7c7b\u5e7f\u4e49\u7b56\u7565\uff0c\u5e76\u8bc1\u660e\u5b83\u4eec\u53ef\u4ee5\u63a8\u5e7f\u5230\u5b9e\u4f8b\u4e0a\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u6bd4\u5728\u5176\u4e0a\u8fdb\u884c\u8bad\u7ec3\u7684\u5b9e\u4f8b\u5927\u51e0\u4e2a\u6570\u91cf\u7ea7 \u53e4\u5178\u8ba1\u5212\u4e0e\u67e5\u627e\u8ba1\u5212\u6216\u52a8\u4f5c\u5e8f\u5217\u6709\u5173\uff0c\u5f53\u5c06\u8fd9\u4e9b\u8ba1\u5212\u6216\u52a8\u4f5c\u5e8f\u5217\u5e94\u7528\u4e8e\u4e00\u7ec4\u903b\u8f91\u8c13\u8bcd\u6240\u6307\u5b9a\u7684\u67d0\u4e9b\u521d\u59cb\u6761\u4ef6\u65f6\uff0c\u4f1a\u5c06\u73af\u5883\u5e26\u5165\u6ee1\u8db3\u4e00\u7ec4\u76ee\u6807\u8c13\u8bcd\u7684\u72b6\u6001\u3002\u8fd9\u901a\u5e38\u662f\u901a\u8fc7\u67d0\u79cd\u542f\u53d1\u5f0f\u641c\u7d22\u8fc7\u7a0b\u6267\u884c\u7684\uff0c\u751f\u6210\u7684\u8ba1\u5212\u4ec5\u9002\u7528\u4e8e\u5df2\u89e3\u51b3\u7684\u7279\u5b9a\u5b9e\u4f8b\u3002\u4f46\u662f\uff0c\u53ef\u80fd\u4f1a\u6709\u66f4\u597d\u7684\u7ed3\u679c\u662f\u627e\u5230\u67d0\u79cd\u66f4\u9ad8\u7ea7\u522b\u7684\u8ba1\u5212\uff0c\u8be5\u8ba1\u5212\u53ef\u4ee5\u89e3\u51b3\u8bb8\u591a\u5c5e\u4e8e\u540c\u4e00\u57df\u7684\u5b9e\u4f8b\uff0c\u4ece\u800c\u5171\u4eab\u4e00\u4e2a\u57fa\u7840\u7ed3\u6784\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u79cd\u66f4\u9ad8\u7ea7\u522b\u8ba1\u5212\u7684\u65b9\u6cd5\u7684\u7814\u7a76\u79f0\u4e3a\u901a\u7528\u8ba1\u5212\u3002\u901a\u7528\u8ba1\u5212\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u6240\u6709\u7ecf\u5178\u8ba1\u5212\u9886\u57df\uff0c\u4f46\u662f\u5728\u4ec5\u5e0c\u671b\u627e\u5230\u76ee\u6807\u4ee4\u4eba\u6ee1\u610f\u7684\u89e3\u51b3\u65b9\u6848\u7684\u60c5\u51b5\u4e0b\uff0c\u9488\u5bf9\u53ef\u80fd\u7684\u9886\u57df\u627e\u5230\u6b64\u7c7b\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u907f\u514d\u6267\u884c\u8ba1\u7b97\u5bc6\u96c6\u578b\u641c\u7d22\u7684\u9700\u6c42\u3002\u4e3a\u4e86\u7ed9\u51fa\u8fd9\u6837\u4e00\u4e2a\u5e7f\u4e49\u8ba1\u5212\u7684\u4f8b\u5b50\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7b80\u5316\u7684Blocksworld\u57df\u3002\u5728\u8fd9\u4e2a\u9886\u57df\u4e2d\uff0c\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u5757\u53ef\u4ee5\u76f8\u4e92\u5806\u53e0\u6216\u6563\u5e03\u5728\u5730\u677f\u4e0a\uff0c\u5e76\u4e14\u76ee\u6807\u662f\u5806\u53e0\u548c\u5806\u53e0\u5757\uff0c\u4ee5\u4fbf\u6211\u4eec\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u5f97\u51fa\u76ee\u6807\u914d\u7f6e\u3002\u5bfb\u627e\u4e00\u4e2a\u53ef\u4ee5\u4ee5\u6700\u4f73\u6b65\u9aa4\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u8ba1\u5212\u901a\u5e38\u5f88\u96be\u505a\u5230 \u5728\u8fd9\u4e2a\u9886\u57df\u4e2d\uff0c\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u5757\u53ef\u4ee5\u76f8\u4e92\u5806\u53e0\u6216\u6563\u5e03\u5728\u5730\u677f\u4e0a\uff0c\u5e76\u4e14\u76ee\u6807\u662f\u5806\u53e0\u548c\u5806\u53e0\u5757\uff0c\u4ee5\u4fbf\u6211\u4eec\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u5f97\u51fa\u76ee\u6807\u914d\u7f6e\u3002\u5bfb\u627e\u4e00\u4e2a\u53ef\u4ee5\u5728\u6700\u4f73\u6b65\u9aa4\u4e2d\u5b8c\u6210\u7684\u8ba1\u5212\u901a\u5e38\u5f88\u96be\u505a\u5230 \u5728\u8fd9\u4e2a\u9886\u57df\u4e2d\uff0c\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u5757\u53ef\u4ee5\u76f8\u4e92\u5806\u53e0\u6216\u6563\u5e03\u5728\u5730\u677f\u4e0a\uff0c\u5e76\u4e14\u76ee\u6807\u662f\u5806\u53e0\u548c\u5806\u53e0\u5757\uff0c\u4ee5\u4fbf\u6211\u4eec\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u5f97\u51fa\u76ee\u6807\u914d\u7f6e\u3002\u5bfb\u627e\u4e00\u4e2a\u53ef\u4ee5\u4ee5\u6700\u4f73\u6b65\u9aa4\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u8ba1\u5212\u901a\u5e38\u5f88\u96be\u505a\u5230[ 10] \uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u6ee1\u8db3\u76ee\u6807\u4e14\u4e0d\u8003\u8651\u6210\u672c\u7684\u8ba1\u5212\uff1a 1.\u62c6\u5f00\u6240\u6709\u79ef\u6728\uff0c\u4f7f\u5176\u6563\u843d\u5728\u5730\u677f\u4e0a 2.\u6839\u636e\u76ee\u6807\u914d\u7f6e\uff0c\u4ece\u8f83\u4f4e\u7684\u5757\u5f00\u59cb\u5806\u53e0\u5757 \u8fd9\u79cd\u7b56\u7565\u4e0d\u662f\u6700\u4f73\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u6839\u636e\u76ee\u6807\u89c4\u8303\u5bf9\u5df2\u7ecf\u653e\u7f6e\u5728\u9002\u5f53\u4f4d\u7f6e\u7684\u5757\u8fdb\u884c\u5806\u53e0\uff0c\u4f46\u662f\u5bf9\u4e8e\u7b80\u5316\u540e\u7684Blocksworld\u57df\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u5b83\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6ee1\u8db3\u76ee\u6807\u7684\u8ba1\u5212\u3002\u8fd9\u6837\u7684\u7b3c\u7edf\u7b56\u7565\u4e5f\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u7b56\u7565\uff0c\u5b83\u589e\u52a0\u4e86\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60\u5b83\u7684\u53ef\u80fd\u6027\u3002 \u5b66\u4e60\u3002\u673a\u5668\u5b66\u4e60\u7406\u8bba\u901a\u5e38\u5047\u8bbe\u6211\u4eec\u7684\u8bad\u7ec3\u6570\u636e\u5206\u5e03\u53ef\u4ee5\u4ee3\u8868\u6d4b\u8bd5\u6570\u636e\u5206\u5e03\uff0c\u4ece\u800c\u8bc1\u660e\u6211\u4eec\u7684\u671f\u671b\u662f\u6211\u4eec\u7684\u6a21\u578b\u53ef\u4ee5\u5f88\u597d\u5730\u63a8\u5e7f\u5230\u6d4b\u8bd5\u6570\u636e\u3002\u5728\u4e00\u822c\u7684\u8ba1\u5212\u4e2d\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6d4b\u8bd5\u5b9e\u4f8b\u53ef\u80fd\u6bd4\u8bad\u7ec3\u5b9e\u4f8b\u5927\u5f97\u591a\uff0c\u56e0\u6b64\u8fdc\u8fdc\u8d85\u51fa\u4e86\u8bad\u7ec3\u8303\u56f4\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\uff0c\u4ee5\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u7684\u5f62\u5f0f\u5177\u6709**\u6b63\u786e\u7684**\u5f52\u7eb3\u504f\u5dee\u53ef\u4ee5\u5bfc\u81f4\u6a21\u578b\u6709\u6548\u5730\u5b66\u4e60\u7c7b\u4f3c\u4e8e\u4e00\u822c\u539f\u7406\u7684\u7b56\u7565\uff0c\u5e76\u4e14\u53ef\u4ee5\u89e3\u51b3\u6bd4\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u5927\u51e0\u4e2a\u6570\u91cf\u7ea7\u7684\u95ee\u9898\u3002","title":"1. Generalized Planning With Deep Reinforcement Learning"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#11","text":"\u591a\u5e74\u6765\uff0c\u5b66\u4e60\u8ba1\u5212\u4e00\u76f4\u662f\u7814\u7a76\u7684\u6d3b\u8dc3\u8bdd\u9898\uff0c\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u5c1d\u8bd5\u5b66\u4e60\u5b8c\u6574\u6c42\u89e3\u5668\u7684\u4e0d\u540c\u65b9\u9762\u3002\u4e00\u4e9b\u5de5\u4f5c\u5c1d\u8bd5\u4f7f\u7528\u5176\u4ed6\u72ec\u7acb\u4e8e\u57df\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u751f\u6210\u7684\u7279\u5f81\u6765\u5b66\u4e60\u7279\u5b9a\u57df\u7684\u72b6\u6001\u7684\u542f\u53d1\u5f0f\u503c\uff0c\u4f8b\u5982[ 28] \uff0c\u8be5\u529f\u80fd\u901a\u8fc7\u56de\u5f52\u6765\u5b66\u4e60\u542f\u53d1\u5f0f\u503c\u3002[ 7] \u7b49\u6700\u65b0\u4f5c\u54c1\u901a\u8fc7\u4f7f\u7528RankSVM [ 13] \u5b66\u4e60\u5bf9\u540e\u7ee7\u56fd\u5bb6\u8fdb\u884c\u6392\u540d\u3002\u3002\u8fd9\u4e9b\u7c7b\u578b\u7684\u65b9\u6cd5\u6ca1\u6709\u4ece\u95ee\u9898\u63cf\u8ff0\u4e2d\u660e\u786e\u4f7f\u7528\u72b6\u6001\u6216\u76ee\u6807\u4fe1\u606f\uff0c\u800c\u662f\u5b66\u4e60\u4f7f\u7528\u624b\u5de5\u5236\u4f5c\u7684\u529f\u80fd\uff0c\u6b64\u5916\uff0c\u4e5f\u6ca1\u6709\u9488\u5bf9\u53ef\u7528\u64cd\u4f5c\u5b66\u4e60\u660e\u786e\u7684\u8ba1\u5212\u7b56\u7565\u3002\u4e0e\u6b64\u76f8\u53cd\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5b66\u4e60\u9488\u5bf9\u660e\u786e\u72b6\u6001\u548c\u76ee\u6807\u7684\u8ba1\u5212\u7b56\u7565\uff0c\u8fd9\u4e9b\u7b56\u7565\u548c\u7b56\u7565\u76f4\u63a5\u9009\u62e9\u8981\u91c7\u53d6\u7684\u884c\u52a8\u3002 \u5176\u4ed6\u5de5\u4f5c\uff0c\u4f8b\u5982[ 23] \uff0c[ 8] \u548c[ 9] \uff0c\u4f7f\u7528\u95ee\u9898\u7684\u5b9e\u9645\u72b6\u6001\u4f5c\u4e3a\u8f93\u5165\u548c\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5b66\u4e60\u4e86\u9488\u5bf9\u64cd\u4f5c\u7684\u660e\u786e\u8ba1\u5212\u7b56\u7565\uff0c\u4f46\u662f\u4f9d\u8d56\u4e8e\u5bf9\u95ee\u9898\u7684\u76f4\u89c2\u8868\u793a\u3002\u8fd9\u5c06\u5b83\u4eec\u7684\u4f7f\u7528\u9650\u5236\u4e3a\u53ef\u4ee5\u4f7f\u7528\u89c6\u89c9\u8868\u793a\u7684\u57df\u3002\u53e6\u4e00\u4e2a\u5c40\u9650\u6027\u662f[ 23] \u548c[ 8] \u53e6\u5916\u8fd8\u4f9d\u8d56\u4e8e\u8ba1\u5212\u7b97\u6cd5\u751f\u6210\u7684\u6210\u529f\u8ba1\u5212\uff0c\u5e76\u4f7f\u7528\u6a21\u4eff\u5b66\u4e60\u6765\u5b66\u4e60\u7b56\u7565\uff0c\u800c [ 9] \u4e3a\u6b64\u76ee\u7684\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u4e0d\u4f9d\u8d56\u4e8e\u89c6\u89c9\u8868\u793a\u6216\u901a\u8fc7\u89c4\u5212\u7b97\u6cd5\u751f\u6210\u7684\u6210\u529f\u8ba1\u5212\uff0c\u800c\u662f\u901a\u8fc7**\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u901a\u8fc7\u53cd\u590d\u8bd5\u9a8c\u76f4\u63a5\u4ecePDDL\u8868\u793a\u4e2d\u5b66\u4e60\u95ee\u9898**\u3002 \u4e00\u4e9b\u5de5\u4f5c\u5df2\u7ecf\u5f00\u59cb\u7814\u7a76\u72b6\u6001\u56fe\u8868\u793a\u7684\u4f7f\u7528\u4ee5\u53ca\u4e0d\u540c\u79cd\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u5b66\u4e60\u7b56\u7565\u6216\u542f\u53d1\u5f0f\u65b9\u6cd5\u65b9\u9762\u7684\u7528\u9014\u3002\u5728[ 24] \u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u72ec\u7279\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u79f0\u4e3a\u52a8\u4f5c\u6a21\u5f0f\u7f51\u7edc\uff08ASNet\uff09\uff0c\u8be5\u7f51\u7edc\u7531\u4ea4\u66ff\u7684\u52a8\u4f5c\u5c42\u548c\u547d\u9898\u5c42\u7ec4\u6210\uff0c\u4ee5\u5b66\u4e60\u8ba1\u5212\u7b56\u7565\u3002\u5b83\u4eec\u5c06\u72b6\u6001\u8868\u793a\u4e3a\u56fe\u5f62\uff0c\u5728\u56fe\u5f62\u4e2d\u5bf9\u8c61\u548c\u52a8\u4f5c\u76f8\u4e92\u8fde\u63a5\uff0c\u5e76\u6765\u56de\u4f20\u64ad\u4fe1\u606f\u4ee5\u6700\u7ec8\u8f93\u51fa\u52a8\u4f5c\u7684\u6982\u7387\u3002\u4ed6\u4eec\u901a\u8fc7\u6a21\u4eff\u5176\u4ed6\u8ba1\u5212\u8005\u751f\u6210\u7684\u8ba1\u5212\u6765\u8bad\u7ec3\u81ea\u5df1\u7684ASNet\uff0c\u5e76\u4f7f\u7528\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u503c\u6765\u589e\u52a0\u8f93\u5165\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\u5728\u4ed6\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0c\u4ed6\u4eec\u4e3b\u8981\u5173\u6ce8\u968f\u673a\u8ba1\u5212\u95ee\u9898\uff0c\u5e76\u8bc1\u660e\u4ed6\u4eec\u8bad\u7ec3\u6709\u7d20\u7684\u7b56\u7565\u53ef\u4ee5\u63a8\u5e7f\u5230\u6bd4\u8bad\u7ec3\u6709\u7d20\u7684\u66f4\u5927\u7684\u5b9e\u4f8b\u3002ASNet\u7684\u5c40\u9650\u6027\u662f\u5176\u56fa\u5b9a\u7684\u63a5\u53d7\u9886\u57df\uff0c\u8fd9\u9650\u5236\u4e86\u4ed6\u4eec\u5bf9\u957f\u94fe\u8fdb\u884c\u63a8\u7406\u7684\u80fd\u529b\uff0c\u800c\u6211\u4eec\u7684\u5de5\u4f5c\u65e0\u6cd5\u5206\u4eab\u8fd9\u4e00\u70b9\u3002 \u5728\u6700\u8fd1\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0c[ 20] \u63d0\u51fa\u4e86[ 4] \u7684\u6269\u5c55\u5230\u8d85\u56fe\uff0c\u5e76\u7528\u5b83\u6765\u5b66\u4e60\u8868\u793a\u89c4\u5212\u95ee\u9898\u7684\u5220\u9664\u677e\u5f1b\u72b6\u6001\u7684\u8d85\u56fe\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u4ed6\u4eec\u4f7f\u7528\u8ba1\u5212\u7b97\u6cd5\u751f\u6210\u7684\u6700\u4f73\u542f\u53d1\u5f0f\u503c\u7684\u6709\u76d1\u7763\u5b66\u4e60\uff0c\u7136\u540e\u5c06\u6240\u5f97\u7684\u795e\u7ecf\u7f51\u7edc\u7528\u4f5c\u641c\u7d22\u7b97\u6cd5\u4e2d\u7684\u542f\u53d1\u5f0f\u51fd\u6570\u3002\u4e0e\u6b64\u76f8\u53cd\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4fa7\u91cd\u4e8e\u5b66\u4e60\u7b56\u7565\uff0c\u56e0\u4e3a\u5728\u795e\u7ecf\u7f51\u7edc\u4e0a\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u6b63\u5411\u4f20\u9012\u624d\u80fd\u5728\u6bcf\u79cd\u72b6\u6001\u4e0b\u505a\u51fa\u51b3\u5b9a\uff0c\u56e0\u6b64\u5728\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8282\u7701\u66f4\u591a\u65f6\u95f4\u3002\u4f7f\u7528\u542f\u53d1\u5f0f\u4f30\u8ba1\u9700\u8981\u4f30\u8ba1\u72b6\u6001\u7684\u6240\u6709\u540e\u7ee7\u72b6\u6001\uff0c\u4ee5\u4fbf\u9009\u62e9\u6700\u4f73\u64cd\u4f5c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u589e\u52a0\u8fd0\u884c\u65f6\u95f4\u3002\u53e6\u4e00\u4e2a\u533a\u522b\u662f\u6211\u4eec\u7684\u5de5\u4f5c\u76f4\u63a5\u5728\u72b6\u6001\u4e0a\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u5220\u9664\u677e\u5f1b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u9650\u5236\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u529f\u80fd\uff0c\u56e0\u4e3a\u7701\u7565\u4e86\u4e00\u4e9b\u4fe1\u606f\u3002[ 15] \uff0c[ 29] \u548c[ 5] \u3002","title":"1.1. \u76f8\u5173\u5de5\u4f5c"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#111-2","text":"","title":"1.1.1. 2\u80cc\u666f"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1111-21","text":"\u53e4\u5178\u8ba1\u5212\u4f7f\u7528\u4eceSTRIPS\u5efa\u6a21\u8bed\u8a00[ 6] \u6d3e\u751f\u800c\u6765\u7684\u6b63\u5f0f\u63cf\u8ff0\u8bed\u8a00\uff0c\u79f0\u4e3a\u8ba1\u5212\u9886\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09[ 14] \uff0c\u4ee5\u5b9a\u4e49\u95ee\u9898\u9886\u57df\u53ca\u5176\u76f8\u5e94\u7684\u72b6\u6001\u548c\u76ee\u6807\u3002\u6211\u4eec\u5173\u6ce8\u7684\u662f\u4ee4\u4eba\u6ee1\u610f\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u5b83\u53ef\u4ee5\u7531\u96c6\u5408*\uff08F\uff0cO\uff0cI\uff0cG\uff09\u5b9a\u4e49*\uff0c\u5176\u4e2d*F*\u662f\u4e00\u7ec4\u547d\u9898\uff08\u6216\u8c13\u8bcd\uff09\uff0c\u5b83\u4eec\u63cf\u8ff0\u4efb\u52a1\u5b9e\u4f8b\u4e2d\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u5c5e\u6027\u53ca\u5176\u5173\u7cfb\uff0c O*\u662f\u4e00\u7ec4\u8fd0\u7b97\u7b26\uff08\u6216\u64cd\u4f5c\u7c7b\u578b\uff09\uff0cICF\u662f\u521d\u59cb\u72b6\u6001\uff0c\u800cGCF\u662f\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u52a8\u4f5c\u7c7b\u578bGO\u90fd\u7531\u4e09\u5143\u7ec4 \uff08Pre\uff08o\uff09\uff0cAdd\uff08o\uff09\uff0cDel\uff08o\uff09\uff09\u5b9a\u4e49\uff0c \u5176\u4e2d\u524d\u63d0\u4e3a*Pre\uff08o\uff09*\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u5fc5\u987b\u5177\u6709\u6b63\u786e\u7684\u503c\u624d\u80fd\u9002\u7528\u4e8e\u8be5\u64cd\u4f5c\uff0c*Add\uff08o\uff09*\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u5728\u5e94\u7528\u540e\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3a\u771f\uff0c\u800cDel\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3afalse\u6839\u636e\u7533\u8bf7\u3002\u6211\u4eec\u8bd5\u56fe\u627e\u5230\u4e00\u4e2a\u8ba1\u5212\u6216\u4e00\u7cfb\u5217\u884c\u52a8\uff0c\u8fd9\u4e9b\u884c\u52a8\u6216\u884c\u52a8\u5e8f\u5217\u4e00\u65e6\u5e94\u7528\uff0c\u5c31\u4f1a\u5728\u4e00\u5b9a\u65f6\u9650\u6216\u9884\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u5185\u5bfc\u81f4\u72b6\u6001\u4e3a*G C\u7684\u72b6\u6001\u3002\u67e5\u627e\u8ba1\u5212\u4efb\u52a1\u7684\u8ba1\u5212\u901a\u5e38\u662f\u901a\u8fc7\u542f\u53d1\u5f0f\u641c\u7d22\u65b9\u6cd5\u6765\u5b8c\u6210\u7684\uff0c\u4f46\u662f\uff0c\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4e13\u6ce8\u4e8e\u5b66\u4e60\u53cd\u5e94\u5f0f\u8ba1\u5212\u7b56\u7565\uff0c\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u5728\u7279\u5b9a\u9886\u57df\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u540e\u63a8\u5e7f\u5230\u540c\u4e00\u9886\u57df\u4e2d\u65b0\u7684\u770b\u4e0d\u89c1\u7684\u5b9e\u4f8b\u3002","title":"1.1.1.1. 2.1\u7ecf\u5178\u89c4\u5212"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1112","text":"\u4e0d\u540c\u4e8e\u5e38\u89c1\u7684 \\(<S,A,R,P,\\gamma \\text{\u6298\u6263\u7387}>\\) \u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5904\u7406\u987a\u5e8f\u51b3\u7b56\u95ee\u9898\u7684\u5b66\u4e60\u7b56\u7565\u3002RL\u7b97\u6cd5\u6700\u5e38\u5047\u8bbe\u53ef\u4ee5\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\uff0c\u5728\u6709\u9650\u6c34\u5e73\u60c5\u51b5\u4e0b\u7531\u5143\u7ec4\uff08S\uff0cA\uff0c R\uff0cP \uff0c T \uff0cp\uff09\u5b9a\u4e49\uff0c\u5176\u4e2d*S*\u662f\u72b6\u6001\uff0cA\u662f\u52a8\u4f5c\u96c6\u5408\uff0c R*\u662f\u5c06\u72b6\u6001\u6216\u72b6\u6001\u52a8\u4f5c\u6620\u5c04\u5230\u6807\u91cf\u5956\u52b1\u7684\u5956\u52b1\u51fd\u6570\uff0cP\u662f\u8fc7\u6e21\u6982\u7387\u51fd\u6570\uff0c\u4f7f\u5f97 \\(p\uff08s' | s,a\uff09= P\uff08s'\uff0cs\uff0c a\uff09\\) * \uff08\u786e\u5b9a\u6027\u7b56\u7565=1\uff09**\uff0cT\u662f\u4efb\u52a1\u8303\u56f4\uff0c*p*\u662f\u521d\u59cb\u72b6\u6001\u7684\u5206\u5e03\u3002 \u5728\u8f83\u5927\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u80fd\u5e0c\u671b\u5c06\u6211\u4eec\u7684\u7b56\u7565\u8868\u793a\u4e3a\u8868\u683c( Q\u8868\u683c )\uff0c\u56e0\u6b64\u88ab\u8feb\u4f7f\u7528\u51fd\u6570\u903c\u8fd1\u5668\uff08 Deep Q network \u7684target network \uff09\u6765\u8868\u793a\u5e26\u6709\u67d0\u4e9b\u53c2\u6570*6*\u7684\u7b56\u7565*\u3002*\u6211\u4eec\u4e13\u6ce8\u4e8e\u968f\u673a\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u6620\u5c04\u72b6\u6001\u548c\u52a8\u4f5c\u6982\u7387\uff0c\u4f8b\u5982p\uff08a | s\uff09-\uff08a | s\uff09\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8e\u7b56\u7565\u68af\u5ea6\u7684\u65b9\u6cd5\u8fdb\u884c\u4f18\u5316 \u6211\u4eec\u7684\u653f\u7b56[ 27] \u3002\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u91c7\u6837\u4f30\u8ba1\u76ee\u6807\u51fd\u6570\u76f8\u5bf9\u4e8e\u7b56\u7565\u53c2\u6570\u7684\u68af\u5ea6\u3002\u5728\u5b9e\u65bd\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u6837\u672c\u8f68\u8ff9\u8ba1\u7b97\u51fa\u7684\u201c\u4f2a\u635f\u5931\u201d\u7684\u68af\u5ea6\u6765\u4f30\u7b97\u7b56\u7565\u68af\u5ea6 \u8fd1\u7aef\u7b56\u7565\u4f18\u5316\uff08PPO\uff09[ 19] \u662f\u4e00\u79cd\u57fa\u4e8e\u7b56\u7565\u68af\u5ea6\u7684\u7b97\u6cd5\uff0c\u65e8\u5728\u901a\u8fc7\u5bf9\u6536\u96c6\u5230\u7684\u6570\u636e\u8fdb\u884c\u591a\u6b21\u68af\u5ea6\u66f4\u65b0\uff0c\u7136\u540e\u4e22\u5f03\u5b83\u6765\u6536\u96c6\u66f4\u591a\u6570\u636e\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5229\u7528\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6536\u96c6\u5230\u7684\u6570\u636e\u3002\u4e3a\u4e86\u907f\u514d\u53ef\u80fd\u56e0\u8f83\u5927\u7684\u7b56\u7565\u66f4\u65b0\u800c\u5f15\u8d77\u7684\u7a33\u5b9a\u6027\u95ee\u9898\uff0cPPO\u4f7f\u7528\u7279\u6b8a\u7684\u88c1\u526a\u76ee\u6807\u6765\u963b\u6b62\u5f53\u524d\u7b56\u7565\u4e0e\u6570\u636e\u6536\u96c6\u7b56\u7565\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4ece\u800c\u5b9a\u4e49\u4f18\u5316\u95ee\u9898","title":"1.1.1.2. \u5f3a\u5316\u5b66\u4e60"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#112-generalized-policy","text":"","title":"1.1.2. **\u5b66\u4e60generalized policy"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1121-31","text":"\u6211\u4eec\u9009\u62e9\u5c06\u6211\u4eec\u72b6\u6001\u4e2d\u7684\u72b6\u6001\u8868\u793a\u4e3a\u56fe\u5f62\uff0c\u5e76\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u7ed9\u5b9a\u72b6\u6001\u4e2d\u5bf9\u8c61\u4e4b\u95f4\u7684\u5c5e\u6027\u548c\u5173\u7cfb\u3002\u6211\u4eec\u7684\u6846\u67b6\u5728PDDL\u5efa\u6a21\u8bed\u8a00\u6307\u5b9a\u7684\u95ee\u9898\u57df\u4e0a\u8fd0\u884c\uff0c\u5728\u8be5\u95ee\u9898\u57df\u4e2d\uff0c\u95ee\u9898\u5b9e\u4f8b\u7531\u5bf9\u8c61\u5217\u8868\u548c\u8c13\u8bcd\u5217\u8868\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u63cf\u8ff0\u8fd9\u4e9b\u5bf9\u8c61\u7684\u5c5e\u6027\u4ee5\u53ca\u5f53\u524d\u72b6\u6001\u4e0b\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6211\u4eec\u5c06\u81ea\u5df1\u9650\u5236\u5728\u8c13\u8bcd\u7684Arity\u4e0d\u8d85\u8fc72\u7684\u57df\u4e2d\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u91cd\u5927\u9650\u5236\uff0c\u56e0\u4e3a\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8f83\u9ad8Arity\u8c13\u8bcd\u53ef\u4ee5\u5206\u89e3\u4e3a\u51e0\u4e2a\u8f83\u4f4eArity\u8c13\u8bcd\u3002\u6211\u4eec\u7684\u56fe\u7531\u5168\u5c40\u7279\u5f81\uff0c\u8282\u70b9\u7279\u5f81\u548c\u8fb9\u7f18\u7279\u5f81\u7ec4\u6210\uff0c\u5982[ 4]\u6240\u793a \u3002\u6211\u4eec\u8868\u793a\u5168\u5c40\u7279\u5f81*U* \uff0c\u8282\u70b9V\u548c\u8fb9*E.*\u5168\u5c40\u7279\u5f81\u8868\u793a\u95ee\u9898\u5b9e\u4f8b\u6216\u5b9e\u4f53\u7684\u5c5e\u6027\u5bf9\u4e8e\u8be5\u57df\u800c\u8a00\u662f\u552f\u4e00\u7684\uff0c\u4f8b\u5982Blocksworld\u57df\u4e2d\u7684\u6307\u9488\uff0c\u5e76\u7531\u8be5\u57df\u76840\u5ea6\u8c13\u8bcd\u786e\u5b9a\u3002\u8282\u70b9\u7279\u5f81\u8868\u793a\u57df\u4e2d\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u4f8b\u5982\u5b83\u4eec\u7684\u7c7b\u578b\uff09\uff0c\u5e76\u75311-arity\u8c13\u8bcd\u786e\u5b9a\u3002\u6700\u540e\uff0c\u8fb9\u7f18\u7279\u5f81\u4ee3\u8868\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u75312 arar\u8c13\u8bcd\u786e\u5b9a\u3002 \u5f53\u751f\u6210PDDL\u5b9e\u4f8b\u72b6\u6001\u7684\u56fe\u5f62\u8868\u793a\u65f6\uff0c\u5c06\u4e3a\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u8282\u70b9\u7684\u5b8c\u6574\u56fe\u5f62\u3002\u5bf9\u4e8e\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u8c13\u8bcd\uff0c\u5c06\u5bf9\u5e94\u7684\u7279\u5f81\u5206\u914d\u4e3a\u4e8c\u8fdb\u5236\u503c1\uff0c\u5e76\u5047\u5b9a\u6240\u6709\u5176\u4ed6\u7279\u5f81\u5747\u4e3afalse\uff0c\u5176\u503c\u4e3a0\u3002\u4e3a\u4e86\u5c06\u76ee\u6807\u914d\u7f6e\u5305\u62ec\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\u4e2d\uff0c\u76ee\u6807\u8c13\u8bcd\u51e0\u4e4e\u88ab\u89c6\u4e3a\u53e6\u4e00\u4e2a\u72b6\u6001\u56fe\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e24\u4e2a\u56fe\u8fde\u63a5\u5728\u4e00\u8d77\u4ee5\u5f62\u6210\u72b6\u6001\u76ee\u6807\u7684\u5355\u4e2a\u8868\u793a\u5f62\u5f0f\u3002\u72b6\u6001\u56fe\u548c\u76ee\u6807\u56fe\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u76ee\u6807\u56fe\u4e2d\uff0c\u503c\u4e3a0\u7684\u7279\u5f81\u8868\u793a\u6ca1\u6709\u8d21\u732e\u76ee\u6807\uff1b\u5728\u72b6\u6001\u56fe\u4e2d\uff0c\u503c\u4e3a0\u7684\u7279\u5f81\u610f\u5473\u7740\u8c13\u8bcd\u88ab\u5206\u914d\u4e86\u9519\u8bef\u503c\u3002 \u5728\u6574\u4e2a\u5de5\u4f5c\u4e2d\u4f7f\u7528\u7684\u7ecf\u5178\u89c4\u5212\u9886\u57df\u662f\u786e\u5b9a\u6027\u7684\u548c\u9a6c\u5c14\u53ef\u592b\u5f0f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u524d\u72b6\u6001\u62e5\u6709\u6240\u6709\u5fc5\u9700\u7684\u4fe1\u606f\u4ee5\u6700\u4f73\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5c3d\u7ba1\u5177\u6709\u6b64\u5c5e\u6027\uff0c\u6211\u4eec\u53d1\u73b0 \u9664\u4e86\u5f53\u524d\u72b6\u6001\u5916\uff0c\u8fc7\u53bb\u7684\u72b6\u6001\u8fd8\u6709\u52a9\u4e8e\u5b66\u4e60\u8fc7\u7a0b\u5e76\u63d0\u9ad8\u5bf9\u8f83\u5927\u5b9e\u4f8b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u5c3d\u7ba1\u8fd9\u4e0d\u662f\u4e25\u683c\u5fc5\u8981\u7684\uff0c\u4f46\u6211\u4eec\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u6b64\u6b65\u9aa4\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5e2e\u52a9\u653f\u7b56\u7f13\u89e3\u201c\u6765\u56de\u201d\u884c\u4e3a\uff0c\u8fd9\u5728\u653f\u7b56\u66f4\u5bb9\u6613\u72af\u9519\u8bef\u7136\u540e\u5c1d\u8bd5\u5c1d\u8bd5\u7684\u8f83\u5927\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528\u3002\u7ea0\u6b63\u5b83\u4eec\u3002\u6dfb\u52a0\u6b64\u5386\u53f2\u8bb0\u5f55\u5f88\u7b80\u5355\uff1b\u6211\u4eec\u53ea\u9700\u5c06K\u4e2a\u5148\u524d\u72b6\u6001\u548c\u5f53\u524d\u72b6\u6001\u7684\u56fe\u8fde\u63a5\u8d77\u6765\uff0c\u7136\u540e\u5982\u524d\u6240\u8ff0\u5c06\u76ee\u6807\u56fe\u8fde\u63a5\u8d77\u6765\u3002\u6211\u4eec\u6d4b\u8bd5\u4e86\u51e0\u4e2a\u8fd9\u6837\u7684\u5386\u53f2\u89c6\u91ce\uff0c\u53d1\u73b0\u4ec5\u6dfb\u52a0\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u4f1a\u5e26\u6765\u603b\u4f53\u4e0a\u6700\u4f73\u7684\u6027\u80fd\u548c\u901a\u7528\u6027\u3002\u5728\u56fe 1\u4e2d \u53ef\u4ee5\u770b\u5230\u6765\u81eaBlocksworld\u57df\u7684\u72b6\u6001\u76ee\u6807\u56fe\u7684\u793a\u4f8b \u548c 2\uff0c \u663e\u793a\u5177\u67093\u4e2a\u5757\u7684\u5b9e\u4f8b\u3002","title":"1.1.2.1. 3.1\u72b6\u6001\u8868\u793a"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1122-32","text":"\u4e3a\u4e86\u4f7f\u7528\u72b6\u6001\u76ee\u6807\u7684\u56fe\u5f62\u8868\u793a\u6765\u5b66\u4e60\u597d\u7684\u7b56\u7565\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528\u56fe\u5f62\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u5c06\u56fe\u5f62\u7684\u8282\u70b9\uff0c\u8fb9\u7f18\u548c\u5168\u5c40\u7279\u5f81\u5d4c\u5165\u5230\u5404\u81ea\u7684\u6f5c\u5728\u7a7a\u95f4\u4e2d\u3002GNN\u5728\u56fe\u7684\u4e0d\u540c\u7ec4\u4ef6\u4e4b\u95f4\u6267\u884c\u6d88\u606f\u4f20\u9012\uff0c\u4ece\u800c\u5141\u8bb8\u6709\u7528\u7684\u4fe1\u606f\u6d41\u52a8\u3002\u6211\u4eec\u4f7f\u7528\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684GNN\u5757\uff0c\u6bcf\u79cd\u5757\u90fd\u5728\u56fe\u5185\u5b9e\u65bd\u4e0d\u540c\u6837\u5f0f\u7684\u4fe1\u606f\u6d41\uff0c\u56e0\u6b64\u6bd4\u5176\u4ed6\u7c7b\u578b\u66f4\u9002\u5408\u67d0\u4e9b\u95ee\u9898\u9886\u57df\u3002\u5728\u8fd9\u4e24\u79cd\u7c7b\u578b\u4e2d\uff0c\u66f4\u65b0\u987a\u5e8f\u76f8\u4f3c\uff0c\u5e76\u91c7\u7528\u4ee5\u4e0b\u5e38\u89c1\u5f62\u5f0f\uff1a 1.\u4f7f\u7528\u5148\u524d\u7684\u8fb9\u7f18\u548c\u8fd9\u4e9b\u8fb9\u7f18\u7684\u201c\u539f\u59cb\u201d\u8282\u70b9\u66f4\u65b0\u8fb9\u7f18\u3002 2.\u4f7f\u7528\u5148\u524d\u7684\u8282\u70b9\uff0c\u4f20\u5165\u7684\u66f4\u65b0\u8fb9\u548c\u5168\u5c40\u7279\u5f81\u66f4\u65b0\u8282\u70b9\u3002 3.\u4f7f\u7528\u5148\u524d\u7684\u5168\u5c40\u53d8\u91cf\u548c\u66f4\u65b0\u7684\u8282\u70b9\u7684\u805a\u5408\u6765\u66f4\u65b0\u5168\u5c40\u53d8\u91cf\u3002 \u6211\u4eec\u4f7f\u7528\u7684\u7b2c\u4e00\u79cd\u5757\u7c7b\u578b\u7c7b\u4f3c\u4e8e[ 4]\u4e2d \u63cf\u8ff0\u7684\u5757\u7c7b\u578b\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a**Graph Network\u5757**\uff08GN\u5757\uff09\u3002\u4ece\u6570\u5b66\u4e0a\u8bb2\uff0c\u6b64\u5757\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c \u5728\u4ee5\u4e0a\u8868\u793a\u4e2d\uff0c \u662f\u975e\u7ebf\u6027\uff0c\u4f8b\u5982\u6574\u6d41\u7ebf\u6027\u5355\u5143\uff0c \u662f\u8282\u70b9\u65b9\u5f0f\u7684\u6700\u5927\u6c60\u64cd\u4f5c\uff0c\u5e76\u4e14W\uff0c*b*\u662f\u5404\u81ea\u7684\u6743\u91cd\u77e9\u9635\u548c\u504f\u5dee\u3002\u5728GN\u5757\u4e2d\uff0c\u8282\u70b9\u4e0d\u52a0\u9009\u62e9\u5730\u4ece\u5176\u76f8\u90bb\u8282\u70b9\u63a5\u6536\u6d88\u606f\uff0c\u8be5\u6d88\u606f\u5f88\u597d\u5730\u5728\u6574\u4e2a\u56fe\u4e0a\u4f20\u64ad\u4e00\u822c\u4fe1\u606f\uff0c\u4f46\u5728\u9700\u8981\u65f6\u66f4\u96be\u4f20\u9012\u7279\u5b9a\u7684\u4fe1\u606f\u4f4d\u3002 \u7b2c\u4e8c\u79cd\u7c7b\u578b\u7684\u5757\u65e8\u5728\u89e3\u51b3GN\u5757\u7684\u7f3a\u70b9\uff0c\u5e76\u4e3a\u6b64\u76ee\u7684\u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u6ce8\u673a\u5236\u3002\u6211\u4eec\u5c06\u7b2c\u4e8c\u4e2a\u5757\u547d\u540d\u4e3a**Graph Network Attention\u5757**\uff08GNAT\u5757\uff09\uff0c\u4e0e[ 26] \u7684Graph Attention Network\u4e0d\u540c\uff0c\u5b83\u4f7f\u7528\u7684\u6ce8\u610f\u529b\u673a\u5236\u7c7b\u4f3c\u4e8e[ 25] \u7684Transformer\u6a21\u578b\u3002\u8be5\u5757\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u5728\u4e0a\u9762\u7684\u8868\u793a\u4e2d\uff0c^\u662f\u6309\u8282\u70b9\u6c42\u548c\u7684\u64cd\u4f5c\uff0c\u00a9\u662fHadamard\u4e58\u79ef\uff0c*W*\u548c*b*\u5206\u522b\u662f\u6743\u91cd\u77e9\u9635\u548c\u504f\u5dee\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u901a\u8fc7\u8d4b\u4e88\u8282\u70b9\u4ee5\u4e13\u6ce8\u4e8e\u7279\u5b9a\u6d88\u606f\u7684\u80fd\u529b\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u5757\u5141\u8bb8\u67d0\u4e9b\u4fe1\u606f\u4f4d\u4ee5\u66f4\u6709\u610f\u7684\u65b9\u5f0f\u5728\u56fe\u4e2d\u4f20\u64ad\u3002\u5728\u6784\u5efa\u6211\u4eec\u7684GNN\u6a21\u578b\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5806\u53e0\u8fd9\u4e9b\u7c7b\u578b\u7684\u51e0\u4e2a\u5757\uff08\u53ca\u5176\u7ec4\u5408\uff09\u4ee5\u83b7\u5f97\u66f4\u6df1\u7684\u56fe\u5d4c\u5165\u80fd\u529b\u3002\u5728\u6211\u4eec\u7684\u5927\u591a\u6570\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u4e2a\u5757\uff0c\u4e24\u4e2a\u8fde\u7eed\u7684GN\u5757\uff0c\u6216\u8005\u4e00\u4e2aGNAT\u5757\uff0c\u540e\u8ddf\u4e00\u4e2aGN\u5757\u3002\u6b63\u5982\u6211\u4eec\u5c06\u5728\u5b9e\u9a8c\u90e8\u5206\u4e2d\u5c55\u793a\u7684\u90a3\u6837\uff0c\u6bcf\u79cd\u914d\u7f6e\u90fd\u64c5\u957f\u89e3\u51b3\u4e0d\u540c\u7684\u95ee\u9898\u3002","title":"1.1.2.2. 3.2\u56fe\u5f62\u5d4c\u5165"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1123-33","text":"\u4e0e\u5e38\u89c4\u7684\u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\u4e0d\u540c\uff0c\u5728\u5e38\u89c4\u7684\u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\u4e2d\uff0c\u4e00\u7ec4\u52a8\u4f5c\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u65b9\u4fbf\u5730\u8fdb\u884c\u5904\u7406\uff0c\u800c\u5728\u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u4e2d\uff0c\u4e00\u7ec4\u52a8\u4f5c\u53d6\u51b3\u4e8e\u72b6\u6001\uff0c\u5e76\u4e14\u72b6\u6001\u4e4b\u95f4\u7684\u5927\u5c0f\u4e0d\u540c\u3002\u5728PDDL\u4e2d\uff0c\u6bcf\u4e2a\u57df\u63cf\u8ff0\u90fd\u5b9a\u4e49\u4e86\u4e00\u7ec4\u52a8\u4f5c\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u8fd9\u4e9b\u52a8\u4f5c\u7c7b\u578b\u7f6e\u4e8e\u72b6\u6001\u57fa\u7840\u4e0a\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002\u6bcf\u79cd\u52a8\u4f5c\u7c7b\u578b\u90fd\u63a5\u6536\u4e00\u7ec4\u53c2\u6570\uff0c\u5e76\u4e14\u4e3a\u4e86\u9002\u7528\uff0c\u8be5\u52a8\u4f5c\u7684\u53c2\u6570\u5fc5\u987b\u7b26\u5408\u4e00\u7ec4\u524d\u63d0\u6761\u4ef6\u3002\u4f8b\u5982\uff0cBlocksworld\u57df\u5177\u6709\u4e00\u79cd\u79f0\u4e3a\u201c\u62fe\u53d6\u201d\u7684\u52a8\u4f5c\u7c7b\u578b\uff0c\u8be5\u52a8\u4f5c\u7c7b\u578b\u5c06\u5355\u4e2a\u5757\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002\u8be5\u5757\u5fc5\u987b\u662f\u201c clear\u201d\uff0c\u201c on-table\u201d\u4e14\u201c arm-empty\u201d\u5c5e\u6027\u5fc5\u987b\u4e3atrue\uff0c\u6b64\u64cd\u4f5c\u624d\u9002\u7528\u3002\u53ef\u4ee5\u62fe\u53d6\u7b26\u5408\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u7684\u6240\u6709\u5757\uff0c\u5e76\u4ee3\u8868\u552f\u4e00\u7684\u52a8\u4f5c\u3002\u9664\u4e86\u5148\u51b3\u6761\u4ef6\u5916\uff0c\u6bcf\u79cd\u52a8\u4f5c\u7c7b\u578b\u8fd8\u5177\u6709\u5728\u5e94\u7528\u52a8\u4f5c\u65f6\u5f15\u8d77\u72b6\u6001\u7684\u6548\u679c\u3002\u5176\u4e2d\u4e00\u4e9b\u5f71\u54cd\u53ef\u80fd\u662f\u6b63\u9762\u7684\uff08\u72b6\u6001\u7684\u67d0\u4e9b\u8c13\u8bcd\u5c06\u91c7\u7528\u771f\u503c\uff09\uff0c\u800c\u67d0\u4e9b\u8d1f\u9762\u5f71\u54cd\uff08\u72b6\u6001\u7684\u8c13\u8bcd\u5c06\u91c7\u7528\u5047\u503c\uff09\u3002 \u5728\u8ba1\u5212\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\u90fd\u4f1a\u7ed9\u51fa\u5f53\u524d\u72b6\u6001\u548c\u9002\u7528\u52a8\u4f5c\u7684\u5217\u8868\u3002\u4e3a\u4e86\u4ee5\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u8868\u793a\u52a8\u4f5c\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u5bf9\u5176\u5b66\u4e60\u7b56\u7565\uff0c\u6211\u4eec\u9009\u62e9\u6309\u7167\u52a8\u4f5c\u7684\u6548\u679c\u6765\u63cf\u8ff0\u52a8\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u662f\u505a\u51fa\u51b3\u7b56\u6240\u5fc5\u9700\u7684\u8981\u7d20\u3002\u7531\u4e8e\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\u5728\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5411\u4ee3\u7406\u63d0\u4f9b\u4e86\u6240\u6709\u6cd5\u5f8b\u8bc9\u8bbc\uff0c\u56e0\u6b64\u6211\u4eec\u5ffd\u7565\u4e86\u524d\u63d0\u6761\u4ef6\uff08\u6240\u6709\u6cd5\u5f8b\u8bc9\u8bbc\u90fd\u6ee1\u8db3\u4e86\u524d\u63d0\u6761\u4ef6\uff09\u3002\u6bcf\u4e2a\u52a8\u4f5c\u90fd\u7531\u51e0\u79cd\u6548\u679c\u7ec4\u6210\uff0c\u6bcf\u79cd\u6548\u679c\u90fd\u6d89\u53ca\u72b6\u6001\u7684\u4e0d\u540c\u65b9\u9762\uff0c\u53ef\u4ee5\u662f\u6b63\u9762\u7684\u4e5f\u53ef\u4ee5\u662f\u8d1f\u9762\u7684\u3002\u6839\u636e\u6548\u679c\u7684\u7c7b\u578b\uff08\u5168\u5c40\u6548\u679c\uff0c\u8282\u70b9\u6548\u679c\u6216\u8fb9\u7f18\u6548\u679c\uff09\u5c06\u6548\u679c\u805a\u5728\u4e00\u8d77\uff0c\u548c\u8868\u793a\u4e3a\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u5d4c\u5165\u548c\u4e00\u4e2a\u70ed\u5411\u91cf\u7684\u4e32\u8054\uff0c\u8be5\u5411\u91cf\u63cf\u8ff0\u54ea\u4e2a\u8c13\u8bcd\u5df2\u66f4\u6539\u4ee5\u53ca\u5176\u4e3a\u6b63\u8fd8\u662f\u8d1f\u3002\u8fd9\u4e2a\u4e00\u5143\u5411\u91cf\u5728\u76f8\u5e94\u8f93\u5165\u5206\u91cf\u7684\u7ef4\u5ea6\u4e0a*\uff08d v*\u4e3a\u4f8b\u5982\u8282\u70b9\u6548\u5e94\uff09\u5e76\u5305\u542b1\u8868\u793a\u6b63\u4f5c\u7528\u6216-1\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u8c13\u8bcd\u7684\u8d1f\u9762\u5f71\u54cd\u3002\u6bcf\u4e2a\u6548\u679c\u90fd\u4f1a\u6839\u636e\u5176\u7c7b\u578b\u7531\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\u8fdb\u884c\u8f6c\u6362\uff0c\u7136\u540e\u5c06\u5df2\u8f6c\u6362\u7684\u6548\u679c\u5206\u6563\u56de\u5176\u539f\u59cb\u52a8\u4f5c\u3002\u5c06\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6548\u679c\u6c47\u603b\u5728\u4e00\u8d77\uff0c\u4ee5\u5f62\u6210\u8be5\u52a8\u4f5c\u7684\u5355\u4e2a\u5411\u91cf\u8868\u793a\uff0c\u6700\u7ec8\u5c06\u5176\u9988\u9001\u5230\u7b56\u7565\u795e\u7ecf\u7f51\u7edc\u3002\u56fe 4 \u8bf4\u660e\u4e86\u52a8\u4f5c\u8868\u793a\u7684\u8fc7\u7a0b\u3002 \u6700\u7ec8\u7b56\u7565\u662fMLP\uff0c\u5b83\u4e3a\u6bcf\u4e2a\u52a8\u4f5c\u8f93\u51fa\u5355\u4e2a\u6807\u91cf\uff0c\u7136\u540e\u901a\u8fc7softmax\u64cd\u4f5c\u5bf9\u8fd9\u4e9b\u6807\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u4ee5\u83b7\u53d6\u52a8\u4f5c\u7684\u79bb\u6563\u5206\u5e03\u3002\u53e6\u5916\uff0c\u53e6\u4e00\u4e2aMLP\u63d0\u53d6\u56fe\u5f62\u7684\u6700\u7ec8\u5168\u5c40\u7279\u5f81\u5d4c\u5165\u5e76\u8f93\u51fa\u72b6\u6001\u7684\u9884\u6d4b\u503c\uff0c\u4ee5\u7528\u4e8eRL\u7b97\u6cd5\u4e2d\u7684\u4f18\u52bf\u4f30\u8ba1\u3002","title":"1.1.2.3. 3.3\u653f\u7b56\u4ee3\u8868"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1124-34","text":"\u7531\u4e8e\u8fd9\u9879\u5de5\u4f5c\u7684\u91cd\u70b9\u662f\u627e\u5230\u53ef\u884c\u7684\u8ba1\u5212\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u5e26\u6709\u4e8c\u5143\u5956\u52b1\u7684\u7a00\u758f\u5956\u52b1\u95ee\u9898\u3002\u5982\u679c\u4ee3\u7406\u6ee1\u8db3\u9884\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u76ee\u6807\uff0c\u5219\u5f97\u52301\u7684\u5956\u52b1\uff0c\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\uff0c\u5219\u6ca1\u6709\u4efb\u4f55\u5956\u52b1\u3002\u4e3a\u4e86\u786e\u5b9a\u9002\u5f53\u7684\u65f6\u9650\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5e38\u7528\u7684**hff**\u542f\u53d1\u5f0f\u65b9\u6cd5[ 12] \uff0c\u5b83\u89e3\u51b3\u4e86\u7ebf\u6027\u65f6\u95f4\u95ee\u9898\u7684\u677e\u5f1b\u5f62\u5f0f\uff08\u677e\u5f1b\u95ee\u9898\u6ca1\u6709\u8d1f\u9762\u5f71\u54cd\uff09\u3002\u6211\u4eec\u91c7\u7528\u677e\u5f1b\u8ba1\u5212\u7684\u957f\u5ea6\uff0c\u5e76\u5c06\u5176\u4e58\u4ee55\u7684\u5e38\u6570\u4ee5\u83b7\u5f97\u5730\u5e73\u7ebf\u7684\u957f\u5ea6\u3002 \u4e3a\u4e86\u8bad\u7ec3\u6211\u4eec\u7684\u7b56\u7565\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u8fd1\u7aef\u7b56\u7565\u4f18\u5316\uff08PPO\uff09[ 19]\uff0c \u56e0\u4e3a\u5b83\u7b80\u5355\u6613\u7528\u4e14\u6027\u80fd\u826f\u597d\u3002\u4e3a\u4e86\u89e3\u51b3\u7a00\u758f\u5956\u52b1\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6700\u521d\u4f7f\u7528Hindsight Experience Replay DQN [ 2] \u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u56e0\u4e3a\u5b83\u5177\u6709\u89e3\u51b3\u7a00\u758f\u76ee\u6807\u8fbe\u6210\u95ee\u9898\u7684\u80fd\u529b\uff0c\u4f46\u662f\u53d1\u73b0\u5b83\u5f15\u5165\u4e86\u5f88\u591a\u504f\u89c1\u5e76\u5bfc\u81f4\u6027\u80fd\u4e0d\u7406\u60f3\u3002\u4e3a\u4e86\u8ba9\u6211\u4eec\u7684\u653f\u7b56\u80fd\u591f\u4ece\u7a00\u758f\u7684\u4e8c\u8fdb\u5236\u5956\u52b1\u4e2d\u5b66\u4e60\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u4e00\u79cd \u66f4\u7b80\u5355\u7684\u65b9\u6cd5 \u6211\u4eec\u6839\u636e\u5b9e\u4f8b\u5927\u5c0f\u7684\u5206\u5e03\u751f\u6210\u4e86\u6bcf\u4e2a\u8bad\u7ec3\u60c5\u8282\uff0c\u5b9e\u4f8b\u5927\u5c0f\u7684\u5206\u5e03\u5c0f\u5230\u8db3\u4ee5\u88ab\u968f\u673a\u521d\u59cb\u5316\u7684\u7b56\u7565\u89e3\u51b3\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u4f7f\u7b56\u7565\u5f97\u4ee5\u53d1\u5c55\uff0c\u6700\u7ec8\u89e3\u51b3\u5206\u53d1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u5927\u5c0f\uff0c\u800c\u65e0\u9700\u624b\u52a8\u8c03\u6574\u8bfe\u7a0b\u8868\u3002\u5c3d\u7ba1\u8bbe\u7f6e\u6b64\u5206\u5e03\u9700\u8981\u624b\u52a8\u5b8c\u6210\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u901a\u8fc7\u4f7f\u7528\u968f\u673a\u672a\u7ecf\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u7b80\u5355\u7684\u8bd5\u9a8c\u548c\u9519\u8bef\uff0c\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5feb\u6377\u5730\u5b8c\u6210\u6b64\u4efb\u52a1\u3002 \u6211\u4eec\u5bf9\u6807\u51c6PPO\u7b97\u6cd5\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c0f\u8c03\u6574\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u672c\u4f8b\u7684\u6027\u80fd\u3002\u8bb8\u591aRL\u7b97\u6cd5\u7684\u5b9e\u73b0\u4f1a\u5728\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u4e4b\u524d\u9488\u5bf9\u56fa\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u63a8\u51fa\u7b56\u7565\uff0c\u901a\u5e38\u4f1a\u5728\u8fc7\u7a0b\u5b8c\u6210\u4e4b\u524d\u7ec8\u6b62\u60c5\u8282\uff0c\u5e76\u4f7f\u7528\u8bf8\u5982Generalized Advantage Estimation [ 18] \u548c\u81ea\u4e3e\u503c\u4f30\u8ba1\u4e4b\u7c7b\u7684\u65b9\u6cd5\u6765\u4f30\u8ba1\u6536\u76ca [16] ] \u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u5143\u7d20\u4f1a\u7ed9\u6211\u4eec\u7684\u5b66\u4e60\u8fc7\u7a0b\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u504f\u89c1\uff0c\u800c\u662f\u4f7f\u7528\u7ecf\u9a8c\u6027\u56de\u62a5\u800c\u4e0d\u662f\u5f15\u5bfc\u4ef7\u503c\u4f30\u7b97\u6765\u8ba1\u7b97\u4f18\u52bf\uff0c\u4ece\u800c\u9010\u6b65\u63a8\u5e7f\u6bcf\u4e2a\u60c5\u8282\u76f4\u81f3\u7ec8\u6b62\u3002\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u4f7f\u7528\u8bb8\u591a\u63a8\u5e7f\u548c\u5927\u6279\u91cf\u751f\u4ea7\u6709\u52a9\u4e8e\u7a33\u5b9a\u5b66\u4e60\u8fc7\u7a0b\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u6700\u7ec8\u6027\u80fd\uff0c\u56e0\u6b64\u6211\u4eec\u8fdb\u884c\u4e86100\u96c6\u7684\u63a8\u5e7f\uff0c\u5e76\u4f7f\u7528\u7ed3\u679c\u6570\u636e\u5728\u6bcf\u6b21\u5b66\u4e60\u8fed\u4ee3\u65f6\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7b97\u6cd5\u3002","title":"1.1.2.4. 3.4\u7a0b\u5e8f\u8bad\u7ec3"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1125-35","text":"\u4e3a\u4e86\u63d0\u9ad8\u901a\u7528\u7b56\u7565\u5728\u6d4b\u8bd5\u671f\u95f4\u4f7f\u7528\u989d\u5916\u65f6\u95f4\u7684\u80fd\u529b\uff0c\u6211\u4eec\u5728\u641c\u7d22\u7b97\u6cd5\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e9b\u7b56\u7565\uff0c\u5c31\u50cf[ 21] \uff0c[ 3] \u7b49\u5176\u4ed6\u8bb8\u591a\u4f5c\u54c1\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u5408\u6210\u5728\u8bf8\u5982Go\u548cChess [ 22]\u7684 \u96f6\u548c\u6e38\u620f\u4e2d\u83b7\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u5176\u4e2d\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7b56\u7565\u4e0e\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22\u7b97\u6cd5\u7ed3\u5408\u4f7f\u7528\uff0c\u8fd9\u4fc3\u4f7f\u5176\u4ed6\u4f5c\u8005\u751a\u81f3\u5bf9\u975e\u6e38\u620f\u95ee\u9898[ 1] \u3002\u6211\u4eec\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4e13\u95e8\u9488\u5bf9\u5177\u6709\u5f3a\u53cd\u5e94\u6027\u7b56\u7565\u7684\u786e\u5b9a\u6027\u8ba1\u5212\u95ee\u9898\u8bbe\u8ba1\u641c\u7d22\u7b97\u6cd5\u3002\u6211\u4eec\u7684\u7b97\u6cd5\u4ee5\u7ecf\u5178\u7684\u8d2a\u5a6a\u6700\u4f73\u4f18\u5148\u641c\u7d22\uff08GBFS\uff09\u7b97\u6cd5\u4e3a\u57fa\u7840\uff0c\u4f46\u662f\u4ee5\u51e0\u79cd\u5173\u952e\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5145\u3002\u5728\u6807\u51c6GBFS\u4e2d\uff0c\u4ece\u6839\u8282\u70b9\u6784\u5efa\u4e00\u4e2a\u641c\u7d22\u6811\uff0c\u5e76\u4e14\u5728\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u4ece\u6253\u5f00\u5217\u8868\u4e2d\u63d0\u53d6\u542f\u53d1\u5f0f\u4f30\u8ba1\u6700\u4f73\u7684\u8282\u70b9\uff0c\u8fdb\u884c\u6269\u5c55\u5e76\u5c06\u5176\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u6253\u5f00\u5217\u8868\u4e2d\uff0c\u5e76\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u5230\u627e\u5230\u76ee\u6807\u8282\u70b9\u6216\u76f4\u5230\u8d85\u65f6\u4e3a\u6b62\u3002\u6211\u4eec\u7684\u7b97\u6cd5\u79f0\u4e3aGBFS-GNN\uff0c\u5b83\u6267\u884c\u7c7b\u4f3c\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u4f7f\u7528\u7b56\u7565\u548c\u503c\u51fd\u6570\u4e3a\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u542f\u53d1\u5f0f\u503c\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u6269\u5c55\u8282\u70b9\u6267\u884c\u5b8c\u6574\u90e8\u7f72\u3002\u6269\u5c55\u8282\u70b9\u7684\u540e\u4ee3\u5c06\u6dfb\u52a0\u5230\u6253\u5f00\u5217\u8868\u4e2d\uff0c\u4f46\u662f\u5728\u8f6c\u51fa\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5176\u4f59\u8282\u70b9\u5219\u4e0d\u662f\uff0c\u4ee5\u907f\u514d\u5927\u95ee\u9898\u4e2d\u5185\u5b58\u6d88\u8017\u7684\u5feb\u901f\u589e\u957f\u3002\u641c\u7d22\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u72b6\u6001-\u52a8\u4f5c\u5bf9\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8282\u70b9\u4f7f\u7528\u4ee5\u4e0b\u542f\u53d1\u5f0f\u4f30\u8ba1","title":"1.1.2.5. 3.5\u63a8\u7406\u8fc7\u7a0b\u4e2d\u7684\u8ba1\u5212"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#113-5","text":"","title":"1.1.3. 5\u4e2a\u5b9e\u9a8c"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1131-51","text":"\u6211\u4eec\u8bc4\u4f30\u4e86\u4e94\u4e2a\u5e38\u89c1\u7684\u7ecf\u5178\u89c4\u5212\u9886\u57df\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u9886\u57df\u662f\u4eceIPC\u89c4\u5212\u7ade\u8d5b\u96c6\u5408\u4e2d\u9009\u62e9\u7684\uff0c\u5176\u9886\u57df\u8c13\u8bcd\u4e0d\u5927\u4e8e2\uff1a \u2022Blocksworld\uff084 op\uff09\uff1a\u673a\u68b0\u624b\u5fc5\u987b\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u79fb\u52a8\u79ef\u6728\uff0c\u4ee5\u4fbf\u6839\u636e\u76ee\u6807\u914d\u7f6e\u8fdb\u884c\u6392\u5217\u3002 \u2022\u536b\u661f\uff1a\u4e00\u7ec4\u536b\u661f\u5fc5\u987b\u62cd\u6444\u4f4d\u7f6e\u7684\u56fe\u50cf\uff0c\u6bcf\u4e2a\u56fe\u50cf\u90fd\u5177\u6709\u6307\u5b9a\u7c7b\u578b\u7684\u4f20\u611f\u5668\u3002 \u2022\u7269\u6d41\uff1a\u5fc5\u987b\u5c06\u5305\u88f9\u8fd0\u9001\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u4f7f\u7528\u98de\u673a\u548c\u5361\u8f66\u5728\u57ce\u5e02\u548c\u5730\u70b9\u4e4b\u95f4\u79fb\u52a8\u5305\u88f9\u3002 \u2022\u5939\u722a\uff1a\u53cc\u81c2\u673a\u5668\u4eba\u5fc5\u987b\u5c06\u7403\u4eceA\u5ba4\u4f20\u9001\u5230B\u5ba4\u3002 \u2022\u6e21\u8f6e\uff1a\u6e21\u8f6e\u5fc5\u987b\u5c06\u6c7d\u8f66\u4ece\u6700\u521d\u7684\u4f4d\u7f6e\u8fd0\u8f93\u5230\u6307\u5b9a\u7684\u76ee\u6807\u4f4d\u7f6e\u3002 \u8fd9\u4e94\u4e2a\u9886\u57df\u7684\u5171\u540c\u70b9\u5728\u4e8e\uff0c\u53ef\u4ee5\u4e3a\u5b83\u4eec\u5236\u5b9a\u7b80\u5355\u7684\u901a\u7528\u8ba1\u5212\uff0c\u4ece\u800c\u80fd\u591f\u89e3\u51b3\u4efb\u610f\u5927\u7684\u5b9e\u4f8b\u3002\u6211\u4eec\u5e0c\u671b\u8bc1\u660e\u6211\u4eec\u7684\u65b9\u6cd5\u80fd\u591f\u4ea7\u751f\u89e3\u51b3\u6bd4\u5b9e\u4f8b\u5927\u5f97\u591a\u7684\u5b9e\u4f8b\u7684\u7b56\u7565\uff0c\u4ece\u800c\u81ea\u52a8\u53d1\u73b0\u8fd9\u6837\u7684\u5e7f\u4e49\u8ba1\u5212\u3002\u6709\u4e9b\u9886\u57df\u6bd4\u5176\u4ed6\u9886\u57df\u5bb9\u6613\uff0c\u5e76\u4e14\u5728\u5e7f\u4e49\u8ba1\u5212\u5f88\u5bb9\u6613\u63cf\u8ff0\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7ecf\u5e38\u76ee\u7779\u8be5\u653f\u7b56\u975e\u5e38\u6210\u529f\u5730\u63a8\u5e7f\u3002\u4f8b\u5982\uff0cGripper\u57df\u5177\u6709\u975e\u5e38\u7b80\u5355\u7684\u7b56\u7565\uff08\u6bcf\u6b21\u5230B\u5ba4\u90fd\u6293\u4f4f2\u4e2a\u7403\uff09\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u4e86\u6700\u4f73\u7b56\u7565\uff0c\u5373\u4f7f\u5bf9\u4e8e\u6570\u767e\u4e2a\u7403\u7684\u5b9e\u4f8b\uff0c\u901a\u5e38\u4ecd\u7136\u8868\u73b0\u6700\u4f73\u3002\u4e3a\u4e86\u8bc1\u660e\u6211\u4eec\u7684\u653f\u7b56\u786e\u5b9e\u80fd\u5f88\u597d\u5730\u63a8\u5e7f\uff0c \u2022\u5bf9\u4e8eBlocksworld\u57df\uff0c\u6211\u4eec\u57284\u4e2a\u5757\u7684\u5b9e\u4f8b\u4e0a\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b56\u7565\uff0c\u5e76\u57285-100\u4e2a\u5757\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 \u2022\u5bf9\u4e8e\u201c\u536b\u661f\u201d\u9886\u57df\uff0c\u6211\u4eec\u5bf9\u4f7f\u75281-3\u9897\u536b\u661f\uff0c\u6bcf\u9897\u536b\u661f1-3\u53f0\u4eea\u5668\uff0c1-3\u79cd\u4eea\u5668\uff0c2-3\u4e2a\u76ee\u6807\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u653f\u7b56\u57f9\u8bad\uff0c\u5e76\u9488\u5bf9\u4f7f\u75281-14\u9897\u536b\u661f\uff0c2-11\u53f0\u4eea\u5668\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u6bcf\u4e2a\u536b\u661f\uff0c1-6\u79cd\u4eea\u5668\u548c2-42\u4e2a\u76ee\u6807\u3002 \u2022\u5bf9\u4e8e\u7269\u6d41\u9886\u57df\uff0c\u6211\u4eec\u9488\u5bf9\u4f7f\u75282-3\u67b6\u98de\u673a\uff0c2-3\u4e2a\u57ce\u5e02\uff0c\u6bcf\u4e2a\u57ce\u5e022-3\u4e2a\u5730\u70b9\uff0c1-2\u4e2a\u5305\u88f9\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b56\u7565\uff0c\u5e76\u8bc4\u4f30\u4e86\u4f7f\u75284-12\u67b6\u98de\u673a\uff0c4-15\u4e2a\u57ce\u5e02\uff0c1\u4e2a\u5b9e\u4f8b\u7684\u5b9e\u4f8b\u6bcf\u4e2a\u57ce\u5e02-6\u4e2a\u5730\u70b9\u548c8-40\u4e2a\u5305\u88f9\u3002 \u2022\u5bf9\u4e8eGripper\u57df\uff0c\u6211\u4eec\u9488\u5bf93\u4e2a\u7403\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b56\u7565\uff0c\u5e76\u9488\u5bf95-200\u4e2a\u7403\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 \u2022\u5bf9\u4e8eFerry\u57df\uff0c\u6211\u4eec\u9488\u5bf9\u5177\u67093-4\u4e2a\u4f4d\u7f6e\uff0c2-3\u4e2a\u6c7d\u8f66\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u6211\u4eec\u7684\u7b56\u7565\uff0c\u5e76\u9488\u5bf9\u5177\u67094-40\u4e2a\u4f4d\u7f6e\u548c2-120\u4e2a\u6c7d\u8f66\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002","title":"1.1.3.1. 5.1\u57df"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1132-52","text":"\u4e3a\u4e86\u8bad\u7ec3\u6211\u4eec\u7684\u7b56\u7565\uff0c\u6211\u4eec\u4f9d\u9760\u5b9e\u4f8b\u751f\u6210\u5668\u6765\u4ea7\u751f\u968f\u673a\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u65b9\u6cd5\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6240\u6709\u7b56\u7565\u90fd\u7ecf\u8fc71000\u6b21\u8fed\u4ee3\u8bad\u7ec3\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u6709100\u4e2a\u8bad\u7ec3\u60c5\u8282\u548c\u591a\u8fbe20\u4e2a\u6e10\u53d8\u66f4\u65b0\u6b65\u9aa4\u3002\u5b9e\u9a8c\u662f\u5728\u4e00\u53f0\u88c5\u6709i7-8700K\u5904\u7406\u5668\u548c\u4e00\u4e2aNVIDIA GTX 1070 GPU\u7684\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u7684\u3002\u6211\u4eec\u5bf9\u6240\u6709\u4e94\u4e2a\u57df\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u8bad\u7ec3\u8d85\u53c2\u6570\uff0c\u4f46\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7565\u6709\u4e0d\u540c\u3002\u6211\u4eec\u4f7f\u7528\u4e86256\u4e2a\u9690\u85cf\u8868\u793a\u5f62\u5f0f\u548cReLU\u6fc0\u6d3b\uff0c\u4e00\u4e2a\u5b66\u4e60\u73870.0001\uff0c\u4e00\u4e2a\u6298\u73b0\u56e0\u5b500.99\uff0c\u4e00\u4e2a\u71b5\u5956\u52b10.01\uff0c\u4e00\u4e2a\u526a\u5207\u6bd40.2\u548c\u4e00\u4e2aKL\u53d1\u6563\u89d2\u53c2\u65700.01\u3002\u5bf9\u4e8eBlocksworld\u548cGripper\u57df\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u5c42GNN\uff0c\u4e24\u5c42\u90fd\u662fGN\u5757\u7c7b\u578b\uff0c\u5bf9\u4e8eSatellite\uff0c\u6e21\u8f6e\u548c\u7269\u6d41\u9886\u57df\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u5c42GNN\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2aGNAT\u5757\u548c\u4e00\u4e2aGN\u5757\u3002\u6211\u4eec\u7684\u4ee3\u7801\u662f\u7528Python\u5b9e\u73b0\u7684\uff0c\u800c\u795e\u7ecf\u7f51\u7edc\u548c\u5b66\u4e60\u7b97\u6cd5\u662f\u4f7f\u7528PyTorch\u5b9e\u73b0\u7684[ 17] \u3002","title":"1.1.3.2. 5.2\u5b9e\u9a8c\u8bbe\u5b9a"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1133-53","text":"\u6211\u4eec\u7684\u8bc4\u4f30\u91cd\u70b9\u662f\u89e3\u51b3\u5e7f\u4e49\u89c4\u5212\u57df\u7684\u5927\u578b\u5b9e\u4f8b\uff0c\u5e76\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u7ecf\u5178\u89c4\u5212\u5668\u8fdb\u884c\u6bd4\u8f83\u3002\u5176\u4ed6\u57fa\u4e8e\u5b66\u4e60\u7684\u65b9\u6cd5\u6216\u8005\u5728\u64b0\u5199\u672c\u6587\u65f6\u6ca1\u6709\u53ef\u7528\u7684\u4ee3\u7801\uff08\u4f8b\u5982 [ 20] \uff09\uff0c\u6216\u8005\u56fa\u6709\u5730\u5728\u6269\u5c55\u5230\u5927\u95ee\u9898\u65f6\u53d7\u5230\u9650\u5236\uff08\u4f8b\u5982[ 24] \uff09\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u4e86\u66f4\u901a\u7528\u7684\u57fa\u51c6\u7ecf\u5178\u8ba1\u5212\u5668\u7684\u5f62\u5f0f\uff0c\u5982\u679c\u6709\u8db3\u591f\u7684\u65f6\u95f4\u548c\u5185\u5b58\uff0c\u5b83\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u95ee\u9898\u3002\u6211\u4eec\u4e0e**Fast-Downward**\u5feb\u901f\u4e0b\u964d\u6bd4\u8f83[ 11] \uff0c\u8fd9\u662f\u6700\u65b0\u7684\u6846\u67b6\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u4f7f\u7528Pyper plan\u4f5c\u4e3a\u6a21\u578b\u548c\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\uff0c\u5b83\u662f\u57fa\u4e8ePython\u7684\u6846\u67b6\u3002\u6211\u4eec\u4f7f\u7528LAMA\u4f18\u5148\u914d\u7f6e\u4f5c\u4e3a\u5feb\u901f\u5411\u4e0b\u7684\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5b83\u662f\u6027\u80fd\u6700\u9ad8\u7684\u7ade\u4e89\u6027\u6ee1\u610f\u8ba1\u5212\u7b97\u6cd5\u3002","title":"1.1.3.3. 5.3\u57fa\u51c6"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1134-54","text":"\u7531\u4e8e\u6211\u4eec\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u4ee4\u4eba\u6ee1\u610f\u7684\u8ba1\u5212\u4e0a\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u6210\u529f\u7387\u7528\u4f5c\u4e3b\u8981\u6307\u6807\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a\u57df\u5728\u4e00\u7ec450\u4e2a\u4f38\u51fa\u7684\u8bc4\u4f30\u5b9e\u4f8b\u4e0a\u8fd0\u884cGBFS-GNN\u548c\u5feb\u901f\u5411\u4e0b\uff0c\u5e76\u9488\u5bf9\u6bcf\u4e2a\u5b9e\u4f8b\u5728600\u79d2\u7684\u56fa\u5b9a\u65f6\u95f4\u9650\u5236\u5185\u8fd0\u884c\u6bcf\u79cd\u65b9\u6cd5\uff0c\u7136\u540e\u9488\u5bf9\u65f6\u95f4\u7ed8\u5236\u6bcf\u79cd\u65b9\u6cd5\u7684\u6210\u529f\u7387\u9650\u5236\u548c\u9650\u5236\u6269\u5c55\u72b6\u6001\u7684\u6570\u91cf\uff0c\u4ee5\u67e5\u770b\u6bcf\u79cd\u65b9\u6cd5\u5982\u4f55\u5728\u7ed9\u5b9a\u7684\u8ba1\u7b97\u4e0b\u8fdb\u884c\u7f29\u653e\u3002\u6839\u636e\u5e7f\u6cdb\u7684\u5206\u5e03\u751f\u6210\u8bc4\u4f30\u5b9e\u4f8b\uff0c\u4ee5\u4fbf\u5bf9\u5927\u5c0f\u5b9e\u4f8b\u8fdb\u884c\u91c7\u6837\u3002","title":"1.1.3.4. 5.4\u8bc4\u4f30\u6307\u6807"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#1135-55","text":"\u73b0\u5728\uff0c\u6211\u4eec\u4ecb\u7ecd\u6211\u4eec\u7684\u7ed3\u679c\u3002\u56fe 6 \u663e\u793a\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u4e94\u4e2a\u57df\u7684\u5feb\u901f\u5411\u4e0b\u6bd4\u8f83\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002\u8fd9\u4e9b\u56fe\u663e\u793a\u4e86\u6210\u529f\u7387\u4e0e\u6269\u5c55\u72b6\u6001\u6570\u7684\u51fd\u6570\u5173\u7cfb\uff0c\u5e76\u8868\u660e\u4e0e5\u4e2a\u57df\u4e2d\u76844\u4e2a\u9886\u57df\u7684\u7ecf\u5178\u89c4\u5212\u5668\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u7684\u7f29\u653e\u6bd4\u4f8b\u786e\u5b9e\u6709\u5229\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u6211\u4eec\u7684\u653f\u7b56\u666e\u904d\u63a8\u5e7f\u76844\u4e2a\u9886\u57df\u4e2d\uff0cGBFS-GNN\u51e0\u4e4e\u4e0d\u9700\u8981\u641c\u7d22\u3002\u5728\u8fd9\u4e9b\u9886\u57df\u4e2d\uff0c\u9664\u4e86\u6700\u56f0\u96be\u7684\u60c5\u51b5\u5916\uff0c\u53ea\u8981\u8d2a\u5a6a\u5730\u9075\u5faa\u7b56\u7565\u5373\u53ef\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002\u6211\u4eec\u7684\u641c\u7d22\u7b97\u6cd5\u5efa\u7acb\u5728\u8fd9\u79cd\u6cdb\u5316\u80fd\u529b\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u5728\u641c\u7d22\u65f6\u4f7f\u7528\u4e86\u5c11\u91cf\u7684\u5b8c\u6574\u7b56\u7565\u90e8\u7f72\u3002 \u5728\u56fe 7\u4e2d\uff0c \u6211\u4eec\u6bd4\u8f83\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u548c\u5feb\u901f\u5411\u4e0b\u65b9\u6cd5\uff0c\u5e76\u9488\u5bf9\u7ed9\u5b9a\u7684\u8fd0\u884c\u65f6\u95f4\u7ed8\u5236\u4e86\u6210\u529f\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5373\u4f7f\u5feb\u901f\u5411\u4e0b\u7248\u672c\u5177\u6709\u9ad8\u5ea6\u4f18\u5316\u7684C ++\u5b9e\u73b0\uff0c\u5e76\u4f7f\u7528\u590d\u6742\u7684\u5efa\u6a21\u5de5\u5177\u6765\u6709\u6548\u5730\u89e3\u51b3\u8ba1\u5212\u95ee\u9898\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u8fd8\u662f\u5728\u4e00\u4e2a\u9886\u57df\uff08Blocksworld\uff09\u4e2d\u514b\u670d\u4e86\u5b83\uff0c\u800c\u5728\u5176\u4ed6\u4e09\u4e2a\u9886\u57df\u4e2d\u5c06\u5176\u7d27\u5bc6\u5339\u914d\u3002\u5c3d\u7ba1GBFS-GNN\u4f7f\u7528\u7684\u540e\u7ee7\u72b6\u6001\u548c\u6cd5\u5f8b\u884c\u52a8\u751f\u6210\u5668\u7684\u901f\u5ea6\u6bd4\u5feb\u901f\u5411\u4e0b\u7684\u901f\u5ea6\u6162\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u4f46\u6211\u4eec\u7684\u65b9\u6cd55\u7684\u6cdb\u5316\u80fd\u529b\u4f7f\u5176\u4e0e\u7ecf\u5178\u8ba1\u5212\u7a0b\u5e8f\u7684\u6700\u65b0\u5b9e\u73b0\u65b9\u5f0f\u76f8\u6bd4\u5177\u6709\u7ade\u4e89\u529b\u3002 \u5173\u4e8e\u6211\u4eec\u7684\u65b9\u6cd5\u7684\u6cdb\u5316\u6027\u80fd\u7684\u4e00\u4e2a\u660e\u663e\u4f8b\u5916\u662f\u7269\u6d41\u9886\u57df\u3002\u6211\u4eec\u7684\u7b56\u7565\u5728\u8bad\u7ec3\u5b9e\u4f8b\u4e0a\u6210\u529f\u53d6\u5f97\u4e86\u826f\u597d\u7684\u6027\u80fd\uff0c\u4f46\u662f\u672a\u80fd\u63a8\u5e7f\u5230\u66f4\u5927\u7684\u5b9e\u4f8b\u5c3a\u5bf8\uff0c\u56e0\u6b64\u5728\u8be5\u9886\u57df\u7684\u5feb\u901f\u964d\u7ea7\u8fdc\u8fdc\u8d85\u51fa\u4e86\u6211\u4eec\u7684\u7b56\u7565\u3002\u5728\u57df\u4e2d\uff0c\u7269\u6d41\u57df\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u4e2d\u7684\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u5305\u542b\u66f4\u7d27\u5bc6\u7684\u8026\u5408\u3002\u4f8b\u5982\uff0c\u5728\u201c\u536b\u661f\u201d\u57df\u4e2d\uff0c\u4ece\u7b56\u7565\u53ef\u4ee5\u5177\u6709\u591a\u4e2a\u201c\u534a\u719f\u201d\u76ee\u6807\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u800c\u4e0d\u4f1a\u53d7\u5230\u5e72\u6270\u7684\u610f\u4e49\u4e0a\u8bf4\uff0c\u6821\u51c6\u4eea\u5668\u6216\u5bf9\u76ee\u6807\u6210\u50cf\u4e0d\u4f1a\u5e72\u6270\u5176\u4ed6\u536b\u661f\u3002\u5728\u7269\u6d41\u9886\u57df\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u5305\u88f9\u90fd\u5171\u4eab\u5361\u8f66\u548c\u98de\u673a\uff0c\u5e76\u4e14\u79fb\u52a8\u7279\u5b9a\u5361\u8f66\u6765\u6361\u62fe\u5305\u88f9\u53ef\u80fd\u4f1a\u5e72\u6270\u539f\u672c\u6253\u7b97\u5728\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u6361\u62fe\u7684\u53e6\u4e00\u4e2a\u5305\u88f9\u3002\u4e0d\u540c\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u53ef\u80fd\u4f1a\u9f13\u52b1\u8be5\u7b56\u7565\u5728\u5355\u4e2a\u76ee\u6807\u4e0a\u4fdd\u6301\u201c\u56fa\u5b9a\u201d\uff0c\u76f4\u5230\u6ee1\u8db3\u4e3a\u6b62\u518d\u8f6c\u5411\u53e6\u4e00\u4e2a\u76ee\u6807\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u89e3\u51b3\u7269\u6d41\u9886\u57df\u548c\u5176\u4ed6\u7c7b\u4f3c\u7c7b\u578b\u7684\u95ee\u9898\u3002","title":"1.1.3.5. 5.5\u7ed3\u679c"},{"location":"Papers/Generalized%20Planning%20With%20Deep%20Reinforcement%20Learning/#114","text":"\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u7814\u7a76\u4e86\u56fe\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u5b66\u4e60\u901a\u7528\u89c4\u5212\u7b56\u7565\u7684\u80fd\u529b\uff0c\u8be5\u89c4\u5212\u7b56\u7565\u53ef\u4ee5\u89e3\u51b3\u6bd4\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5b9e\u4f8b\u5927\u5f97\u591a\u7684\u5b9e\u4f8b\uff0c\u4ece\u800c\u6709\u6548\u5730\u63a8\u5e7f\u4e86\u539f\u7406\u3002\u4e0e\u67d0\u4e9b\u5176\u4ed6\u65b9\u6cd5\u4e0d\u540c\uff0c\u6211\u4eec\u7684\u65b9\u6cd5**\u4e0d\u4f9d\u8d56\u4e8e\u73b0\u6709**\u8ba1\u5212\u4eba\u5458\u63d0\u4f9b\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\uff0c\u4e5f**\u4e0d\u4f9d\u8d56\u4e8e\u542f\u53d1\u5f0f\u65b9\u6cd5**\u6765\u63d0\u9ad8\u6027\u80fd\u3002\u6211\u4eec\u8fdb\u4e00\u6b65\u4ecb\u7ecdGBFS-GNN\uff0c\u8fd9\u662f\u4e00\u79cd\u641c\u7d22\u7b97\u6cd5\uff0c\u53ef\u5229\u7528\u9ad8\u6027\u80fd\u53cd\u5e94\u7b56\u7565\u7684\u53ef\u7528\u6027\u6765\u5feb\u901f\u627e\u5230\u8d85\u5927\u578b\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u6211\u4eec\u7684\u7b56\u7565\u662f\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60\u4ece\u5934\u5f00\u59cb\u5b66\u4e60\u7684\uff0c\u5e76\u4e0eGBFS-GNN\u7ed3\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6027\u80fd\uff0c\u5728\u6269\u5c55\u72b6\u6001\u65b9\u9762\u8d85\u8d8a\u4e86\u6700\u5148\u8fdb\u7684\u72b6\u6001\u89c4\u5212\u5e08\u7684\u9ad8\u5ea6\u4f18\u5316\u5b9e\u73b0\uff0c\u5e76\u4e14\u5728\u8fd0\u884c\u65f6\u95f4\u65b9\u9762\u53ef\u4ee5\u4e0e\u4e4b\u5ab2\u7f8e\u3002 \u76f8\u5173 1 \u548c\u6587\u732e 2 \u3002 \u53c2\u8003 GICystems \u21a9 Checking \u21a9","title":"1.1.4. \u7ed3\u8bba\u4e0e\u672a\u6765\u5de5\u4f5c"},{"location":"Papers/Survey%20of%20research%20literature/","text":"1. Survey of research literature-All 2. A review of generalized planning 2.1.1. classical planning 2.1.2. generalized planning 2.1.3. Reinforcement Learning 3. A Review of Machine Learning for Automated Planning 3.1. \u56db\u7c7bAP model 3.2. Learning Planning Search Control Knowledge 4. State Of Art\u5b9e\u73b0Generalized Policies 5. Generalized Planning With Deep Reinforcement Learning 5.1. \u524d\u7f6e\u77e5\u8bc6 5.2. RL\u5b66\u4e60generalized policy 5.2.1. state \u7684\u8868\u793a 5.2.2. graph embeding 5.2.3. Policy \u7684\u8868\u793a 5.2.4. training 5.2.5. \u5b9e\u9a8c 5.2.5.1. \u5b9e\u9a8c\u8bbe\u5b9a 5.2.5.2. \u5b9e\u9a8c\u7ed3\u679c 6. PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS 6.1. abstract 6.1.1. \u521d\u59cb\u5316\u548c\u91cd\u7f6e\u73af\u5883 6.1.2. \u5b9e\u65bdstep\u65b9\u6cd5 6.1.3. \u5b9e\u9a8c 1. Survey of research literature-All \u00b6 several recent research papers in that area \uff0cplease please please click on this url and have a look,\u8fd9\u4e9b\u5c31\u662fState Of Art\u3002 context and background A review of generalized planning\u901a\u7528\u89c4\u5212\u80cc\u666f\u53d1\u5c55\u60c5\u51b5 Research papers to be read closely and discussed .Additional research papers to be skimmed and briefly summarized. A Review of Machine Learning for Automated Planning\u7efc\u8ff0\u81ea\u52a8\u89c4\u5212\u53d1\u5c55\u60c5\u51b5(\u5305\u542b\u5f3a\u5316\u5b66\u4e60) Generalized Planning With Deep Reinforcement Learning\u7b80\u5355\u4ecb\u7ecd\u5f3a\u5316\u5b66\u4e60+\u901a\u7528\u89c4\u5212\u57fa\u672c\u65b9\u6cd5 State Of Art PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS code1 , code2 \u6211\u8ba4\u4e3a\u8fd9\u7bc7\u662fRL+pddl\u4ea4\u4e92\u7684\u6b63\u786e\u7814\u7a76\u8def\u5b50\u4e4b\u4e00\u3002 PDDLGym: Gym Environments from PDDL Problems 2. A review of generalized planning \u00b6 \u81ea\u52a8\u5316\u8ba1\u5212\uff08AP\uff09\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4ee3\u7406\u53ca\u5176\u73af\u5883\u7684\u6a21\u578b\u6765\u89e3\u51b3\u9ad8\u5ea6\u7ed3\u6784\u5316\u73af\u5883\u4e2d\u7684\u590d\u6742\u534f\u5546\u4efb\u52a1\uff0cTraditionally the solutions generated by automated planners are tied to aparticular planning instance and hence, do not generalize.\uff08 classical plan \uff09 A generalized plan is an algorithm-like solution that is valid for a given setof planning instances. \u8fd1\u5e74\u6765\uff0c\u7531\u4e8e\u8ba1\u5212 \u7684 \u8868\u793arepresentation \u89e3\u51b3\u65b9\u6848\u7cfb\u5217\u7684\u65b0\u9896\u5f62\u5f0f\u4e3b\u4e49\u4ee5\u53ca\u8ba1\u7b97\u6b64\u7c7b\u89e3\u51b3\u65b9\u6848\u7684\u65b0\u7b97\u6cd5\u7684\u51fa\u73b0\uff0c\u8fd9\u4e9b\u8fdb\u6b65\u63ed\u793a\u4e86\u5e7f\u4e49\u89c4\u5212\u6280\u672f\u7684\u6f5c\u529b\uff0c\u5e76\u9f13\u52b1\u5c06\u89c4\u5212\u5e94\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5404\u4e2a\u9886\u57df\uff0c\u4f8b\u5982program synthesis,autonomous control,datawranglingorform recognition\u5e7f\u4e49\u89c4\u5212\u4e2d\u7684\u8fd9\u4e9b\u6700\u65b0\u8fdb\u5c55\uff0c\u5e76\u4e0e\u73b0\u6709\u5f62\u5f0f\u4e3b\u4e49\u76f8\u5173,\u9488\u5bf9\u81ea\u52a8\u5316\u89c4\u5212\u4e2d\u7684\u901a\u7528\u6027\uff0c\u4f8b\u5982*planning with domain control knowledgeand different approachesforplanning under uncertainty*\u4e0d\u540c\u65b9\u6cd5\u3002 2.1.1. classical planning \u00b6 *\u7ecf\u5178\u89c4\u5212\u6a21\u578b*\u662f\u81ea\u52a8\u89c4\u5212\u6700\u5e38\u89c1\u7684\u6a21\u578b\uff0c\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a 1.\u8981\u89e3\u51b3\u7684\u8ba1\u5212\u4efb\u52a1\u5177\u6709\u6709\u9650\u4e14\u53ef\u5b8c\u5168\u89c2\u5bdf\u7684\u72b6\u6001\u7a7a\u95f4\u3002 2.\u52a8\u4f5c\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5e76\u5bfc\u81f4\u77ac\u65f6\u72b6\u6001\u8f6c\u6362\u3002 \u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u7cfb\u5217\u53ef\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5c06\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e3a\u76ee\u6807\u72b6\u6001\uff0c\u5373\u6ee1\u8db3\u5148\u524d\u6307\u5b9a\u7684\u4e00\u7ec4\u76ee\u6807\u6761\u4ef6\u7684\u72b6\u6001\u3002 A classical planning frame is a tuple \u03a6 =\u3008F,A\u3009, where F is a set of fluents and A is a set of actions. Given a frame \u03a6 =\u3008F,A\u3009, a classical planning instance is a tuple P=\u3008F,A,I,G\u3009, where I\u2208 L(F) is an initial state (i.e.|I|=|F|) andG\u2208 L(F)is a goal condition. Besides classical planning, PDDL can represent more expressive planning models such as temporal planning or planning with path constraints and preferences 2.1.2. generalized planning \u00b6 \u53ef\u4ee5\u6839\u636e\u5e7f\u4e49\u8ba1\u5212specification of *the action to apply next*\u5bf9\u5176\u8fdb\u884c\u5206\u7c7b\uff1a Fully specified solutions, that unambiguously capture the action to ap-ply next, for solving every instance in a given generalized planning task.\u53ef\u4ee5\u660e\u786e\u6355\u83b7\u63a5\u4e0b\u6765\u8981\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u7528\u4e8e\u89e3\u51b3\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u3002\u7a0b\u5e8f\uff0c\u901a\u7528\u7b56\u7565\u6216\u786e\u5b9a\u6027FSC\u5c5e\u4e8e\u6b64\u7c7b\u3002\u5982\u679c\u8ba4\u4e3a\uff0c\u4e00\u81f4\u7684\uff0c\u5076\u7136\u7684\u6216POMDP\u8ba1\u5212\u4e5f\u5c5e\u4e8e\u6b64\u7c7b\uff0c\u5219\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u4ee3\u8868\u4e0d\u540c\u7684\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\uff0c\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u72b6\u6001\u53d8\u91cf\uff0c\u52a8\u4f5c\u548c\u76ee\u6807[42]\u3002 \u6211\u8ba4\u4e3a\u975e\u786e\u5b9a\u7684\u56fe\u7684\u89e3\u56fepolicy=\u786e\u5b9a\u6027=\u53ef\u4ee5\u5199\u6210program \u3002 Non specified(\u6211\u8ba4\u4e3a\u662f\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6ca1\u89c4\u5f8b\uff0c\u9700\u8981classical planner \u989d\u5916\u89c4\u5212\u7684\u60c5\u51b5).\u5e26\u6709domain model\u7684\u7ecf\u5178\u8ba1\u5212\u5668\u662f\u5e7f\u4e49\u8ba1\u5212\u7684\u4e00\u79cd\u5f62\u5f0f\u3002\u8fd9\u6837\u7684\u8ba1\u5212\u975e\u5e38\u7b3c\u7edf\uff08\u6db5\u76d6\u4e86\u7528\u53e4\u5178\u8ba1\u5212\u5668\u7684\u8f93\u5165\u8bed\u8a00\u8868\u793a\u7684\u4efb\u4f55\u5b9e\u4f8b\uff09\uff0c\u4f46\u662f\u6267\u884c\u673a\u5236\u6548\u7387\u4f4e\u4e0b\uff08\u8fd0\u884c\u53e4\u5178\u8ba1\u5212\u5668\u4ee5\u9488\u5bf9\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u751f\u6210\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff09\u3002 Partially specified. \u5171\u4eab\u4e24\u8005\u8981\u7d20\u7684\u901a\u7528\u8ba1\u5212\u3002\u4f7f\u7528*\u7279\u5b9a\u4e8e\u57df\u7684\u63a7\u5236\u77e5\u8bc6*\u8fdb\u884c*\u89c4\u5212*\u7684\u4e0d\u540c\u65b9\u6cd5\u5c5e\u4e8e\u6b64\u7c7b\uff0c\u56e0\u4e3a\u4ecd\u7136\u9700\u8981\u89c4\u5212\u4eba\u5458\u9488\u5bf9\u7279\u5b9a\u5b9e\u4f8b\u751f\u6210\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u8981\u5229\u7528\u9650\u5236\u53ef\u80fd\u89e3\u51b3\u65b9\u6848\u7684\u5e38\u8bc6\u3002\u6b64\u7c7b\u5305\u62ec\u90e8\u5206\u6307\u5b9a\u7684\u7a0b\u5e8f\uff0c\u4e0d\u786e\u5b9a\u7684FSC\uff0c\u5f62\u5f0f\u8bed\u6cd5\uff0cAND / OR\u56fe\u6216HTN\u3002 \u8ba4\u4e3a\u8fd9\u5c31\u662fQNP/FOND\u53ef\u4ee5\u641c\u7d22\u201cpolicy\u2192\u89e3\u5b50\u56fe\u201d The execution of a generalized plan \\(\\Pi\\) in a classical planning instance P=\u3008F,A,I,G\u3009is a classical plan, The generalized planner box refers to an algorithm d with aninput-outputspecification of the instances to solve and that generates a solutionto these instances. \u5176\u4e2d\u5305\u542b\u8981\u89e3\u51b3\u7684\u5b9e\u4f8b\u7684*\u8f93\u5165-\u8f93\u51fa*\u89c4\u8303\uff0c\u5e76\u4e3a\u8fd9\u4e9b\u5b9e\u4f8b\u751f\u6210\u89e3\u51b3\u65b9\u6848\u3002 \u5e7f\u4e49\u8ba1\u5212\u7684\u7b97\u6cd5\u8303\u56f4\u4ece\u7eaf\u7cb9\u7684**top-down**(\u6211\u7406\u89e3\u4e3aMyND\u542f\u53d1\u5f0f\u56fe\u641c\u7d22\u5b50\u56fe\uff0c\u6216\u8005\u662fFOND-SAT\u5168\u7a7a\u95f4\u641c\u7d22)*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\uff08\u5728\u5e7f\u4e49\u8ba1\u5212\u7684\u7a7a\u95f4\u4e2d\u641c\u7d22\u4e00\u4e2a\u6db5\u76d6\u6240\u6709\u8f93\u5165\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\uff09 \u5230*\u81ea\u4e0b\u800c\u4e0a**botton-up***(\u6211\u7406\u89e3\u4e3aPRP,FF planner\uff0c\u5f00\u521b\u8005\u4ece\u5b9e\u4f8b\u4e2d\u5b66\u4e60\u7684\u65b9\u6cd5)\uff08\u4e3a\u5355\u4e2a\u5b9e\u4f8b\u8ba1\u7b97\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u5176\u8fdb\u884c\u6982\u62ec\u548c\u5408\u5e76\uff09\u4ee5\u524d\u627e\u5230\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u9010\u6b65\u6269\u5927\u5e7f\u4e49\u8ba1\u5212\u7684\u8303\u56f4\u3002\u6700\u540e\uff0c*\u5e7f\u4e49\u8ba1\u5212*\u53ef\u4ee5\u770b\u4f5c\u662f\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u8ba1\u5212\u5b9e\u4f8b\u7684\u8fc7\u7a0b\u8868\u793a\u3002 \u901a\u7528GP\u89c4\u5212\u5c31\u50cf\u7ecf\u5178\u89c4\u5212classical plan\uff0c\u4f20\u7edf\u6c42\u89e3\u65b9\u6cd5\u6709\uff1a \u5728\u7ecf\u5178\u89c4\u5212\u4e2d\uff0c\u89c4\u5212\u5e08\u4ec5\u63a5\u6536\u5355\u4e2a\u548c\u5730\u9762\u89c4\u5212\u5b9e\u4f8b\u4f5c\u4e3a\u8f93\u5165 \u7ecf\u5178\u89c4\u5212\u7684\u6700\u65b0\u7b97\u6cd5\u662f\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u8fdb\u884c\u542f\u53d1\u5f0f\u641c\u7d22[37\uff0c30]\u6216\u7f16\u8bd1\u4e3a\u5176\u4ed6\u5f62\u5f0f\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f8b\u5982SAT \u7ecf\u5178\u8ba1\u5212\u662f\u4e00\u7cfb\u5217\u52a8\u4f5c\uff0c\u7ecf\u5178\u8ba1\u5212\u7684\u6267\u884c\u548c\u9a8c\u8bc1\u5728\u8ba1\u5212\u7684\u957f\u5ea6\u4e0a\u90fd\u662f\u7ebf\u6027\u7684\u3002\u7136\u800c\uff0c\u5177\u6709\u6761\u4ef6\u5f71\u54cd\uff0c\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7ed3\u6784\u7684\u52a8\u4f5c\u53ef\u4ee5\u7528\u6765\u66f4\u7d27\u51d1\u5730\u8868\u793a\u7ecf\u5178\u8ba1\u5212\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u3002 2.1.3. Reinforcement Learning \u00b6 Representing Actions \uff08RL\u5f3a\u5316\u5b66\u4e60\u7ed3\u5408\uff09\u4e00\u4e2a\u4f8b\u5b50\u662f\u5728**ATARI**\u89c6\u9891\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u4ee5\u4ee3\u7406\u4eba\u4e3a\u4e2d\u5fc3\u7684\u884c\u4e3a\u6a21\u578b[62]\uff0c\u5176\u4e2d18\u79cd\u53ef\u80fd\u7684\u884c\u4e3a\u6839\u636e\u89c6\u9891\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u5177\u6709\u4e0d\u540c\u7684\u6548\u679c\u3002\u5728\u8fd9\u91cc\uff0c\u56de\u987e\u4e86\u7ecf\u5178\u8ba1\u5212\u884c\u4e3a\u6a21\u578b\u7684\u6269\u5c55\uff0c\u8fd9\u4e9b\u6269\u5c55\u65e8\u5728\u4f7f\u8ba1\u5212\u4efb\u52a1\u548c\u8ba1\u5212\u89e3\u51b3\u65b9\u6848\u66f4\u7d27\u51d1\uff0c\u66f4\u901a\u7528\u3002 Conditional effects=preconditions+conditional effects Conditional effects cannot be compiled away if plan size should grow only linearly [67]. PDDL supports the definition of conditional effects with the when keyword\u3002 Update formulas and high-level state features( series of work by Srivastava et al. ) different formalisms for representing a set of planning in-stances according to the language used for specifying these constraints: Propositional logic. \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u4ec5\u4f7f\u7528\u6587\u5b57\u548c\u4e09\u4e2a\u57fa\u672c\u7684\u903b\u8f91\u8fde\u63a5\u8bcd\u8868\u793a\uff08\u5e76\u8868\u793a\u6587\u5b57\u7684\u5408\u53d6\u6216\u8868\u793a\u6587\u5b57\u7684\u6790\u53d6\u800c\u4e0d\u8868\u793a\u5426\u5b9a\uff09\u3002\u7528\u547d\u9898\u903b\u8f91\u8868\u793a\u7684\u8ba1\u5212\u5b9e\u4f8b\u96c6\u7684\u793a\u4f8b\u662f\u4e00\u81f4\u7684\uff0c\u6216\u6709\u7684\u6216POMDP\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u8fd9\u4e9b\u4efb\u52a1\u5b9a\u4e49\u4e86\u4efb\u52a1\u7684\u4e0d\u540c\u53ef\u80fd\u521d\u59cb\u72b6\u6001\uff0c\u4f5c\u4e3a\u5bf9\u95ee\u9898\u5b57\u9762\u91cf\u7684\u5206\u79bb\uff08\u800c\u76ee\u6807\u662f\u4e3a\u8ba1\u5212\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u5171\u4eab\u7684\uff09\u4efb\u52a1\uff09[10]\u3002 First-order logic\u4e00\u9636\u903b\u8f91\u7ea6\u675f\u53ef\u4ee5\u5305\u542b\u91cf\u5316\u53d8\u91cf\uff0c\u5305\u62ec\u4f20\u9012\u95ed\u5305\u5e76\u8868\u793a\u65e0\u9650\u5236\u72b6\u6001\u96c6\u3002\u8fd9\u4e9b\u7279\u5f81\u4f7f\u4e00\u9636\u516c\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u8ba1\u5212\u5b9e\u4f8b\u96c6\u7684\u7d27\u51d1\u8868\u793a\uff0c\u4ee5\u53ca\u65e0\u9650\u5236\u89c4\u6a21\u7684\u8ba1\u5212\u4efb\u52a1[90]\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6709\u9650\u5bf9\u8c61\u96c6\uff0c\u53ef\u4ee5\u5c06\u4e00\u9636\u8868\u793a\u5f62\u5f0f\u76f4\u63a5\u8f6c\u6362\u4e3a\u547d\u9898\u903b\u8f91\u8868\u793a\u5f62\u5f0f\u3002 Constraint Programming. \u9664\u4e86\u7ea6\u675f\u7f16\u7a0b\u8bed\u8a00\u7684\u8868\u793a\u7075\u6d3b\u6027\u5916\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684CSP\u6c42\u89e3\u5668\u6765\u89e3\u51b3\u5e7f\u4e49\u7684\u8ba1\u5212\u4efb\u52a1\u3002 Three-valued logic. \u5728\u6b64\u903b\u8f91\u8bed\u8a00\u4e2d\uff0c\u5b58\u5728\u4e09\u4e2a\u771f\u503c1\uff08\u771f\uff09\uff0c0\uff08\u5047\uff09\u62161\uff08\u672a\u77e5\uff09Srivastava\u7b49\u3002\u4f7f\u7528\u4e09\u503c\u903b\u8f91\u8fdb\u884c\u72b6\u6001\u62bd\u8c61\uff0c\u4ee5\u7d27\u51d1\u5730\u8868\u793a\u65e0\u8fb9\u754c\u7684\u5177\u4f53\u72b6\u6001\u96c6\u3002\u4e09\u503c\u903b\u8f91\u5bf9\u4e8e\u8868\u793a\u548c\u89e3\u51b3\u4e00\u81f4\u548c\u5076\u7136\u7684\u4efb\u52a1\u4e5f\u5f88\u6709\u7528\u3002 \u786e\u5b9a\u4e00\u7ec4\u8ba1\u5212\u5b9e\u4f8b**specify a set of planning instances** \uff1a\u9664\u4e86\u7528\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u96c6\u4e4b\u5916\uff0c\u672a\u6765\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4fe1\u606f\uff0c\u4f8b\u5982*\u9886\u57df\u4e0d\u53d8\u91cf*[90]\u751a\u81f3\u662f\u5206\u7c7b\u7684\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff0c\u7c7b\u4f3c\u4e8e\u5728\u5f52\u7eb3\u903b\u8f91\u7f16\u7a0b\uff08ILP\uff09\u3002 \u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff0c\u5e76\u56de\u987e\u4e86\u4e0d\u540c\u7684*\u8ba1\u5212\u91cd\u7528*\u6280\u672f\uff0c\u4ee5\u907f\u514d\u4ece\u5934\u5f00\u59cb\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u3002\u672c\u8282\u6700\u540e\u56de\u987e\u4e86\u9488\u5bf9\u901a\u7528\u8ba1\u5212\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u7279\u5b9a\u5b9e\u73b0\u3002 *\u81ea\u4e0a\u800c\u4e0b\u7684*\u5e7f\u4e49\u89c4\u5212\u7684\u641c\u7d22\u65b9\u6cd5 \u5728*\u81ea\u4e0a\u800c\u4e0b\u7684*\u5e7f\u4e49\u89c4\u5212\u7684\u641c\u7d22\u65b9\u6cd5\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8986\u76d6\u4e86\u6240\u6709\u5728\u5e7f\u4e49\u89c4\u5212\u4efb\u52a1\u7684\u5b9e\u4f8b\u3002\u53e6\u4e00\u65b9\u9762\uff0c \u81ea\u4e0b\u800c\u4e0a\u7684*\u65b9\u6cd5\u4e3a\u5355\u4e2a\u5b9e\u4f8b\uff08\u6216\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u5b9e\u4f8b\u5b50\u96c6\uff09\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u6269\u5927\u4e86\u89e3\u51b3\u65b9\u6848\u7684\u8986\u76d6\u8303\u56f4\uff0c\u76f4\u5230\u6db5\u76d6\u4e86\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\uff0c\u81ea\u4e0a\u800c\u4e0b\u7684\u65b9\u6cd5\u4e0e*\u79bb\u7ebf*\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6709\u5173\uff0c\u8be5\u7b97\u6cd5\u8ba1\u7b97\u6a21\u578b\u4ee5\u5728\u4e00\u6b21\u8fed\u4ee3\u4e2d\u8986\u76d6\u6574\u4e2a\u8f93\u5165\u5b9e\u4f8b\u96c6\uff0c\u4f8b\u5982\u51b3\u7b56\u6811\u7684\u5f52\u7eb3 1 \u3002\u81ea\u4e0b\u800c\u4e0a\u7684\u65b9\u6cd5\u4e0e*\u5728\u7ebf\u76f8\u5173 \u7248\u672c\u7684ML\u7b97\u6cd5\uff0c\u968f\u7740\u66f4\u591a\u8f93\u5165\u5b9e\u4f8b\u7684\u51fa\u73b0\uff0c\u8fed\u4ee3\u5730\u9012\u589e\u5730\u9002\u5e94\u6a21\u578b 2 \u3002 \u7528\u4e8e\u5e7f\u4e49\u8ba1\u5212\u7684\u81ea*\u9876\u5411\u4e0b*\u7b97\u6cd5\u901a\u5e38\u5728\u53ef\u80fd\u7684\u5e7f\u4e49\u8ba1\u5212\u4e2d\u641c\u7d22\u89e3\u51b3\u65b9\u6848\u3002\u6b64\u641c\u7d22\u7684\u521d\u59cb\u72b6\u6001\u662f *\u7a7a\u7684*\u901a\u7528\u8ba1\u5212\uff0c\u641c\u7d22\u64cd\u4f5c\u5458\u5728\u901a\u7528\u8ba1\u5212\u4e2d\u5efa\u7acb\u4e00\u4e2a\u6b65\u9aa4\uff08\u4f8b\u5982\uff0c\u5411\u7a0b\u5e8f\u6dfb\u52a0\u6307\u4ee4\uff0c\u5411FSC\u6dfb\u52a0\u65b0\u72b6\u6001\u6216\u5411FSC\u8fc7\u6e21\uff0c\u5411\u7b56\u7565\u6dfb\u52a0\u65b0\u89c4\u5219\u7b49\uff09 \u3002\u641c\u7d22\u7684\u76ee\u6807\u72b6\u6001\u96c6\u5305\u62ec\u6784\u5efa\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u89e3\u51b3\u7ed9\u5b9a\u5b9e\u4f8b\u96c6\u7684\u4efb\u4f55\u72b6\u6001\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u793a\u4f8b\u662f\u5c06\u901a\u7528\u8ba1\u5212\u7f16\u8bd1\u4e3a\u5176\u4ed6\u5f62\u5f0f\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff0c\u4f8b\u5982***\u7ecf\u5178\u8ba1\u5212* 3 \uff0c \u4e00\u81f4\u8ba1\u5212 4 \uff0c CSP 5 \u6216*Prolog\u7a0b\u5e8f* 6 **\u3002\u8fd9\u4e9b\u7f16\u8bd1\u5b9e\u73b0\u4e86\u5982\u4e0a\u6240\u8ff0\u7684\u641c\u7d22\u7a7a\u95f4\uff0c\u5e76\u53d7\u76ca\u4e8e\u73b0\u6210\u7684\u6c42\u89e3\u5668\uff08\u5177\u6709\u9ad8\u6548\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5\uff09\uff0c\u53ef\u4ee5\u5b8c\u6210\u5bf9\u901a\u7528\u8ba1\u5212\u7684\u641c\u7d22\u3002\u7f16\u8bd1\u65b9\u6cd5\u7684\u4e3b\u8981\u9650\u5236\u662f\u53ef\u4f38\u7f29\u6027\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u901a\u5e38\u4e3a\u4e86\u9650\u5236\u641c\u7d22\u8303\u56f4\uff0c\u9650\u5236\u53ef\u80fd\u7684\u5e7f\u4e49\u8ba1\u5212\u7684\u5927\u5c0f\uff08\u4f8b\u5982\uff0c\u7a0b\u5e8f\u884c\uff0c\u63a7\u5236\u5668\u72b6\u6001\uff0c\u7b56\u7565\u89c4\u5219\u6216\u91cf\u5316\u53d8\u91cf\u7684\u6700\u5927\u6570\u91cf\uff09\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u5728SATPLAN\u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u786e\u5b9a\u6700\u5927\u8ba1\u5212\u957f\u5ea6[78]\uff0c\u7136\u540e\u8fed\u4ee3\u5730\u589e\u52a0\u76f4\u5230\u627e\u5230\u89e3\u51b3\u65b9\u6848\u4e3a\u6b62\u3002 \u91cd\u7528\u5e7f\u4e49\u8ba1\u5212Srivastava\u7684\u65b9\u6cd5\u4e2d\uff0c \u5728\u8fd9\u65b9\u9762\uff0c*\u81ea\u4e0b\u800c\u4e0a\u7684*\u901a\u7528\u8ba1\u5212\u65b9\u6cd5\u914d\u5907\u4e86\u4f7f\u8ba1\u5212\u9002\u5e94\u672a\u77e5\u6848\u4f8b\u5e76\u9010\u6b65\u589e\u52a0\u5176\u8986\u76d6\u8303\u56f4\u7684\u673a\u5236[91]\u3002\u53e6\u4e00\u65b9\u9762\uff0c*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\u53ef\u4ee5\u4ece\u90e8\u5206\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece*\u7a7a\u7684*\u5e7f\u4e49\u8ba1\u5212\u5f00\u59cb\u3002\u8fd9\u8868\u660e\u7f29\u5c0f\u641c\u7d22\u7a7a\u95f4\u548c/\u6216\u96c6\u4e2d\u641c\u7d22\u8fc7\u7a0b\u5f88\u6709\u7528\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u89e3\u51b3\u66f4\u5177\u6311\u6218\u6027\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1[83\uff0c84]\u3002 \u63a5\u4e0b\u6765\uff0c\u56de\u987e\u91cd\u7528\u5148\u524d\u627e\u5230\u7684\u8ba1\u5212\u7684\u4e0d\u540c\u6280\u672f\uff1a \u2022 \u7f16\u8bd1\u3002*\u5f53\u73b0\u6709\u7684\u5e7f\u4e49\u8ba1\u5212\u5177\u6709\u5e7f\u4e49\u7b56\u7565\u7684\u5f62\u5f0f\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u7f16\u8bd1\u4e3a\u4e00\u7ec4PDDL\u6d3e\u751f\u7684\u8c13\u8bcd\uff0c\u7b56\u7565\u4e2d\u7684\u6bcf\u4e2a\u89c4\u5219\u90fd\u5305\u542b\u4e00\u4e2a\u8c13\u8bcd\uff0c\u8be5\u8c13\u8bcd\u6355\u83b7\u5e94\u91c7\u53d6\u884c\u52a8\u7684\u4e0d\u540c\u60c5\u51b5[45]\u3002\u56fe13\u8bf4\u660e\u4e86\u6b64\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u663e\u793a\u4e86PDDL\u6d3e\u751f\u8c13\u8bcd\u7684\u793a\u4f8b\uff0c\u8be5\u8c13\u8bcd\u8868\u793a\u7528\u4e8e\u5806\u53e0\u5854\u5f0f\u5854\u76842\u89c4\u5219\u7b56\u7565\u3002\u8fd8\u89e3\u91ca\u8bf4\uff0c\u901a\u8fc7**We also explained that existinggeneralized plans in the form of programs, FSCs or AND/OR graphs, canbe encoded into a classical PDDL planning task by computing the crossproduct between the corresponding automata and the original planningtask [^7, 83, 77]\u8ba1\u7b97\u76f8\u5e94\u81ea\u52a8\u673a\u4e0e\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e4b\u95f4\u7684\u53c9\u79ef\uff0c\u53ef\u4ee5\u5c06\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u5f62\u5f0f\u7684\u73b0\u6709\u5e7f\u4e49\u8ba1\u5212\u7f16\u7801\u4e3a\u7ecf\u5178PDDL\u8ba1\u5212\u4efb\u52a1* \u3002[7\uff0c83\uff0c77] \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u989d\u5916\u72b6\u6001\u53d8\u91cf\u5c06\u6dfb\u52a0\u5230\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u4ee5\u8868\u793a\u4e0e\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u76f8\u5bf9\u5e94\u7684\u81ea\u52a8\u673a\u7684\u72b6\u6001\u548c\u8f6c\u6362\u3002 \u2022 *\u8ba1\u5212\u884c\u52a8\u3002*\u7ecf\u5178\u8ba1\u5212\u4e2d\u7684\u52a8\u4f5c\u4e0d\u4ec5\u4ee3\u8868\u539f\u59cb\u52a8\u4f5c\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4ee3\u8868\u5e7f\u4e49\u8ba1\u5212\u672c\u8eab\u3002\u56fe20\u663e\u793a\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684\u8ba1\u5212\u52a8\u4f5c\uff0c\u8be5\u52a8\u4f5c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u901a\u7528\u8ba1\u5212\uff0c\u8be5\u901a\u7528\u8ba1\u5212\u7528\u4e8e\u5c06\u4e00\u4e2ablockworld\u4e2d\u7684\u4efb\u4f55block\u5806\u53e0\u8d77\u6765\uff0c\u5373\u89e3\u51b3\u4efb\u4f55blockworld\u5b9e\u4f8b\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u7b2c\u4e00\u6b65\u3002 \u5148\u524d\u627e\u5230\u7684\u8ba1\u5212\u7684\u4e0d\u540c\u6280\u672f\uff1a \u2022 compilation*\u5f53\u73b0\u6709\u7684\u5e7f\u4e49\u8ba1\u5212\u5177\u6709\u5e7f\u4e49\u7b56\u7565\u7684\u5f62\u5f0f\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u7f16\u8bd1\u4e3a\u4e00\u7ec4PDDL\u6d3e\u751f\u7684\u8c13\u8bcd\uff0c\u7b56\u7565\u4e2d\u7684\u6bcf\u4e2a\u89c4\u5219\u90fd\u5305\u542b\u4e00\u4e2a\u8c13\u8bcd\uff0c\u8be5\u8c13\u8bcd\u6355\u83b7\u5e94\u91c7\u53d6\u884c\u52a8\u7684\u4e0d\u540c\u60c5\u51b5[45]\u3002\u56fe13\u8bf4\u660e\u4e86\u6b64\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u663e\u793a\u4e86PDDL\u6d3e\u751f\u8c13\u8bcd\u7684\u793a\u4f8b\uff0c\u8be5\u8c13\u8bcd\u8868\u793a\u7528\u4e8e\u5806\u53e0\u5854\u5f0f\u5854\u76842\u89c4\u5219\u7b56\u7565\u3002\u8fd8\u89e3\u91ca\u8bf4\uff0c\u901a\u8fc7**We also explained that existinggeneralized plans in the form of programs, FSCs or AND/OR graphs, canbe encoded into a classical PDDL planning task by computing the crossproduct between the corresponding automata and the original planningtask [^7, 83, 77]\u8ba1\u7b97\u76f8\u5e94\u81ea\u52a8\u673a\u4e0e\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e4b\u95f4\u7684\u53c9\u79ef\uff0c\u53ef\u4ee5\u5c06\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u5f62\u5f0f\u7684\u73b0\u6709\u5e7f\u4e49\u8ba1\u5212\u7f16\u7801\u4e3a\u7ecf\u5178PDDL\u8ba1\u5212\u4efb\u52a1* \u3002[7\uff0c83\uff0c77] \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u989d\u5916\u72b6\u6001\u53d8\u91cf\u5c06\u6dfb\u52a0\u5230\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u4ee5\u8868\u793a\u4e0e\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u76f8\u5bf9\u5e94\u7684\u81ea\u52a8\u673a\u7684\u72b6\u6001\u548c\u8f6c\u6362\u3002 \u2022 *\u8ba1\u5212\u884c\u52a8*\u7ecf\u5178\u8ba1\u5212\u4e2d\u7684\u52a8\u4f5c\u4e0d\u4ec5\u4ee3\u8868\u539f\u59cb\u52a8\u4f5c\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4ee3\u8868\u5e7f\u4e49\u8ba1\u5212\u672c\u8eab\u3002 diverse approaches for generalized planning according to the solution representations\uff1a Variables Control-flow Execution Classical plan ------ ------ Ground actions Macro-Actions Action parameters ------ Lifted actions Generalized Policy Rule parameters Branching and loops Lifted rules DSPlanners Existential Branching and loops Lifted predicatesand lifted actions FSCs Quantified Branching and loops Derived predicates Hierarchical FSCs Quantified and parameters Branching, loops and call stack Derived predicates and Parameter passing Programs Quantified and parameters Branching, loops and call stack Derived predicates and Parameter passing 3. A Review of Machine Learning for Automated Planning \u00b6 \u81ea\u52a8\u5316\u8ba1\u5212\uff08AP\uff09\u662f\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u8d1f\u8d23\u7814\u7a76\u6267\u884c\u7ed9\u5b9a\u4efb\u52a1\u7684\u6709\u5e8f\u884c\u52a8\u96c6\u5408\u7684\u8ba1\u7b97\u7efc\u5408\u3002AP\u4e8e50\u5e74\u4ee3\u672b\u51fa\u73b0\uff0c\u662f\u5bf9\u72b6\u6001\u7a7a\u95f4\u641c\u7d22\uff0c\u5b9a\u7406\u8bc1\u660e\u548c\u63a7\u5236\u7406\u8bba\u8fdb\u884c\u7814\u7a76\u7684\u7ed3\u679c\uff0c\u65e8\u5728\u89e3\u51b3\u673a\u5668\u4eba\u6280\u672f\u548c\u81ea\u52a8\u6f14\u7ece\u7684\u5b9e\u9645\u9700\u6c42\u3002\u65af\u5766\u798f\u5b66\u9662\u7684\u95ee\u9898\u6c42\u89e3\u5668STRIPS\uff08Fikes\u548cNilsson\uff0c1971\u5e74\uff09\u53d1\u5c55\u6210\u4e3a\u63a7\u5236\u81ea\u4e3b\u673a\u5668\u4ebaShakey\u7684\u8ba1\u5212\u7ec4\u6210\u90e8\u5206\uff08Nilsson\uff0c1984\u5e74\uff09\uff0c\u5b8c\u7f8e\u5730\u8bf4\u660e\u4e86\u8fd9\u4e9b\u5f71\u54cd\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u4eceShakey\u65f6\u4ee3\u5230\u73b0\u5728\uff0cAP\u5df2\u7ecf\u4ea7\u751f\u4e86\u4ee3\u8868\u8ba1\u5212\u4efb\u52a1\u7684\u516c\u8ba4\u6807\u51c6\u4ee5\u53ca\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6709\u6548\u7b97\u6cd5\uff08Ghallab\u7b49\uff0c2004\uff09\u3002 *\u77e5\u8bc6\u8868\u793a\u3002*\u9996\u5148\uff0c\u5fc5\u987b\u5b9a\u4e49\u673a\u5668\u5b66\u4e60\u8fc7\u7a0b\u5c06\u5b66\u4e60\u7684\u77e5\u8bc6\u7c7b\u578b\u3002\u5728\u672c\u6587\u4e2d\uff0c\u8003\u8651\u4e86AP\u7684ML\u7684\u4e24\u4e2a\u4e0d\u540c\u76ee\u6807\uff0c\u5373\u4e3a\u8ba1\u5212\u8005\u63d0\u4f9b\u670d\u52a1\u7684\u52a8\u4f5c\u6a21\u578b\u548c\u6307\u5bfc\u8ba1\u5212\u8005\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\u7684\u641c\u7d22\u63a7\u5236\u3002\u5176\u6b21\uff0c\u5fc5\u987b\u51b3\u5b9a\u5982\u4f55\u8868\u793a\u6240\u5b66\u77e5\u8bc6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u505a\u51fa\u4e24\u4e2a\u4ee3\u8868\u51b3\u5b9a\uff1a \uff08a\uff09 *\u4ee3\u8868\u8bed\u8a00\u3002*\u7528\u4e8e\u5bf9\u76ee\u6807\u6982\u5ff5\u548c\u4f53\u9a8c\u8fdb\u884c\u7f16\u7801\u7684\u4e00\u79cd\u8868\u793a\u6cd5\u3002\u56e0\u4e3aAP\u4efb\u52a1\u901a\u5e38\u4ee5\u8c13\u8bcd\u903b\u8f91\u63cf\u8ff0\uff0c\u6240\u4ee5\u8fd9\u662f\u7528\u4e8e\u7f16\u7801AP\u6982\u5ff5\u7684\u6700\u5e38\u7528\u7684\u8868\u793a\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136\u7a0b\u5ea6\u8f83\u5c0f\uff0c\u4f46\u4e5f\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\uff0c\u4f8b\u5982\u63cf\u8ff0\u903b\u8f91\u6216\u65f6\u95f4\u903b\u8f91\u3002 \uff08b\uff09 *\u529f\u80fd\u7a7a\u95f4\u3002*ML\u7b97\u6cd5\u8003\u8651\u5b66\u4e60\u76ee\u6807\u6982\u5ff5\u7684\u4e00\u7ec4\u529f\u80fd\u3002\u5728AP\u4e2d\uff0c\u8fd9\u4e9b\u529f\u80fd\u901a\u5e38\u662f\u7528\u4e8e\u5b9a\u4e49AP\u4efb\u52a1\u7684\u52a8\u4f5c\uff0c\u72b6\u6001\u548c\u76ee\u6807\u7684\u57df\u8c13\u8bcd\u3002 *\u6c72\u53d6\u7ecf\u9a8c\u3002*\u5982\u4f55\u6536\u96c6\u5b66\u4e60\u793a\u4f8b\u3002\u5728AP\u7684\u60c5\u51b5\u4e0b\uff0c\u5b66\u4e60\u793a\u4f8b\u53ef\u4ee5\u7531\u8ba1\u5212\u7cfb\u7edf\u81ea\u4e3b\u6536\u96c6\uff0c\u4e5f\u53ef\u4ee5\u7531\u5916\u90e8\u4ee3\u7406\uff08\u4f8b\u5982\u4eba\u7c7b\u4e13\u5bb6\uff09\u63d0\u4f9b\u3002\u5b9e\u73b0\u4e00\u79cd\u81ea\u4e3b\u6536\u96c6\u5b66\u4e60\u793a\u4f8b\u7684\u673a\u5236\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\u3002\u4f7f\u7528\u8ba1\u5212\u8005\u6536\u96c6\u7ecf\u9a8c\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u8981\u786e\u4fdd\u4f7f\u7528\u7ed9\u5b9a\u7684\u57df\u6a21\u578b\u6765\u89e3\u51b3AP\u95ee\u9898\u7684\u53ef\u89e3\u51b3\u6027\u4e0e\u539f\u59cbAP\u4efb\u52a1\u4e00\u6837\u56f0\u96be\u3002\u968f\u673a\u63a2\u7d22\u7ecf\u5e38\u4f7fAP\u4efb\u52a1\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u91c7\u6837\u4e0d\u8db3\u3002AP\u52a8\u4f5c\u901a\u5e38\u4f1a\u63d0\u4f9b\u524d\u63d0\u6761\u4ef6\uff0c\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u53ea\u80fd\u7531\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u6765\u6ee1\u8db3\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u5076\u7136\u88ab\u9009\u62e9\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\u3002 *\u5b66\u4e60\u7b97\u6cd5\u3002*\u5982\u4f55\u4ece\u6536\u96c6\u7684\u7ecf\u9a8c\u4e2d\u6355\u83b7\u6a21\u5f0f\u3002\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u63d0\u53d6\u8fd9\u4e9b\u6a21\u5f0f\u3002\u5f52\u7eb3\u5b66\u4e60\u901a\u8fc7\u5bf9\u89c2\u5bdf\u5230\u7684\u4f8b\u5b50\u8fdb\u884c\u6982\u62ec\u6765\u6784\u5efa\u6a21\u5f0f\u3002\u5206\u6790\u5b66\u4e60\u4f7f\u7528\u5148\u9a8c\u77e5\u8bc6\u548c\u6f14\u7ece\u63a8\u7406\u6765\u6784\u5efa\u6a21\u5f0f\uff0c\u4ee5\u89e3\u91ca\u5b66\u4e60\u793a\u4f8b\u4e2d\u7684\u4fe1\u606f\u3002\u6df7\u5408\u5f52\u7eb3\u5206\u6790\u5b66\u4e60\u7ed3\u5408\u4e86\u4e24\u79cd\u5148\u524d\u7684\u5b66\u4e60\u6280\u672f\uff0c\u4ece\u800c\u83b7\u5f97\u4e86\u4e24\u8005\u7684\u597d\u5904\uff1a\u5f53\u53ef\u83b7\u5f97\u5148\u9a8c\u77e5\u8bc6\u65f6\uff0c\u6cdb\u5316\u7684\u51c6\u786e\u6027\u66f4\u9ad8\uff1b\u4f7f\u7528\u89c2\u6d4b\u5230\u7684\u5b66\u4e60\u6570\u636e\u6765\u514b\u670d\u5148\u9a8c\u77e5\u8bc6\u7684\u4e0d\u8db3\u3002\u5728\u8bbe\u8ba1\u7528\u4e8eAP\u5f52\u7eb3\u5b66\u4e60\u7684\u5b66\u4e60\u7b97\u6cd5\u65f6\uff0c\u6700\u5e38\u7528\u7684\u6280\u672f\u662f\uff0c\u4f46\u662f\u57fa\u4e8eAP\u4efb\u52a1\u7684domain\u5b9a\u4e49\uff0c\u4e5f\u4f7f\u7528\u5206\u6790\u548c\u6df7\u5408\u65b9\u6cd5\u6765\u6784\u5efa\u5bf9\u6536\u96c6\u7684\u5b66\u4e60\u793a\u4f8b\u7684\u89e3\u91ca\u3002 \u5f00\u53d1\u6240\u5b66\u77e5\u8bc6 \u3002\u81ea\u52a8\u7cfb\u7edf\u5982\u4f55\u4ece\u5b66\u5230\u7684\u77e5\u8bc6\u4e2d\u53d7\u76ca\u3002\u5bf9\u524d\u4e09\u4e2a\u95ee\u9898\u4e2d\u7684\u6bcf\u4e00\u4e2a\u505a\u51fa\u7684\u51b3\u5b9a\u90fd\u4f1a\u5f71\u54cd\u6240\u5b66\u77e5\u8bc6\u3002\u5982\u679c\u5b66\u5230\u7684\u77e5\u8bc6\u4e0d\u5b8c\u5584\uff0c\u5219\u5fc5\u987b\u901a\u8fc7\u4fdd\u8bc1\u53ef\u9760\u5229\u7528\u7684\u673a\u5236\u52a0\u4ee5\u5e94\u7528\u3002\u5bf9\u4e8eAP\uff0c\u77e5\u8bc6\u7684\u4e0d\u5b8c\u5584\u53ef\u80fd\u662f\u591a\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\uff1a\u67d0\u4e9b\u8868\u793a\u9009\u62e9\u53ef\u80fd\u4e0d\u8db3\u4ee5\u8868\u8fbe\u7ed9\u5b9a\u6761\u4ef6\u7684\u76f8\u5173\u77e5\u8bc6\u3002 \u57df; \u6536\u96c6\u5b66\u4e60\u7ecf\u9a8c\u7684\u7b56\u7565\u53ef\u80fd\u4f1a\u9057\u6f0f\u76ee\u6807\u77e5\u8bc6\u7684\u5927\u91cf\u793a\u4f8b\uff1b\u5426\u5219\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u6216\u8005\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u548c\u5185\u5b58\u8981\u6c42\u5185\u6355\u83b7\u76ee\u6807\u77e5\u8bc6\u7684\u6a21\u5f0f\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u4f7f\u7528\u6240\u5b66\u77e5\u8bc6\u53ef\u80fd\u4f1a\u7834\u574f\u8ba1\u5212\u8fc7\u7a0b\u3002\u89c4\u5212\u548c\u5b66\u4e60\u7cfb\u7edf\u9700\u8981\u914d\u5907\u5404\u79cd\u673a\u5236\uff0c\u4ee5\u4f7f\u5c3d\u7ba1\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u5b58\u5728\u7f3a\u9677\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5f3a\u5927\u5730\u8fdb\u884c\u89c4\u5212\u3002 3.1. \u56db\u7c7bAP model \u00b6 AP\u5efa\u6a21\u5b9a\u4e49\u4e86\u56db\u7c7b\uff1a - \u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u64cd\u4f5c\uff1b - \u5728\u90e8\u5206\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u52a8\u4f5c\uff1b - \u5728\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c\uff1b - \u53ef\u89c2\u5bdf\u90e8\u5206\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c\u3002 \u5c3d\u7ba1\u5b58\u5728\u5176\u4ed6\u5206\u7c7b\u7684\u53ef\u80fd\uff0c\u4f8b\u5982\u6839\u636e\u5b66\u4e60\u76ee\u6807\u8fdb\u884c\u5206\u7ec4\uff08\u524d\u63d0\u6761\u4ef6\uff0c\u6548\u679c\uff0c\u6548\u679c\u6761\u4ef6\uff0c\u7ed3\u679c\u7684\u6982\u7387...\uff09\uff0c\u4f46\u8ba4\u4e3a\u8fd9\u4e00\u5206\u7c7b\u5bf9\u4e8e\u8ba1\u5212\u76ee\u7684\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u8303\u5f0f\u3002\u56fe\u901a\u8fc7\u7ed9\u51fa\u4e00\u4e9b\u793a\u4f8b\u5b9e\u73b0\u603b\u7ed3\u4e86\u8ba1\u5212\u884c\u52a8\u5efa\u6a21\u7cfb\u7edf\u7684\u5206\u7c7b\u3002\u8be5\u8868\u5e76\u4e0d\u662f\u8be6\u5c3d\u7684\u5217\u4e3e\uff0c\u56e0\u6b64\u8868\u4e2d\u7684\u7cfb\u7edf\u4ec5\u662f\u793a\u4f8b\u3002 \u6a21\u578b \u7279\u5f81 \u5b9e\u65bd\u65b9\u5f0f \u957f\u5904 \u5f31\u70b9 **\u786e\u5b9a\u6027**\u5f71\u54cd**\u5b8c\u6574\u7684**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u5b66\u4e60\u590d\u6742\u6027\u5728\u7406\u8bba\u4e0a\u662f\u6709\u9650\u7684 \u2022\u9ad8\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 \u2022\u5b8c\u6574\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b \u2022\u8868\u73b0\u529b\u5dee LIVE\uff08Shen and Simon\uff0c1989\uff09\uff0cEXPO\uff08Gil\uff0c1992\uff09\uff0cOBSERVER\uff08Wang\uff0c1994\uff09 **\u786e\u5b9a\u6027**\u5f71\u54cd**\u90e8\u5206**\u72b6\u6001\u7684\u53ef\u89c2\u5bdf\u6027 \u2022\u5b8c\u6574\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b \u2022\u8868\u73b0\u529b\u5dee \u2022\u4f4e\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 ARMS\uff08Yang\u7b49\uff0c2007\uff09\uff0c\uff08Amir and Chang\uff0c2008\uff09\uff0c\uff08Mourao\u7b49\uff0c2008\uff09\uff0cLOCM\uff08Cresswell\u7b49\uff0c2009\uff09 **\u6982\u7387**\u6548\u5e94**\u5b8c\u5168**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u4e30\u5bcc\u7684\u8868\u73b0\u529b\u2022\u9ad8\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 \u2022\u4e0d\u5b58\u5728\u7684\u5728\u7ebf\u5b66\u4e60 \uff08Oates and Cohen\uff0c1996\uff09\uff0cTRAIL\uff08Benson\uff0c1997\uff09\uff0cLOPE\uff08Garcla-Martlnez and Borrajo\uff0c2000\uff09\uff0c\uff08Pasula et al\u3002\uff0c2007\uff09\uff0cPELA\uff08Jimenez\u7b49\uff0c2008\uff09 **\u6982\u7387**\u6548\u5e94**\u90e8\u5206**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u5bcc\u6709\u8868\u73b0\u529b \u2022\u9ad8\u8ba1\u5212\u548c\u5b66\u4e60\u590d\u6742\u6027 \uff08Yoon\u548cKambhampati\uff0c2007\u5e74\uff09 3.2. Learning Planning Search Control Knowledge \u00b6 \u5b66\u4e60\u89c4\u5212\u56fe\u7684\u63a7\u5236\u7ed3\u6784\u77e5\u8bc6(\u7c7b\u6bd4tf\u8ba1\u7b97\u56fe) \u5b66\u4e60AP\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u7684\u56db\u79cd\u4e0d\u540c\u65b9\u6cd5\uff08\u5b8f\u52a8\u4f5c\uff0c\u5e7f\u4e49\u7b56\u7565\uff0c\u5e7f\u4e49\u542f\u53d1\u5f0f\u51fd\u6570\u548c\u5c42\u6b21\u5206\u89e3\u65b9\u6cd5\uff09 \u6a21\u578b \u7279\u5f81 \u5b9e\u65bd\u65b9\u5f0f \u957f\u5904 \u5f31\u70b9 Macro-actions \u2022\u5bf9\u9519\u8bef\u7684\u5b66\u4e60\u77e5\u8bc6\u6709\u8f83\u5f3a\u7684\u628a\u63e1 \u2022\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u8005 \u2022Utility problem REFLECT\uff08Dawson and Silklossly\uff0c1977\uff09\uff0cMORRIS\uff08Korf\uff0c1985\uff09\uff0cMacroFF\uff08Botea\u7b49\uff0c2005a\uff09\uff0cMarvin\uff08Coles and Smith\uff0c2007\uff09\uff0c\uff08Newton et al\u3002\uff0c2007\uff09 Generalized Policies \u2022\u6807\u51c6\u5173\u7cfb\u5206\u7c7b\u7b97\u6cd5 \u2022Engineering effort to\u6574\u5408\u4e0d\u540c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5 \uff08Minton\uff0c1988\u5e74\uff09\uff0cPRIAR\uff08Kambhampati and Hendler\uff0c1992\uff09\uff0cHAMLET\uff08Borrajo and Veloso\uff0c1997\uff09\uff0c\uff08Khardon\uff0c1999\uff09\uff0c\uff08Martin and Geffner\uff0c2000\uff09\uff0cDISTILL\uff08WinnerandVeloso\uff0c2003\uff09\uff0cOBTUSEWEDGE\uff08Yoon\u7b49\u4eba\uff0c2007\uff09\uff0cCABALA\uff08de la Rosa\u7b49\u4eba\uff0c2007\uff09\uff0cROLLER\uff08de la Rosa\u7b49\u4eba\uff0c2008\uff09 Generalized Heuristics \u2022\u6807\u51c6\u5173\u7cfb\u56de\u5f52\u7b97\u6cd5 \u2022\u8f7b\u677e\u96c6\u6210\u4e0d\u540c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5 \u2022\u53ef\u8bfb\u6027\u5dee \uff08Yoon\u7b49\uff0c2006\uff09\uff0c\uff08Xu\u7b49\uff0c2007\uff09 Decomposition Methods \u2022\u5bcc\u6709\u8868\u73b0\u529b \u2022\u65e0\u9700\u5168\u81ea\u52a8\u5b66\u4e60 CAMEL\uff08Ilghami\u7b49\uff0c2002\uff09\uff0cHDL\uff08Ilghami\u7b49\uff0c2006\uff09\uff0cHTNMAKER\uff08Hogg\u7b49\uff0c2008\uff09 Overview of AP systems that benefit from ML for the extraction of domain-specific search control \u6709\u4e00\u7ec4\u7cfb\u7edf\u53ef\u4ee5\u5f52\u7eb3\u5b66\u4e60\u63a7\u5236\u89c4\u5219\u3002\u5176\u4e2d\u5f52\u7eb3\u5b66\u4e60\u7f16\u7a0b\uff08ILP\uff09\u662f\u6700\u6d41\u884c\u7684\u5b66\u4e60\u6280\u672f\u3002G rasshopper \u7cfb\u7edf\uff08Leckie\u548cZukerman\uff0c1991\uff09\u4f7f\u7528F \u6cb9\uff08Quinlan\u548cCameron-Jones\uff0c1995\uff09\u6765\u5b66\u4e60\u6307\u5bfc\u795e\u7ae5\u8ba1\u5212\u8005\u7684\u63a7\u5236\u89c4\u5219 \u3002\u4e5f\u6709\u5206\u6790\u7cfb\u7edf\uff1a\u795e\u7ae5/ EBL \u6a21\u5757\uff08\u660e\u987f\uff0c1988\u5e74\uff09\u4e86\u89e3\u5230\u641c\u7d22\u63a7\u5236\u89c4\u5219\u7684PRODIGY \u4ece\u6b63\u786e\u548c\u9519\u8bef\u51b3\u7b56\u7684\u51e0\u4e2a\u4f8b\u5b50\u89c4\u5212\u5e08\u3002\u5c0f\u53f7tatic\uff08Etzioni\uff0c1993\uff09\u83b7\u5f97\u63a7\u5236\u89c4\u5219\u800c\u6ca1\u6709\u89e3\u51b3\u4efb\u4f55\u95ee\u9898\u3002\u5b83\u4ec5\u4f7f\u7528\u57fa\u4e8e\u89e3\u91ca\u7684\u5b66\u4e60\uff08EBL\uff09\u6765\u5206\u6790\u52a8\u4f5c\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u4e3a\u4e86\u514b\u670d\u7eaf\u5f52\u7eb3\u6cd5\u548c\u7eaf\u5206\u6790\u6cd5\u7684\u5c40\u9650\u6027\uff0c\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u5c06\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\uff1a\u57fa\u4e8e\u8be5\u539f\u7406\u7684\u5f00\u62d3\u6027\u7cfb\u7edf\u662fLEX-2\uff08Mitchell\u7b49\uff0c1982\uff09\u548cM eta -L ex \uff08Keller\uff0c1987\uff09\u3002 \uff09\u3002A x A-EBL\uff08Cohen\uff0c1990\uff09\u7ed3\u5408\u4e86EBL\u548c\u5f52\u7eb3\u6cd5\u3002\u5b83\u9996\u5148\u4f7f\u7528EBG\u5b66\u4e60\u63a7\u5236\u89c4\u5219\uff0c\u7136\u540e\u901a\u8fc7\u5b66\u4e60\u793a\u4f8b\u5bf9\u5176\u8fdb\u884c\u5b8c\u5584\u3002D olphin \uff08Zelle and Mooney\uff0c1993; Estlin and Mooney\uff0c1996\uff09\u662fA x A-EBL \u7684\u6269\u5c55\uff0c\u5b83\u4f7f\u7528F \u6cb9\u4f5c\u4e3a\u5f52\u7eb3\u5b66\u4e60\u6a21\u5757\u3002H amlet \uff08Borrajo\u548cVeloso\uff0c1997\uff09\u7cfb\u7edf\u5c06\u6f14\u7ece\u548c\u5f52\u7eb3\u76f8\u7ed3\u5408\u3002\u9996\u5148\uff0c\u5b83\u4f7f\u7528EBL\u5b66\u4e60\u901a\u5e38\u8fc7\u4e8e\u5177\u4f53\u6216\u7b3c\u7edf\u7684\u63a7\u5236\u89c4\u5219\uff0c\u7136\u540e\u4f7f\u7528\u5f52\u7eb3\u6cd5\u5bf9\u89c4\u5219\u8fdb\u884c\u6cdb\u5316\u548c\u4e13\u95e8\u5316\u3002E vo CK\uff08Aler et al\u3002\uff0c2002\uff09\u4f7f\u7528*\u9057\u4f20\u7f16\u7a0b*\u6765\u53d1\u5c55H amlet \u5b66\u4e60\u7684\u89c4\u5219\u5e76\u4ea7\u751f\u66f4\u6709\u6548\u7684\u641c\u7d22\u63a7\u5236\u3002 \u5b66\u4e60\u5e7f\u4e49\u7b56\u7565\u7684\u95ee\u9898\u6700\u65e9\u7531Roni Khardon\u7814\u7a76\u3002Khardon\u7684L2A CT \uff08Khardon\uff0c1999\u5e74\uff09\u901a\u8fc7\u5c06\u51b3\u7b56\u5217\u8868\u5b66\u4e60\u7b97\u6cd5\uff08Rivest\uff0c1987\u5e74\uff09\u6269\u5c55\u5230\u5173\u7cfb\u73af\u5883\uff0c\u4e3a*Blocksworld* \u548c*Logistics* \u9886\u57df\u5f15\u5165\u4e86\u901a\u7528\u7b56\u7565\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5b58\u5728\u4e24\u4e2a\u91cd\u8981\u7684\u5f31\u70b9\uff1a\uff081 \uff09\u5b83\u4f9d\u9760\u4eba\u7c7b\u5b9a\u4e49\u7684\u80cc\u666f\u77e5\u8bc6\u6765\u8868\u8fbe\u5173\u952e\u7279\u5f81\u8f6f\u57df\uff0c\u4f8b\u5982Blocksworld\u4e0a\u7684\u8c13\u8bcd\uff08block1\uff0cblock2\uff09\u6216i ^ place\uff08block\uff09\uff0c\u4ee5\u53ca\uff082\uff09\u5b66\u4e60\u7684\u7b56\u7565\u6ca1\u6709\u5f53\u95ee\u9898\u7684\u89c4\u6a21\u589e\u52a0\u65f6\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u6982\u62ec\u3002Martin\u548cGeffner\u89e3\u51b3\u4e86*Blocksworld\u4e2d\u7684*\u8fd9\u4e9b\u9650\u5236\u901a\u8fc7\u5c06\u5e7f\u4e49\u7b56\u7565\u7684\u8868\u793a\u8bed\u8a00\u4ece\u8c13\u8bcd\u903b\u8f91\u66f4\u6539\u4e3a*\u6982\u5ff5\u8bed\u8a00*\u6765\u5b66\u4e60\u9012\u5f52\u6982\u5ff5\uff08Martin and Gef ^ er\uff0c2000\uff09\u3002 \u6700\u8fd1\uff0c\u5e7f\u4e49\u7b56\u7565\u5b66\u4e60\u7684\u8303\u56f4\u5df2\u5728\u591a\u4e2a\u9886\u57df\u4e2d\u589e\u52a0\uff0c\u4ece\u800c\u4f7f\u8be5\u65b9\u6cd5\u53ef\u4e0e\u6700\u65b0\u7684\u8ba1\u5212\u8005\u7ade\u4e89\u3002\u8fd9\u4e00\u6210\u5c31\u5f52\u529f\u4e8e\u4e24\u4e2a\u65b0\u601d\u60f3\uff1a\uff081\uff09\u7b56\u7565\u8868\u793a\u8bed\u8a00\u4e2d\u5305\u542b\u4e86\u989d\u5916\u7684\u8c13\u8bcd\uff0c\u53ef\u4ee5\u6355\u83b7\u66f4\u6709\u6548\u7684\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\uff1b\uff082 \uff09\u5b66\u4e60\u7b56\u7565\u4e0d\u662f\u8d2a\u5a6a\u5730\u5e94\u7528\uff0c\u800c\u662f\u5728\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5\u7684\u6846\u67b6\u5185\u5e94\u7528\u3002\u4e00\u4e2a\u7a81\u51fa\u7684\u4f8b\u5b50\u662fO btuse W \u8fb9\u7f18\u7cfb\u7edf\uff08Yoon\u7b49\uff0c2007\uff09\uff0c\u5b83\u662fIPC-2008\u5b66\u4e60\u8f68\u8ff9\u7684\u6700\u4f73\u5b66\u4e60\u8005\u3002\u8be5\u7cfb\u7edf\u901a\u8fc7\u5bbd\u677e\u7684\u8ba1\u5212\u56fe\u4e30\u5bcc\u4e86\u5f53\u524d\u72b6\u6001\u7684\u77e5\u8bc6\uff0c\u5e76\u4f7f\u7528\u5b66\u4e60\u5230\u7684\u7b56\u7565\u5728\u201c\u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d\u4e2d\u751f\u6210\u8d85\u524d\u72b6\u6001\u3002[R \u5965\u52d2\uff08de la Rosa\u7b49\uff0c2008\uff09\u5c06\u5b66\u4e60\u5e7f\u4e49\u7b56\u7565\u7684\u95ee\u9898\u5b9a\u4e49\u4e3a\u4e24\u6b65\u6807\u51c6\u5206\u7c7b\u8fc7\u7a0b\u3002\u7b2c\u4e00\u6b65\uff0c\u5206\u7c7b\u5668\u6355\u83b7\u8981\u5728\u4e0d\u540c\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u5e94\u7528\u7684\u9996\u9009\u8fd0\u7b97\u7b26\u3002\u5728\u7b2c\u4e8c\u4e2a\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5206\u7c7b\u5668\u5728\u7ed9\u5b9a\u57df5\u7684\u4e0d\u540c\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u6355\u83b7\u6bcf\u4e2a\u64cd\u4f5c\u5458\u7684\u9996\u9009\u7ed1\u5b9a\u3002\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u7531\u4ece\u7ed9\u5b9a\u72b6\u6001\u7684\u5bbd\u677e\u8ba1\u5212\u56fe\u4e2d\u63d0\u53d6\u7684\u6709\u7528\u64cd\u4f5c\u96c6\uff0c\u4ecd\u672a\u5b9e\u73b0\u7684\u76ee\u6807\u4ee5\u53ca\u8ba1\u5212\u4efb\u52a15\u7684\u9759\u6001\u8c13\u8bcd\u5b9a\u4e49\u3002 \u8fd8\u5b58\u5728\u901a\u8fc7\u89c4\u5212\u5b9e\u4f8b\u7684\u96c6\u5408\u8868\u793a\u5e7f\u4e49\u7b56\u7565\u7684\u7cfb\u7edf\uff0c\u5982AP\u7684CBR\u7cfb\u7edf\u3002\u57fa\u4e8e\u5b9e\u4f8b\u7684AP\u7cfb\u7edf\u901a\u5e38\u5728\u5404\u79cd\u57df\u4e2d\u90fd\u4e0d\u5177\u6709\u7ade\u4e89\u529b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b58\u5728\u5fc5\u987b\u5b9a\u4e49\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u57df\u4e2d\u90fd\u80fd\u5f88\u597d\u5de5\u4f5c\u7684\u9002\u5f53\u76f8\u4f3c\u6027\u5ea6\u91cf\u7684\u7f3a\u70b9\u3002PRIAR\u7cfb\u7edf\uff08Kambhampati\u548cHendler\uff0c1992\uff09\u5efa\u8bae\u5c06\u8ba1\u5212\u7684\u4fee\u6539\u4e0e\u751f\u6210\u8ba1\u5212\u7ed3\u5408\u8d77\u6765\u3002\u5929\u624d/ \u7c7b\u6bd4\uff08Veloso and Carbonell\uff0c1993\uff09\u4ecb\u7ecd\u4e86\u5c06\u63a8\u5bfc\u7c7b\u6bd4\u5e94\u7528\u4e8e\u89c4\u5212\u3002\u5b83\u5b58\u50a8\u4e86\u8ba1\u5212\u8ddf\u8e2a\uff0c\u4ee5\u907f\u514d\u5728\u5c06\u6765\u89e3\u51b3\u95ee\u9898\u65f6\u51fa\u73b0\u6545\u969c\u8def\u5f84\u3002\u8981\u68c0\u7d22\u7c7b\u4f3c\u7684\u8ba1\u5212\u75d5\u8ff9\uff0c\u8bf7\u795e\u7ae5/ \u7c7b\u6bd4 \u4f7f\u7528\u6700\u5c0f\u524d\u63d0\u6761\u4ef6\u4e3a\u5b83\u4eec\u5efa\u7acb\u7d22\u5f15\uff0c\u4ee5\u5b9e\u73b0\u4e00\u7ec4\u76ee\u6807\u3002\u57fa\u4e8e\u6848\u4f8b\u7684\u8ba1\u5212\u7cfb\u7edfPARIS\uff08Bergmann\u548cWilke\uff0c1996\uff09\u63d0\u51fa\u5f15\u5165\u62bd\u8c61\u6280\u672f\u6765\u5c06\u6848\u4f8b\u7ec4\u7ec7\u8d77\u6765\u5b58\u50a8\u5728\u5206\u5c42\u5b58\u50a8\u5668\u4e2d\u3002\u8be5\u6280\u672f\u63d0\u9ad8\u4e86\u6848\u4ef6\u4fee\u6539\u7684\u7075\u6d3b\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u5355\u4e2a\u6848\u4ef6\u7684\u8986\u76d6\u8303\u56f4\u3002DISTILL\uff08Winner\u548cVeloso\uff0c2003\u5e74\uff09\u5c06\u793a\u4f8b\u8ba1\u5212\u5408\u5e76\u5230\u79f0\u4e3a*dsPlanner* \u7684\u7ed3\u6784\u4e2d*\u3002 DISTILL\u5c06\u8ba1\u5212\u8f6c\u6362\u4e3a\u53c2\u6570\u5316\u7684if\u8bed\u53e5\uff0c\u5e76\u641c\u7d22\u5df2\u7ecf\u5b58\u50a8\u5728*dsPlanner \u4e2d\u7684\u6bcf\u4e2aif\u8bed\u53e5\u4ee5\u5408\u5e76\u5b83\u4eec\u3002\u5982\u679c\u5b66\u5230\u7684*dsPlanner* \u662f\u51c6\u786e\u7684\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u6765\u89e3\u51b3\u57df\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u641c\u7d22\u3002\u5361\u5df4\u62c9\uff08\u5fb7\u62c9\u7f57\u838e\u7b49\u4eba\uff0c2007\uff09\u4f7f\u7528\u542f\u53d1\u5f0f\u8ba1\u5212\u4e2d\u7684\u8ba1\u5212\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\uff08\u79f0\u4e3a\u7c7b\u578b\u5e8f\u5217\uff09\u5bf9\u8282\u70b9\u8fdb\u884c\u6392\u5e8f\u3002\u53e6\u4e00\u4f4d\u57fa\u4e8e\u5b9e\u4f8b\u7684\u5b66\u4e60\u8005REPLICA \u4f7f\u7528\u53d7\u5173\u7cfb\u6570\u636e\u6316\u6398\u4e2d\u4f7f\u7528\u7684\u5ea6\u91cf\u542f\u53d1\u7684\u5173\u7cfb\u8ddd\u79bb\uff0c\u5b9e\u73b0\u4e86\u201c \u6700\u8fd1\u539f\u578b\u5b66\u4e60\u201d \uff08Garcia-Duran\u7b49\u4eba\uff0cress\uff09\u3002OAKPlan\uff08Serina\uff0c2010\u5e74\uff09\u4f7f\u7528\u7d27\u51d1\u7684\u56fe\u5f62\u7ed3\u6784\u6765\u7f16\u7801\u89c4\u5212\u95ee\u9898\u3002\u8be5\u7ed3\u6784\u63d0\u4f9b\u4e86\u89c4\u5212\u95ee\u9898\u62d3\u6251\u7684\u8be6\u7ec6\u63cf\u8ff0\uff0c\u5e76\u5141\u8bb8\u5b66\u4e60\u8005\u57fa\u4e8e\u5185\u6838\u529f\u80fd\u5b9a\u4e49\u9009\u62e9\u6027\u68c0\u7d22\u8fc7\u7a0b\u3002 \u5728\uff08de la Rosa\u7b49\u4eba\uff0c2009\uff09\u4e2d\uff0c\u6700\u8fd1\u63cf\u8ff0\u4e86\u4e00\u79cd\u8ba1\u5212\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u80fd\u591f\u4ece\u4e24\u79cd\u65b9\u6cd5\uff08\u89c4\u5219\u6216\u5b9e\u4f8b\uff09\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u6240\u4ee3\u8868\u7684\u5e7f\u4e49\u653f\u7b56\u4e2d\u53d7\u76ca\u3002\u8be5\u7cfb\u7edf\u67e5\u8be2\u7528\u4e8e\u4fee\u590d\u5bbd\u677e\u8ba1\u5212\u7f3a\u9677\u7684\u7b56\u7565\uff0c\u7136\u540e\u5c06\u6700\u7ec8\u653e\u677e\u7684\u8ba1\u5212\u7528\u4f5c\u201c \u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d \u4e2d\u7684\u57fa\u7840\u5b8f\u64cd\u4f5c\u3002 4. State Of Art\u5b9e\u73b0Generalized Policies \u00b6 \u9009\u62e9\u4e24\u7bc7\u6700\u8fd1\u7684\u6587\u7ae0\uff0c\u4ecb\u7ecd\u73b0\u6709\u4e3b\u8981\u7814\u7a76\u65b9\u6cd5\uff0c\u5176\u4e2d - Generalized Planning With Deep Reinforcement Learning \u901a\u8fc7\u7f16\u7801\u7279\u5f81\u5de5\u7a0b\uff0c\u7136\u540e\u7c7b\u4f3cQ learning\u7684\u51b3\u7b56\u52a8\u4f5c\u7f51\u7edc\u8fdb\u884cpolicy\uff08state--->action\uff09 \u4e0d\u4f9d\u8d56\u4e8e\u89c6\u89c9\u8868\u793a\u6216\u901a\u8fc7\u89c4\u5212\u7b97\u6cd5\u751f\u6210\u7684\u6210\u529f\u8ba1\u5212\uff0c\u800c\u662f\u901a\u8fc7\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u901a\u8fc7\u53cd\u590d\u8bd5\u9a8c\u76f4\u63a5\u4ecePDDL\u8868\u793a\u4e2d\u5b66\u4e60\u95ee\u9898\u3002 PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS \u4e0a\u4e00\u7bc7\u8bba\u6587\u611f\u89c9\u53ef\u89e3\u91ca\u6027\u4e0d\u5f3a\uff0c\u4e0d\u4f1a\u5f88\u9c81\u68d2\uff0c\u6240\u4ee5\u627e\u5230\u8fd9\u7bc7\uff0c\u6211\u8ba4\u4e3apddlgym\u8fd9\u4e2a\u7528\u89c4\u5212\u671f\u6c42\u89e3pddl\u4f1a\u662f\u6253\u901aAI plan\u548cRL\u7684\u6b63\u786e\u6865\u6881\u3002 5. Generalized Planning With Deep Reinforcement Learning \u00b6 5.1. \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u7ecf\u5178\u89c4\u5212 \u53e4\u5178\u8ba1\u5212\u4f7f\u7528\u4eceSTRIPS\u5efa\u6a21\u8bed\u8a00\u6d3e\u751f\u800c\u6765\u7684\u6b63\u5f0f\u63cf\u8ff0\u8bed\u8a00\uff0c\u79f0\u4e3a\u8ba1\u5212\u9886\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09\uff0c\u5b9a\u4e49\u95ee\u9898\u9886\u57df\u53ca\u5176\u76f8\u5e94\u7684\u72b6\u6001\u548c\u76ee\u6807\u3002\u8ba1\u5212\u4efb\u52a1\uff0c\u5b83\u53ef\u4ee5\u7531\u96c6\u5408\uff08F\uff0cO\uff0cI\uff0cG\uff09\u5b9a\u4e49\uff0c\u5176\u4e2d*F*\u662f\u4e00\u7ec4\u547d\u9898\uff08\u6216\u8c13\u8bcd\uff09\uff0c\u5b83\u4eec\u63cf\u8ff0\u4efb\u52a1\u5b9e\u4f8b\u4e2d\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u5c5e\u6027\u53ca\u5176\u5173\u7cfb\uff0c O*\u662f\u4e00\u7ec4\u8fd0\u7b97\u7b26\uff08\u6216\u64cd\u4f5c\u7c7b\u578b\uff09\uff0cICF\u662f\u521d\u59cb\u72b6\u6001\uff0c\u800cGCF\u662f\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u52a8\u4f5c\u7c7b\u578bGO\u90fd\u7531\u4e09\u5143\u7ec4 \uff08Pre\uff08o\uff09\uff0cAdd\uff08o\uff09\uff0cDel\uff08o\uff09\uff09\u5b9a\u4e49\uff0c*\u5176\u4e2d\u524d\u63d0\u4e3a*Pre\uff08o\uff09*\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u5fc5\u987b\u5177\u6709\u6b63\u786e\u7684\u503c\u624d\u80fd\u9002\u7528\u4e8e\u8be5\u64cd\u4f5c\uff0c*Add\uff08o\uff09*\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u5728\u5e94\u7528\u540e\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3a\u771f\uff0c\u800cDel\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3afalse\u6839\u636e\u7533\u8bf7\u3002\u8bd5\u56fe\u627e\u5230\u4e00\u4e2a\u8ba1\u5212\u6216\u4e00\u7cfb\u5217\u884c\u52a8\uff0c\u8fd9\u4e9b\u884c\u52a8\u6216\u884c\u52a8\u5e8f\u5217\u4e00\u65e6\u5e94\u7528\uff0c\u5c31\u4f1a\u5728\u4e00\u5b9a\u65f6\u9650\u6216\u9884\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u5185\u5bfc\u81f4\u72b6\u6001\u4e3a*G*\u7684\u72b6\u6001\u3002\u67e5\u627e\u8ba1\u5212\u4efb\u52a1\u7684\u8ba1\u5212\u901a\u5e38\u662f\u901a\u8fc7**\u542f\u53d1\u5f0f\u641c\u7d22\u65b9\u6cd5**\u6765\u5b8c\u6210\u7684\uff0c\u4f46\u662f\uff0c\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u4e13\u6ce8\u4e8e\u5b66\u4e60\u53cd\u5e94\u5f0f\u8ba1\u5212\u7b56\u7565\uff0c\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u5728\u7279\u5b9a\u9886\u57df\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u540e\u63a8\u5e7f\u5230\u540c\u4e00\u9886\u57df\u4e2d\u65b0\u7684\u770b\u4e0d\u89c1\u7684\u5b9e\u4f8b\u3002 \u5f3a\u5316\u5b66\u4e60 \u4e0d\u540c\u4e8e\u5e38\u89c1\u7684 \\(<S,A,R,P,\\gamma \\text{\u6298\u6263\u7387}>\\) \u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5904\u7406\u987a\u5e8f\u51b3\u7b56\u95ee\u9898\u7684\u5b66\u4e60\u7b56\u7565\u3002 RL\u7b97\u6cd5\u6700\u5e38\u5047\u8bbe\u53ef\u4ee5\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\uff0c\u5728\u6709\u9650\u6c34\u5e73\u60c5\u51b5\u4e0b\u7531\u5143\u7ec4\uff08S\uff0cA\uff0c R\uff0cP \uff0c T \uff0cp\uff09\u5b9a\u4e49\uff0c\u5176\u4e2d*S*\u662f\u72b6\u6001\uff0cA\u662f\u52a8\u4f5c\u96c6\u5408\uff0c R*\u662f\u5c06\u72b6\u6001\u6216\u72b6\u6001\u52a8\u4f5c\u6620\u5c04\u5230\u6807\u91cf\u5956\u52b1\u7684\u5956\u52b1\u51fd\u6570\uff0cP\u662f\u8fc7\u6e21\u6982\u7387\u51fd\u6570\uff0c\u4f7f\u5f97 \\(p\uff08s' | s,a\uff09= P\uff08s'\uff0cs\uff0c a\uff09\\) * \uff08\u786e\u5b9a\u6027\u7b56\u7565\uff09**\uff0cT\u662f\u4efb\u52a1\u8303\u56f4\uff0c*p*\u662f\u521d\u59cb\u72b6\u6001\u7684\u5206\u5e03\u3002 \u5728\u8f83\u5927\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u5e0c\u671b\u5c06\u7684\u7b56\u7565\u8868\u793a\u4e3a\u8868\u683c( Q\u8868\u683c )\uff0c\u56e0\u6b64\u88ab\u8feb\u4f7f\u7528\u51fd\u6570\u903c\u8fd1\u5668\uff08 Deep Q network \u7684target network \uff09\u6765\u8868\u793a\u5e26\u6709\u67d0\u4e9b\u53c2\u6570*6*\u7684\u7b56\u7565*\u3002*\u4e13\u6ce8\u4e8e\u968f\u673a\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u6620\u5c04\u72b6\u6001\u548c\u52a8\u4f5c\u6982\u7387\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8e\u7b56\u7565\u68af\u5ea6\u7684\u65b9\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u91c7\u6837\u4f30\u8ba1\u76ee\u6807\u51fd\u6570\u76f8\u5bf9\u4e8e\u7b56\u7565\u53c2\u6570\u7684\u68af\u5ea6\u3002\u5728\u5b9e\u65bd\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u6837\u672c\u8f68\u8ff9\u8ba1\u7b97\u51fa\u7684\u201c\u4f2a\u635f\u5931\u201d\u7684\u68af\u5ea6\u6765\u4f30\u7b97\u7b56\u7565\u68af\u5ea6 \u8fd1\u7aef\u7b56\u7565\u4f18\u5316\uff08PPO\uff09\u662f\u4e00\u79cd\u57fa\u4e8e\u7b56\u7565\u68af\u5ea6\u7684\u7b97\u6cd5\uff0c\u65e8\u5728\u901a\u8fc7\u5bf9\u6536\u96c6\u5230\u7684\u6570\u636e\u8fdb\u884c\u591a\u6b21\u68af\u5ea6\u66f4\u65b0\uff0c\u7136\u540e\u4e22\u5f03\u5b83\u6765\u6536\u96c6\u66f4\u591a\u6570\u636e\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5229\u7528\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6536\u96c6\u5230\u7684\u6570\u636e\u3002\u4e3a\u4e86\u907f\u514d\u53ef\u80fd\u56e0\u8f83\u5927\u7684\u7b56\u7565\u66f4\u65b0\u800c\u5f15\u8d77\u7684\u7a33\u5b9a\u6027\u95ee\u9898\uff0cPPO\u4f7f\u7528\u7279\u6b8a\u7684\u88c1\u526a\u76ee\u6807\u6765\u963b\u6b62\u5f53\u524d\u7b56\u7565\u4e0e\u6570\u636e\u6536\u96c6\u7b56\u7565\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4ece\u800c\u5b9a\u4e49\u4f18\u5316\u95ee\u9898 5.2. RL\u5b66\u4e60generalized policy \u00b6 5.2.1. state \u7684\u8868\u793a \u00b6 \u9009\u62e9\u5c06\u72b6\u6001\u4e2d\u7684\u72b6\u6001\u8868\u793a\u4e3a\u56fe\u5f62\uff0c\u5e76\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u7ed9\u5b9a\u72b6\u6001\u4e2d\u5bf9\u8c61\u4e4b\u95f4\u7684\u5c5e\u6027\u548c\u5173\u7cfb\u3002\u7684\u6846\u67b6\u5728PDDL\u5efa\u6a21\u8bed\u8a00\u6307\u5b9a\u7684\u95ee\u9898\u57df\u4e0a\u8fd0\u884c\uff0c\u5728\u8be5\u95ee\u9898\u57df\u4e2d\uff0c\u95ee\u9898\u5b9e\u4f8b\u7531\u5bf9\u8c61\u5217\u8868\u548c\u8c13\u8bcd\u5217\u8868\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u63cf\u8ff0\u8fd9\u4e9b\u5bf9\u8c61\u7684\u5c5e\u6027\u4ee5\u53ca\u5f53\u524d\u72b6\u6001\u4e0b\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5c06\u81ea\u5df1\u9650\u5236\u5728\u8c13\u8bcd\u7684Arity\u4e0d\u8d85\u8fc72\u7684\u57df\u4e2d\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u91cd\u5927\u9650\u5236\uff0c\u56e0\u4e3a\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8f83\u9ad8Arity\u8c13\u8bcd\u53ef\u4ee5\u5206\u89e3\u4e3a\u51e0\u4e2a\u8f83\u4f4eArity\u8c13\u8bcd\u3002\u7684\u56fe\u7531\u5168\u5c40\u7279\u5f81\uff0c\u8282\u70b9\u7279\u5f81\u548c\u8fb9\u7f18\u7279\u5f81\u7ec4\u6210\uff0cU\u8868\u793a\u5168\u5c40\u7279\u5f81 \uff0c\u8282\u70b9V\u548c\u8fb9*E\u3002 \u5168\u5c40\u7279\u5f81\u8868\u793a\u95ee\u9898\u5b9e\u4f8b\u6216\u5bf9\u4e8e\u8be5\u57df\u800c\u8a00\u662f\u552f\u4e00\u7684\u5b9e\u4f53\u7684\u5c5e\u6027\uff0c\u4f8b\u5982Blocksworld\u57df\u4e2d\u7684hand\uff0c\u5e76\u7531\u8be5\u57df\u76840-arity \u8c13\u8bcd\u786e\u5b9a\u3002 \u8282\u70b9\u7279\u5f81\u8868\u793a\u57df\u4e2d\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u4f8b\u5982\u5b83\u4eec\u7684\u7c7b\u578b\uff09\uff0c\u5e76\u75311-arity\u8c13\u8bcd\u786e\u5b9a\u3002 \u6700\u540e\uff0c\u8fb9\u7f18\u7279\u5f81\u4ee3\u8868\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u75312 -arity \u8c13\u8bcd\u786e\u5b9a\u3002 \u5f53\u751f\u6210PDDL\u5b9e\u4f8b\u72b6\u6001\u7684\u56fe\u5f62\u8868\u793a\u65f6\uff0c\u5c06\u4e3a\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u8282\u70b9\u7684\u5b8c\u6574\u56fe\u5f62\u3002\u5bf9\u4e8e\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u8c13\u8bcd\uff0c\u5c06\u5bf9\u5e94\u7684\u7279\u5f81\u5206\u914d\u4e3a\u4e8c\u8fdb\u5236\u503c1\uff0c\u5e76\u5047\u5b9a\u6240\u6709\u5176\u4ed6\u7279\u5f81\u5747\u4e3afalse\uff0c\u5176\u503c\u4e3a0\u3002\u4e3a\u4e86\u5c06\u76ee\u6807\u914d\u7f6e\u5305\u62ec\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\u4e2d\uff0c\u76ee\u6807\u8c13\u8bcd\u51e0\u4e4e\u88ab\u89c6\u4e3a\u53e6\u4e00\u4e2a\u72b6\u6001\u56fe\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e24\u4e2a\u56fe\u8fde\u63a5\u5728\u4e00\u8d77\u4ee5\u5f62\u6210\u72b6\u6001\u76ee\u6807\u7684\u5355\u4e2a\u8868\u793a\u5f62\u5f0f\u3002\u72b6\u6001\u56fe\u548c\u76ee\u6807\u56fe\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u76ee\u6807\u56fe\u4e2d\uff0c\u503c\u4e3a0\u7684\u7279\u5f81\u8868\u793a\u6ca1\u6709\u8d21\u732e\u76ee\u6807\uff1b\u5728\u72b6\u6001\u56fe\u4e2d\uff0c\u503c\u4e3a0\u7684\u7279\u5f81\u610f\u5473\u7740\u8c13\u8bcd\u88ab\u5206\u914d\u4e86\u9519\u8bef\u503c\u3002 \u5728\u6574\u4e2a\u5de5\u4f5c\u4e2d\u4f7f\u7528\u7684\u7ecf\u5178\u89c4\u5212\u9886\u57df\u662f\u786e\u5b9a\u6027\u7684\u548c\u9a6c\u5c14\u53ef\u592b\u5f0f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u524d\u72b6\u6001\u62e5\u6709\u6240\u6709\u5fc5\u9700\u7684\u4fe1\u606f\u4ee5\u6700\u4f73\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5c3d\u7ba1\u5177\u6709\u6b64\u5c5e\u6027\uff0c\u53d1\u73b0\u9664\u4e86\u5f53\u524d\u72b6\u6001\u5916\uff0c\u8fc7\u53bb\u7684\u72b6\u6001\u8fd8\u6709\u52a9\u4e8e\u5b66\u4e60\u8fc7\u7a0b\u5e76\u63d0\u9ad8\u5bf9\u8f83\u5927\u5b9e\u4f8b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u5c3d\u7ba1\u8fd9\u4e0d\u662f\u4e25\u683c\u5fc5\u8981\u7684\uff0c\u5b9e\u9a8c\u8868\u660e\uff0c\u6b64\u6b65\u9aa4\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5e2e\u52a9\u653f\u7b56\u7f13\u89e3\u201c\u9891\u7e41\u6765\u6765\u56de\u56de\u201d\u884c\u4e3a\u3002\u6dfb\u52a0\u6b64\u5386\u53f2\u8bb0\u5f55\u5f88\u7b80\u5355\uff1b\u53ea\u9700\u5c06K\u4e2a\u5148\u524d\u72b6\u6001\u548c\u5f53\u524d\u72b6\u6001\u7684\u56fe\u8fde\u63a5\u8d77\u6765\uff0c\u7136\u540e\u5982\u524d\u6240\u8ff0\u5c06\u76ee\u6807\u56fe\u8fde\u63a5\u8d77\u6765\u3002\u6d4b\u8bd5\u4e86\u51e0\u4e2a\u8fd9\u6837\u7684\u5386\u53f2\u89c6\u91ce\uff0c\u53d1\u73b0\u4ec5\u6dfb\u52a0\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u4f1a\u5e26\u6765\u603b\u4f53\u4e0a\u6700\u4f73\u7684\u6027\u80fd\u548c\u901a\u7528\u6027\u3002 \u4e0b\u56fe\u770b\u5230\u6765\u81eaBlocksworld\u57df\u7684\u72b6\u6001\u76ee\u6807\u56fe \u548c\u5177\u67093\u4e2a\u5757\u7684\u5b9e\u4f8b\u3002 5.2.2. graph embeding \u00b6 \u4e3a\u4e86\u4f7f\u7528\u72b6\u6001\u76ee\u6807\u7684\u56fe\u5f62\u8868\u793a\u6765\u5b66\u4e60\u597d\u7684\u7b56\u7565\uff0c\u9996\u5148\u4f7f\u7528\u56fe\u5f62\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u5c06\u56fe\u5f62\u7684\u8282\u70b9\uff0c\u8fb9\u7f18\u548c\u5168\u5c40\u7279\u5f81\u5d4c\u5165\u5230\u5404\u81ea\u7684\u6f5c\u5728\u7a7a\u95f4\u4e2d\u3002GNN\u5728\u56fe\u7684\u4e0d\u540c\u7ec4\u4ef6\u4e4b\u95f4\u6267\u884c\u6d88\u606f\u4f20\u9012\uff0c\u4ece\u800c\u5141\u8bb8\u6709\u7528\u7684\u4fe1\u606f\u6d41\u52a8\u3002\u4f7f\u7528\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684GNN\u5757\uff0c\u6bcf\u79cd\u5757\u90fd\u5728\u56fe\u5185\u5b9e\u65bd\u4e0d\u540c\u6837\u5f0f\u7684\u4fe1\u606f\u6d41\uff0c\u56e0\u6b64\u6bd4\u5176\u4ed6\u7c7b\u578b\u66f4\u9002\u5408\u67d0\u4e9b\u95ee\u9898\u9886\u57df\u3002\u5728\u8fd9\u4e24\u79cd\u7c7b\u578b\u4e2d\uff0c\u66f4\u65b0\u987a\u5e8f\u76f8\u4f3c\uff0c\u5e76\u91c7\u7528\u4ee5\u4e0b\u5e38\u89c1\u5f62\u5f0f\uff1a 1.\u4f7f\u7528\u5148\u524d\u7684\u8fb9\u7f18\u548c\u8fd9\u4e9b\u8fb9\u7f18\u7684\u201c\u539f\u59cb\u201d\u8282\u70b9\u66f4\u65b0\u8fb9\u7f18\u3002 2.\u4f7f\u7528\u5148\u524d\u7684\u8282\u70b9\uff0c\u4f20\u5165\u7684\u66f4\u65b0\u8fb9\u548c\u5168\u5c40\u7279\u5f81\u66f4\u65b0\u8282\u70b9\u3002 3.\u4f7f\u7528\u5148\u524d\u7684\u5168\u5c40\u53d8\u91cf\u548c\u66f4\u65b0\u7684\u8282\u70b9\u7684\u805a\u5408\u6765\u66f4\u65b0\u5168\u5c40\u53d8\u91cf\u3002 \u4f7f\u7528\u7684\u7b2c\u4e00\u79cd\u7c7b\u578b\uff0c\u5c06\u5176\u547d\u540d\u4e3a**Graph Network\u5757**\uff08GN\u5757\uff09\u3002 \u7b2c\u4e8c\u79cd\u7c7b\u578b\u7684\u5757\u65e8\u5728\u89e3\u51b3GN\u5757\u7684\u7f3a\u70b9\uff0c\u5e76\u4e3a\u6b64\u76ee\u7684\u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u6ce8\u673a\u5236\u3002\u5c06\u7b2c\u4e8c\u4e2a\u5757\u547d\u540d\u4e3a**Graph Network Attention\u5757**\uff08GNAT\u5757\uff09\uff0c\u4e0eGraph Attention Network\u4e0d\u540c\uff0c\u5b83\u4f7f\u7528\u7684\u6ce8\u610f\u529b\u673a\u5236\u7c7b\u4f3c\u4e8eTransformer\u6a21\u578b\u3002 5.2.3. Policy \u7684\u8868\u793a \u00b6 \u4e0e\u5e38\u89c4\u7684\u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\u4e0d\u540c\uff0c\u5728\u5e38\u89c4\u7684\u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\u4e2d\uff0c\u4e00\u7ec4\u52a8\u4f5c\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u65b9\u4fbf\u5730\u8fdb\u884c\u5904\u7406\uff0c\u800c\u5728\u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u4e2d\uff0c\u4e00\u7ec4\u52a8\u4f5c\u53d6\u51b3\u4e8e\u72b6\u6001\uff0c\u5e76\u4e14\u72b6\u6001\u4e4b\u95f4\u7684\u5927\u5c0f\u4e0d\u540c\u3002\u5728PDDL\u4e2d\uff0c\u6bcf\u4e2a\u57df\u63cf\u8ff0\u90fd\u5b9a\u4e49\u4e86\u4e00\u7ec4\u52a8\u4f5c\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u8fd9\u4e9b\u52a8\u4f5c\u7c7b\u578b\u7f6e\u4e8e\u72b6\u6001\u57fa\u7840\u4e0a\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002\u6bcf\u79cd\u52a8\u4f5c\u7c7b\u578b\u90fd\u63a5\u6536\u4e00\u7ec4\u53c2\u6570\uff0c\u5e76\u4e14\u4e3a\u4e86\u9002\u7528\uff0c\u8be5\u52a8\u4f5c\u7684\u53c2\u6570\u5fc5\u987b\u7b26\u5408\u4e00\u7ec4\u524d\u63d0\u6761\u4ef6\u3002\u4f8b\u5982\uff0cBlocksworld\u57df\u5177\u6709\u4e00\u79cd\u79f0\u4e3a\u201c\u62fe\u53d6\u201d\u7684\u52a8\u4f5c\u7c7b\u578b\uff0c\u8be5\u52a8\u4f5c\u7c7b\u578b\u5c06\u5355\u4e2a\u5757\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002\u8be5\u5757\u5fc5\u987b\u662f\u201c clear\u201d\uff0c\u201c on-table\u201d\u4e14\u201c arm-empty\u201d\u5c5e\u6027\u5fc5\u987b\u4e3atrue\uff0c\u6b64\u64cd\u4f5c\u624d\u9002\u7528\u3002\u53ef\u4ee5pick-up\u7b26\u5408\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u7684\u6240\u6709\u5757\uff0c\u5e76\u4ee3\u8868\u552f\u4e00\u7684\u52a8\u4f5c\u3002\u9664\u4e86\u5148\u51b3\u6761\u4ef6\u5916\uff0c\u6bcf\u79cd\u52a8\u4f5c\u7c7b\u578b\u8fd8\u5177\u6709\u5728\u5e94\u7528\u52a8\u4f5c\u65f6\u5f15\u8d77\u72b6\u6001\u7684\u6548\u679c\u3002\u5176\u4e2d\u4e00\u4e9b\u5f71\u54cd\u53ef\u80fd\u662f\u6b63\u9762\u7684\uff08\u72b6\u6001\u7684\u67d0\u4e9b\u8c13\u8bcd\u5c06\u91c7\u7528\u771f\u503c\uff09\uff0c\u800c\u67d0\u4e9b\u8d1f\u9762\u5f71\u54cd\uff08\u72b6\u6001\u7684\u8c13\u8bcd\u5c06\u91c7\u7528\u5047\u503c\uff09\u3002 \u5728\u8ba1\u5212\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\u90fd\u4f1a\u7ed9\u51fa\u5f53\u524d\u72b6\u6001\u548c\u9002\u7528\u52a8\u4f5c\u7684\u5217\u8868\u3002\u4e3a\u4e86\u4ee5\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u8868\u793a\u52a8\u4f5c\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u5bf9\u5176\u5b66\u4e60\u7b56\u7565\uff0c\u9009\u62e9\u6309\u7167\u52a8\u4f5c\u7684\u6548\u679c\u6765\u63cf\u8ff0\u52a8\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u662f\u505a\u51fa\u51b3\u7b56\u6240\u5fc5\u9700\u7684\u8981\u7d20\u3002\u7531\u4e8e\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\u5728\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5411\u4ee3\u7406\u63d0\u4f9b\u4e86\u6240\u6709\u6cd5\u5f8b\u8bc9\u8bbc\uff0c\u56e0\u6b64\u5ffd\u7565\u4e86\u524d\u63d0\u6761\u4ef6\uff08\u6240\u6709\u6cd5\u5f8b\u8bc9\u8bbc\u90fd\u6ee1\u8db3\u4e86\u524d\u63d0\u6761\u4ef6\uff09\u3002\u6bcf\u4e2a\u52a8\u4f5c\u90fd\u7531\u51e0\u79cd\u6548\u679c\u7ec4\u6210\uff0c\u6bcf\u79cd\u6548\u679c\u90fd\u6d89\u53ca\u72b6\u6001\u7684\u4e0d\u540c\u65b9\u9762\uff0c\u53ef\u4ee5\u662f\u6b63\u9762\u7684\u4e5f\u53ef\u4ee5\u662f\u8d1f\u9762\u7684\u3002\u6839\u636e\u6548\u679c\u7684\u7c7b\u578b\uff08\u5168\u5c40\u6548\u679c\uff0c\u8282\u70b9\u6548\u679c\u6216\u8fb9\u7f18\u6548\u679c\uff09\u5c06\u6548\u679c\u805a\u5728\u4e00\u8d77\uff0c\u548c\u8868\u793a\u4e3a\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u5d4c\u5165\u548c\u4e00\u4e2a\u70ed\u5411\u91cf\u7684\u4e32\u8054\uff0c\u8be5\u5411\u91cf\u63cf\u8ff0\u54ea\u4e2a\u8c13\u8bcd\u5df2\u66f4\u6539\u4ee5\u53ca\u5176\u4e3a\u6b63\u8fd8\u662f\u8d1f\u3002\u8fd9\u4e2a\u4e00\u5143\u5411\u91cf\u5728\u76f8\u5e94\u8f93\u5165\u5206\u91cf\u7684\u7ef4\u5ea6\u4e0a*\uff08d v*\u4e3a\u4f8b\u5982\u8282\u70b9\u6548\u5e94\uff09\u5e76\u5305\u542b1\u8868\u793a\u6b63\u4f5c\u7528\u6216-1\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u8c13\u8bcd\u7684\u8d1f\u9762\u5f71\u54cd\u3002\u6bcf\u4e2a\u6548\u679c\u90fd\u4f1a\u6839\u636e\u5176\u7c7b\u578b\u7531\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\u8fdb\u884c\u8f6c\u6362\uff0c\u7136\u540e\u5c06\u5df2\u8f6c\u6362\u7684\u6548\u679c\u5206\u6563\u56de\u5176\u539f\u59cb\u52a8\u4f5c\u3002\u5c06\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6548\u679c\u6c47\u603b\u5728\u4e00\u8d77\uff0c\u4ee5\u5f62\u6210\u8be5\u52a8\u4f5c\u7684\u5355\u4e2a\u5411\u91cf\u8868\u793a\uff0c\u6700\u7ec8\u5c06\u5176\u9988\u9001\u5230\u7b56\u7565\u795e\u7ecf\u7f51\u7edc\u3002 \u6700\u7ec8policy\u662fMLP\uff0c\u5b83\u4e3a\u6bcf\u4e2a\u52a8\u4f5c\u8f93\u51fa\u5355\u4e2a\u6807\u91cf\uff0c\u7136\u540e\u901a\u8fc7softmax\u64cd\u4f5c\u5bf9\u8fd9\u4e9b\u6807\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u4ee5\u83b7\u53d6\u52a8\u4f5c\u7684\u79bb\u6563\u5206\u5e03\u3002 \u53e6\u5916\uff0c\u53e6\u4e00\u4e2aMLP\u63d0\u53d6\u56fe\u5f62\u7684\u6700\u7ec8\u5168\u5c40\u7279\u5f81\u5d4c\u5165\u5e76\u8f93\u51fa\u72b6\u6001\u7684\u9884\u6d4b\u503c\uff0c\u4ee5\u7528\u4e8eRL\u7b97\u6cd5\u4e2d\u7684\u4f18\u52bf\u4f30\u8ba1\u3002 5.2.4. training \u00b6 \u7531\u4e8e\u8fd9\u9879\u5de5\u4f5c\u7684\u91cd\u70b9\u662f\u627e\u5230\u53ef\u884c\u7684\u8ba1\u5212\uff0c\u56e0\u6b64\u9009\u62e9\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u5e26\u6709\u4e8c\u5143\u5956\u52b1\u7684\u7a00\u758f\u5956\u52b1\u95ee\u9898\u3002\u5982\u679c\u4ee3\u7406\u6ee1\u8db3\u9884\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u76ee\u6807\uff0c\u5219\u5f97\u52301\u7684\u5956\u52b1\uff0c\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\uff0c\u5219\u6ca1\u6709\u4efb\u4f55\u5956\u52b1\u3002\u4e3a\u4e86\u786e\u5b9a\u9002\u5f53\u7684\u65f6\u9650\uff0c\u4f7f\u7528\u4e86\u5e38\u7528\u7684hff\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u5b83\u89e3\u51b3\u4e86\u7ebf\u6027\u65f6\u95f4\u95ee\u9898\u7684\u677e\u5f1b\u5f62\u5f0f\uff08\u677e\u5f1b\u95ee\u9898\u6ca1\u6709\u8d1f\u9762\u5f71\u54cd\uff09\u3002\u91c7\u7528\u677e\u5f1b\u8ba1\u5212\u7684\u957f\u5ea6\uff0c\u5e76\u5c06\u5176\u4e58\u4ee55\u7684\u5e38\u6570\u4ee5\u83b7\u5f97\u5730\u5e73\u7ebf\u7684\u957f\u5ea6\u3002\u9009\u62e9\u4f7f\u7528PPO\u8bad\u7ec3\u7684\u7b56\u7565 \u66f4\u7b80\u5355\u7684\u65b9\u6cd5 \u6839\u636e\u5b9e\u4f8b\u5927\u5c0f\u7684\u5206\u5e03\u751f\u6210\u4e86\u6bcf\u4e2a\u8bad\u7ec3\u60c5\u8282\uff0c\u5b9e\u4f8b\u5927\u5c0f\u7684\u5206\u5e03\u5c0f\u5230\u8db3\u4ee5\u88ab\u968f\u673a\u521d\u59cb\u5316\u7684\u7b56\u7565\u89e3\u51b3\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u4f7f\u7b56\u7565\u5f97\u4ee5\u53d1\u5c55\uff0c\u6700\u7ec8\u89e3\u51b3\u5206\u53d1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u5927\u5c0f\uff0c\u800c\u65e0\u9700\u624b\u52a8\u8c03\u6574\u8bfe\u7a0b\u8868\u3002\u5c3d\u7ba1\u8bbe\u7f6e\u6b64\u5206\u5e03\u9700\u8981\u624b\u52a8\u5b8c\u6210\uff0c\u4f46\u53d1\u73b0\u901a\u8fc7\u4f7f\u7528\u968f\u673a\u672a\u7ecf\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u7b80\u5355\u7684\u8bd5\u9a8c\u548c\u9519\u8bef\uff0c\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5feb\u6377\u5730\u5b8c\u6210\u6b64\u4efb\u52a1\u3002 \u5bf9\u6807\u51c6PPO\u7b97\u6cd5\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c0f\u8c03\u6574\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u672c\u4f8b\u7684\u6027\u80fd\u3002\u8bb8\u591aRL\u7b97\u6cd5\u7684\u5b9e\u73b0\u4f1a\u5728\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u4e4b\u524d\u9488\u5bf9\u56fa\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u63a8\u51fa\u7b56\u7565\uff0c\u901a\u5e38\u4f1a\u5728\u8fc7\u7a0b\u5b8c\u6210\u4e4b\u524d\u7ec8\u6b62\u60c5\u8282\uff0c\u5e76\u4f7f\u7528\u8bf8\u5982Generalized Advantage Estimation\u548c\u81ea\u4e3e\u503c\u4f30\u8ba1\u4e4b\u7c7b\u7684\u65b9\u6cd5\u6765\u4f30\u8ba1Reward\u3002 \u53d1\u73b0\u8fd9\u4e9b\u5143\u7d20\u4f1a\u7ed9\u7684\u5b66\u4e60\u8fc7\u7a0b\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u504f\u89c1\uff0c\u800c\u662f\u4f7f\u7528\u7ecf\u9a8c\u6027\u56de\u62a5\u800c\u4e0d\u662f\u5f15\u5bfc\u4ef7\u503c\u4f30\u7b97\u6765\u8ba1\u7b97\u4f18\u52bf\uff0c\u4ece\u800c\u9010\u6b65\u63a8\u5e7f\u6bcf\u4e2a\u60c5\u8282\u76f4\u81f3\u7ec8\u6b62\u3002\u8fd8\u53d1\u73b0\uff0c\u4f7f\u7528\u8bb8\u591a\u63a8\u5e7f\u548c\u5927\u6279\u91cf\u751f\u4ea7\u6709\u52a9\u4e8e\u7a33\u5b9a\u5b66\u4e60\u8fc7\u7a0b\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u6700\u7ec8\u6027\u80fd\uff0c\u56e0\u6b64\u8fdb\u884c\u4e86100\u96c6\u7684\u63a8\u5e7f\uff0c\u5e76\u4f7f\u7528\u7ed3\u679c\u6570\u636e\u5728\u6bcf\u6b21\u5b66\u4e60\u8fed\u4ee3\u65f6\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7b97\u6cd5\u3002 5.2.5. \u5b9e\u9a8c \u00b6 \u8bc4\u4f30\u4e86\u4e94\u4e2a\u5e38\u89c1\u7684\u7ecf\u5178\u89c4\u5212\u9886\u57df\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u9886\u57df\u662f\u4eceIPC\u89c4\u5212\u7ade\u8d5b\u96c6\u5408\u4e2d\u9009\u62e9\u7684\uff0c\u5176\u9886\u57df\u8c13\u8bcd\u4e0d\u5927\u4e8e2\uff1a \u2022Blocksworld\uff084 op\uff09\uff1a\u673a\u68b0\u624b\u5fc5\u987b\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u79fb\u52a8\u79ef\u6728\uff0c\u4ee5\u4fbf\u6839\u636e\u76ee\u6807\u914d\u7f6e\u8fdb\u884c\u6392\u5217\u3002 \u2022\u536b\u661f\uff1a\u4e00\u7ec4\u536b\u661f\u5fc5\u987b\u62cd\u6444\u4f4d\u7f6e\u7684\u56fe\u50cf\uff0c\u6bcf\u4e2a\u56fe\u50cf\u90fd\u5177\u6709\u6307\u5b9a\u7c7b\u578b\u7684\u4f20\u611f\u5668\u3002 \u2022\u7269\u6d41\uff1a\u5fc5\u987b\u5c06\u5305\u88f9\u8fd0\u9001\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u4f7f\u7528\u98de\u673a\u548c\u5361\u8f66\u5728\u57ce\u5e02\u548c\u5730\u70b9\u4e4b\u95f4\u79fb\u52a8\u5305\u88f9\u3002 \u2022\u5939\u722a\uff1a\u53cc\u81c2\u673a\u5668\u4eba\u5fc5\u987b\u5c06\u7403\u4eceA\u5ba4\u4f20\u9001\u5230B\u5ba4\u3002 \u2022\u6e21\u8f6e\uff1a\u6e21\u8f6e\u5fc5\u987b\u5c06\u6c7d\u8f66\u4ece\u6700\u521d\u7684\u4f4d\u7f6e\u8fd0\u8f93\u5230\u6307\u5b9a\u7684\u76ee\u6807\u4f4d\u7f6e\u3002 \u8fd9\u4e94\u4e2a\u9886\u57df\u7684\u5171\u540c\u70b9\u5728\u4e8e\uff0c\u53ef\u4ee5\u4e3a\u5b83\u4eec\u5236\u5b9a\u7b80\u5355\u7684\u901a\u7528\u8ba1\u5212\uff0c\u4ece\u800c\u80fd\u591f\u89e3\u51b3\u4efb\u610f\u5927\u7684\u5b9e\u4f8b\u3002 \u5e0c\u671b\u8bc1\u660e\u7684\u65b9\u6cd5\u80fd\u591f\u4ea7\u751f\u89e3\u51b3\u6bd4\u5b9e\u4f8b\u5927\u5f97\u591a\u7684\u5b9e\u4f8b\u7684\u7b56\u7565\uff0c\u4ece\u800c\u81ea\u52a8\u53d1\u73b0\u8fd9\u6837\u7684\u5e7f\u4e49\u8ba1\u5212\u3002\u6709\u4e9b\u9886\u57df\u6bd4\u5176\u4ed6\u9886\u57df\u5bb9\u6613\uff0c\u5e76\u4e14\u5728\u5e7f\u4e49\u8ba1\u5212\u5f88\u5bb9\u6613\u63cf\u8ff0\u7684\u60c5\u51b5\u4e0b\uff0c\u7ecf\u5e38\u76ee\u7779\u8be5\u653f\u7b56\u975e\u5e38\u6210\u529f\u5730\u63a8\u5e7f\u3002\u4f8b\u5982\uff0cGripper\u57df\u5177\u6709\u975e\u5e38\u7b80\u5355\u7684\u7b56\u7565\uff08\u6bcf\u6b21\u5230B\u5ba4\u90fd\u6293\u4f4f2\u4e2a\u7403\uff09\uff0c\u5b9e\u9645\u4e0a\u7684\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u4e86\u6700\u4f73\u7b56\u7565\uff0c\u5373\u4f7f\u5bf9\u4e8e\u6570\u767e\u4e2a\u7403\u7684\u5b9e\u4f8b\uff0c\u901a\u5e38\u4ecd\u7136\u8868\u73b0\u6700\u4f73\u3002\u4e3a\u4e86\u8bc1\u660e\u7684\u653f\u7b56\u786e\u5b9e\u80fd\u5f88\u597d\u5730\u63a8\u5e7f\uff0c \u2022\u5bf9\u4e8eBlocksworld\u57df\uff0c\u57284\u4e2a\u5757\u7684\u5b9e\u4f8b\u4e0a\u8bad\u7ec3\u4e86\u7684\u7b56\u7565\uff0c\u5e76\u57285-100\u4e2a\u5757\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 \u2022\u5bf9\u4e8e\u201c\u536b\u661f\u201d\u9886\u57df\uff0c\u5bf9\u4f7f\u75281-3\u9897\u536b\u661f\uff0c\u6bcf\u9897\u536b\u661f1-3\u53f0\u4eea\u5668\uff0c1-3\u79cd\u4eea\u5668\uff0c2-3\u4e2a\u76ee\u6807\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u653f\u7b56\u57f9\u8bad\uff0c\u5e76\u9488\u5bf9\u4f7f\u75281-14\u9897\u536b\u661f\uff0c2-11\u53f0\u4eea\u5668\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u6bcf\u4e2a\u536b\u661f\uff0c1-6\u79cd\u4eea\u5668\u548c2-42\u4e2a\u76ee\u6807\u3002 \u2022\u5bf9\u4e8e\u7269\u6d41\u9886\u57df\uff0c\u9488\u5bf9\u4f7f\u75282-3\u67b6\u98de\u673a\uff0c2-3\u4e2a\u57ce\u5e02\uff0c\u6bcf\u4e2a\u57ce\u5e022-3\u4e2a\u5730\u70b9\uff0c1-2\u4e2a\u5305\u88f9\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u7684\u7b56\u7565\uff0c\u5e76\u8bc4\u4f30\u4e86\u4f7f\u75284-12\u67b6\u98de\u673a\uff0c4-15\u4e2a\u57ce\u5e02\uff0c1\u4e2a\u5b9e\u4f8b\u7684\u5b9e\u4f8b\u6bcf\u4e2a\u57ce\u5e02-6\u4e2a\u5730\u70b9\u548c8-40\u4e2a\u5305\u88f9\u3002 \u2022\u5bf9\u4e8eGripper\u57df\uff0c\u9488\u5bf93\u4e2a\u7403\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u7684\u7b56\u7565\uff0c\u5e76\u9488\u5bf95-200\u4e2a\u7403\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 \u2022\u5bf9\u4e8eFerry\u57df\uff0c\u9488\u5bf9\u5177\u67093-4\u4e2a\u4f4d\u7f6e\uff0c2-3\u4e2a\u6c7d\u8f66\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u7684\u7b56\u7565\uff0c\u5e76\u9488\u5bf9\u5177\u67094-40\u4e2a\u4f4d\u7f6e\u548c2-120\u4e2a\u6c7d\u8f66\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 5.2.5.1. \u5b9e\u9a8c\u8bbe\u5b9a \u00b6 \u4e3a\u4e86\u8bad\u7ec3\u7684\u7b56\u7565\uff0c\u4f9d\u9760\u5b9e\u4f8b\u751f\u6210\u5668\u6765\u4ea7\u751f\u968f\u673a\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u7684\u65b9\u6cd5\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6240\u6709\u7b56\u7565\u90fd\u7ecf\u8fc71000\u6b21\u8fed\u4ee3\u8bad\u7ec3\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u6709100\u4e2a\u8bad\u7ec3\u60c5\u8282\u548c\u591a\u8fbe20\u4e2a\u6e10\u53d8\u66f4\u65b0\u6b65\u9aa4\u3002\u5b9e\u9a8c\u662f\u5728\u4e00\u53f0\u88c5\u6709i7-8700K\u5904\u7406\u5668\u548c\u4e00\u4e2aNVIDIA GTX 1070 GPU\u7684\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u7684\u3002\u5bf9\u6240\u6709\u4e94\u4e2a\u57df\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u8bad\u7ec3\u8d85\u53c2\u6570\uff0c\u4f46\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7565\u6709\u4e0d\u540c\u3002\u4f7f\u7528\u4e86256\u4e2a\u9690\u85cf\u8868\u793a\u5f62\u5f0f\u548cReLU\u6fc0\u6d3b\uff0c\u4e00\u4e2a\u5b66\u4e60\u73870.0001\uff0c\u4e00\u4e2a\u6298\u73b0\u56e0\u5b500.99\uff0c\u4e00\u4e2a\u71b5\u5956\u52b10.01\uff0c\u4e00\u4e2a\u526a\u5207\u6bd40.2\u548c\u4e00\u4e2aKL\u53d1\u6563\u89d2\u53c2\u65700.01\u3002\u5bf9\u4e8eBlocksworld\u548cGripper\u57df\uff0c\u4f7f\u7528\u4e86\u4e24\u5c42GNN\uff0c\u4e24\u5c42\u90fd\u662fGN\u5757\u7c7b\u578b\uff0c\u5bf9\u4e8eSatellite\uff0c\u6e21\u8f6e\u548c\u7269\u6d41\u9886\u57df\uff0c\u4f7f\u7528\u4e86\u4e24\u5c42GNN\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2aGNAT\u5757\u548c\u4e00\u4e2aGN\u5757\u3002\u7684\u4ee3\u7801\u662f\u7528Python\u5b9e\u73b0\u7684\uff0c\u800c\u795e\u7ecf\u7f51\u7edc\u548c\u5b66\u4e60\u7b97\u6cd5\u662f\u4f7f\u7528PyTorch\u5b9e\u73b0\u7684\u3002 \u8bc4\u4f30\u91cd\u70b9\u662f\u89e3\u51b3\u5e7f\u4e49\u89c4\u5212\u57df\u7684\u5927\u578b\u5b9e\u4f8b\uff0c\u5e76\u5c06\u4e0e\u7ecf\u5178\u89c4\u5212\u5668\u8fdb\u884c\u6bd4\u8f83\u3002\u9009\u62e9\u4e86\u66f4\u901a\u7528\u7684\u57fa\u51c6\u7ecf\u5178\u8ba1\u5212\u5668\u7684\u5f62\u5f0f\uff0c\u5982\u679c\u6709\u8db3\u591f\u7684\u65f6\u95f4\u548c\u5185\u5b58\uff0c\u5b83\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u95ee\u9898\u3002\u4e0e**Fast-Downward**\u5bf9\u6bd4\uff0c\u8fd9\u662f\u6700\u65b0\u7684\u6846\u67b6\u3002\u7684\u65b9\u6cd5\u4f7f\u7528Pyper plan\u4f5c\u4e3a\u6a21\u578b\u548c\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\uff0c\u5b83\u662f\u57fa\u4e8ePython\u7684\u6846\u67b6\u3002\u4f7f\u7528LAMA\u4f18\u5148\u914d\u7f6e\u4f5c\u4e3a\u5feb\u901f\u5411\u4e0b\u7684\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5b83\u662f\u6027\u80fd\u6700\u9ad8\u7684\u7ade\u4e89\u6027\u6ee1\u610f\u8ba1\u5212\u7b97\u6cd5\u3002 5.2.5.2. \u5b9e\u9a8c\u7ed3\u679c \u00b6 \u73b0\u5728\uff0c\u4ecb\u7ecd\u7684\u7ed3\u679c\u3002 \u56fe\u4e2d\u4e0e\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u4e94\u4e2a\u57df\u7684\u6bd4\u8f83\u3002\u8fd9\u4e9b\u56fe\u663e\u793a\u4e86\u6210\u529f\u7387\u4e0e\u6269\u5c55\u72b6\u6001\u6570\u7684\u51fd\u6570\u5173\u7cfb\uff0c\u5e76\u8868\u660e\u4e0e5\u4e2a\u57df\u4e2d\u76844\u4e2a\u9886\u57df\u7684\u7ecf\u5178\u89c4\u5212\u5668\u76f8\u6bd4\uff0c\u65b9\u6cd5\u786e\u5b9e\u6709\u5229\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u7684\u653f\u7b56\u666e\u904d\u63a8\u5e7f\u76844\u4e2a\u9886\u57df\u4e2d\uff0cGBFS-GNN\u51e0\u4e4e\u4e0d\u9700\u8981\u641c\u7d22\u3002\u5728\u8fd9\u4e9b\u9886\u57df\u4e2d\uff0c\u9664\u4e86\u6700\u56f0\u96be\u7684\u60c5\u51b5\u5916\uff0c\u53ea\u8981\u8d2a\u5a6a\u5730\u9075\u5faa\u7b56\u7565\u5373\u53ef\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002\u641c\u7d22\u7b97\u6cd5\u5efa\u7acb\u5728\u8fd9\u79cd\u6cdb\u5316\u80fd\u529b\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u5728\u641c\u7d22\u65f6\u4f7f\u7528\u4e86\u5c11\u91cf\u7684\u5b8c\u6574\u7b56\u7565\u90e8\u7f72\u3002 \u56fe\u4e2d\u6bd4\u8f83\u672c\u6587\u65b9\u6cd5\u548cFD planner\u65b9\u6cd5\uff0c\u5e76\u9488\u5bf9\u7ed9\u5b9a\u7684\u8fd0\u884c\u65f6\u95f4\u7ed8\u5236\u4e86\u6210\u529f\u7387\u3002\u53ef\u4ee5\u770b\u5230\u5728\u4e00\u4e2a\u9886\u57df\uff08Blocksworld\uff09\u4e2d\u514b\u670d\u4e86\u5b83\uff0c\u800c\u5728\u5176\u4ed6\u4e09\u4e2a\u9886\u57df\u4e2d\u5c06\u5176\u7d27\u5bc6\u5339\u914d\u3002\u5c3d\u7ba1GBFS-GNN\u4f7f\u7528\u7684\u540e\u7ee7\u72b6\u6001\u548c\u6cd5\u5f8b\u884c\u52a8\u751f\u6210\u5668\u7684\u901f\u5ea6\u6bd4\u5feb\u901f\u5411\u4e0b\u7684\u901f\u5ea6\u6162\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u4f46\u7684\u65b9\u6cd55\u7684\u6cdb\u5316\u80fd\u529b\u4f7f\u5176\u4e0e\u7ecf\u5178\u8ba1\u5212\u7a0b\u5e8f\u7684\u6700\u65b0\u5b9e\u73b0\u65b9\u5f0f\u76f8\u6bd4\u5177\u6709\u7ade\u4e89\u529b\u3002 \u65b9\u6cd5\u7684\u6cdb\u5316\u6027\u80fd\u7684\u4e00\u4e2a\u660e\u663e\u4f8b\u5916\u662f\u7269\u6d41\u9886\u57df\u3002\u7269\u6d41\u57df\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u4e2d\u7684\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u5305\u542b\u66f4\u7d27\u5bc6\u7684\u8026\u5408\u3002\u4f8b\u5982\uff0c\u5728\u201c\u536b\u661f\u201d\u57df\u4e2d\uff0c\u4ece\u7b56\u7565\u53ef\u4ee5\u5177\u6709\u591a\u4e2a\u201c\u534a\u719f\u201d\u76ee\u6807\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u800c\u4e0d\u4f1a\u53d7\u5230\u5e72\u6270\u7684\u610f\u4e49\u4e0a\u8bf4\uff0c\u6821\u51c6\u4eea\u5668\u6216\u5bf9\u76ee\u6807\u6210\u50cf\u4e0d\u4f1a\u5e72\u6270\u5176\u4ed6\u536b\u661f\u3002\u5728\u7269\u6d41\u9886\u57df\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u5305\u88f9\u90fd\u5171\u4eab\u5361\u8f66\u548c\u98de\u673a\uff0c\u5e76\u4e14\u79fb\u52a8\u7279\u5b9a\u5361\u8f66\u6765\u6361\u62fe\u5305\u88f9\u53ef\u80fd\u4f1a\u5e72\u6270\u539f\u672c\u6253\u7b97\u5728\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u6361\u62fe\u7684\u53e6\u4e00\u4e2a\u5305\u88f9\u3002 6. PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS \u00b6 6.1. abstract \u00b6 \u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ecePDDL\u57df\u548c\u95ee\u9898\u81ea\u52a8\u6784\u5efaOpenAI Gym\u73af\u5883\u7684\u6846\u67b6\u3002PDDLGym\u4e2d\u7684\u89c2\u5bdf\u548c\u52a8\u4f5c\u662f\u5173\u7cfb\u6027\u7684\uff0c\u8fd9\u4f7f\u5f97\u8be5\u6846\u67b6\u7279\u522b\u9002\u5408\u4e8e\u5173\u7cfb\u5f3a\u5316\u5b66\u4e60\u548c\u5173\u7cfb\u987a\u5e8f\u51b3\u7b56\u7684\u7814\u7a76\u3002PDDLGym\u8fd8\u53ef\u7528\u4f5c\u901a\u7528\u6846\u67b6\uff0c\u7528\u4e8e\u901a\u8fc7\u7b80\u6d01\uff0c\u719f\u6089\u7684\u89c4\u8303\u8bed\u8a00\u5feb\u901f\u6784\u5efa\u4f17\u591a\u591a\u6837\u7684\u57fa\u51c6\u3002\u8ba8\u8bba\u4e86\u8bbe\u8ba1\u51b3\u7b56\u548c\u5b9e\u65bd\u7ec6\u8282\uff0c\u5e76\u6839\u636e\u89c4\u5212\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\u8bf4\u660e\u4e8620\u79cd\u5185\u7f6e\u73af\u5883\u4e4b\u95f4\u7684\u7ecf\u9a8c\u5dee\u5f02\u3002\u5e0c\u671bPDDLGym\u5c06\u4fc3\u8fdb\u5f3a\u5316\u5b66\u4e60\u793e\u533a\uff08Gym\u7684\u8bde\u751f\uff09\u548cAI\u89c4\u5212\u793e\u533a\uff08\u4ea7\u751fPDDL\uff09\u4e4b\u95f4\u7684\u6865\u6881\u3002 \u4e00\u4e2a\u5c06Gym\u548cPDDL\u7684\u5143\u7d20\u7ed3\u5408\u5728\u4e00\u8d77\u7684\u5f00\u6e90\u6846\u67b6\u3002 PDDLGym\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef\u6839\u636ePDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u81ea\u52a8\u521b\u5efaGym\u73af\u5883\u3002 \u8be5\u5e93\u4f4d\u4e8e https://github.com/tomsilver/pddlgym\u3002 \u4e0eGym\u4e00\u6837\uff0cPDDLGym\u5141\u8bb8\u4ee3\u7406\u4e0e\u73af\u5883\u4e4b\u95f4\u53d1\u751f\u5468\u671f\u6027\u7684\u95ed\u73af\u4ea4\u4e92\u3002\u7279\u5de5\u4f1a\u4ece\u73af\u5883\u4e2d\u63a5\u6536\u5230\u4e00\u4e2a\u89c2\u5bdf\u7ed3\u679c\uff0c\u5e76\u505a\u51fa\u884c\u52a8\uff0c\u91cd\u590d\u6b64\u5faa\u73af\u76f4\u5230\u60c5\u8282\u7ed3\u675f\u3002\u50cf\u5728PDDL\u4e2d\u4e00\u6837\uff0cPDDLGym\u4ece\u6839\u672c\u4e0a\u662f\u76f8\u5173\u7684\uff1a\u89c2\u5bdf\u662f\u5bf9\u8c61\u4e0a\u7684\u5730\u9762\u5173\u7cfb\u96c6\uff08\u4f8b\u5982\uff0c\u5728\uff08\u76d8\u5b50\uff0c\u684c\u5b50\u4e0a\uff09\uff09\uff0c\u52a8\u4f5c\u662f\u4e0e\u5bf9\u8c61\u4e00\u8d77\u63a5\u5730\u7684\u6a21\u677f\uff08\u4f8b\u5982pick\uff08\u76d8\u5b50\uff09\uff09\u3002\u56e0\u6b64\uff0cPDDLGym\u7279\u522b\u9002\u5408\u7528\u4e8e\u5173\u7cfb\u5b66\u4e60\u548c\u987a\u5e8f\u51b3\u7b56\u7814\u7a76\u3002 \u5f3a\u5316\u5b66\u4e60\u4e2d\u4f7f\u7528\u7684Gym API\u5b9a\u4e49\u4e86\u4ee3\u7406\u4e0e\u73af\u5883\u4e4b\u95f4\u7684\u786c\u6027\u754c\u9650\u3002\u7279\u522b\u662f\uff0c\u4ee3\u7406*\u4ec5*\u901a\u8fc7\u91c7\u53d6\u884c\u52a8\u5e76\u63a5\u6536\u89c2\u5bdf\u7ed3\u679c\u6765\u4e0e\u73af\u5883\u4ea4\u4e92\u3002\u73af\u5883\u6267\u884c\u4e00\u4e2a\u529f\u80fd\u6b65\u9aa4\uff0c\u8be5\u529f\u80fd\u6b65\u9aa4\u4f7f\u4ee3\u7406\u8d4b\u4e88\u7684\u64cd\u4f5c\u4f7f\u72b6\u6001\u524d\u8fdb\uff1b\u6b65\u9aa4\u5b9a\u4e49\u73af\u5883\u7684\u8fc7\u6e21\u6a21\u578b\u3002\u540c\u6837\uff0cPDDL\u57df\u901a\u8fc7\u5176\u8fd0\u7b97\u7b26\u5bf9\u8f6c\u6362\u6a21\u578b\u8fdb\u884c\u7f16\u7801\u3002\u4f46\u662f\uff0c\u5728\u5178\u578b\u7528\u6cd5\u4e2d\uff0cPDDL\u88ab\u7406\u89e3\u4e3a\u5b8c\u5168\u5b58\u5728\u4e8e\u4ee3\u7406\u7684\u201c\u601d\u60f3\u201d\u4e2d\u3002\u7136\u540e\uff0c\u4e00\u4e2a\u5355\u72ec\u7684\u8fc7\u7a0b\u8d1f\u8d23\u5c06\u8ba1\u5212\u8f6c\u53d8\u4e3a\u4ee3\u7406\u53ef\u4ee5\u5728\u4e16\u754c\u8303\u56f4\u5185\u6267\u884c\u7684\u52a8\u4f5c\u3002 PDDLGym\u8fdd\u53cd\u4e86\u8fd9\u4e00\u7ea6\u5b9a\uff1a\u5728PDDLGym\u4e2d\uff0cPDDL\u57df\u548c\u95ee\u9898\u7262\u56fa\u5730\u4f4d\u4e8e\u4ee3\u7406\u7a0b\u5e8f-\u73af\u5883\u8fb9\u754c\u7684\u73af\u5883\u4fa7\u3002\u73af\u5883\u4f7f\u7528PDDL\u6587\u4ef6\u6765\u5b9e\u73b0\u6b65\u9aa4\u529f\u80fd\uff0c\u8be5\u529f\u80fd\u53ef\u5728\u7ed9\u5b9a\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u63d0\u5347\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u6700\u597d*\u5c06*PDDLGym\u7406\u89e3\u4e3aPDDL\u7684\u76ee\u7684\u3002\u5728\u5b9e\u73b0\u65b9\u9762\uff0c\u6b64\u7528\u9014\u5177\u6709\u5fae\u5999\u4f46\u91cd\u8981\u7684\u542b\u4e49\u3002 \u56fe1\uff1a**\u5728PDDLGym\u4e2d\u5b9e\u73b0\u7684\u4e00\u4e9b\u73af\u5883\u793a\u4f8b\u3002**\u4ece\u5de6\u4e0a\u65b9\uff1a\u63a8\u7bb1\u5b50\uff0c\u6cb3\u5185\uff0c\u8857\u533a\uff0c\u65c5\u884c\u63a8\u9500\u5458\uff08TSP\uff09\uff0c\u6ed1\u74e6\u548c\u624b\u5de5\u5236\u4f5c\u3002 \u56fe2\uff1a**PDDLGym\u4ee3\u7801\u793a\u4f8b\u3002**PDDLGym\u73af\u5883\u7684\u7279\u5f81\u5728\u4e8ePDDL\u57df\u6587\u4ef6\u548cPDDL\u95ee\u9898\u6587\u4ef6\u5217\u8868\u3002\uff08A\uff09PDDL\u57df\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u64cd\u4f5c\u7b26\u3002\uff08B\uff09\u4e00\u6bb5\u7b80\u5355\u7684PDDL\u95ee\u9898\u6587\u4ef6\u7684\u6458\u5f55\u3002\uff08C\uff09\u5728\u4f7f\u7528PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u6ce8\u518c\u540d\u79f0\u4e3a\u201c PDDLEnvBlocks-v0\u201d\u7684\u73af\u5883\u4e4b\u540e\uff0c\u53ea\u9700\u51e0\u884cPython\u5c31\u53ef\u4ee5\u4e0e\u6b64PDDLGym\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u3002 PDDLGym\u5177\u6709\u4e09\u4e2a\u4e3b\u8981\u7528\u9014\uff1a \uff081\uff09\u4fc3\u8fdb\u4e3a\u5173\u7cfb\u57df\u4e2d\u7684\u987a\u5e8f\u51b3\u7b56\u521b\u5efa\u4f17\u591a\u591a\u6837\u7684\u57fa\u51c6 \uff082\uff09 \u6865\u6881\u52a0\u56fa\u5b66\u4e60\u4e0e\u89c4\u5212\u7814\u7a76 \uff083\uff09 \u4fc3\u8fdb\u5173\u7cfb\u9886\u57df\u4e2d\u987a\u5e8f\u51b3\u7b56\u7684\u7814\u7a76 \u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u5b89\u6392\u5982\u4e0b\u3002\u7b2c2\u8282\u8ba8\u8bba\u4e86PDDLGym\u7684\u8bbe\u8ba1\u51b3\u7b56\u548c\u5b9e\u73b0\u7ec6\u8282\u3002\u6982\u8ff0\u4e86\u5185\u7f6e\u7684PDDLGym\u57df\uff0c\u5e76\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u7ecf\u9a8c\u7ed3\u679c\uff0c\u4ee5\u8bf4\u660e\u5b83\u4eec\u5728\u89c4\u5212\u548c\u5b66\u4e60\u96be\u5ea6\u65b9\u9762\u7684\u591a\u6837\u6027\u3002\u6700\u540e\u8ba8\u8bba\u4e86\u6269\u5c55\u548c\u6539\u8fdbPDDLGym\u7684\u9014\u5f84\u3002 Gym API\u4f7f\u7528\u4e09\u79cd\u57fa\u672c\u65b9\u6cd5\u5c06\u73af\u5883\u5b9a\u4e49\u4e3aPython\u7c7b\uff1a init \uff0c\u7528\u4e8e\u521d\u59cb\u5316\u73af\u5883\uff1b reset \uff0c\u5f00\u59cb\u65b0\u7684\u60c5\u8282\u5e76\u8fd4\u56de\u89c2\u5bdf\u503c\uff1b step \uff08\u6b65\u9aa41\uff09\uff0c\u5b83\u4ece\u4ee3\u7406\u91c7\u53d6\u884c\u52a8\uff0c\u524d\u8fdb\u5f53\u524d\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u89c2\u5bdf\u503c\uff0c\u5956\u52b1\uff0c\u6307\u793a\u60c5\u8282\u662f\u5426\u5b8c\u6210\u7684\u5e03\u5c14\u503c\u4ee5\u53ca\u53ef\u9009\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 API\u8fd8\u5305\u62ec\u5176\u4ed6\u6b21\u8981\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c\u5904\u7406\u6e32\u67d3\u548c\u968f\u673a\u79cd\u5b50\u3002\u53c2\u89c1PDDLGym Github\u5b58\u50a8\u5e93\u4e2d \u7684\u81ea\u8ff0\u6587\u4ef6 \u3002 \u6700\u540e\uff0c\u9700\u8981\u5728Gym\u73af\u5883\u4e2d\u5b9e\u73b0\u4e00\u4e2a**action_space**\uff08\u4ee3\u8868\u53ef\u80fd\u7684\u52a8\u4f5c\u7684\u7a7a\u95f4\uff09\u548c\u4e00\u4e2a**observation_space**\uff08\u4ee3\u8868\u53ef\u80fd\u7684\u89c2\u5bdf\u7684\u7a7a\u95f4\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u5c06\u7b80\u8981\u6982\u8ff0PDDL\u6587\u4ef6\uff0c\u7136\u540e\u63cf\u8ff0\u5982\u4f55\u5728PDDLGym\u4e2d\u5b9a\u4e49\u52a8\u4f5c\u548c\u89c2\u5bdf\u7a7a\u95f4\u3002 \u518d\u8005\uff0c\u5c06\u8ba8\u8bba\u4e09\u79cd\u57fa\u672c\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002\u6709\u5173PDDLGym\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u8bf7\u53c2\u89c1\u4ee3\u7801\u4e2d\u7684**structs.py**\u3002 6.1.1. \u521d\u59cb\u5316\u548c\u91cd\u7f6e\u73af\u5883 \u00b6 PDDLGym\u73af\u5883\u7531PDDL\u57df\u6587\u4ef6\u548cPDDL\u95ee\u9898\u6587\u4ef6\u5217\u8868\u6765\u53c2\u6570\u5316\u3002\u4e3a\u4e86\u4fbf\u4e8e\u7814\u7a76\uff0c\u6bcf\u4e2aPDDLGym\u73af\u5883\u90fd\u4e0e\u8be5\u73af\u5883\u7684*\u6d4b\u8bd5*\u7248\u672c\u76f8\u5173\u8054\uff0c\u5176\u4e2d\u57df\u6587\u4ef6\u662f\u76f8\u540c\u7684\uff0c\u4f46\u95ee\u9898\u6587\u4ef6\u662f\u4e0d\u540c\u7684\uff08\u4f8b\u5982\uff0c\u5b83\u4eec\u53ef\u4ee5\u5bf9\u66f4\u590d\u6742\u7684\u8ba1\u5212\u4efb\u52a1\u8fdb\u884c\u7f16\u7801\uff0c\u4ee5\u8861\u91cf\u53ef\u6982\u62ec\u6027\uff09\u3002\u5728\u73af\u5883\u521d\u59cb\u5316\u671f\u95f4\uff0c\u6240\u6709\u7684PDDL\u6587\u4ef6\u90fd\u88ab\u89e3\u6790\u4e3aPython\u5bf9\u8c61\u3002 \u4e3a\u6b64\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49PDDL\u89e3\u6790\u5668\u3002\u8c03\u7528reset\u65f6\uff0c\u5c06\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u95ee\u9898\u5b9e\u4f8b\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0creset\u8fd8\u8fd4\u56de\uff08\u5728\u8c03\u8bd5\u4fe1\u606f\u4e2d\uff09\u6307\u5411\u5f53\u524d\u60c5\u8282\u7684PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u7684\u8def\u5f84\u3002\u8fd9\u4f7f\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u4f7f\u7528\u7b26\u53f7\u8ba1\u5212\u5668\u5e76\u5728\u73af\u5883\u4e2d\u6267\u884c\u751f\u6210\u7684\u8ba1\u5212\u3002 \u5bf9\u4e8e\u6bcf\u79cd\u73af\u5883\uff0c\u4ee3\u7406\u90fd\u4f1a\u9488\u5bf925\u7ea7baseline\u6267\u884c\u968f\u673a\u7b56\u7565\u3002\u89c2\u5bdf\u5230\u7684\u8fc7\u6e21\u5c06\u7528\u4e8e\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\uff0c\u7136\u540e\u5c06\u5176\u7528\u4e8e\u4e00\u7cfb\u5217\u6d4b\u8bd5\u95ee\u9898\u7684\u8ba1\u5212\u3002\u6240\u62a5\u544a\u7684\u5df2\u89e3\u51b3\u6d4b\u8bd5\u95ee\u9898\u7684\u6bd4\u4f8b\u88ab\u62a5\u544a\u4e3a\u5b66\u4e60\u7684\u8fc7\u6e21\u6a21\u578b\u7684\u6307\u6807\u3002\u4e3a\u4e86\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\uff0c\u4f7f\u7528\u4e00\u9636\u903b\u8f91\u51b3\u7b56\u6811\uff08FOLDT\uff09\u5b66\u4e60\u3002 6.1.2. \u5b9e\u65bdstep\u65b9\u6cd5 \u00b6 PDDLGym\u73af\u5883\u7684step\u65b9\u6cd5\u91c7\u53d6\u4e00\u4e2a\u52a8\u4f5c\uff0c\u66f4\u65b0\u73af\u5883\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u89c2\u5bdf\uff0c\u5956\u52b1\uff0c\u5b8c\u6210\u7684\u5e03\u5c14\u503c\u548c\u8c03\u8bd5\u4fe1\u606f\u3002\u4e3a\u4e86\u786e\u5b9a\u72b6\u6001\u66f4\u65b0\uff0cPDDLGym\u68c0\u67e5\u7ed9\u5b9a\u5f53\u524d\u72b6\u6001\u548c\u64cd\u4f5c\u662f\u5426\u6ee1\u8db3\u4efb\u4f55PDDL\u8fd0\u7b97\u7b26\u7684\u5148\u51b3\u6761\u4ef6\u3002 precondition satisfaction check is nontrivial\uff1bnon-free parameters must be bound. \u3002 \u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e24\u4e2a\u63a8\u7406\u540e\u7aef\u6765\u6267\u884c\u6b64\u68c0\u67e5\u3002 \u7b2c\u4e00\u4e2a\u662f\u7c7b\u578b\u5316SLD\u89e3\u6790\u7684Python\u5b9e\u73b0\uff0c\u5f53\u67e5\u8be2\u4ec5\u6d89\u53ca\u8fde\u63a5\u65f6\uff0c\u8fd9\u662f\u9ed8\u8ba4\u9009\u62e9\u3002 \u7b2c\u4e8c\u4e2a\u662fSWI Prolog \u63a5\u53e3\u5c01\u88c5\uff0c\u5b83\u4f7f\u80fd\u591f\u5904\u7406\u6d89\u53ca\u6790\u53d6\u548c\u91cf\u8bcd\u7684\u66f4\u590d\u6742\u7684\u524d\u63d0\u6761\u4ef6\u3002\u540e\u8005\u6bd4\u524d\u8005\u66f4\u6162\uff0c\u4f46\u66f4\u901a\u7528\u3002\u5f53\u6ca1\u6709\u64cd\u4f5c\u5458\u524d\u63d0\u6ee1\u8db3\u7ed9\u5b9a\u64cd\u4f5c\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u72b6\u6001\u4fdd\u6301\u4e0d\u53d8\u3002\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u5148\u51b3\u6761\u4ef6\uff0c\u5219\u53ef\u80fd\u4f1a\u5f15\u53d1\u9519\u8bef\uff1b\u53ef\u9009\u7684\u521d\u59cb\u5316\u53c2\u6570raise_error_on_invalid_action\u5141\u8bb8\u6b64\u884c\u4e3a\u3002 PDDLGym\u4e2d\u7684\u5956\u52b1\u662f\u7a00\u758f\u7684\u548c\u4e8c\u8fdb\u5236\u7684\u3002\u7279\u522b\u5730\uff0c\u5f53\u8fbe\u5230\u95ee\u9898\u76ee\u6807\u65f6\uff0c\u5956\u52b1\u4e3a1.0\uff0c\u5426\u5219\u4e3a0.0\u3002\u540c\u6837\uff0c\u8fbe\u5230\u76ee\u6807\u65f6\uff0c\u5e03\u5c14\u5e03\u5c14\u503c\u4e3aTrue\uff0c\u5426\u5219\u4e3aFalse\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u901a\u5e38\u4f7f\u7528\u6700\u5927\u60c5\u8282\u957f\u5ea6\u3002\uff09 6.1.3. \u5b9e\u9a8c \u00b6 \u5982\u679c\u57fa\u7840\u7684PDDL\u57df\u5177\u6709\u6982\u7387\u6548\u5e94\uff0c\u5982PPDDL\uff0c\u5219\u6b65\u8fdb\u65b9\u6cd5\u5c06\u5bf9\u6b64\u8fdb\u884c\u9002\u5f53\u89e3\u6790\uff0c\u5e76\u6839\u636e\u7ed9\u5b9a\u7684\u6982\u7387\u5206\u5e03\u9009\u62e9\u4e00\u79cd\u6548\u5e94\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6982\u7387\u4e4b\u548c\u4e0d\u4e3a1\uff0c\u5219\u4f1a\u6dfb\u52a0\u9ed8\u8ba4\u7684\u7410\u788e\u6548\u679c\u3002 **PDDLGym\u73af\u5883\u4e4b\u95f4\u7684\u5dee\u5f02\u3002**PDDLGym\u4e2d\u5185\u7f6e\u7684PDDL\u57df\u548c\u95ee\u9898\u5728\u8ba1\u5212\u96be\u5ea6\uff08\u5de6\uff09\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\uff08\u53f3\uff09\u65b9\u9762\u6709\u5f88\u5927\u4e0d\u540c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u6587\u672c\u3002\u4e3a\u4e86\u6e05\u6670\u8d77\u89c1\uff0c\u7701\u7565\u4e86\u5176\u4e2d\u4e00\u4e2a\u9886\u57dfDepot\uff0c\u4f46\u6bd4\u6700\u7b80\u5355\u7684\u9886\u57df\uff08TSP\uff09\u9700\u8981\u591a\u4e24\u4e2a\u6570\u91cf\u7ea7\u7684\u8ba1\u5212\u65f6\u95f4\u3002 \u5bf9\u4e8e\u6240\u793a\u7684\u65b9\u6cd5\uff0c\u4f46\u5176\u4ed6\u65b9\u6cd5\uff08\u5305\u62ec\u70d8\u7119\uff0c\u4ed3\u5e93\u548c\u63a8\u7bb1\u5b50\uff09\u5bf9\u4e8e\u7684\u5b66\u4e60\u65b9\u6cd5\u6765\u8bf4\u6bd4\u8f83\u56f0\u96be\uff1aFOLDT\u5b66\u4e60\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u627e\u5230\u9002\u5408\u6570\u636e\u7684\u6a21\u578b\u3002\u5f53\u7136\uff0c\u6a21\u578b\u5b66\u4e60\u7684\u96be\u5ea6\u56e0\u5b66\u4e60\u65b9\u6cd5\u548c\u63a2\u7d22\u7b56\u7565\u7684\u4e0d\u540c\u800c\u6709\u5f88\u5927\u5dee\u5f02\u3002\u5728\u8fd9\u91cc\u5b9e\u65bd\u4e86\u7b80\u5355\u7684\u7b56\u7565\u6765\u663e\u793a\u8fd9\u4e9b\u7ed3\u679c\uff0c\u4f46\u662f\u8fd9\u4e9b\u5c06\u6765\u7684\u7814\u7a76\u9014\u5f84\u6b63\u662f\u5e0c\u671b\u901a\u8fc7PDDLGym\u5b9e\u73b0\u7684\u90a3\u79cd\u9014\u5f84\u3002 \u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u7684Python\u6846\u67b6\uff0c\u53ef\u4ee5\u4ecePDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u81ea\u52a8\u521b\u5efaOpenAI Gym\u73af\u5883\u3002\u7684\u7ecf\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u5185\u7f6e\u73af\u5883\u4e4b\u95f4\u5b58\u5728\u76f8\u5f53\u5927\u7684\u5dee\u5f02\u3002 Thomas M Mitchell.Machine Learning. McGraw-Hill, Inc., New York,NY, USA, 1 edition, 1997. \u21a9 Paul E Utgoff. Incremental induction of decision trees.Machine learning,4(2):161\u2013186, 1989. \u21a9 Sergio Jim \u0301enez and Anders Jonsson. Computing Plans with Control Flowand Procedures Using a Classical Planner. InSOCS, 2015. \u21a9 Blai Bonet, H \u0301ector Palacios, and Hector Geffner. Automatic derivation offinite-state machines for behavior control. InAAAI, 2010 \u21a9 C \u0301edric Pralet, G \u0301erard Verfaillie, Michel Lema\u02c6\u0131tre, and Guillaume Infantes.Constraint-based controller synthesis in non-deterministic and partiallyobservable domains. InECAI, 2010 \u21a9 Yuxiao Hu and Giuseppe De Giacomo. A generic technique for synthesiz-ing bounded finite-state controllers. InICAPS, 2013. \u21a9 Jorge A Baier, Christian Fritz, and Sheila A McIlraith. Exploiting proce-dural domain control knowledge in state-of-the-art planners. InICAPS,2007. \u21a9 Javier Segovia-Aguas, Sergio Jim \u0301enez, and Anders Jonsson. Generalizedplanning with procedural domain control knowledge. InICAPS, 2016. \u21a9 Miquel Ramirez and Hector Geffner. Heuristics for planning, plan recog-nition and parsing.arXiv preprint arXiv:1605.05807, 2016 \u21a9","title":"researchSurvey"},{"location":"Papers/Survey%20of%20research%20literature/#1-survey-of-research-literature-all","text":"several recent research papers in that area \uff0cplease please please click on this url and have a look,\u8fd9\u4e9b\u5c31\u662fState Of Art\u3002 context and background A review of generalized planning\u901a\u7528\u89c4\u5212\u80cc\u666f\u53d1\u5c55\u60c5\u51b5 Research papers to be read closely and discussed .Additional research papers to be skimmed and briefly summarized. A Review of Machine Learning for Automated Planning\u7efc\u8ff0\u81ea\u52a8\u89c4\u5212\u53d1\u5c55\u60c5\u51b5(\u5305\u542b\u5f3a\u5316\u5b66\u4e60) Generalized Planning With Deep Reinforcement Learning\u7b80\u5355\u4ecb\u7ecd\u5f3a\u5316\u5b66\u4e60+\u901a\u7528\u89c4\u5212\u57fa\u672c\u65b9\u6cd5 State Of Art PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS code1 , code2 \u6211\u8ba4\u4e3a\u8fd9\u7bc7\u662fRL+pddl\u4ea4\u4e92\u7684\u6b63\u786e\u7814\u7a76\u8def\u5b50\u4e4b\u4e00\u3002 PDDLGym: Gym Environments from PDDL Problems","title":"1. Survey of research literature-All"},{"location":"Papers/Survey%20of%20research%20literature/#2-a-review-of-generalized-planning","text":"\u81ea\u52a8\u5316\u8ba1\u5212\uff08AP\uff09\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4ee3\u7406\u53ca\u5176\u73af\u5883\u7684\u6a21\u578b\u6765\u89e3\u51b3\u9ad8\u5ea6\u7ed3\u6784\u5316\u73af\u5883\u4e2d\u7684\u590d\u6742\u534f\u5546\u4efb\u52a1\uff0cTraditionally the solutions generated by automated planners are tied to aparticular planning instance and hence, do not generalize.\uff08 classical plan \uff09 A generalized plan is an algorithm-like solution that is valid for a given setof planning instances. \u8fd1\u5e74\u6765\uff0c\u7531\u4e8e\u8ba1\u5212 \u7684 \u8868\u793arepresentation \u89e3\u51b3\u65b9\u6848\u7cfb\u5217\u7684\u65b0\u9896\u5f62\u5f0f\u4e3b\u4e49\u4ee5\u53ca\u8ba1\u7b97\u6b64\u7c7b\u89e3\u51b3\u65b9\u6848\u7684\u65b0\u7b97\u6cd5\u7684\u51fa\u73b0\uff0c\u8fd9\u4e9b\u8fdb\u6b65\u63ed\u793a\u4e86\u5e7f\u4e49\u89c4\u5212\u6280\u672f\u7684\u6f5c\u529b\uff0c\u5e76\u9f13\u52b1\u5c06\u89c4\u5212\u5e94\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5404\u4e2a\u9886\u57df\uff0c\u4f8b\u5982program synthesis,autonomous control,datawranglingorform recognition\u5e7f\u4e49\u89c4\u5212\u4e2d\u7684\u8fd9\u4e9b\u6700\u65b0\u8fdb\u5c55\uff0c\u5e76\u4e0e\u73b0\u6709\u5f62\u5f0f\u4e3b\u4e49\u76f8\u5173,\u9488\u5bf9\u81ea\u52a8\u5316\u89c4\u5212\u4e2d\u7684\u901a\u7528\u6027\uff0c\u4f8b\u5982*planning with domain control knowledgeand different approachesforplanning under uncertainty*\u4e0d\u540c\u65b9\u6cd5\u3002","title":"2. A review of generalized planning"},{"location":"Papers/Survey%20of%20research%20literature/#211-classical-planning","text":"*\u7ecf\u5178\u89c4\u5212\u6a21\u578b*\u662f\u81ea\u52a8\u89c4\u5212\u6700\u5e38\u89c1\u7684\u6a21\u578b\uff0c\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a 1.\u8981\u89e3\u51b3\u7684\u8ba1\u5212\u4efb\u52a1\u5177\u6709\u6709\u9650\u4e14\u53ef\u5b8c\u5168\u89c2\u5bdf\u7684\u72b6\u6001\u7a7a\u95f4\u3002 2.\u52a8\u4f5c\u662f\u786e\u5b9a\u6027\u7684\uff0c\u5e76\u5bfc\u81f4\u77ac\u65f6\u72b6\u6001\u8f6c\u6362\u3002 \u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u7cfb\u5217\u53ef\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5c06\u7ed9\u5b9a\u7684\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e3a\u76ee\u6807\u72b6\u6001\uff0c\u5373\u6ee1\u8db3\u5148\u524d\u6307\u5b9a\u7684\u4e00\u7ec4\u76ee\u6807\u6761\u4ef6\u7684\u72b6\u6001\u3002 A classical planning frame is a tuple \u03a6 =\u3008F,A\u3009, where F is a set of fluents and A is a set of actions. Given a frame \u03a6 =\u3008F,A\u3009, a classical planning instance is a tuple P=\u3008F,A,I,G\u3009, where I\u2208 L(F) is an initial state (i.e.|I|=|F|) andG\u2208 L(F)is a goal condition. Besides classical planning, PDDL can represent more expressive planning models such as temporal planning or planning with path constraints and preferences","title":"2.1.1. classical planning"},{"location":"Papers/Survey%20of%20research%20literature/#212-generalized-planning","text":"\u53ef\u4ee5\u6839\u636e\u5e7f\u4e49\u8ba1\u5212specification of *the action to apply next*\u5bf9\u5176\u8fdb\u884c\u5206\u7c7b\uff1a Fully specified solutions, that unambiguously capture the action to ap-ply next, for solving every instance in a given generalized planning task.\u53ef\u4ee5\u660e\u786e\u6355\u83b7\u63a5\u4e0b\u6765\u8981\u5e94\u7528\u7684\u64cd\u4f5c\uff0c\u7528\u4e8e\u89e3\u51b3\u7ed9\u5b9a\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u3002\u7a0b\u5e8f\uff0c\u901a\u7528\u7b56\u7565\u6216\u786e\u5b9a\u6027FSC\u5c5e\u4e8e\u6b64\u7c7b\u3002\u5982\u679c\u8ba4\u4e3a\uff0c\u4e00\u81f4\u7684\uff0c\u5076\u7136\u7684\u6216POMDP\u8ba1\u5212\u4e5f\u5c5e\u4e8e\u6b64\u7c7b\uff0c\u5219\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u4ee3\u8868\u4e0d\u540c\u7684\u7ecf\u5178\u8ba1\u5212\u5b9e\u4f8b\uff0c\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u72b6\u6001\u53d8\u91cf\uff0c\u52a8\u4f5c\u548c\u76ee\u6807[42]\u3002 \u6211\u8ba4\u4e3a\u975e\u786e\u5b9a\u7684\u56fe\u7684\u89e3\u56fepolicy=\u786e\u5b9a\u6027=\u53ef\u4ee5\u5199\u6210program \u3002 Non specified(\u6211\u8ba4\u4e3a\u662f\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u6ca1\u89c4\u5f8b\uff0c\u9700\u8981classical planner \u989d\u5916\u89c4\u5212\u7684\u60c5\u51b5).\u5e26\u6709domain model\u7684\u7ecf\u5178\u8ba1\u5212\u5668\u662f\u5e7f\u4e49\u8ba1\u5212\u7684\u4e00\u79cd\u5f62\u5f0f\u3002\u8fd9\u6837\u7684\u8ba1\u5212\u975e\u5e38\u7b3c\u7edf\uff08\u6db5\u76d6\u4e86\u7528\u53e4\u5178\u8ba1\u5212\u5668\u7684\u8f93\u5165\u8bed\u8a00\u8868\u793a\u7684\u4efb\u4f55\u5b9e\u4f8b\uff09\uff0c\u4f46\u662f\u6267\u884c\u673a\u5236\u6548\u7387\u4f4e\u4e0b\uff08\u8fd0\u884c\u53e4\u5178\u8ba1\u5212\u5668\u4ee5\u9488\u5bf9\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u751f\u6210\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff09\u3002 Partially specified. \u5171\u4eab\u4e24\u8005\u8981\u7d20\u7684\u901a\u7528\u8ba1\u5212\u3002\u4f7f\u7528*\u7279\u5b9a\u4e8e\u57df\u7684\u63a7\u5236\u77e5\u8bc6*\u8fdb\u884c*\u89c4\u5212*\u7684\u4e0d\u540c\u65b9\u6cd5\u5c5e\u4e8e\u6b64\u7c7b\uff0c\u56e0\u4e3a\u4ecd\u7136\u9700\u8981\u89c4\u5212\u4eba\u5458\u9488\u5bf9\u7279\u5b9a\u5b9e\u4f8b\u751f\u6210\u5b8c\u5168\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u8981\u5229\u7528\u9650\u5236\u53ef\u80fd\u89e3\u51b3\u65b9\u6848\u7684\u5e38\u8bc6\u3002\u6b64\u7c7b\u5305\u62ec\u90e8\u5206\u6307\u5b9a\u7684\u7a0b\u5e8f\uff0c\u4e0d\u786e\u5b9a\u7684FSC\uff0c\u5f62\u5f0f\u8bed\u6cd5\uff0cAND / OR\u56fe\u6216HTN\u3002 \u8ba4\u4e3a\u8fd9\u5c31\u662fQNP/FOND\u53ef\u4ee5\u641c\u7d22\u201cpolicy\u2192\u89e3\u5b50\u56fe\u201d The execution of a generalized plan \\(\\Pi\\) in a classical planning instance P=\u3008F,A,I,G\u3009is a classical plan, The generalized planner box refers to an algorithm d with aninput-outputspecification of the instances to solve and that generates a solutionto these instances. \u5176\u4e2d\u5305\u542b\u8981\u89e3\u51b3\u7684\u5b9e\u4f8b\u7684*\u8f93\u5165-\u8f93\u51fa*\u89c4\u8303\uff0c\u5e76\u4e3a\u8fd9\u4e9b\u5b9e\u4f8b\u751f\u6210\u89e3\u51b3\u65b9\u6848\u3002 \u5e7f\u4e49\u8ba1\u5212\u7684\u7b97\u6cd5\u8303\u56f4\u4ece\u7eaf\u7cb9\u7684**top-down**(\u6211\u7406\u89e3\u4e3aMyND\u542f\u53d1\u5f0f\u56fe\u641c\u7d22\u5b50\u56fe\uff0c\u6216\u8005\u662fFOND-SAT\u5168\u7a7a\u95f4\u641c\u7d22)*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\uff08\u5728\u5e7f\u4e49\u8ba1\u5212\u7684\u7a7a\u95f4\u4e2d\u641c\u7d22\u4e00\u4e2a\u6db5\u76d6\u6240\u6709\u8f93\u5165\u5b9e\u4f8b\u7684\u89e3\u51b3\u65b9\u6848\uff09 \u5230*\u81ea\u4e0b\u800c\u4e0a**botton-up***(\u6211\u7406\u89e3\u4e3aPRP,FF planner\uff0c\u5f00\u521b\u8005\u4ece\u5b9e\u4f8b\u4e2d\u5b66\u4e60\u7684\u65b9\u6cd5)\uff08\u4e3a\u5355\u4e2a\u5b9e\u4f8b\u8ba1\u7b97\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u5176\u8fdb\u884c\u6982\u62ec\u548c\u5408\u5e76\uff09\u4ee5\u524d\u627e\u5230\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u9010\u6b65\u6269\u5927\u5e7f\u4e49\u8ba1\u5212\u7684\u8303\u56f4\u3002\u6700\u540e\uff0c*\u5e7f\u4e49\u8ba1\u5212*\u53ef\u4ee5\u770b\u4f5c\u662f\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u8ba1\u5212\u5b9e\u4f8b\u7684\u8fc7\u7a0b\u8868\u793a\u3002 \u901a\u7528GP\u89c4\u5212\u5c31\u50cf\u7ecf\u5178\u89c4\u5212classical plan\uff0c\u4f20\u7edf\u6c42\u89e3\u65b9\u6cd5\u6709\uff1a \u5728\u7ecf\u5178\u89c4\u5212\u4e2d\uff0c\u89c4\u5212\u5e08\u4ec5\u63a5\u6536\u5355\u4e2a\u548c\u5730\u9762\u89c4\u5212\u5b9e\u4f8b\u4f5c\u4e3a\u8f93\u5165 \u7ecf\u5178\u89c4\u5212\u7684\u6700\u65b0\u7b97\u6cd5\u662f\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u8fdb\u884c\u542f\u53d1\u5f0f\u641c\u7d22[37\uff0c30]\u6216\u7f16\u8bd1\u4e3a\u5176\u4ed6\u5f62\u5f0f\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f8b\u5982SAT \u7ecf\u5178\u8ba1\u5212\u662f\u4e00\u7cfb\u5217\u52a8\u4f5c\uff0c\u7ecf\u5178\u8ba1\u5212\u7684\u6267\u884c\u548c\u9a8c\u8bc1\u5728\u8ba1\u5212\u7684\u957f\u5ea6\u4e0a\u90fd\u662f\u7ebf\u6027\u7684\u3002\u7136\u800c\uff0c\u5177\u6709\u6761\u4ef6\u5f71\u54cd\uff0c\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7ed3\u6784\u7684\u52a8\u4f5c\u53ef\u4ee5\u7528\u6765\u66f4\u7d27\u51d1\u5730\u8868\u793a\u7ecf\u5178\u8ba1\u5212\u4efb\u52a1\u7684\u89e3\u51b3\u65b9\u6848\u3002","title":"2.1.2. generalized planning"},{"location":"Papers/Survey%20of%20research%20literature/#213-reinforcement-learning","text":"Representing Actions \uff08RL\u5f3a\u5316\u5b66\u4e60\u7ed3\u5408\uff09\u4e00\u4e2a\u4f8b\u5b50\u662f\u5728**ATARI**\u89c6\u9891\u6e38\u620f\u4e2d\u4f7f\u7528\u7684\u4ee5\u4ee3\u7406\u4eba\u4e3a\u4e2d\u5fc3\u7684\u884c\u4e3a\u6a21\u578b[62]\uff0c\u5176\u4e2d18\u79cd\u53ef\u80fd\u7684\u884c\u4e3a\u6839\u636e\u89c6\u9891\u6e38\u620f\u7684\u5f53\u524d\u72b6\u6001\u5177\u6709\u4e0d\u540c\u7684\u6548\u679c\u3002\u5728\u8fd9\u91cc\uff0c\u56de\u987e\u4e86\u7ecf\u5178\u8ba1\u5212\u884c\u4e3a\u6a21\u578b\u7684\u6269\u5c55\uff0c\u8fd9\u4e9b\u6269\u5c55\u65e8\u5728\u4f7f\u8ba1\u5212\u4efb\u52a1\u548c\u8ba1\u5212\u89e3\u51b3\u65b9\u6848\u66f4\u7d27\u51d1\uff0c\u66f4\u901a\u7528\u3002 Conditional effects=preconditions+conditional effects Conditional effects cannot be compiled away if plan size should grow only linearly [67]. PDDL supports the definition of conditional effects with the when keyword\u3002 Update formulas and high-level state features( series of work by Srivastava et al. ) different formalisms for representing a set of planning in-stances according to the language used for specifying these constraints: Propositional logic. \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u4ec5\u4f7f\u7528\u6587\u5b57\u548c\u4e09\u4e2a\u57fa\u672c\u7684\u903b\u8f91\u8fde\u63a5\u8bcd\u8868\u793a\uff08\u5e76\u8868\u793a\u6587\u5b57\u7684\u5408\u53d6\u6216\u8868\u793a\u6587\u5b57\u7684\u6790\u53d6\u800c\u4e0d\u8868\u793a\u5426\u5b9a\uff09\u3002\u7528\u547d\u9898\u903b\u8f91\u8868\u793a\u7684\u8ba1\u5212\u5b9e\u4f8b\u96c6\u7684\u793a\u4f8b\u662f\u4e00\u81f4\u7684\uff0c\u6216\u6709\u7684\u6216POMDP\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u8fd9\u4e9b\u4efb\u52a1\u5b9a\u4e49\u4e86\u4efb\u52a1\u7684\u4e0d\u540c\u53ef\u80fd\u521d\u59cb\u72b6\u6001\uff0c\u4f5c\u4e3a\u5bf9\u95ee\u9898\u5b57\u9762\u91cf\u7684\u5206\u79bb\uff08\u800c\u76ee\u6807\u662f\u4e3a\u8ba1\u5212\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u521d\u59cb\u72b6\u6001\u5171\u4eab\u7684\uff09\u4efb\u52a1\uff09[10]\u3002 First-order logic\u4e00\u9636\u903b\u8f91\u7ea6\u675f\u53ef\u4ee5\u5305\u542b\u91cf\u5316\u53d8\u91cf\uff0c\u5305\u62ec\u4f20\u9012\u95ed\u5305\u5e76\u8868\u793a\u65e0\u9650\u5236\u72b6\u6001\u96c6\u3002\u8fd9\u4e9b\u7279\u5f81\u4f7f\u4e00\u9636\u516c\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u8ba1\u5212\u5b9e\u4f8b\u96c6\u7684\u7d27\u51d1\u8868\u793a\uff0c\u4ee5\u53ca\u65e0\u9650\u5236\u89c4\u6a21\u7684\u8ba1\u5212\u4efb\u52a1[90]\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6709\u9650\u5bf9\u8c61\u96c6\uff0c\u53ef\u4ee5\u5c06\u4e00\u9636\u8868\u793a\u5f62\u5f0f\u76f4\u63a5\u8f6c\u6362\u4e3a\u547d\u9898\u903b\u8f91\u8868\u793a\u5f62\u5f0f\u3002 Constraint Programming. \u9664\u4e86\u7ea6\u675f\u7f16\u7a0b\u8bed\u8a00\u7684\u8868\u793a\u7075\u6d3b\u6027\u5916\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u6210\u7684CSP\u6c42\u89e3\u5668\u6765\u89e3\u51b3\u5e7f\u4e49\u7684\u8ba1\u5212\u4efb\u52a1\u3002 Three-valued logic. \u5728\u6b64\u903b\u8f91\u8bed\u8a00\u4e2d\uff0c\u5b58\u5728\u4e09\u4e2a\u771f\u503c1\uff08\u771f\uff09\uff0c0\uff08\u5047\uff09\u62161\uff08\u672a\u77e5\uff09Srivastava\u7b49\u3002\u4f7f\u7528\u4e09\u503c\u903b\u8f91\u8fdb\u884c\u72b6\u6001\u62bd\u8c61\uff0c\u4ee5\u7d27\u51d1\u5730\u8868\u793a\u65e0\u8fb9\u754c\u7684\u5177\u4f53\u72b6\u6001\u96c6\u3002\u4e09\u503c\u903b\u8f91\u5bf9\u4e8e\u8868\u793a\u548c\u89e3\u51b3\u4e00\u81f4\u548c\u5076\u7136\u7684\u4efb\u52a1\u4e5f\u5f88\u6709\u7528\u3002 \u786e\u5b9a\u4e00\u7ec4\u8ba1\u5212\u5b9e\u4f8b**specify a set of planning instances** \uff1a\u9664\u4e86\u7528\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u96c6\u4e4b\u5916\uff0c\u672a\u6765\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4fe1\u606f\uff0c\u4f8b\u5982*\u9886\u57df\u4e0d\u53d8\u91cf*[90]\u751a\u81f3\u662f\u5206\u7c7b\u7684\u6267\u884c\u5386\u53f2\u8bb0\u5f55\uff0c\u7c7b\u4f3c\u4e8e\u5728\u5f52\u7eb3\u903b\u8f91\u7f16\u7a0b\uff08ILP\uff09\u3002 \u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u7684\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff0c\u5e76\u56de\u987e\u4e86\u4e0d\u540c\u7684*\u8ba1\u5212\u91cd\u7528*\u6280\u672f\uff0c\u4ee5\u907f\u514d\u4ece\u5934\u5f00\u59cb\u8ba1\u7b97\u5e7f\u4e49\u8ba1\u5212\u3002\u672c\u8282\u6700\u540e\u56de\u987e\u4e86\u9488\u5bf9\u901a\u7528\u8ba1\u5212\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u7279\u5b9a\u5b9e\u73b0\u3002 *\u81ea\u4e0a\u800c\u4e0b\u7684*\u5e7f\u4e49\u89c4\u5212\u7684\u641c\u7d22\u65b9\u6cd5 \u5728*\u81ea\u4e0a\u800c\u4e0b\u7684*\u5e7f\u4e49\u89c4\u5212\u7684\u641c\u7d22\u65b9\u6cd5\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8986\u76d6\u4e86\u6240\u6709\u5728\u5e7f\u4e49\u89c4\u5212\u4efb\u52a1\u7684\u5b9e\u4f8b\u3002\u53e6\u4e00\u65b9\u9762\uff0c \u81ea\u4e0b\u800c\u4e0a\u7684*\u65b9\u6cd5\u4e3a\u5355\u4e2a\u5b9e\u4f8b\uff08\u6216\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u5b9e\u4f8b\u5b50\u96c6\uff09\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u6269\u5927\u4e86\u89e3\u51b3\u65b9\u6848\u7684\u8986\u76d6\u8303\u56f4\uff0c\u76f4\u5230\u6db5\u76d6\u4e86\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\uff0c\u81ea\u4e0a\u800c\u4e0b\u7684\u65b9\u6cd5\u4e0e*\u79bb\u7ebf*\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6709\u5173\uff0c\u8be5\u7b97\u6cd5\u8ba1\u7b97\u6a21\u578b\u4ee5\u5728\u4e00\u6b21\u8fed\u4ee3\u4e2d\u8986\u76d6\u6574\u4e2a\u8f93\u5165\u5b9e\u4f8b\u96c6\uff0c\u4f8b\u5982\u51b3\u7b56\u6811\u7684\u5f52\u7eb3 1 \u3002\u81ea\u4e0b\u800c\u4e0a\u7684\u65b9\u6cd5\u4e0e*\u5728\u7ebf\u76f8\u5173 \u7248\u672c\u7684ML\u7b97\u6cd5\uff0c\u968f\u7740\u66f4\u591a\u8f93\u5165\u5b9e\u4f8b\u7684\u51fa\u73b0\uff0c\u8fed\u4ee3\u5730\u9012\u589e\u5730\u9002\u5e94\u6a21\u578b 2 \u3002 \u7528\u4e8e\u5e7f\u4e49\u8ba1\u5212\u7684\u81ea*\u9876\u5411\u4e0b*\u7b97\u6cd5\u901a\u5e38\u5728\u53ef\u80fd\u7684\u5e7f\u4e49\u8ba1\u5212\u4e2d\u641c\u7d22\u89e3\u51b3\u65b9\u6848\u3002\u6b64\u641c\u7d22\u7684\u521d\u59cb\u72b6\u6001\u662f *\u7a7a\u7684*\u901a\u7528\u8ba1\u5212\uff0c\u641c\u7d22\u64cd\u4f5c\u5458\u5728\u901a\u7528\u8ba1\u5212\u4e2d\u5efa\u7acb\u4e00\u4e2a\u6b65\u9aa4\uff08\u4f8b\u5982\uff0c\u5411\u7a0b\u5e8f\u6dfb\u52a0\u6307\u4ee4\uff0c\u5411FSC\u6dfb\u52a0\u65b0\u72b6\u6001\u6216\u5411FSC\u8fc7\u6e21\uff0c\u5411\u7b56\u7565\u6dfb\u52a0\u65b0\u89c4\u5219\u7b49\uff09 \u3002\u641c\u7d22\u7684\u76ee\u6807\u72b6\u6001\u96c6\u5305\u62ec\u6784\u5efa\u7684\u5e7f\u4e49\u8ba1\u5212\u53ef\u4ee5\u89e3\u51b3\u7ed9\u5b9a\u5b9e\u4f8b\u96c6\u7684\u4efb\u4f55\u72b6\u6001\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u793a\u4f8b\u662f\u5c06\u901a\u7528\u8ba1\u5212\u7f16\u8bd1\u4e3a\u5176\u4ed6\u5f62\u5f0f\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff0c\u4f8b\u5982***\u7ecf\u5178\u8ba1\u5212* 3 \uff0c \u4e00\u81f4\u8ba1\u5212 4 \uff0c CSP 5 \u6216*Prolog\u7a0b\u5e8f* 6 **\u3002\u8fd9\u4e9b\u7f16\u8bd1\u5b9e\u73b0\u4e86\u5982\u4e0a\u6240\u8ff0\u7684\u641c\u7d22\u7a7a\u95f4\uff0c\u5e76\u53d7\u76ca\u4e8e\u73b0\u6210\u7684\u6c42\u89e3\u5668\uff08\u5177\u6709\u9ad8\u6548\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5\uff09\uff0c\u53ef\u4ee5\u5b8c\u6210\u5bf9\u901a\u7528\u8ba1\u5212\u7684\u641c\u7d22\u3002\u7f16\u8bd1\u65b9\u6cd5\u7684\u4e3b\u8981\u9650\u5236\u662f\u53ef\u4f38\u7f29\u6027\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u901a\u5e38\u4e3a\u4e86\u9650\u5236\u641c\u7d22\u8303\u56f4\uff0c\u9650\u5236\u53ef\u80fd\u7684\u5e7f\u4e49\u8ba1\u5212\u7684\u5927\u5c0f\uff08\u4f8b\u5982\uff0c\u7a0b\u5e8f\u884c\uff0c\u63a7\u5236\u5668\u72b6\u6001\uff0c\u7b56\u7565\u89c4\u5219\u6216\u91cf\u5316\u53d8\u91cf\u7684\u6700\u5927\u6570\u91cf\uff09\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u5728SATPLAN\u65b9\u6cd5\u4e2d\u5b8c\u6210\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u786e\u5b9a\u6700\u5927\u8ba1\u5212\u957f\u5ea6[78]\uff0c\u7136\u540e\u8fed\u4ee3\u5730\u589e\u52a0\u76f4\u5230\u627e\u5230\u89e3\u51b3\u65b9\u6848\u4e3a\u6b62\u3002 \u91cd\u7528\u5e7f\u4e49\u8ba1\u5212Srivastava\u7684\u65b9\u6cd5\u4e2d\uff0c \u5728\u8fd9\u65b9\u9762\uff0c*\u81ea\u4e0b\u800c\u4e0a\u7684*\u901a\u7528\u8ba1\u5212\u65b9\u6cd5\u914d\u5907\u4e86\u4f7f\u8ba1\u5212\u9002\u5e94\u672a\u77e5\u6848\u4f8b\u5e76\u9010\u6b65\u589e\u52a0\u5176\u8986\u76d6\u8303\u56f4\u7684\u673a\u5236[91]\u3002\u53e6\u4e00\u65b9\u9762\uff0c*\u81ea\u4e0a\u800c\u4e0b\u7684*\u65b9\u6cd5\u53ef\u4ee5\u4ece\u90e8\u5206\u6307\u5b9a\u7684\u89e3\u51b3\u65b9\u6848\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece*\u7a7a\u7684*\u5e7f\u4e49\u8ba1\u5212\u5f00\u59cb\u3002\u8fd9\u8868\u660e\u7f29\u5c0f\u641c\u7d22\u7a7a\u95f4\u548c/\u6216\u96c6\u4e2d\u641c\u7d22\u8fc7\u7a0b\u5f88\u6709\u7528\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u89e3\u51b3\u66f4\u5177\u6311\u6218\u6027\u7684\u5e7f\u4e49\u8ba1\u5212\u4efb\u52a1[83\uff0c84]\u3002 \u63a5\u4e0b\u6765\uff0c\u56de\u987e\u91cd\u7528\u5148\u524d\u627e\u5230\u7684\u8ba1\u5212\u7684\u4e0d\u540c\u6280\u672f\uff1a \u2022 \u7f16\u8bd1\u3002*\u5f53\u73b0\u6709\u7684\u5e7f\u4e49\u8ba1\u5212\u5177\u6709\u5e7f\u4e49\u7b56\u7565\u7684\u5f62\u5f0f\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u7f16\u8bd1\u4e3a\u4e00\u7ec4PDDL\u6d3e\u751f\u7684\u8c13\u8bcd\uff0c\u7b56\u7565\u4e2d\u7684\u6bcf\u4e2a\u89c4\u5219\u90fd\u5305\u542b\u4e00\u4e2a\u8c13\u8bcd\uff0c\u8be5\u8c13\u8bcd\u6355\u83b7\u5e94\u91c7\u53d6\u884c\u52a8\u7684\u4e0d\u540c\u60c5\u51b5[45]\u3002\u56fe13\u8bf4\u660e\u4e86\u6b64\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u663e\u793a\u4e86PDDL\u6d3e\u751f\u8c13\u8bcd\u7684\u793a\u4f8b\uff0c\u8be5\u8c13\u8bcd\u8868\u793a\u7528\u4e8e\u5806\u53e0\u5854\u5f0f\u5854\u76842\u89c4\u5219\u7b56\u7565\u3002\u8fd8\u89e3\u91ca\u8bf4\uff0c\u901a\u8fc7**We also explained that existinggeneralized plans in the form of programs, FSCs or AND/OR graphs, canbe encoded into a classical PDDL planning task by computing the crossproduct between the corresponding automata and the original planningtask [^7, 83, 77]\u8ba1\u7b97\u76f8\u5e94\u81ea\u52a8\u673a\u4e0e\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e4b\u95f4\u7684\u53c9\u79ef\uff0c\u53ef\u4ee5\u5c06\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u5f62\u5f0f\u7684\u73b0\u6709\u5e7f\u4e49\u8ba1\u5212\u7f16\u7801\u4e3a\u7ecf\u5178PDDL\u8ba1\u5212\u4efb\u52a1* \u3002[7\uff0c83\uff0c77] \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u989d\u5916\u72b6\u6001\u53d8\u91cf\u5c06\u6dfb\u52a0\u5230\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u4ee5\u8868\u793a\u4e0e\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u76f8\u5bf9\u5e94\u7684\u81ea\u52a8\u673a\u7684\u72b6\u6001\u548c\u8f6c\u6362\u3002 \u2022 *\u8ba1\u5212\u884c\u52a8\u3002*\u7ecf\u5178\u8ba1\u5212\u4e2d\u7684\u52a8\u4f5c\u4e0d\u4ec5\u4ee3\u8868\u539f\u59cb\u52a8\u4f5c\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4ee3\u8868\u5e7f\u4e49\u8ba1\u5212\u672c\u8eab\u3002\u56fe20\u663e\u793a\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684\u8ba1\u5212\u52a8\u4f5c\uff0c\u8be5\u52a8\u4f5c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u901a\u7528\u8ba1\u5212\uff0c\u8be5\u901a\u7528\u8ba1\u5212\u7528\u4e8e\u5c06\u4e00\u4e2ablockworld\u4e2d\u7684\u4efb\u4f55block\u5806\u53e0\u8d77\u6765\uff0c\u5373\u89e3\u51b3\u4efb\u4f55blockworld\u5b9e\u4f8b\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u4e2d\u7684\u7b2c\u4e00\u6b65\u3002 \u5148\u524d\u627e\u5230\u7684\u8ba1\u5212\u7684\u4e0d\u540c\u6280\u672f\uff1a \u2022 compilation*\u5f53\u73b0\u6709\u7684\u5e7f\u4e49\u8ba1\u5212\u5177\u6709\u5e7f\u4e49\u7b56\u7565\u7684\u5f62\u5f0f\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u7f16\u8bd1\u4e3a\u4e00\u7ec4PDDL\u6d3e\u751f\u7684\u8c13\u8bcd\uff0c\u7b56\u7565\u4e2d\u7684\u6bcf\u4e2a\u89c4\u5219\u90fd\u5305\u542b\u4e00\u4e2a\u8c13\u8bcd\uff0c\u8be5\u8c13\u8bcd\u6355\u83b7\u5e94\u91c7\u53d6\u884c\u52a8\u7684\u4e0d\u540c\u60c5\u51b5[45]\u3002\u56fe13\u8bf4\u660e\u4e86\u6b64\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u663e\u793a\u4e86PDDL\u6d3e\u751f\u8c13\u8bcd\u7684\u793a\u4f8b\uff0c\u8be5\u8c13\u8bcd\u8868\u793a\u7528\u4e8e\u5806\u53e0\u5854\u5f0f\u5854\u76842\u89c4\u5219\u7b56\u7565\u3002\u8fd8\u89e3\u91ca\u8bf4\uff0c\u901a\u8fc7**We also explained that existinggeneralized plans in the form of programs, FSCs or AND/OR graphs, canbe encoded into a classical PDDL planning task by computing the crossproduct between the corresponding automata and the original planningtask [^7, 83, 77]\u8ba1\u7b97\u76f8\u5e94\u81ea\u52a8\u673a\u4e0e\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e4b\u95f4\u7684\u53c9\u79ef\uff0c\u53ef\u4ee5\u5c06\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u5f62\u5f0f\u7684\u73b0\u6709\u5e7f\u4e49\u8ba1\u5212\u7f16\u7801\u4e3a\u7ecf\u5178PDDL\u8ba1\u5212\u4efb\u52a1* \u3002[7\uff0c83\uff0c77] \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u989d\u5916\u72b6\u6001\u53d8\u91cf\u5c06\u6dfb\u52a0\u5230\u539f\u59cb\u8ba1\u5212\u4efb\u52a1\u4e2d\uff0c\u4ee5\u8868\u793a\u4e0e\u7a0b\u5e8f\uff0cFSC\u6216AND / OR\u56fe\u76f8\u5bf9\u5e94\u7684\u81ea\u52a8\u673a\u7684\u72b6\u6001\u548c\u8f6c\u6362\u3002 \u2022 *\u8ba1\u5212\u884c\u52a8*\u7ecf\u5178\u8ba1\u5212\u4e2d\u7684\u52a8\u4f5c\u4e0d\u4ec5\u4ee3\u8868\u539f\u59cb\u52a8\u4f5c\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4ee3\u8868\u5e7f\u4e49\u8ba1\u5212\u672c\u8eab\u3002 diverse approaches for generalized planning according to the solution representations\uff1a Variables Control-flow Execution Classical plan ------ ------ Ground actions Macro-Actions Action parameters ------ Lifted actions Generalized Policy Rule parameters Branching and loops Lifted rules DSPlanners Existential Branching and loops Lifted predicatesand lifted actions FSCs Quantified Branching and loops Derived predicates Hierarchical FSCs Quantified and parameters Branching, loops and call stack Derived predicates and Parameter passing Programs Quantified and parameters Branching, loops and call stack Derived predicates and Parameter passing","title":"2.1.3. Reinforcement Learning"},{"location":"Papers/Survey%20of%20research%20literature/#3-a-review-of-machine-learning-for-automated-planning","text":"\u81ea\u52a8\u5316\u8ba1\u5212\uff08AP\uff09\u662f\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u8d1f\u8d23\u7814\u7a76\u6267\u884c\u7ed9\u5b9a\u4efb\u52a1\u7684\u6709\u5e8f\u884c\u52a8\u96c6\u5408\u7684\u8ba1\u7b97\u7efc\u5408\u3002AP\u4e8e50\u5e74\u4ee3\u672b\u51fa\u73b0\uff0c\u662f\u5bf9\u72b6\u6001\u7a7a\u95f4\u641c\u7d22\uff0c\u5b9a\u7406\u8bc1\u660e\u548c\u63a7\u5236\u7406\u8bba\u8fdb\u884c\u7814\u7a76\u7684\u7ed3\u679c\uff0c\u65e8\u5728\u89e3\u51b3\u673a\u5668\u4eba\u6280\u672f\u548c\u81ea\u52a8\u6f14\u7ece\u7684\u5b9e\u9645\u9700\u6c42\u3002\u65af\u5766\u798f\u5b66\u9662\u7684\u95ee\u9898\u6c42\u89e3\u5668STRIPS\uff08Fikes\u548cNilsson\uff0c1971\u5e74\uff09\u53d1\u5c55\u6210\u4e3a\u63a7\u5236\u81ea\u4e3b\u673a\u5668\u4ebaShakey\u7684\u8ba1\u5212\u7ec4\u6210\u90e8\u5206\uff08Nilsson\uff0c1984\u5e74\uff09\uff0c\u5b8c\u7f8e\u5730\u8bf4\u660e\u4e86\u8fd9\u4e9b\u5f71\u54cd\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u4eceShakey\u65f6\u4ee3\u5230\u73b0\u5728\uff0cAP\u5df2\u7ecf\u4ea7\u751f\u4e86\u4ee3\u8868\u8ba1\u5212\u4efb\u52a1\u7684\u516c\u8ba4\u6807\u51c6\u4ee5\u53ca\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6709\u6548\u7b97\u6cd5\uff08Ghallab\u7b49\uff0c2004\uff09\u3002 *\u77e5\u8bc6\u8868\u793a\u3002*\u9996\u5148\uff0c\u5fc5\u987b\u5b9a\u4e49\u673a\u5668\u5b66\u4e60\u8fc7\u7a0b\u5c06\u5b66\u4e60\u7684\u77e5\u8bc6\u7c7b\u578b\u3002\u5728\u672c\u6587\u4e2d\uff0c\u8003\u8651\u4e86AP\u7684ML\u7684\u4e24\u4e2a\u4e0d\u540c\u76ee\u6807\uff0c\u5373\u4e3a\u8ba1\u5212\u8005\u63d0\u4f9b\u670d\u52a1\u7684\u52a8\u4f5c\u6a21\u578b\u548c\u6307\u5bfc\u8ba1\u5212\u8005\u5bfb\u627e\u89e3\u51b3\u65b9\u6848\u7684\u641c\u7d22\u63a7\u5236\u3002\u5176\u6b21\uff0c\u5fc5\u987b\u51b3\u5b9a\u5982\u4f55\u8868\u793a\u6240\u5b66\u77e5\u8bc6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u505a\u51fa\u4e24\u4e2a\u4ee3\u8868\u51b3\u5b9a\uff1a \uff08a\uff09 *\u4ee3\u8868\u8bed\u8a00\u3002*\u7528\u4e8e\u5bf9\u76ee\u6807\u6982\u5ff5\u548c\u4f53\u9a8c\u8fdb\u884c\u7f16\u7801\u7684\u4e00\u79cd\u8868\u793a\u6cd5\u3002\u56e0\u4e3aAP\u4efb\u52a1\u901a\u5e38\u4ee5\u8c13\u8bcd\u903b\u8f91\u63cf\u8ff0\uff0c\u6240\u4ee5\u8fd9\u662f\u7528\u4e8e\u7f16\u7801AP\u6982\u5ff5\u7684\u6700\u5e38\u7528\u7684\u8868\u793a\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136\u7a0b\u5ea6\u8f83\u5c0f\uff0c\u4f46\u4e5f\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\uff0c\u4f8b\u5982\u63cf\u8ff0\u903b\u8f91\u6216\u65f6\u95f4\u903b\u8f91\u3002 \uff08b\uff09 *\u529f\u80fd\u7a7a\u95f4\u3002*ML\u7b97\u6cd5\u8003\u8651\u5b66\u4e60\u76ee\u6807\u6982\u5ff5\u7684\u4e00\u7ec4\u529f\u80fd\u3002\u5728AP\u4e2d\uff0c\u8fd9\u4e9b\u529f\u80fd\u901a\u5e38\u662f\u7528\u4e8e\u5b9a\u4e49AP\u4efb\u52a1\u7684\u52a8\u4f5c\uff0c\u72b6\u6001\u548c\u76ee\u6807\u7684\u57df\u8c13\u8bcd\u3002 *\u6c72\u53d6\u7ecf\u9a8c\u3002*\u5982\u4f55\u6536\u96c6\u5b66\u4e60\u793a\u4f8b\u3002\u5728AP\u7684\u60c5\u51b5\u4e0b\uff0c\u5b66\u4e60\u793a\u4f8b\u53ef\u4ee5\u7531\u8ba1\u5212\u7cfb\u7edf\u81ea\u4e3b\u6536\u96c6\uff0c\u4e5f\u53ef\u4ee5\u7531\u5916\u90e8\u4ee3\u7406\uff08\u4f8b\u5982\u4eba\u7c7b\u4e13\u5bb6\uff09\u63d0\u4f9b\u3002\u5b9e\u73b0\u4e00\u79cd\u81ea\u4e3b\u6536\u96c6\u5b66\u4e60\u793a\u4f8b\u7684\u673a\u5236\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\u3002\u4f7f\u7528\u8ba1\u5212\u8005\u6536\u96c6\u7ecf\u9a8c\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u8981\u786e\u4fdd\u4f7f\u7528\u7ed9\u5b9a\u7684\u57df\u6a21\u578b\u6765\u89e3\u51b3AP\u95ee\u9898\u7684\u53ef\u89e3\u51b3\u6027\u4e0e\u539f\u59cbAP\u4efb\u52a1\u4e00\u6837\u56f0\u96be\u3002\u968f\u673a\u63a2\u7d22\u7ecf\u5e38\u4f7fAP\u4efb\u52a1\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u91c7\u6837\u4e0d\u8db3\u3002AP\u52a8\u4f5c\u901a\u5e38\u4f1a\u63d0\u4f9b\u524d\u63d0\u6761\u4ef6\uff0c\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u53ea\u80fd\u7531\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u6765\u6ee1\u8db3\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684\u52a8\u4f5c\u5e8f\u5217\u5076\u7136\u88ab\u9009\u62e9\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\u3002 *\u5b66\u4e60\u7b97\u6cd5\u3002*\u5982\u4f55\u4ece\u6536\u96c6\u7684\u7ecf\u9a8c\u4e2d\u6355\u83b7\u6a21\u5f0f\u3002\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u63d0\u53d6\u8fd9\u4e9b\u6a21\u5f0f\u3002\u5f52\u7eb3\u5b66\u4e60\u901a\u8fc7\u5bf9\u89c2\u5bdf\u5230\u7684\u4f8b\u5b50\u8fdb\u884c\u6982\u62ec\u6765\u6784\u5efa\u6a21\u5f0f\u3002\u5206\u6790\u5b66\u4e60\u4f7f\u7528\u5148\u9a8c\u77e5\u8bc6\u548c\u6f14\u7ece\u63a8\u7406\u6765\u6784\u5efa\u6a21\u5f0f\uff0c\u4ee5\u89e3\u91ca\u5b66\u4e60\u793a\u4f8b\u4e2d\u7684\u4fe1\u606f\u3002\u6df7\u5408\u5f52\u7eb3\u5206\u6790\u5b66\u4e60\u7ed3\u5408\u4e86\u4e24\u79cd\u5148\u524d\u7684\u5b66\u4e60\u6280\u672f\uff0c\u4ece\u800c\u83b7\u5f97\u4e86\u4e24\u8005\u7684\u597d\u5904\uff1a\u5f53\u53ef\u83b7\u5f97\u5148\u9a8c\u77e5\u8bc6\u65f6\uff0c\u6cdb\u5316\u7684\u51c6\u786e\u6027\u66f4\u9ad8\uff1b\u4f7f\u7528\u89c2\u6d4b\u5230\u7684\u5b66\u4e60\u6570\u636e\u6765\u514b\u670d\u5148\u9a8c\u77e5\u8bc6\u7684\u4e0d\u8db3\u3002\u5728\u8bbe\u8ba1\u7528\u4e8eAP\u5f52\u7eb3\u5b66\u4e60\u7684\u5b66\u4e60\u7b97\u6cd5\u65f6\uff0c\u6700\u5e38\u7528\u7684\u6280\u672f\u662f\uff0c\u4f46\u662f\u57fa\u4e8eAP\u4efb\u52a1\u7684domain\u5b9a\u4e49\uff0c\u4e5f\u4f7f\u7528\u5206\u6790\u548c\u6df7\u5408\u65b9\u6cd5\u6765\u6784\u5efa\u5bf9\u6536\u96c6\u7684\u5b66\u4e60\u793a\u4f8b\u7684\u89e3\u91ca\u3002 \u5f00\u53d1\u6240\u5b66\u77e5\u8bc6 \u3002\u81ea\u52a8\u7cfb\u7edf\u5982\u4f55\u4ece\u5b66\u5230\u7684\u77e5\u8bc6\u4e2d\u53d7\u76ca\u3002\u5bf9\u524d\u4e09\u4e2a\u95ee\u9898\u4e2d\u7684\u6bcf\u4e00\u4e2a\u505a\u51fa\u7684\u51b3\u5b9a\u90fd\u4f1a\u5f71\u54cd\u6240\u5b66\u77e5\u8bc6\u3002\u5982\u679c\u5b66\u5230\u7684\u77e5\u8bc6\u4e0d\u5b8c\u5584\uff0c\u5219\u5fc5\u987b\u901a\u8fc7\u4fdd\u8bc1\u53ef\u9760\u5229\u7528\u7684\u673a\u5236\u52a0\u4ee5\u5e94\u7528\u3002\u5bf9\u4e8eAP\uff0c\u77e5\u8bc6\u7684\u4e0d\u5b8c\u5584\u53ef\u80fd\u662f\u591a\u79cd\u60c5\u51b5\u7684\u7ed3\u679c\uff1a\u67d0\u4e9b\u8868\u793a\u9009\u62e9\u53ef\u80fd\u4e0d\u8db3\u4ee5\u8868\u8fbe\u7ed9\u5b9a\u6761\u4ef6\u7684\u76f8\u5173\u77e5\u8bc6\u3002 \u57df; \u6536\u96c6\u5b66\u4e60\u7ecf\u9a8c\u7684\u7b56\u7565\u53ef\u80fd\u4f1a\u9057\u6f0f\u76ee\u6807\u77e5\u8bc6\u7684\u5927\u91cf\u793a\u4f8b\uff1b\u5426\u5219\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u6216\u8005\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u548c\u5185\u5b58\u8981\u6c42\u5185\u6355\u83b7\u76ee\u6807\u77e5\u8bc6\u7684\u6a21\u5f0f\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u4f7f\u7528\u6240\u5b66\u77e5\u8bc6\u53ef\u80fd\u4f1a\u7834\u574f\u8ba1\u5212\u8fc7\u7a0b\u3002\u89c4\u5212\u548c\u5b66\u4e60\u7cfb\u7edf\u9700\u8981\u914d\u5907\u5404\u79cd\u673a\u5236\uff0c\u4ee5\u4f7f\u5c3d\u7ba1\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u5b58\u5728\u7f3a\u9677\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5f3a\u5927\u5730\u8fdb\u884c\u89c4\u5212\u3002","title":"3. A Review of Machine Learning for Automated Planning"},{"location":"Papers/Survey%20of%20research%20literature/#31-ap-model","text":"AP\u5efa\u6a21\u5b9a\u4e49\u4e86\u56db\u7c7b\uff1a - \u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u64cd\u4f5c\uff1b - \u5728\u90e8\u5206\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u786e\u5b9a\u6027\u52a8\u4f5c\uff1b - \u5728\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c\uff1b - \u53ef\u89c2\u5bdf\u90e8\u5206\u73af\u5883\u4e2d\u7684\u968f\u673a\u52a8\u4f5c\u3002 \u5c3d\u7ba1\u5b58\u5728\u5176\u4ed6\u5206\u7c7b\u7684\u53ef\u80fd\uff0c\u4f8b\u5982\u6839\u636e\u5b66\u4e60\u76ee\u6807\u8fdb\u884c\u5206\u7ec4\uff08\u524d\u63d0\u6761\u4ef6\uff0c\u6548\u679c\uff0c\u6548\u679c\u6761\u4ef6\uff0c\u7ed3\u679c\u7684\u6982\u7387...\uff09\uff0c\u4f46\u8ba4\u4e3a\u8fd9\u4e00\u5206\u7c7b\u5bf9\u4e8e\u8ba1\u5212\u76ee\u7684\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u8303\u5f0f\u3002\u56fe\u901a\u8fc7\u7ed9\u51fa\u4e00\u4e9b\u793a\u4f8b\u5b9e\u73b0\u603b\u7ed3\u4e86\u8ba1\u5212\u884c\u52a8\u5efa\u6a21\u7cfb\u7edf\u7684\u5206\u7c7b\u3002\u8be5\u8868\u5e76\u4e0d\u662f\u8be6\u5c3d\u7684\u5217\u4e3e\uff0c\u56e0\u6b64\u8868\u4e2d\u7684\u7cfb\u7edf\u4ec5\u662f\u793a\u4f8b\u3002 \u6a21\u578b \u7279\u5f81 \u5b9e\u65bd\u65b9\u5f0f \u957f\u5904 \u5f31\u70b9 **\u786e\u5b9a\u6027**\u5f71\u54cd**\u5b8c\u6574\u7684**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u5b66\u4e60\u590d\u6742\u6027\u5728\u7406\u8bba\u4e0a\u662f\u6709\u9650\u7684 \u2022\u9ad8\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 \u2022\u5b8c\u6574\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b \u2022\u8868\u73b0\u529b\u5dee LIVE\uff08Shen and Simon\uff0c1989\uff09\uff0cEXPO\uff08Gil\uff0c1992\uff09\uff0cOBSERVER\uff08Wang\uff0c1994\uff09 **\u786e\u5b9a\u6027**\u5f71\u54cd**\u90e8\u5206**\u72b6\u6001\u7684\u53ef\u89c2\u5bdf\u6027 \u2022\u5b8c\u6574\u6db5\u76d6\u5b66\u4e60\u793a\u4f8b \u2022\u8868\u73b0\u529b\u5dee \u2022\u4f4e\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 ARMS\uff08Yang\u7b49\uff0c2007\uff09\uff0c\uff08Amir and Chang\uff0c2008\uff09\uff0c\uff08Mourao\u7b49\uff0c2008\uff09\uff0cLOCM\uff08Cresswell\u7b49\uff0c2009\uff09 **\u6982\u7387**\u6548\u5e94**\u5b8c\u5168**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u4e30\u5bcc\u7684\u8868\u73b0\u529b\u2022\u9ad8\u6548\u7684\u8ba1\u5212\u7b97\u6cd5 \u2022\u4e0d\u5b58\u5728\u7684\u5728\u7ebf\u5b66\u4e60 \uff08Oates and Cohen\uff0c1996\uff09\uff0cTRAIL\uff08Benson\uff0c1997\uff09\uff0cLOPE\uff08Garcla-Martlnez and Borrajo\uff0c2000\uff09\uff0c\uff08Pasula et al\u3002\uff0c2007\uff09\uff0cPELA\uff08Jimenez\u7b49\uff0c2008\uff09 **\u6982\u7387**\u6548\u5e94**\u90e8\u5206**\u72b6\u6001\u53ef\u89c2\u5bdf\u6027 \u2022\u5bcc\u6709\u8868\u73b0\u529b \u2022\u9ad8\u8ba1\u5212\u548c\u5b66\u4e60\u590d\u6742\u6027 \uff08Yoon\u548cKambhampati\uff0c2007\u5e74\uff09","title":"3.1. \u56db\u7c7bAP model"},{"location":"Papers/Survey%20of%20research%20literature/#32-learning-planning-search-control-knowledge","text":"\u5b66\u4e60\u89c4\u5212\u56fe\u7684\u63a7\u5236\u7ed3\u6784\u77e5\u8bc6(\u7c7b\u6bd4tf\u8ba1\u7b97\u56fe) \u5b66\u4e60AP\u7684\u641c\u7d22\u63a7\u5236\u77e5\u8bc6\u7684\u56db\u79cd\u4e0d\u540c\u65b9\u6cd5\uff08\u5b8f\u52a8\u4f5c\uff0c\u5e7f\u4e49\u7b56\u7565\uff0c\u5e7f\u4e49\u542f\u53d1\u5f0f\u51fd\u6570\u548c\u5c42\u6b21\u5206\u89e3\u65b9\u6cd5\uff09 \u6a21\u578b \u7279\u5f81 \u5b9e\u65bd\u65b9\u5f0f \u957f\u5904 \u5f31\u70b9 Macro-actions \u2022\u5bf9\u9519\u8bef\u7684\u5b66\u4e60\u77e5\u8bc6\u6709\u8f83\u5f3a\u7684\u628a\u63e1 \u2022\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u8ba1\u5212\u8005 \u2022Utility problem REFLECT\uff08Dawson and Silklossly\uff0c1977\uff09\uff0cMORRIS\uff08Korf\uff0c1985\uff09\uff0cMacroFF\uff08Botea\u7b49\uff0c2005a\uff09\uff0cMarvin\uff08Coles and Smith\uff0c2007\uff09\uff0c\uff08Newton et al\u3002\uff0c2007\uff09 Generalized Policies \u2022\u6807\u51c6\u5173\u7cfb\u5206\u7c7b\u7b97\u6cd5 \u2022Engineering effort to\u6574\u5408\u4e0d\u540c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u4e0e\u9886\u57df\u65e0\u5173\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5 \uff08Minton\uff0c1988\u5e74\uff09\uff0cPRIAR\uff08Kambhampati and Hendler\uff0c1992\uff09\uff0cHAMLET\uff08Borrajo and Veloso\uff0c1997\uff09\uff0c\uff08Khardon\uff0c1999\uff09\uff0c\uff08Martin and Geffner\uff0c2000\uff09\uff0cDISTILL\uff08WinnerandVeloso\uff0c2003\uff09\uff0cOBTUSEWEDGE\uff08Yoon\u7b49\u4eba\uff0c2007\uff09\uff0cCABALA\uff08de la Rosa\u7b49\u4eba\uff0c2007\uff09\uff0cROLLER\uff08de la Rosa\u7b49\u4eba\uff0c2008\uff09 Generalized Heuristics \u2022\u6807\u51c6\u5173\u7cfb\u56de\u5f52\u7b97\u6cd5 \u2022\u8f7b\u677e\u96c6\u6210\u4e0d\u540c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5 \u2022\u53ef\u8bfb\u6027\u5dee \uff08Yoon\u7b49\uff0c2006\uff09\uff0c\uff08Xu\u7b49\uff0c2007\uff09 Decomposition Methods \u2022\u5bcc\u6709\u8868\u73b0\u529b \u2022\u65e0\u9700\u5168\u81ea\u52a8\u5b66\u4e60 CAMEL\uff08Ilghami\u7b49\uff0c2002\uff09\uff0cHDL\uff08Ilghami\u7b49\uff0c2006\uff09\uff0cHTNMAKER\uff08Hogg\u7b49\uff0c2008\uff09 Overview of AP systems that benefit from ML for the extraction of domain-specific search control \u6709\u4e00\u7ec4\u7cfb\u7edf\u53ef\u4ee5\u5f52\u7eb3\u5b66\u4e60\u63a7\u5236\u89c4\u5219\u3002\u5176\u4e2d\u5f52\u7eb3\u5b66\u4e60\u7f16\u7a0b\uff08ILP\uff09\u662f\u6700\u6d41\u884c\u7684\u5b66\u4e60\u6280\u672f\u3002G rasshopper \u7cfb\u7edf\uff08Leckie\u548cZukerman\uff0c1991\uff09\u4f7f\u7528F \u6cb9\uff08Quinlan\u548cCameron-Jones\uff0c1995\uff09\u6765\u5b66\u4e60\u6307\u5bfc\u795e\u7ae5\u8ba1\u5212\u8005\u7684\u63a7\u5236\u89c4\u5219 \u3002\u4e5f\u6709\u5206\u6790\u7cfb\u7edf\uff1a\u795e\u7ae5/ EBL \u6a21\u5757\uff08\u660e\u987f\uff0c1988\u5e74\uff09\u4e86\u89e3\u5230\u641c\u7d22\u63a7\u5236\u89c4\u5219\u7684PRODIGY \u4ece\u6b63\u786e\u548c\u9519\u8bef\u51b3\u7b56\u7684\u51e0\u4e2a\u4f8b\u5b50\u89c4\u5212\u5e08\u3002\u5c0f\u53f7tatic\uff08Etzioni\uff0c1993\uff09\u83b7\u5f97\u63a7\u5236\u89c4\u5219\u800c\u6ca1\u6709\u89e3\u51b3\u4efb\u4f55\u95ee\u9898\u3002\u5b83\u4ec5\u4f7f\u7528\u57fa\u4e8e\u89e3\u91ca\u7684\u5b66\u4e60\uff08EBL\uff09\u6765\u5206\u6790\u52a8\u4f5c\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u4e3a\u4e86\u514b\u670d\u7eaf\u5f52\u7eb3\u6cd5\u548c\u7eaf\u5206\u6790\u6cd5\u7684\u5c40\u9650\u6027\uff0c\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u5c06\u5b83\u4eec\u7ed3\u5408\u8d77\u6765\uff1a\u57fa\u4e8e\u8be5\u539f\u7406\u7684\u5f00\u62d3\u6027\u7cfb\u7edf\u662fLEX-2\uff08Mitchell\u7b49\uff0c1982\uff09\u548cM eta -L ex \uff08Keller\uff0c1987\uff09\u3002 \uff09\u3002A x A-EBL\uff08Cohen\uff0c1990\uff09\u7ed3\u5408\u4e86EBL\u548c\u5f52\u7eb3\u6cd5\u3002\u5b83\u9996\u5148\u4f7f\u7528EBG\u5b66\u4e60\u63a7\u5236\u89c4\u5219\uff0c\u7136\u540e\u901a\u8fc7\u5b66\u4e60\u793a\u4f8b\u5bf9\u5176\u8fdb\u884c\u5b8c\u5584\u3002D olphin \uff08Zelle and Mooney\uff0c1993; Estlin and Mooney\uff0c1996\uff09\u662fA x A-EBL \u7684\u6269\u5c55\uff0c\u5b83\u4f7f\u7528F \u6cb9\u4f5c\u4e3a\u5f52\u7eb3\u5b66\u4e60\u6a21\u5757\u3002H amlet \uff08Borrajo\u548cVeloso\uff0c1997\uff09\u7cfb\u7edf\u5c06\u6f14\u7ece\u548c\u5f52\u7eb3\u76f8\u7ed3\u5408\u3002\u9996\u5148\uff0c\u5b83\u4f7f\u7528EBL\u5b66\u4e60\u901a\u5e38\u8fc7\u4e8e\u5177\u4f53\u6216\u7b3c\u7edf\u7684\u63a7\u5236\u89c4\u5219\uff0c\u7136\u540e\u4f7f\u7528\u5f52\u7eb3\u6cd5\u5bf9\u89c4\u5219\u8fdb\u884c\u6cdb\u5316\u548c\u4e13\u95e8\u5316\u3002E vo CK\uff08Aler et al\u3002\uff0c2002\uff09\u4f7f\u7528*\u9057\u4f20\u7f16\u7a0b*\u6765\u53d1\u5c55H amlet \u5b66\u4e60\u7684\u89c4\u5219\u5e76\u4ea7\u751f\u66f4\u6709\u6548\u7684\u641c\u7d22\u63a7\u5236\u3002 \u5b66\u4e60\u5e7f\u4e49\u7b56\u7565\u7684\u95ee\u9898\u6700\u65e9\u7531Roni Khardon\u7814\u7a76\u3002Khardon\u7684L2A CT \uff08Khardon\uff0c1999\u5e74\uff09\u901a\u8fc7\u5c06\u51b3\u7b56\u5217\u8868\u5b66\u4e60\u7b97\u6cd5\uff08Rivest\uff0c1987\u5e74\uff09\u6269\u5c55\u5230\u5173\u7cfb\u73af\u5883\uff0c\u4e3a*Blocksworld* \u548c*Logistics* \u9886\u57df\u5f15\u5165\u4e86\u901a\u7528\u7b56\u7565\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5b58\u5728\u4e24\u4e2a\u91cd\u8981\u7684\u5f31\u70b9\uff1a\uff081 \uff09\u5b83\u4f9d\u9760\u4eba\u7c7b\u5b9a\u4e49\u7684\u80cc\u666f\u77e5\u8bc6\u6765\u8868\u8fbe\u5173\u952e\u7279\u5f81\u8f6f\u57df\uff0c\u4f8b\u5982Blocksworld\u4e0a\u7684\u8c13\u8bcd\uff08block1\uff0cblock2\uff09\u6216i ^ place\uff08block\uff09\uff0c\u4ee5\u53ca\uff082\uff09\u5b66\u4e60\u7684\u7b56\u7565\u6ca1\u6709\u5f53\u95ee\u9898\u7684\u89c4\u6a21\u589e\u52a0\u65f6\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u6982\u62ec\u3002Martin\u548cGeffner\u89e3\u51b3\u4e86*Blocksworld\u4e2d\u7684*\u8fd9\u4e9b\u9650\u5236\u901a\u8fc7\u5c06\u5e7f\u4e49\u7b56\u7565\u7684\u8868\u793a\u8bed\u8a00\u4ece\u8c13\u8bcd\u903b\u8f91\u66f4\u6539\u4e3a*\u6982\u5ff5\u8bed\u8a00*\u6765\u5b66\u4e60\u9012\u5f52\u6982\u5ff5\uff08Martin and Gef ^ er\uff0c2000\uff09\u3002 \u6700\u8fd1\uff0c\u5e7f\u4e49\u7b56\u7565\u5b66\u4e60\u7684\u8303\u56f4\u5df2\u5728\u591a\u4e2a\u9886\u57df\u4e2d\u589e\u52a0\uff0c\u4ece\u800c\u4f7f\u8be5\u65b9\u6cd5\u53ef\u4e0e\u6700\u65b0\u7684\u8ba1\u5212\u8005\u7ade\u4e89\u3002\u8fd9\u4e00\u6210\u5c31\u5f52\u529f\u4e8e\u4e24\u4e2a\u65b0\u601d\u60f3\uff1a\uff081\uff09\u7b56\u7565\u8868\u793a\u8bed\u8a00\u4e2d\u5305\u542b\u4e86\u989d\u5916\u7684\u8c13\u8bcd\uff0c\u53ef\u4ee5\u6355\u83b7\u66f4\u6709\u6548\u7684\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\uff1b\uff082 \uff09\u5b66\u4e60\u7b56\u7565\u4e0d\u662f\u8d2a\u5a6a\u5730\u5e94\u7528\uff0c\u800c\u662f\u5728\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5\u7684\u6846\u67b6\u5185\u5e94\u7528\u3002\u4e00\u4e2a\u7a81\u51fa\u7684\u4f8b\u5b50\u662fO btuse W \u8fb9\u7f18\u7cfb\u7edf\uff08Yoon\u7b49\uff0c2007\uff09\uff0c\u5b83\u662fIPC-2008\u5b66\u4e60\u8f68\u8ff9\u7684\u6700\u4f73\u5b66\u4e60\u8005\u3002\u8be5\u7cfb\u7edf\u901a\u8fc7\u5bbd\u677e\u7684\u8ba1\u5212\u56fe\u4e30\u5bcc\u4e86\u5f53\u524d\u72b6\u6001\u7684\u77e5\u8bc6\uff0c\u5e76\u4f7f\u7528\u5b66\u4e60\u5230\u7684\u7b56\u7565\u5728\u201c\u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d\u4e2d\u751f\u6210\u8d85\u524d\u72b6\u6001\u3002[R \u5965\u52d2\uff08de la Rosa\u7b49\uff0c2008\uff09\u5c06\u5b66\u4e60\u5e7f\u4e49\u7b56\u7565\u7684\u95ee\u9898\u5b9a\u4e49\u4e3a\u4e24\u6b65\u6807\u51c6\u5206\u7c7b\u8fc7\u7a0b\u3002\u7b2c\u4e00\u6b65\uff0c\u5206\u7c7b\u5668\u6355\u83b7\u8981\u5728\u4e0d\u540c\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u5e94\u7528\u7684\u9996\u9009\u8fd0\u7b97\u7b26\u3002\u5728\u7b2c\u4e8c\u4e2a\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5206\u7c7b\u5668\u5728\u7ed9\u5b9a\u57df5\u7684\u4e0d\u540c\u8ba1\u5212\u4e0a\u4e0b\u6587\u4e2d\u6355\u83b7\u6bcf\u4e2a\u64cd\u4f5c\u5458\u7684\u9996\u9009\u7ed1\u5b9a\u3002\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u7531\u4ece\u7ed9\u5b9a\u72b6\u6001\u7684\u5bbd\u677e\u8ba1\u5212\u56fe\u4e2d\u63d0\u53d6\u7684\u6709\u7528\u64cd\u4f5c\u96c6\uff0c\u4ecd\u672a\u5b9e\u73b0\u7684\u76ee\u6807\u4ee5\u53ca\u8ba1\u5212\u4efb\u52a15\u7684\u9759\u6001\u8c13\u8bcd\u5b9a\u4e49\u3002 \u8fd8\u5b58\u5728\u901a\u8fc7\u89c4\u5212\u5b9e\u4f8b\u7684\u96c6\u5408\u8868\u793a\u5e7f\u4e49\u7b56\u7565\u7684\u7cfb\u7edf\uff0c\u5982AP\u7684CBR\u7cfb\u7edf\u3002\u57fa\u4e8e\u5b9e\u4f8b\u7684AP\u7cfb\u7edf\u901a\u5e38\u5728\u5404\u79cd\u57df\u4e2d\u90fd\u4e0d\u5177\u6709\u7ade\u4e89\u529b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b58\u5728\u5fc5\u987b\u5b9a\u4e49\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u57df\u4e2d\u90fd\u80fd\u5f88\u597d\u5de5\u4f5c\u7684\u9002\u5f53\u76f8\u4f3c\u6027\u5ea6\u91cf\u7684\u7f3a\u70b9\u3002PRIAR\u7cfb\u7edf\uff08Kambhampati\u548cHendler\uff0c1992\uff09\u5efa\u8bae\u5c06\u8ba1\u5212\u7684\u4fee\u6539\u4e0e\u751f\u6210\u8ba1\u5212\u7ed3\u5408\u8d77\u6765\u3002\u5929\u624d/ \u7c7b\u6bd4\uff08Veloso and Carbonell\uff0c1993\uff09\u4ecb\u7ecd\u4e86\u5c06\u63a8\u5bfc\u7c7b\u6bd4\u5e94\u7528\u4e8e\u89c4\u5212\u3002\u5b83\u5b58\u50a8\u4e86\u8ba1\u5212\u8ddf\u8e2a\uff0c\u4ee5\u907f\u514d\u5728\u5c06\u6765\u89e3\u51b3\u95ee\u9898\u65f6\u51fa\u73b0\u6545\u969c\u8def\u5f84\u3002\u8981\u68c0\u7d22\u7c7b\u4f3c\u7684\u8ba1\u5212\u75d5\u8ff9\uff0c\u8bf7\u795e\u7ae5/ \u7c7b\u6bd4 \u4f7f\u7528\u6700\u5c0f\u524d\u63d0\u6761\u4ef6\u4e3a\u5b83\u4eec\u5efa\u7acb\u7d22\u5f15\uff0c\u4ee5\u5b9e\u73b0\u4e00\u7ec4\u76ee\u6807\u3002\u57fa\u4e8e\u6848\u4f8b\u7684\u8ba1\u5212\u7cfb\u7edfPARIS\uff08Bergmann\u548cWilke\uff0c1996\uff09\u63d0\u51fa\u5f15\u5165\u62bd\u8c61\u6280\u672f\u6765\u5c06\u6848\u4f8b\u7ec4\u7ec7\u8d77\u6765\u5b58\u50a8\u5728\u5206\u5c42\u5b58\u50a8\u5668\u4e2d\u3002\u8be5\u6280\u672f\u63d0\u9ad8\u4e86\u6848\u4ef6\u4fee\u6539\u7684\u7075\u6d3b\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u5355\u4e2a\u6848\u4ef6\u7684\u8986\u76d6\u8303\u56f4\u3002DISTILL\uff08Winner\u548cVeloso\uff0c2003\u5e74\uff09\u5c06\u793a\u4f8b\u8ba1\u5212\u5408\u5e76\u5230\u79f0\u4e3a*dsPlanner* \u7684\u7ed3\u6784\u4e2d*\u3002 DISTILL\u5c06\u8ba1\u5212\u8f6c\u6362\u4e3a\u53c2\u6570\u5316\u7684if\u8bed\u53e5\uff0c\u5e76\u641c\u7d22\u5df2\u7ecf\u5b58\u50a8\u5728*dsPlanner \u4e2d\u7684\u6bcf\u4e2aif\u8bed\u53e5\u4ee5\u5408\u5e76\u5b83\u4eec\u3002\u5982\u679c\u5b66\u5230\u7684*dsPlanner* \u662f\u51c6\u786e\u7684\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u6765\u89e3\u51b3\u57df\u4e2d\u7684\u4efb\u4f55\u95ee\u9898\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u641c\u7d22\u3002\u5361\u5df4\u62c9\uff08\u5fb7\u62c9\u7f57\u838e\u7b49\u4eba\uff0c2007\uff09\u4f7f\u7528\u542f\u53d1\u5f0f\u8ba1\u5212\u4e2d\u7684\u8ba1\u5212\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u89e3\u51b3\u65b9\u6848\u8ba1\u5212\uff08\u79f0\u4e3a\u7c7b\u578b\u5e8f\u5217\uff09\u5bf9\u8282\u70b9\u8fdb\u884c\u6392\u5e8f\u3002\u53e6\u4e00\u4f4d\u57fa\u4e8e\u5b9e\u4f8b\u7684\u5b66\u4e60\u8005REPLICA \u4f7f\u7528\u53d7\u5173\u7cfb\u6570\u636e\u6316\u6398\u4e2d\u4f7f\u7528\u7684\u5ea6\u91cf\u542f\u53d1\u7684\u5173\u7cfb\u8ddd\u79bb\uff0c\u5b9e\u73b0\u4e86\u201c \u6700\u8fd1\u539f\u578b\u5b66\u4e60\u201d \uff08Garcia-Duran\u7b49\u4eba\uff0cress\uff09\u3002OAKPlan\uff08Serina\uff0c2010\u5e74\uff09\u4f7f\u7528\u7d27\u51d1\u7684\u56fe\u5f62\u7ed3\u6784\u6765\u7f16\u7801\u89c4\u5212\u95ee\u9898\u3002\u8be5\u7ed3\u6784\u63d0\u4f9b\u4e86\u89c4\u5212\u95ee\u9898\u62d3\u6251\u7684\u8be6\u7ec6\u63cf\u8ff0\uff0c\u5e76\u5141\u8bb8\u5b66\u4e60\u8005\u57fa\u4e8e\u5185\u6838\u529f\u80fd\u5b9a\u4e49\u9009\u62e9\u6027\u68c0\u7d22\u8fc7\u7a0b\u3002 \u5728\uff08de la Rosa\u7b49\u4eba\uff0c2009\uff09\u4e2d\uff0c\u6700\u8fd1\u63cf\u8ff0\u4e86\u4e00\u79cd\u8ba1\u5212\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u80fd\u591f\u4ece\u4e24\u79cd\u65b9\u6cd5\uff08\u89c4\u5219\u6216\u5b9e\u4f8b\uff09\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u6240\u4ee3\u8868\u7684\u5e7f\u4e49\u653f\u7b56\u4e2d\u53d7\u76ca\u3002\u8be5\u7cfb\u7edf\u67e5\u8be2\u7528\u4e8e\u4fee\u590d\u5bbd\u677e\u8ba1\u5212\u7f3a\u9677\u7684\u7b56\u7565\uff0c\u7136\u540e\u5c06\u6700\u7ec8\u653e\u677e\u7684\u8ba1\u5212\u7528\u4f5c\u201c \u6700\u4f73\u4f18\u5148\u641c\u7d22\u201d \u4e2d\u7684\u57fa\u7840\u5b8f\u64cd\u4f5c\u3002","title":"3.2. Learning Planning Search Control Knowledge"},{"location":"Papers/Survey%20of%20research%20literature/#4-state-of-artgeneralized-policies","text":"\u9009\u62e9\u4e24\u7bc7\u6700\u8fd1\u7684\u6587\u7ae0\uff0c\u4ecb\u7ecd\u73b0\u6709\u4e3b\u8981\u7814\u7a76\u65b9\u6cd5\uff0c\u5176\u4e2d - Generalized Planning With Deep Reinforcement Learning \u901a\u8fc7\u7f16\u7801\u7279\u5f81\u5de5\u7a0b\uff0c\u7136\u540e\u7c7b\u4f3cQ learning\u7684\u51b3\u7b56\u52a8\u4f5c\u7f51\u7edc\u8fdb\u884cpolicy\uff08state--->action\uff09 \u4e0d\u4f9d\u8d56\u4e8e\u89c6\u89c9\u8868\u793a\u6216\u901a\u8fc7\u89c4\u5212\u7b97\u6cd5\u751f\u6210\u7684\u6210\u529f\u8ba1\u5212\uff0c\u800c\u662f\u901a\u8fc7\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u901a\u8fc7\u53cd\u590d\u8bd5\u9a8c\u76f4\u63a5\u4ecePDDL\u8868\u793a\u4e2d\u5b66\u4e60\u95ee\u9898\u3002 PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS \u4e0a\u4e00\u7bc7\u8bba\u6587\u611f\u89c9\u53ef\u89e3\u91ca\u6027\u4e0d\u5f3a\uff0c\u4e0d\u4f1a\u5f88\u9c81\u68d2\uff0c\u6240\u4ee5\u627e\u5230\u8fd9\u7bc7\uff0c\u6211\u8ba4\u4e3apddlgym\u8fd9\u4e2a\u7528\u89c4\u5212\u671f\u6c42\u89e3pddl\u4f1a\u662f\u6253\u901aAI plan\u548cRL\u7684\u6b63\u786e\u6865\u6881\u3002","title":"4. State Of Art\u5b9e\u73b0Generalized Policies"},{"location":"Papers/Survey%20of%20research%20literature/#5-generalized-planning-with-deep-reinforcement-learning","text":"","title":"5. Generalized Planning With Deep Reinforcement Learning"},{"location":"Papers/Survey%20of%20research%20literature/#51","text":"\u7ecf\u5178\u89c4\u5212 \u53e4\u5178\u8ba1\u5212\u4f7f\u7528\u4eceSTRIPS\u5efa\u6a21\u8bed\u8a00\u6d3e\u751f\u800c\u6765\u7684\u6b63\u5f0f\u63cf\u8ff0\u8bed\u8a00\uff0c\u79f0\u4e3a\u8ba1\u5212\u9886\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09\uff0c\u5b9a\u4e49\u95ee\u9898\u9886\u57df\u53ca\u5176\u76f8\u5e94\u7684\u72b6\u6001\u548c\u76ee\u6807\u3002\u8ba1\u5212\u4efb\u52a1\uff0c\u5b83\u53ef\u4ee5\u7531\u96c6\u5408\uff08F\uff0cO\uff0cI\uff0cG\uff09\u5b9a\u4e49\uff0c\u5176\u4e2d*F*\u662f\u4e00\u7ec4\u547d\u9898\uff08\u6216\u8c13\u8bcd\uff09\uff0c\u5b83\u4eec\u63cf\u8ff0\u4efb\u52a1\u5b9e\u4f8b\u4e2d\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u5c5e\u6027\u53ca\u5176\u5173\u7cfb\uff0c O*\u662f\u4e00\u7ec4\u8fd0\u7b97\u7b26\uff08\u6216\u64cd\u4f5c\u7c7b\u578b\uff09\uff0cICF\u662f\u521d\u59cb\u72b6\u6001\uff0c\u800cGCF\u662f\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u52a8\u4f5c\u7c7b\u578bGO\u90fd\u7531\u4e09\u5143\u7ec4 \uff08Pre\uff08o\uff09\uff0cAdd\uff08o\uff09\uff0cDel\uff08o\uff09\uff09\u5b9a\u4e49\uff0c*\u5176\u4e2d\u524d\u63d0\u4e3a*Pre\uff08o\uff09*\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u5fc5\u987b\u5177\u6709\u6b63\u786e\u7684\u503c\u624d\u80fd\u9002\u7528\u4e8e\u8be5\u64cd\u4f5c\uff0c*Add\uff08o\uff09*\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u5728\u5e94\u7528\u540e\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3a\u771f\uff0c\u800cDel\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3afalse\u6839\u636e\u7533\u8bf7\u3002\u8bd5\u56fe\u627e\u5230\u4e00\u4e2a\u8ba1\u5212\u6216\u4e00\u7cfb\u5217\u884c\u52a8\uff0c\u8fd9\u4e9b\u884c\u52a8\u6216\u884c\u52a8\u5e8f\u5217\u4e00\u65e6\u5e94\u7528\uff0c\u5c31\u4f1a\u5728\u4e00\u5b9a\u65f6\u9650\u6216\u9884\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u5185\u5bfc\u81f4\u72b6\u6001\u4e3a*G*\u7684\u72b6\u6001\u3002\u67e5\u627e\u8ba1\u5212\u4efb\u52a1\u7684\u8ba1\u5212\u901a\u5e38\u662f\u901a\u8fc7**\u542f\u53d1\u5f0f\u641c\u7d22\u65b9\u6cd5**\u6765\u5b8c\u6210\u7684\uff0c\u4f46\u662f\uff0c\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u4e13\u6ce8\u4e8e\u5b66\u4e60\u53cd\u5e94\u5f0f\u8ba1\u5212\u7b56\u7565\uff0c\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u5728\u7279\u5b9a\u9886\u57df\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u540e\u63a8\u5e7f\u5230\u540c\u4e00\u9886\u57df\u4e2d\u65b0\u7684\u770b\u4e0d\u89c1\u7684\u5b9e\u4f8b\u3002 \u5f3a\u5316\u5b66\u4e60 \u4e0d\u540c\u4e8e\u5e38\u89c1\u7684 \\(<S,A,R,P,\\gamma \\text{\u6298\u6263\u7387}>\\) \u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5904\u7406\u987a\u5e8f\u51b3\u7b56\u95ee\u9898\u7684\u5b66\u4e60\u7b56\u7565\u3002 RL\u7b97\u6cd5\u6700\u5e38\u5047\u8bbe\u53ef\u4ee5\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08MDP\uff09\uff0c\u5728\u6709\u9650\u6c34\u5e73\u60c5\u51b5\u4e0b\u7531\u5143\u7ec4\uff08S\uff0cA\uff0c R\uff0cP \uff0c T \uff0cp\uff09\u5b9a\u4e49\uff0c\u5176\u4e2d*S*\u662f\u72b6\u6001\uff0cA\u662f\u52a8\u4f5c\u96c6\u5408\uff0c R*\u662f\u5c06\u72b6\u6001\u6216\u72b6\u6001\u52a8\u4f5c\u6620\u5c04\u5230\u6807\u91cf\u5956\u52b1\u7684\u5956\u52b1\u51fd\u6570\uff0cP\u662f\u8fc7\u6e21\u6982\u7387\u51fd\u6570\uff0c\u4f7f\u5f97 \\(p\uff08s' | s,a\uff09= P\uff08s'\uff0cs\uff0c a\uff09\\) * \uff08\u786e\u5b9a\u6027\u7b56\u7565\uff09**\uff0cT\u662f\u4efb\u52a1\u8303\u56f4\uff0c*p*\u662f\u521d\u59cb\u72b6\u6001\u7684\u5206\u5e03\u3002 \u5728\u8f83\u5927\u7684\u72b6\u6001\u548c\u52a8\u4f5c\u7a7a\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u5e0c\u671b\u5c06\u7684\u7b56\u7565\u8868\u793a\u4e3a\u8868\u683c( Q\u8868\u683c )\uff0c\u56e0\u6b64\u88ab\u8feb\u4f7f\u7528\u51fd\u6570\u903c\u8fd1\u5668\uff08 Deep Q network \u7684target network \uff09\u6765\u8868\u793a\u5e26\u6709\u67d0\u4e9b\u53c2\u6570*6*\u7684\u7b56\u7565*\u3002*\u4e13\u6ce8\u4e8e\u968f\u673a\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u6620\u5c04\u72b6\u6001\u548c\u52a8\u4f5c\u6982\u7387\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8e\u7b56\u7565\u68af\u5ea6\u7684\u65b9\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u91c7\u6837\u4f30\u8ba1\u76ee\u6807\u51fd\u6570\u76f8\u5bf9\u4e8e\u7b56\u7565\u53c2\u6570\u7684\u68af\u5ea6\u3002\u5728\u5b9e\u65bd\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u6837\u672c\u8f68\u8ff9\u8ba1\u7b97\u51fa\u7684\u201c\u4f2a\u635f\u5931\u201d\u7684\u68af\u5ea6\u6765\u4f30\u7b97\u7b56\u7565\u68af\u5ea6 \u8fd1\u7aef\u7b56\u7565\u4f18\u5316\uff08PPO\uff09\u662f\u4e00\u79cd\u57fa\u4e8e\u7b56\u7565\u68af\u5ea6\u7684\u7b97\u6cd5\uff0c\u65e8\u5728\u901a\u8fc7\u5bf9\u6536\u96c6\u5230\u7684\u6570\u636e\u8fdb\u884c\u591a\u6b21\u68af\u5ea6\u66f4\u65b0\uff0c\u7136\u540e\u4e22\u5f03\u5b83\u6765\u6536\u96c6\u66f4\u591a\u6570\u636e\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5229\u7528\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6536\u96c6\u5230\u7684\u6570\u636e\u3002\u4e3a\u4e86\u907f\u514d\u53ef\u80fd\u56e0\u8f83\u5927\u7684\u7b56\u7565\u66f4\u65b0\u800c\u5f15\u8d77\u7684\u7a33\u5b9a\u6027\u95ee\u9898\uff0cPPO\u4f7f\u7528\u7279\u6b8a\u7684\u88c1\u526a\u76ee\u6807\u6765\u963b\u6b62\u5f53\u524d\u7b56\u7565\u4e0e\u6570\u636e\u6536\u96c6\u7b56\u7565\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4ece\u800c\u5b9a\u4e49\u4f18\u5316\u95ee\u9898","title":"5.1. \u524d\u7f6e\u77e5\u8bc6"},{"location":"Papers/Survey%20of%20research%20literature/#52-rlgeneralized-policy","text":"","title":"5.2. RL\u5b66\u4e60generalized policy"},{"location":"Papers/Survey%20of%20research%20literature/#521-state","text":"\u9009\u62e9\u5c06\u72b6\u6001\u4e2d\u7684\u72b6\u6001\u8868\u793a\u4e3a\u56fe\u5f62\uff0c\u5e76\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u7ed9\u5b9a\u72b6\u6001\u4e2d\u5bf9\u8c61\u4e4b\u95f4\u7684\u5c5e\u6027\u548c\u5173\u7cfb\u3002\u7684\u6846\u67b6\u5728PDDL\u5efa\u6a21\u8bed\u8a00\u6307\u5b9a\u7684\u95ee\u9898\u57df\u4e0a\u8fd0\u884c\uff0c\u5728\u8be5\u95ee\u9898\u57df\u4e2d\uff0c\u95ee\u9898\u5b9e\u4f8b\u7531\u5bf9\u8c61\u5217\u8868\u548c\u8c13\u8bcd\u5217\u8868\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u63cf\u8ff0\u8fd9\u4e9b\u5bf9\u8c61\u7684\u5c5e\u6027\u4ee5\u53ca\u5f53\u524d\u72b6\u6001\u4e0b\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5c06\u81ea\u5df1\u9650\u5236\u5728\u8c13\u8bcd\u7684Arity\u4e0d\u8d85\u8fc72\u7684\u57df\u4e2d\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u91cd\u5927\u9650\u5236\uff0c\u56e0\u4e3a\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8f83\u9ad8Arity\u8c13\u8bcd\u53ef\u4ee5\u5206\u89e3\u4e3a\u51e0\u4e2a\u8f83\u4f4eArity\u8c13\u8bcd\u3002\u7684\u56fe\u7531\u5168\u5c40\u7279\u5f81\uff0c\u8282\u70b9\u7279\u5f81\u548c\u8fb9\u7f18\u7279\u5f81\u7ec4\u6210\uff0cU\u8868\u793a\u5168\u5c40\u7279\u5f81 \uff0c\u8282\u70b9V\u548c\u8fb9*E\u3002 \u5168\u5c40\u7279\u5f81\u8868\u793a\u95ee\u9898\u5b9e\u4f8b\u6216\u5bf9\u4e8e\u8be5\u57df\u800c\u8a00\u662f\u552f\u4e00\u7684\u5b9e\u4f53\u7684\u5c5e\u6027\uff0c\u4f8b\u5982Blocksworld\u57df\u4e2d\u7684hand\uff0c\u5e76\u7531\u8be5\u57df\u76840-arity \u8c13\u8bcd\u786e\u5b9a\u3002 \u8282\u70b9\u7279\u5f81\u8868\u793a\u57df\u4e2d\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u4f8b\u5982\u5b83\u4eec\u7684\u7c7b\u578b\uff09\uff0c\u5e76\u75311-arity\u8c13\u8bcd\u786e\u5b9a\u3002 \u6700\u540e\uff0c\u8fb9\u7f18\u7279\u5f81\u4ee3\u8868\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u75312 -arity \u8c13\u8bcd\u786e\u5b9a\u3002 \u5f53\u751f\u6210PDDL\u5b9e\u4f8b\u72b6\u6001\u7684\u56fe\u5f62\u8868\u793a\u65f6\uff0c\u5c06\u4e3a\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u8282\u70b9\u7684\u5b8c\u6574\u56fe\u5f62\u3002\u5bf9\u4e8e\u72b6\u6001\u4e2d\u7684\u6bcf\u4e2a\u8c13\u8bcd\uff0c\u5c06\u5bf9\u5e94\u7684\u7279\u5f81\u5206\u914d\u4e3a\u4e8c\u8fdb\u5236\u503c1\uff0c\u5e76\u5047\u5b9a\u6240\u6709\u5176\u4ed6\u7279\u5f81\u5747\u4e3afalse\uff0c\u5176\u503c\u4e3a0\u3002\u4e3a\u4e86\u5c06\u76ee\u6807\u914d\u7f6e\u5305\u62ec\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\u4e2d\uff0c\u76ee\u6807\u8c13\u8bcd\u51e0\u4e4e\u88ab\u89c6\u4e3a\u53e6\u4e00\u4e2a\u72b6\u6001\u56fe\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e24\u4e2a\u56fe\u8fde\u63a5\u5728\u4e00\u8d77\u4ee5\u5f62\u6210\u72b6\u6001\u76ee\u6807\u7684\u5355\u4e2a\u8868\u793a\u5f62\u5f0f\u3002\u72b6\u6001\u56fe\u548c\u76ee\u6807\u56fe\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u76ee\u6807\u56fe\u4e2d\uff0c\u503c\u4e3a0\u7684\u7279\u5f81\u8868\u793a\u6ca1\u6709\u8d21\u732e\u76ee\u6807\uff1b\u5728\u72b6\u6001\u56fe\u4e2d\uff0c\u503c\u4e3a0\u7684\u7279\u5f81\u610f\u5473\u7740\u8c13\u8bcd\u88ab\u5206\u914d\u4e86\u9519\u8bef\u503c\u3002 \u5728\u6574\u4e2a\u5de5\u4f5c\u4e2d\u4f7f\u7528\u7684\u7ecf\u5178\u89c4\u5212\u9886\u57df\u662f\u786e\u5b9a\u6027\u7684\u548c\u9a6c\u5c14\u53ef\u592b\u5f0f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u524d\u72b6\u6001\u62e5\u6709\u6240\u6709\u5fc5\u9700\u7684\u4fe1\u606f\u4ee5\u6700\u4f73\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5c3d\u7ba1\u5177\u6709\u6b64\u5c5e\u6027\uff0c\u53d1\u73b0\u9664\u4e86\u5f53\u524d\u72b6\u6001\u5916\uff0c\u8fc7\u53bb\u7684\u72b6\u6001\u8fd8\u6709\u52a9\u4e8e\u5b66\u4e60\u8fc7\u7a0b\u5e76\u63d0\u9ad8\u5bf9\u8f83\u5927\u5b9e\u4f8b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u5c3d\u7ba1\u8fd9\u4e0d\u662f\u4e25\u683c\u5fc5\u8981\u7684\uff0c\u5b9e\u9a8c\u8868\u660e\uff0c\u6b64\u6b65\u9aa4\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5e2e\u52a9\u653f\u7b56\u7f13\u89e3\u201c\u9891\u7e41\u6765\u6765\u56de\u56de\u201d\u884c\u4e3a\u3002\u6dfb\u52a0\u6b64\u5386\u53f2\u8bb0\u5f55\u5f88\u7b80\u5355\uff1b\u53ea\u9700\u5c06K\u4e2a\u5148\u524d\u72b6\u6001\u548c\u5f53\u524d\u72b6\u6001\u7684\u56fe\u8fde\u63a5\u8d77\u6765\uff0c\u7136\u540e\u5982\u524d\u6240\u8ff0\u5c06\u76ee\u6807\u56fe\u8fde\u63a5\u8d77\u6765\u3002\u6d4b\u8bd5\u4e86\u51e0\u4e2a\u8fd9\u6837\u7684\u5386\u53f2\u89c6\u91ce\uff0c\u53d1\u73b0\u4ec5\u6dfb\u52a0\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u4f1a\u5e26\u6765\u603b\u4f53\u4e0a\u6700\u4f73\u7684\u6027\u80fd\u548c\u901a\u7528\u6027\u3002 \u4e0b\u56fe\u770b\u5230\u6765\u81eaBlocksworld\u57df\u7684\u72b6\u6001\u76ee\u6807\u56fe \u548c\u5177\u67093\u4e2a\u5757\u7684\u5b9e\u4f8b\u3002","title":"5.2.1. state \u7684\u8868\u793a"},{"location":"Papers/Survey%20of%20research%20literature/#522-graph-embeding","text":"\u4e3a\u4e86\u4f7f\u7528\u72b6\u6001\u76ee\u6807\u7684\u56fe\u5f62\u8868\u793a\u6765\u5b66\u4e60\u597d\u7684\u7b56\u7565\uff0c\u9996\u5148\u4f7f\u7528\u56fe\u5f62\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u5c06\u56fe\u5f62\u7684\u8282\u70b9\uff0c\u8fb9\u7f18\u548c\u5168\u5c40\u7279\u5f81\u5d4c\u5165\u5230\u5404\u81ea\u7684\u6f5c\u5728\u7a7a\u95f4\u4e2d\u3002GNN\u5728\u56fe\u7684\u4e0d\u540c\u7ec4\u4ef6\u4e4b\u95f4\u6267\u884c\u6d88\u606f\u4f20\u9012\uff0c\u4ece\u800c\u5141\u8bb8\u6709\u7528\u7684\u4fe1\u606f\u6d41\u52a8\u3002\u4f7f\u7528\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684GNN\u5757\uff0c\u6bcf\u79cd\u5757\u90fd\u5728\u56fe\u5185\u5b9e\u65bd\u4e0d\u540c\u6837\u5f0f\u7684\u4fe1\u606f\u6d41\uff0c\u56e0\u6b64\u6bd4\u5176\u4ed6\u7c7b\u578b\u66f4\u9002\u5408\u67d0\u4e9b\u95ee\u9898\u9886\u57df\u3002\u5728\u8fd9\u4e24\u79cd\u7c7b\u578b\u4e2d\uff0c\u66f4\u65b0\u987a\u5e8f\u76f8\u4f3c\uff0c\u5e76\u91c7\u7528\u4ee5\u4e0b\u5e38\u89c1\u5f62\u5f0f\uff1a 1.\u4f7f\u7528\u5148\u524d\u7684\u8fb9\u7f18\u548c\u8fd9\u4e9b\u8fb9\u7f18\u7684\u201c\u539f\u59cb\u201d\u8282\u70b9\u66f4\u65b0\u8fb9\u7f18\u3002 2.\u4f7f\u7528\u5148\u524d\u7684\u8282\u70b9\uff0c\u4f20\u5165\u7684\u66f4\u65b0\u8fb9\u548c\u5168\u5c40\u7279\u5f81\u66f4\u65b0\u8282\u70b9\u3002 3.\u4f7f\u7528\u5148\u524d\u7684\u5168\u5c40\u53d8\u91cf\u548c\u66f4\u65b0\u7684\u8282\u70b9\u7684\u805a\u5408\u6765\u66f4\u65b0\u5168\u5c40\u53d8\u91cf\u3002 \u4f7f\u7528\u7684\u7b2c\u4e00\u79cd\u7c7b\u578b\uff0c\u5c06\u5176\u547d\u540d\u4e3a**Graph Network\u5757**\uff08GN\u5757\uff09\u3002 \u7b2c\u4e8c\u79cd\u7c7b\u578b\u7684\u5757\u65e8\u5728\u89e3\u51b3GN\u5757\u7684\u7f3a\u70b9\uff0c\u5e76\u4e3a\u6b64\u76ee\u7684\u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u6ce8\u673a\u5236\u3002\u5c06\u7b2c\u4e8c\u4e2a\u5757\u547d\u540d\u4e3a**Graph Network Attention\u5757**\uff08GNAT\u5757\uff09\uff0c\u4e0eGraph Attention Network\u4e0d\u540c\uff0c\u5b83\u4f7f\u7528\u7684\u6ce8\u610f\u529b\u673a\u5236\u7c7b\u4f3c\u4e8eTransformer\u6a21\u578b\u3002","title":"5.2.2. graph embeding"},{"location":"Papers/Survey%20of%20research%20literature/#523-policy","text":"\u4e0e\u5e38\u89c4\u7684\u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\u4e0d\u540c\uff0c\u5728\u5e38\u89c4\u7684\u5f3a\u5316\u5b66\u4e60\u57fa\u51c6\u4e2d\uff0c\u4e00\u7ec4\u52a8\u4f5c\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u65b9\u4fbf\u5730\u8fdb\u884c\u5904\u7406\uff0c\u800c\u5728\u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u4e2d\uff0c\u4e00\u7ec4\u52a8\u4f5c\u53d6\u51b3\u4e8e\u72b6\u6001\uff0c\u5e76\u4e14\u72b6\u6001\u4e4b\u95f4\u7684\u5927\u5c0f\u4e0d\u540c\u3002\u5728PDDL\u4e2d\uff0c\u6bcf\u4e2a\u57df\u63cf\u8ff0\u90fd\u5b9a\u4e49\u4e86\u4e00\u7ec4\u52a8\u4f5c\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u8fd9\u4e9b\u52a8\u4f5c\u7c7b\u578b\u7f6e\u4e8e\u72b6\u6001\u57fa\u7840\u4e0a\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002\u6bcf\u79cd\u52a8\u4f5c\u7c7b\u578b\u90fd\u63a5\u6536\u4e00\u7ec4\u53c2\u6570\uff0c\u5e76\u4e14\u4e3a\u4e86\u9002\u7528\uff0c\u8be5\u52a8\u4f5c\u7684\u53c2\u6570\u5fc5\u987b\u7b26\u5408\u4e00\u7ec4\u524d\u63d0\u6761\u4ef6\u3002\u4f8b\u5982\uff0cBlocksworld\u57df\u5177\u6709\u4e00\u79cd\u79f0\u4e3a\u201c\u62fe\u53d6\u201d\u7684\u52a8\u4f5c\u7c7b\u578b\uff0c\u8be5\u52a8\u4f5c\u7c7b\u578b\u5c06\u5355\u4e2a\u5757\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002\u8be5\u5757\u5fc5\u987b\u662f\u201c clear\u201d\uff0c\u201c on-table\u201d\u4e14\u201c arm-empty\u201d\u5c5e\u6027\u5fc5\u987b\u4e3atrue\uff0c\u6b64\u64cd\u4f5c\u624d\u9002\u7528\u3002\u53ef\u4ee5pick-up\u7b26\u5408\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u7684\u6240\u6709\u5757\uff0c\u5e76\u4ee3\u8868\u552f\u4e00\u7684\u52a8\u4f5c\u3002\u9664\u4e86\u5148\u51b3\u6761\u4ef6\u5916\uff0c\u6bcf\u79cd\u52a8\u4f5c\u7c7b\u578b\u8fd8\u5177\u6709\u5728\u5e94\u7528\u52a8\u4f5c\u65f6\u5f15\u8d77\u72b6\u6001\u7684\u6548\u679c\u3002\u5176\u4e2d\u4e00\u4e9b\u5f71\u54cd\u53ef\u80fd\u662f\u6b63\u9762\u7684\uff08\u72b6\u6001\u7684\u67d0\u4e9b\u8c13\u8bcd\u5c06\u91c7\u7528\u771f\u503c\uff09\uff0c\u800c\u67d0\u4e9b\u8d1f\u9762\u5f71\u54cd\uff08\u72b6\u6001\u7684\u8c13\u8bcd\u5c06\u91c7\u7528\u5047\u503c\uff09\u3002 \u5728\u8ba1\u5212\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\u90fd\u4f1a\u7ed9\u51fa\u5f53\u524d\u72b6\u6001\u548c\u9002\u7528\u52a8\u4f5c\u7684\u5217\u8868\u3002\u4e3a\u4e86\u4ee5\u6709\u610f\u4e49\u7684\u65b9\u5f0f\u8868\u793a\u52a8\u4f5c\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u5bf9\u5176\u5b66\u4e60\u7b56\u7565\uff0c\u9009\u62e9\u6309\u7167\u52a8\u4f5c\u7684\u6548\u679c\u6765\u63cf\u8ff0\u52a8\u4f5c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u662f\u505a\u51fa\u51b3\u7b56\u6240\u5fc5\u9700\u7684\u8981\u7d20\u3002\u7531\u4e8e\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\u5728\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5411\u4ee3\u7406\u63d0\u4f9b\u4e86\u6240\u6709\u6cd5\u5f8b\u8bc9\u8bbc\uff0c\u56e0\u6b64\u5ffd\u7565\u4e86\u524d\u63d0\u6761\u4ef6\uff08\u6240\u6709\u6cd5\u5f8b\u8bc9\u8bbc\u90fd\u6ee1\u8db3\u4e86\u524d\u63d0\u6761\u4ef6\uff09\u3002\u6bcf\u4e2a\u52a8\u4f5c\u90fd\u7531\u51e0\u79cd\u6548\u679c\u7ec4\u6210\uff0c\u6bcf\u79cd\u6548\u679c\u90fd\u6d89\u53ca\u72b6\u6001\u7684\u4e0d\u540c\u65b9\u9762\uff0c\u53ef\u4ee5\u662f\u6b63\u9762\u7684\u4e5f\u53ef\u4ee5\u662f\u8d1f\u9762\u7684\u3002\u6839\u636e\u6548\u679c\u7684\u7c7b\u578b\uff08\u5168\u5c40\u6548\u679c\uff0c\u8282\u70b9\u6548\u679c\u6216\u8fb9\u7f18\u6548\u679c\uff09\u5c06\u6548\u679c\u805a\u5728\u4e00\u8d77\uff0c\u548c\u8868\u793a\u4e3a\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u5d4c\u5165\u548c\u4e00\u4e2a\u70ed\u5411\u91cf\u7684\u4e32\u8054\uff0c\u8be5\u5411\u91cf\u63cf\u8ff0\u54ea\u4e2a\u8c13\u8bcd\u5df2\u66f4\u6539\u4ee5\u53ca\u5176\u4e3a\u6b63\u8fd8\u662f\u8d1f\u3002\u8fd9\u4e2a\u4e00\u5143\u5411\u91cf\u5728\u76f8\u5e94\u8f93\u5165\u5206\u91cf\u7684\u7ef4\u5ea6\u4e0a*\uff08d v*\u4e3a\u4f8b\u5982\u8282\u70b9\u6548\u5e94\uff09\u5e76\u5305\u542b1\u8868\u793a\u6b63\u4f5c\u7528\u6216-1\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u8c13\u8bcd\u7684\u8d1f\u9762\u5f71\u54cd\u3002\u6bcf\u4e2a\u6548\u679c\u90fd\u4f1a\u6839\u636e\u5176\u7c7b\u578b\u7531\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\u8fdb\u884c\u8f6c\u6362\uff0c\u7136\u540e\u5c06\u5df2\u8f6c\u6362\u7684\u6548\u679c\u5206\u6563\u56de\u5176\u539f\u59cb\u52a8\u4f5c\u3002\u5c06\u6bcf\u4e2a\u52a8\u4f5c\u7684\u6548\u679c\u6c47\u603b\u5728\u4e00\u8d77\uff0c\u4ee5\u5f62\u6210\u8be5\u52a8\u4f5c\u7684\u5355\u4e2a\u5411\u91cf\u8868\u793a\uff0c\u6700\u7ec8\u5c06\u5176\u9988\u9001\u5230\u7b56\u7565\u795e\u7ecf\u7f51\u7edc\u3002 \u6700\u7ec8policy\u662fMLP\uff0c\u5b83\u4e3a\u6bcf\u4e2a\u52a8\u4f5c\u8f93\u51fa\u5355\u4e2a\u6807\u91cf\uff0c\u7136\u540e\u901a\u8fc7softmax\u64cd\u4f5c\u5bf9\u8fd9\u4e9b\u6807\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u4ee5\u83b7\u53d6\u52a8\u4f5c\u7684\u79bb\u6563\u5206\u5e03\u3002 \u53e6\u5916\uff0c\u53e6\u4e00\u4e2aMLP\u63d0\u53d6\u56fe\u5f62\u7684\u6700\u7ec8\u5168\u5c40\u7279\u5f81\u5d4c\u5165\u5e76\u8f93\u51fa\u72b6\u6001\u7684\u9884\u6d4b\u503c\uff0c\u4ee5\u7528\u4e8eRL\u7b97\u6cd5\u4e2d\u7684\u4f18\u52bf\u4f30\u8ba1\u3002","title":"5.2.3. Policy \u7684\u8868\u793a"},{"location":"Papers/Survey%20of%20research%20literature/#524-training","text":"\u7531\u4e8e\u8fd9\u9879\u5de5\u4f5c\u7684\u91cd\u70b9\u662f\u627e\u5230\u53ef\u884c\u7684\u8ba1\u5212\uff0c\u56e0\u6b64\u9009\u62e9\u5c06\u95ee\u9898\u5efa\u6a21\u4e3a\u5e26\u6709\u4e8c\u5143\u5956\u52b1\u7684\u7a00\u758f\u5956\u52b1\u95ee\u9898\u3002\u5982\u679c\u4ee3\u7406\u6ee1\u8db3\u9884\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u76ee\u6807\uff0c\u5219\u5f97\u52301\u7684\u5956\u52b1\uff0c\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\uff0c\u5219\u6ca1\u6709\u4efb\u4f55\u5956\u52b1\u3002\u4e3a\u4e86\u786e\u5b9a\u9002\u5f53\u7684\u65f6\u9650\uff0c\u4f7f\u7528\u4e86\u5e38\u7528\u7684hff\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u5b83\u89e3\u51b3\u4e86\u7ebf\u6027\u65f6\u95f4\u95ee\u9898\u7684\u677e\u5f1b\u5f62\u5f0f\uff08\u677e\u5f1b\u95ee\u9898\u6ca1\u6709\u8d1f\u9762\u5f71\u54cd\uff09\u3002\u91c7\u7528\u677e\u5f1b\u8ba1\u5212\u7684\u957f\u5ea6\uff0c\u5e76\u5c06\u5176\u4e58\u4ee55\u7684\u5e38\u6570\u4ee5\u83b7\u5f97\u5730\u5e73\u7ebf\u7684\u957f\u5ea6\u3002\u9009\u62e9\u4f7f\u7528PPO\u8bad\u7ec3\u7684\u7b56\u7565 \u66f4\u7b80\u5355\u7684\u65b9\u6cd5 \u6839\u636e\u5b9e\u4f8b\u5927\u5c0f\u7684\u5206\u5e03\u751f\u6210\u4e86\u6bcf\u4e2a\u8bad\u7ec3\u60c5\u8282\uff0c\u5b9e\u4f8b\u5927\u5c0f\u7684\u5206\u5e03\u5c0f\u5230\u8db3\u4ee5\u88ab\u968f\u673a\u521d\u59cb\u5316\u7684\u7b56\u7565\u89e3\u51b3\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u4f7f\u7b56\u7565\u5f97\u4ee5\u53d1\u5c55\uff0c\u6700\u7ec8\u89e3\u51b3\u5206\u53d1\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u5927\u5c0f\uff0c\u800c\u65e0\u9700\u624b\u52a8\u8c03\u6574\u8bfe\u7a0b\u8868\u3002\u5c3d\u7ba1\u8bbe\u7f6e\u6b64\u5206\u5e03\u9700\u8981\u624b\u52a8\u5b8c\u6210\uff0c\u4f46\u53d1\u73b0\u901a\u8fc7\u4f7f\u7528\u968f\u673a\u672a\u7ecf\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u7b80\u5355\u7684\u8bd5\u9a8c\u548c\u9519\u8bef\uff0c\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5feb\u6377\u5730\u5b8c\u6210\u6b64\u4efb\u52a1\u3002 \u5bf9\u6807\u51c6PPO\u7b97\u6cd5\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c0f\u8c03\u6574\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u672c\u4f8b\u7684\u6027\u80fd\u3002\u8bb8\u591aRL\u7b97\u6cd5\u7684\u5b9e\u73b0\u4f1a\u5728\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u4e4b\u524d\u9488\u5bf9\u56fa\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u63a8\u51fa\u7b56\u7565\uff0c\u901a\u5e38\u4f1a\u5728\u8fc7\u7a0b\u5b8c\u6210\u4e4b\u524d\u7ec8\u6b62\u60c5\u8282\uff0c\u5e76\u4f7f\u7528\u8bf8\u5982Generalized Advantage Estimation\u548c\u81ea\u4e3e\u503c\u4f30\u8ba1\u4e4b\u7c7b\u7684\u65b9\u6cd5\u6765\u4f30\u8ba1Reward\u3002 \u53d1\u73b0\u8fd9\u4e9b\u5143\u7d20\u4f1a\u7ed9\u7684\u5b66\u4e60\u8fc7\u7a0b\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u504f\u89c1\uff0c\u800c\u662f\u4f7f\u7528\u7ecf\u9a8c\u6027\u56de\u62a5\u800c\u4e0d\u662f\u5f15\u5bfc\u4ef7\u503c\u4f30\u7b97\u6765\u8ba1\u7b97\u4f18\u52bf\uff0c\u4ece\u800c\u9010\u6b65\u63a8\u5e7f\u6bcf\u4e2a\u60c5\u8282\u76f4\u81f3\u7ec8\u6b62\u3002\u8fd8\u53d1\u73b0\uff0c\u4f7f\u7528\u8bb8\u591a\u63a8\u5e7f\u548c\u5927\u6279\u91cf\u751f\u4ea7\u6709\u52a9\u4e8e\u7a33\u5b9a\u5b66\u4e60\u8fc7\u7a0b\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u6700\u7ec8\u6027\u80fd\uff0c\u56e0\u6b64\u8fdb\u884c\u4e86100\u96c6\u7684\u63a8\u5e7f\uff0c\u5e76\u4f7f\u7528\u7ed3\u679c\u6570\u636e\u5728\u6bcf\u6b21\u5b66\u4e60\u8fed\u4ee3\u65f6\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7b97\u6cd5\u3002","title":"5.2.4. training"},{"location":"Papers/Survey%20of%20research%20literature/#525","text":"\u8bc4\u4f30\u4e86\u4e94\u4e2a\u5e38\u89c1\u7684\u7ecf\u5178\u89c4\u5212\u9886\u57df\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u9886\u57df\u662f\u4eceIPC\u89c4\u5212\u7ade\u8d5b\u96c6\u5408\u4e2d\u9009\u62e9\u7684\uff0c\u5176\u9886\u57df\u8c13\u8bcd\u4e0d\u5927\u4e8e2\uff1a \u2022Blocksworld\uff084 op\uff09\uff1a\u673a\u68b0\u624b\u5fc5\u987b\u4ece\u521d\u59cb\u914d\u7f6e\u4e2d\u79fb\u52a8\u79ef\u6728\uff0c\u4ee5\u4fbf\u6839\u636e\u76ee\u6807\u914d\u7f6e\u8fdb\u884c\u6392\u5217\u3002 \u2022\u536b\u661f\uff1a\u4e00\u7ec4\u536b\u661f\u5fc5\u987b\u62cd\u6444\u4f4d\u7f6e\u7684\u56fe\u50cf\uff0c\u6bcf\u4e2a\u56fe\u50cf\u90fd\u5177\u6709\u6307\u5b9a\u7c7b\u578b\u7684\u4f20\u611f\u5668\u3002 \u2022\u7269\u6d41\uff1a\u5fc5\u987b\u5c06\u5305\u88f9\u8fd0\u9001\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u4f7f\u7528\u98de\u673a\u548c\u5361\u8f66\u5728\u57ce\u5e02\u548c\u5730\u70b9\u4e4b\u95f4\u79fb\u52a8\u5305\u88f9\u3002 \u2022\u5939\u722a\uff1a\u53cc\u81c2\u673a\u5668\u4eba\u5fc5\u987b\u5c06\u7403\u4eceA\u5ba4\u4f20\u9001\u5230B\u5ba4\u3002 \u2022\u6e21\u8f6e\uff1a\u6e21\u8f6e\u5fc5\u987b\u5c06\u6c7d\u8f66\u4ece\u6700\u521d\u7684\u4f4d\u7f6e\u8fd0\u8f93\u5230\u6307\u5b9a\u7684\u76ee\u6807\u4f4d\u7f6e\u3002 \u8fd9\u4e94\u4e2a\u9886\u57df\u7684\u5171\u540c\u70b9\u5728\u4e8e\uff0c\u53ef\u4ee5\u4e3a\u5b83\u4eec\u5236\u5b9a\u7b80\u5355\u7684\u901a\u7528\u8ba1\u5212\uff0c\u4ece\u800c\u80fd\u591f\u89e3\u51b3\u4efb\u610f\u5927\u7684\u5b9e\u4f8b\u3002 \u5e0c\u671b\u8bc1\u660e\u7684\u65b9\u6cd5\u80fd\u591f\u4ea7\u751f\u89e3\u51b3\u6bd4\u5b9e\u4f8b\u5927\u5f97\u591a\u7684\u5b9e\u4f8b\u7684\u7b56\u7565\uff0c\u4ece\u800c\u81ea\u52a8\u53d1\u73b0\u8fd9\u6837\u7684\u5e7f\u4e49\u8ba1\u5212\u3002\u6709\u4e9b\u9886\u57df\u6bd4\u5176\u4ed6\u9886\u57df\u5bb9\u6613\uff0c\u5e76\u4e14\u5728\u5e7f\u4e49\u8ba1\u5212\u5f88\u5bb9\u6613\u63cf\u8ff0\u7684\u60c5\u51b5\u4e0b\uff0c\u7ecf\u5e38\u76ee\u7779\u8be5\u653f\u7b56\u975e\u5e38\u6210\u529f\u5730\u63a8\u5e7f\u3002\u4f8b\u5982\uff0cGripper\u57df\u5177\u6709\u975e\u5e38\u7b80\u5355\u7684\u7b56\u7565\uff08\u6bcf\u6b21\u5230B\u5ba4\u90fd\u6293\u4f4f2\u4e2a\u7403\uff09\uff0c\u5b9e\u9645\u4e0a\u7684\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u4e86\u6700\u4f73\u7b56\u7565\uff0c\u5373\u4f7f\u5bf9\u4e8e\u6570\u767e\u4e2a\u7403\u7684\u5b9e\u4f8b\uff0c\u901a\u5e38\u4ecd\u7136\u8868\u73b0\u6700\u4f73\u3002\u4e3a\u4e86\u8bc1\u660e\u7684\u653f\u7b56\u786e\u5b9e\u80fd\u5f88\u597d\u5730\u63a8\u5e7f\uff0c \u2022\u5bf9\u4e8eBlocksworld\u57df\uff0c\u57284\u4e2a\u5757\u7684\u5b9e\u4f8b\u4e0a\u8bad\u7ec3\u4e86\u7684\u7b56\u7565\uff0c\u5e76\u57285-100\u4e2a\u5757\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 \u2022\u5bf9\u4e8e\u201c\u536b\u661f\u201d\u9886\u57df\uff0c\u5bf9\u4f7f\u75281-3\u9897\u536b\u661f\uff0c\u6bcf\u9897\u536b\u661f1-3\u53f0\u4eea\u5668\uff0c1-3\u79cd\u4eea\u5668\uff0c2-3\u4e2a\u76ee\u6807\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u653f\u7b56\u57f9\u8bad\uff0c\u5e76\u9488\u5bf9\u4f7f\u75281-14\u9897\u536b\u661f\uff0c2-11\u53f0\u4eea\u5668\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u6bcf\u4e2a\u536b\u661f\uff0c1-6\u79cd\u4eea\u5668\u548c2-42\u4e2a\u76ee\u6807\u3002 \u2022\u5bf9\u4e8e\u7269\u6d41\u9886\u57df\uff0c\u9488\u5bf9\u4f7f\u75282-3\u67b6\u98de\u673a\uff0c2-3\u4e2a\u57ce\u5e02\uff0c\u6bcf\u4e2a\u57ce\u5e022-3\u4e2a\u5730\u70b9\uff0c1-2\u4e2a\u5305\u88f9\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u7684\u7b56\u7565\uff0c\u5e76\u8bc4\u4f30\u4e86\u4f7f\u75284-12\u67b6\u98de\u673a\uff0c4-15\u4e2a\u57ce\u5e02\uff0c1\u4e2a\u5b9e\u4f8b\u7684\u5b9e\u4f8b\u6bcf\u4e2a\u57ce\u5e02-6\u4e2a\u5730\u70b9\u548c8-40\u4e2a\u5305\u88f9\u3002 \u2022\u5bf9\u4e8eGripper\u57df\uff0c\u9488\u5bf93\u4e2a\u7403\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u7684\u7b56\u7565\uff0c\u5e76\u9488\u5bf95-200\u4e2a\u7403\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002 \u2022\u5bf9\u4e8eFerry\u57df\uff0c\u9488\u5bf9\u5177\u67093-4\u4e2a\u4f4d\u7f6e\uff0c2-3\u4e2a\u6c7d\u8f66\u7684\u5b9e\u4f8b\u8bad\u7ec3\u4e86\u7684\u7b56\u7565\uff0c\u5e76\u9488\u5bf9\u5177\u67094-40\u4e2a\u4f4d\u7f6e\u548c2-120\u4e2a\u6c7d\u8f66\u7684\u5b9e\u4f8b\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002","title":"5.2.5. \u5b9e\u9a8c"},{"location":"Papers/Survey%20of%20research%20literature/#5251","text":"\u4e3a\u4e86\u8bad\u7ec3\u7684\u7b56\u7565\uff0c\u4f9d\u9760\u5b9e\u4f8b\u751f\u6210\u5668\u6765\u4ea7\u751f\u968f\u673a\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u7684\u65b9\u6cd5\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6240\u6709\u7b56\u7565\u90fd\u7ecf\u8fc71000\u6b21\u8fed\u4ee3\u8bad\u7ec3\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u6709100\u4e2a\u8bad\u7ec3\u60c5\u8282\u548c\u591a\u8fbe20\u4e2a\u6e10\u53d8\u66f4\u65b0\u6b65\u9aa4\u3002\u5b9e\u9a8c\u662f\u5728\u4e00\u53f0\u88c5\u6709i7-8700K\u5904\u7406\u5668\u548c\u4e00\u4e2aNVIDIA GTX 1070 GPU\u7684\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u7684\u3002\u5bf9\u6240\u6709\u4e94\u4e2a\u57df\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u8bad\u7ec3\u8d85\u53c2\u6570\uff0c\u4f46\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7565\u6709\u4e0d\u540c\u3002\u4f7f\u7528\u4e86256\u4e2a\u9690\u85cf\u8868\u793a\u5f62\u5f0f\u548cReLU\u6fc0\u6d3b\uff0c\u4e00\u4e2a\u5b66\u4e60\u73870.0001\uff0c\u4e00\u4e2a\u6298\u73b0\u56e0\u5b500.99\uff0c\u4e00\u4e2a\u71b5\u5956\u52b10.01\uff0c\u4e00\u4e2a\u526a\u5207\u6bd40.2\u548c\u4e00\u4e2aKL\u53d1\u6563\u89d2\u53c2\u65700.01\u3002\u5bf9\u4e8eBlocksworld\u548cGripper\u57df\uff0c\u4f7f\u7528\u4e86\u4e24\u5c42GNN\uff0c\u4e24\u5c42\u90fd\u662fGN\u5757\u7c7b\u578b\uff0c\u5bf9\u4e8eSatellite\uff0c\u6e21\u8f6e\u548c\u7269\u6d41\u9886\u57df\uff0c\u4f7f\u7528\u4e86\u4e24\u5c42GNN\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2aGNAT\u5757\u548c\u4e00\u4e2aGN\u5757\u3002\u7684\u4ee3\u7801\u662f\u7528Python\u5b9e\u73b0\u7684\uff0c\u800c\u795e\u7ecf\u7f51\u7edc\u548c\u5b66\u4e60\u7b97\u6cd5\u662f\u4f7f\u7528PyTorch\u5b9e\u73b0\u7684\u3002 \u8bc4\u4f30\u91cd\u70b9\u662f\u89e3\u51b3\u5e7f\u4e49\u89c4\u5212\u57df\u7684\u5927\u578b\u5b9e\u4f8b\uff0c\u5e76\u5c06\u4e0e\u7ecf\u5178\u89c4\u5212\u5668\u8fdb\u884c\u6bd4\u8f83\u3002\u9009\u62e9\u4e86\u66f4\u901a\u7528\u7684\u57fa\u51c6\u7ecf\u5178\u8ba1\u5212\u5668\u7684\u5f62\u5f0f\uff0c\u5982\u679c\u6709\u8db3\u591f\u7684\u65f6\u95f4\u548c\u5185\u5b58\uff0c\u5b83\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u95ee\u9898\u3002\u4e0e**Fast-Downward**\u5bf9\u6bd4\uff0c\u8fd9\u662f\u6700\u65b0\u7684\u6846\u67b6\u3002\u7684\u65b9\u6cd5\u4f7f\u7528Pyper plan\u4f5c\u4e3a\u6a21\u578b\u548c\u540e\u7ee7\u72b6\u6001\u751f\u6210\u5668\uff0c\u5b83\u662f\u57fa\u4e8ePython\u7684\u6846\u67b6\u3002\u4f7f\u7528LAMA\u4f18\u5148\u914d\u7f6e\u4f5c\u4e3a\u5feb\u901f\u5411\u4e0b\u7684\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5b83\u662f\u6027\u80fd\u6700\u9ad8\u7684\u7ade\u4e89\u6027\u6ee1\u610f\u8ba1\u5212\u7b97\u6cd5\u3002","title":"5.2.5.1. \u5b9e\u9a8c\u8bbe\u5b9a"},{"location":"Papers/Survey%20of%20research%20literature/#5252","text":"\u73b0\u5728\uff0c\u4ecb\u7ecd\u7684\u7ed3\u679c\u3002 \u56fe\u4e2d\u4e0e\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u4e94\u4e2a\u57df\u7684\u6bd4\u8f83\u3002\u8fd9\u4e9b\u56fe\u663e\u793a\u4e86\u6210\u529f\u7387\u4e0e\u6269\u5c55\u72b6\u6001\u6570\u7684\u51fd\u6570\u5173\u7cfb\uff0c\u5e76\u8868\u660e\u4e0e5\u4e2a\u57df\u4e2d\u76844\u4e2a\u9886\u57df\u7684\u7ecf\u5178\u89c4\u5212\u5668\u76f8\u6bd4\uff0c\u65b9\u6cd5\u786e\u5b9e\u6709\u5229\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u7684\u653f\u7b56\u666e\u904d\u63a8\u5e7f\u76844\u4e2a\u9886\u57df\u4e2d\uff0cGBFS-GNN\u51e0\u4e4e\u4e0d\u9700\u8981\u641c\u7d22\u3002\u5728\u8fd9\u4e9b\u9886\u57df\u4e2d\uff0c\u9664\u4e86\u6700\u56f0\u96be\u7684\u60c5\u51b5\u5916\uff0c\u53ea\u8981\u8d2a\u5a6a\u5730\u9075\u5faa\u7b56\u7565\u5373\u53ef\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002\u641c\u7d22\u7b97\u6cd5\u5efa\u7acb\u5728\u8fd9\u79cd\u6cdb\u5316\u80fd\u529b\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u5728\u641c\u7d22\u65f6\u4f7f\u7528\u4e86\u5c11\u91cf\u7684\u5b8c\u6574\u7b56\u7565\u90e8\u7f72\u3002 \u56fe\u4e2d\u6bd4\u8f83\u672c\u6587\u65b9\u6cd5\u548cFD planner\u65b9\u6cd5\uff0c\u5e76\u9488\u5bf9\u7ed9\u5b9a\u7684\u8fd0\u884c\u65f6\u95f4\u7ed8\u5236\u4e86\u6210\u529f\u7387\u3002\u53ef\u4ee5\u770b\u5230\u5728\u4e00\u4e2a\u9886\u57df\uff08Blocksworld\uff09\u4e2d\u514b\u670d\u4e86\u5b83\uff0c\u800c\u5728\u5176\u4ed6\u4e09\u4e2a\u9886\u57df\u4e2d\u5c06\u5176\u7d27\u5bc6\u5339\u914d\u3002\u5c3d\u7ba1GBFS-GNN\u4f7f\u7528\u7684\u540e\u7ee7\u72b6\u6001\u548c\u6cd5\u5f8b\u884c\u52a8\u751f\u6210\u5668\u7684\u901f\u5ea6\u6bd4\u5feb\u901f\u5411\u4e0b\u7684\u901f\u5ea6\u6162\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u4f46\u7684\u65b9\u6cd55\u7684\u6cdb\u5316\u80fd\u529b\u4f7f\u5176\u4e0e\u7ecf\u5178\u8ba1\u5212\u7a0b\u5e8f\u7684\u6700\u65b0\u5b9e\u73b0\u65b9\u5f0f\u76f8\u6bd4\u5177\u6709\u7ade\u4e89\u529b\u3002 \u65b9\u6cd5\u7684\u6cdb\u5316\u6027\u80fd\u7684\u4e00\u4e2a\u660e\u663e\u4f8b\u5916\u662f\u7269\u6d41\u9886\u57df\u3002\u7269\u6d41\u57df\u5728\u6bcf\u4e2a\u5b9e\u4f8b\u4e2d\u7684\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u5305\u542b\u66f4\u7d27\u5bc6\u7684\u8026\u5408\u3002\u4f8b\u5982\uff0c\u5728\u201c\u536b\u661f\u201d\u57df\u4e2d\uff0c\u4ece\u7b56\u7565\u53ef\u4ee5\u5177\u6709\u591a\u4e2a\u201c\u534a\u719f\u201d\u76ee\u6807\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u800c\u4e0d\u4f1a\u53d7\u5230\u5e72\u6270\u7684\u610f\u4e49\u4e0a\u8bf4\uff0c\u6821\u51c6\u4eea\u5668\u6216\u5bf9\u76ee\u6807\u6210\u50cf\u4e0d\u4f1a\u5e72\u6270\u5176\u4ed6\u536b\u661f\u3002\u5728\u7269\u6d41\u9886\u57df\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u5305\u88f9\u90fd\u5171\u4eab\u5361\u8f66\u548c\u98de\u673a\uff0c\u5e76\u4e14\u79fb\u52a8\u7279\u5b9a\u5361\u8f66\u6765\u6361\u62fe\u5305\u88f9\u53ef\u80fd\u4f1a\u5e72\u6270\u539f\u672c\u6253\u7b97\u5728\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u6361\u62fe\u7684\u53e6\u4e00\u4e2a\u5305\u88f9\u3002","title":"5.2.5.2. \u5b9e\u9a8c\u7ed3\u679c"},{"location":"Papers/Survey%20of%20research%20literature/#6-pddlgym-gymenvironments-frompddl-problems","text":"","title":"6. PDDLGYM: GYMENVIRONMENTS FROMPDDL PROBLEMS"},{"location":"Papers/Survey%20of%20research%20literature/#61-abstract","text":"\u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ecePDDL\u57df\u548c\u95ee\u9898\u81ea\u52a8\u6784\u5efaOpenAI Gym\u73af\u5883\u7684\u6846\u67b6\u3002PDDLGym\u4e2d\u7684\u89c2\u5bdf\u548c\u52a8\u4f5c\u662f\u5173\u7cfb\u6027\u7684\uff0c\u8fd9\u4f7f\u5f97\u8be5\u6846\u67b6\u7279\u522b\u9002\u5408\u4e8e\u5173\u7cfb\u5f3a\u5316\u5b66\u4e60\u548c\u5173\u7cfb\u987a\u5e8f\u51b3\u7b56\u7684\u7814\u7a76\u3002PDDLGym\u8fd8\u53ef\u7528\u4f5c\u901a\u7528\u6846\u67b6\uff0c\u7528\u4e8e\u901a\u8fc7\u7b80\u6d01\uff0c\u719f\u6089\u7684\u89c4\u8303\u8bed\u8a00\u5feb\u901f\u6784\u5efa\u4f17\u591a\u591a\u6837\u7684\u57fa\u51c6\u3002\u8ba8\u8bba\u4e86\u8bbe\u8ba1\u51b3\u7b56\u548c\u5b9e\u65bd\u7ec6\u8282\uff0c\u5e76\u6839\u636e\u89c4\u5212\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\u8bf4\u660e\u4e8620\u79cd\u5185\u7f6e\u73af\u5883\u4e4b\u95f4\u7684\u7ecf\u9a8c\u5dee\u5f02\u3002\u5e0c\u671bPDDLGym\u5c06\u4fc3\u8fdb\u5f3a\u5316\u5b66\u4e60\u793e\u533a\uff08Gym\u7684\u8bde\u751f\uff09\u548cAI\u89c4\u5212\u793e\u533a\uff08\u4ea7\u751fPDDL\uff09\u4e4b\u95f4\u7684\u6865\u6881\u3002 \u4e00\u4e2a\u5c06Gym\u548cPDDL\u7684\u5143\u7d20\u7ed3\u5408\u5728\u4e00\u8d77\u7684\u5f00\u6e90\u6846\u67b6\u3002 PDDLGym\u662f\u4e00\u4e2aPython\u5e93\uff0c\u53ef\u6839\u636ePDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u81ea\u52a8\u521b\u5efaGym\u73af\u5883\u3002 \u8be5\u5e93\u4f4d\u4e8e https://github.com/tomsilver/pddlgym\u3002 \u4e0eGym\u4e00\u6837\uff0cPDDLGym\u5141\u8bb8\u4ee3\u7406\u4e0e\u73af\u5883\u4e4b\u95f4\u53d1\u751f\u5468\u671f\u6027\u7684\u95ed\u73af\u4ea4\u4e92\u3002\u7279\u5de5\u4f1a\u4ece\u73af\u5883\u4e2d\u63a5\u6536\u5230\u4e00\u4e2a\u89c2\u5bdf\u7ed3\u679c\uff0c\u5e76\u505a\u51fa\u884c\u52a8\uff0c\u91cd\u590d\u6b64\u5faa\u73af\u76f4\u5230\u60c5\u8282\u7ed3\u675f\u3002\u50cf\u5728PDDL\u4e2d\u4e00\u6837\uff0cPDDLGym\u4ece\u6839\u672c\u4e0a\u662f\u76f8\u5173\u7684\uff1a\u89c2\u5bdf\u662f\u5bf9\u8c61\u4e0a\u7684\u5730\u9762\u5173\u7cfb\u96c6\uff08\u4f8b\u5982\uff0c\u5728\uff08\u76d8\u5b50\uff0c\u684c\u5b50\u4e0a\uff09\uff09\uff0c\u52a8\u4f5c\u662f\u4e0e\u5bf9\u8c61\u4e00\u8d77\u63a5\u5730\u7684\u6a21\u677f\uff08\u4f8b\u5982pick\uff08\u76d8\u5b50\uff09\uff09\u3002\u56e0\u6b64\uff0cPDDLGym\u7279\u522b\u9002\u5408\u7528\u4e8e\u5173\u7cfb\u5b66\u4e60\u548c\u987a\u5e8f\u51b3\u7b56\u7814\u7a76\u3002 \u5f3a\u5316\u5b66\u4e60\u4e2d\u4f7f\u7528\u7684Gym API\u5b9a\u4e49\u4e86\u4ee3\u7406\u4e0e\u73af\u5883\u4e4b\u95f4\u7684\u786c\u6027\u754c\u9650\u3002\u7279\u522b\u662f\uff0c\u4ee3\u7406*\u4ec5*\u901a\u8fc7\u91c7\u53d6\u884c\u52a8\u5e76\u63a5\u6536\u89c2\u5bdf\u7ed3\u679c\u6765\u4e0e\u73af\u5883\u4ea4\u4e92\u3002\u73af\u5883\u6267\u884c\u4e00\u4e2a\u529f\u80fd\u6b65\u9aa4\uff0c\u8be5\u529f\u80fd\u6b65\u9aa4\u4f7f\u4ee3\u7406\u8d4b\u4e88\u7684\u64cd\u4f5c\u4f7f\u72b6\u6001\u524d\u8fdb\uff1b\u6b65\u9aa4\u5b9a\u4e49\u73af\u5883\u7684\u8fc7\u6e21\u6a21\u578b\u3002\u540c\u6837\uff0cPDDL\u57df\u901a\u8fc7\u5176\u8fd0\u7b97\u7b26\u5bf9\u8f6c\u6362\u6a21\u578b\u8fdb\u884c\u7f16\u7801\u3002\u4f46\u662f\uff0c\u5728\u5178\u578b\u7528\u6cd5\u4e2d\uff0cPDDL\u88ab\u7406\u89e3\u4e3a\u5b8c\u5168\u5b58\u5728\u4e8e\u4ee3\u7406\u7684\u201c\u601d\u60f3\u201d\u4e2d\u3002\u7136\u540e\uff0c\u4e00\u4e2a\u5355\u72ec\u7684\u8fc7\u7a0b\u8d1f\u8d23\u5c06\u8ba1\u5212\u8f6c\u53d8\u4e3a\u4ee3\u7406\u53ef\u4ee5\u5728\u4e16\u754c\u8303\u56f4\u5185\u6267\u884c\u7684\u52a8\u4f5c\u3002 PDDLGym\u8fdd\u53cd\u4e86\u8fd9\u4e00\u7ea6\u5b9a\uff1a\u5728PDDLGym\u4e2d\uff0cPDDL\u57df\u548c\u95ee\u9898\u7262\u56fa\u5730\u4f4d\u4e8e\u4ee3\u7406\u7a0b\u5e8f-\u73af\u5883\u8fb9\u754c\u7684\u73af\u5883\u4fa7\u3002\u73af\u5883\u4f7f\u7528PDDL\u6587\u4ef6\u6765\u5b9e\u73b0\u6b65\u9aa4\u529f\u80fd\uff0c\u8be5\u529f\u80fd\u53ef\u5728\u7ed9\u5b9a\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u63d0\u5347\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u6700\u597d*\u5c06*PDDLGym\u7406\u89e3\u4e3aPDDL\u7684\u76ee\u7684\u3002\u5728\u5b9e\u73b0\u65b9\u9762\uff0c\u6b64\u7528\u9014\u5177\u6709\u5fae\u5999\u4f46\u91cd\u8981\u7684\u542b\u4e49\u3002 \u56fe1\uff1a**\u5728PDDLGym\u4e2d\u5b9e\u73b0\u7684\u4e00\u4e9b\u73af\u5883\u793a\u4f8b\u3002**\u4ece\u5de6\u4e0a\u65b9\uff1a\u63a8\u7bb1\u5b50\uff0c\u6cb3\u5185\uff0c\u8857\u533a\uff0c\u65c5\u884c\u63a8\u9500\u5458\uff08TSP\uff09\uff0c\u6ed1\u74e6\u548c\u624b\u5de5\u5236\u4f5c\u3002 \u56fe2\uff1a**PDDLGym\u4ee3\u7801\u793a\u4f8b\u3002**PDDLGym\u73af\u5883\u7684\u7279\u5f81\u5728\u4e8ePDDL\u57df\u6587\u4ef6\u548cPDDL\u95ee\u9898\u6587\u4ef6\u5217\u8868\u3002\uff08A\uff09PDDL\u57df\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u64cd\u4f5c\u7b26\u3002\uff08B\uff09\u4e00\u6bb5\u7b80\u5355\u7684PDDL\u95ee\u9898\u6587\u4ef6\u7684\u6458\u5f55\u3002\uff08C\uff09\u5728\u4f7f\u7528PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u6ce8\u518c\u540d\u79f0\u4e3a\u201c PDDLEnvBlocks-v0\u201d\u7684\u73af\u5883\u4e4b\u540e\uff0c\u53ea\u9700\u51e0\u884cPython\u5c31\u53ef\u4ee5\u4e0e\u6b64PDDLGym\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u3002 PDDLGym\u5177\u6709\u4e09\u4e2a\u4e3b\u8981\u7528\u9014\uff1a \uff081\uff09\u4fc3\u8fdb\u4e3a\u5173\u7cfb\u57df\u4e2d\u7684\u987a\u5e8f\u51b3\u7b56\u521b\u5efa\u4f17\u591a\u591a\u6837\u7684\u57fa\u51c6 \uff082\uff09 \u6865\u6881\u52a0\u56fa\u5b66\u4e60\u4e0e\u89c4\u5212\u7814\u7a76 \uff083\uff09 \u4fc3\u8fdb\u5173\u7cfb\u9886\u57df\u4e2d\u987a\u5e8f\u51b3\u7b56\u7684\u7814\u7a76 \u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u5b89\u6392\u5982\u4e0b\u3002\u7b2c2\u8282\u8ba8\u8bba\u4e86PDDLGym\u7684\u8bbe\u8ba1\u51b3\u7b56\u548c\u5b9e\u73b0\u7ec6\u8282\u3002\u6982\u8ff0\u4e86\u5185\u7f6e\u7684PDDLGym\u57df\uff0c\u5e76\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u7ecf\u9a8c\u7ed3\u679c\uff0c\u4ee5\u8bf4\u660e\u5b83\u4eec\u5728\u89c4\u5212\u548c\u5b66\u4e60\u96be\u5ea6\u65b9\u9762\u7684\u591a\u6837\u6027\u3002\u6700\u540e\u8ba8\u8bba\u4e86\u6269\u5c55\u548c\u6539\u8fdbPDDLGym\u7684\u9014\u5f84\u3002 Gym API\u4f7f\u7528\u4e09\u79cd\u57fa\u672c\u65b9\u6cd5\u5c06\u73af\u5883\u5b9a\u4e49\u4e3aPython\u7c7b\uff1a init \uff0c\u7528\u4e8e\u521d\u59cb\u5316\u73af\u5883\uff1b reset \uff0c\u5f00\u59cb\u65b0\u7684\u60c5\u8282\u5e76\u8fd4\u56de\u89c2\u5bdf\u503c\uff1b step \uff08\u6b65\u9aa41\uff09\uff0c\u5b83\u4ece\u4ee3\u7406\u91c7\u53d6\u884c\u52a8\uff0c\u524d\u8fdb\u5f53\u524d\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u89c2\u5bdf\u503c\uff0c\u5956\u52b1\uff0c\u6307\u793a\u60c5\u8282\u662f\u5426\u5b8c\u6210\u7684\u5e03\u5c14\u503c\u4ee5\u53ca\u53ef\u9009\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 API\u8fd8\u5305\u62ec\u5176\u4ed6\u6b21\u8981\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c\u5904\u7406\u6e32\u67d3\u548c\u968f\u673a\u79cd\u5b50\u3002\u53c2\u89c1PDDLGym Github\u5b58\u50a8\u5e93\u4e2d \u7684\u81ea\u8ff0\u6587\u4ef6 \u3002 \u6700\u540e\uff0c\u9700\u8981\u5728Gym\u73af\u5883\u4e2d\u5b9e\u73b0\u4e00\u4e2a**action_space**\uff08\u4ee3\u8868\u53ef\u80fd\u7684\u52a8\u4f5c\u7684\u7a7a\u95f4\uff09\u548c\u4e00\u4e2a**observation_space**\uff08\u4ee3\u8868\u53ef\u80fd\u7684\u89c2\u5bdf\u7684\u7a7a\u95f4\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u5c06\u7b80\u8981\u6982\u8ff0PDDL\u6587\u4ef6\uff0c\u7136\u540e\u63cf\u8ff0\u5982\u4f55\u5728PDDLGym\u4e2d\u5b9a\u4e49\u52a8\u4f5c\u548c\u89c2\u5bdf\u7a7a\u95f4\u3002 \u518d\u8005\uff0c\u5c06\u8ba8\u8bba\u4e09\u79cd\u57fa\u672c\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002\u6709\u5173PDDLGym\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u8bf7\u53c2\u89c1\u4ee3\u7801\u4e2d\u7684**structs.py**\u3002","title":"6.1. abstract"},{"location":"Papers/Survey%20of%20research%20literature/#611","text":"PDDLGym\u73af\u5883\u7531PDDL\u57df\u6587\u4ef6\u548cPDDL\u95ee\u9898\u6587\u4ef6\u5217\u8868\u6765\u53c2\u6570\u5316\u3002\u4e3a\u4e86\u4fbf\u4e8e\u7814\u7a76\uff0c\u6bcf\u4e2aPDDLGym\u73af\u5883\u90fd\u4e0e\u8be5\u73af\u5883\u7684*\u6d4b\u8bd5*\u7248\u672c\u76f8\u5173\u8054\uff0c\u5176\u4e2d\u57df\u6587\u4ef6\u662f\u76f8\u540c\u7684\uff0c\u4f46\u95ee\u9898\u6587\u4ef6\u662f\u4e0d\u540c\u7684\uff08\u4f8b\u5982\uff0c\u5b83\u4eec\u53ef\u4ee5\u5bf9\u66f4\u590d\u6742\u7684\u8ba1\u5212\u4efb\u52a1\u8fdb\u884c\u7f16\u7801\uff0c\u4ee5\u8861\u91cf\u53ef\u6982\u62ec\u6027\uff09\u3002\u5728\u73af\u5883\u521d\u59cb\u5316\u671f\u95f4\uff0c\u6240\u6709\u7684PDDL\u6587\u4ef6\u90fd\u88ab\u89e3\u6790\u4e3aPython\u5bf9\u8c61\u3002 \u4e3a\u6b64\uff0c\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49PDDL\u89e3\u6790\u5668\u3002\u8c03\u7528reset\u65f6\uff0c\u5c06\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u95ee\u9898\u5b9e\u4f8b\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0creset\u8fd8\u8fd4\u56de\uff08\u5728\u8c03\u8bd5\u4fe1\u606f\u4e2d\uff09\u6307\u5411\u5f53\u524d\u60c5\u8282\u7684PDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u7684\u8def\u5f84\u3002\u8fd9\u4f7f\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u4f7f\u7528\u7b26\u53f7\u8ba1\u5212\u5668\u5e76\u5728\u73af\u5883\u4e2d\u6267\u884c\u751f\u6210\u7684\u8ba1\u5212\u3002 \u5bf9\u4e8e\u6bcf\u79cd\u73af\u5883\uff0c\u4ee3\u7406\u90fd\u4f1a\u9488\u5bf925\u7ea7baseline\u6267\u884c\u968f\u673a\u7b56\u7565\u3002\u89c2\u5bdf\u5230\u7684\u8fc7\u6e21\u5c06\u7528\u4e8e\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\uff0c\u7136\u540e\u5c06\u5176\u7528\u4e8e\u4e00\u7cfb\u5217\u6d4b\u8bd5\u95ee\u9898\u7684\u8ba1\u5212\u3002\u6240\u62a5\u544a\u7684\u5df2\u89e3\u51b3\u6d4b\u8bd5\u95ee\u9898\u7684\u6bd4\u4f8b\u88ab\u62a5\u544a\u4e3a\u5b66\u4e60\u7684\u8fc7\u6e21\u6a21\u578b\u7684\u6307\u6807\u3002\u4e3a\u4e86\u5b66\u4e60\u8fc7\u6e21\u6a21\u578b\uff0c\u4f7f\u7528\u4e00\u9636\u903b\u8f91\u51b3\u7b56\u6811\uff08FOLDT\uff09\u5b66\u4e60\u3002","title":"6.1.1. \u521d\u59cb\u5316\u548c\u91cd\u7f6e\u73af\u5883"},{"location":"Papers/Survey%20of%20research%20literature/#612-step","text":"PDDLGym\u73af\u5883\u7684step\u65b9\u6cd5\u91c7\u53d6\u4e00\u4e2a\u52a8\u4f5c\uff0c\u66f4\u65b0\u73af\u5883\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u89c2\u5bdf\uff0c\u5956\u52b1\uff0c\u5b8c\u6210\u7684\u5e03\u5c14\u503c\u548c\u8c03\u8bd5\u4fe1\u606f\u3002\u4e3a\u4e86\u786e\u5b9a\u72b6\u6001\u66f4\u65b0\uff0cPDDLGym\u68c0\u67e5\u7ed9\u5b9a\u5f53\u524d\u72b6\u6001\u548c\u64cd\u4f5c\u662f\u5426\u6ee1\u8db3\u4efb\u4f55PDDL\u8fd0\u7b97\u7b26\u7684\u5148\u51b3\u6761\u4ef6\u3002 precondition satisfaction check is nontrivial\uff1bnon-free parameters must be bound. \u3002 \u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e24\u4e2a\u63a8\u7406\u540e\u7aef\u6765\u6267\u884c\u6b64\u68c0\u67e5\u3002 \u7b2c\u4e00\u4e2a\u662f\u7c7b\u578b\u5316SLD\u89e3\u6790\u7684Python\u5b9e\u73b0\uff0c\u5f53\u67e5\u8be2\u4ec5\u6d89\u53ca\u8fde\u63a5\u65f6\uff0c\u8fd9\u662f\u9ed8\u8ba4\u9009\u62e9\u3002 \u7b2c\u4e8c\u4e2a\u662fSWI Prolog \u63a5\u53e3\u5c01\u88c5\uff0c\u5b83\u4f7f\u80fd\u591f\u5904\u7406\u6d89\u53ca\u6790\u53d6\u548c\u91cf\u8bcd\u7684\u66f4\u590d\u6742\u7684\u524d\u63d0\u6761\u4ef6\u3002\u540e\u8005\u6bd4\u524d\u8005\u66f4\u6162\uff0c\u4f46\u66f4\u901a\u7528\u3002\u5f53\u6ca1\u6709\u64cd\u4f5c\u5458\u524d\u63d0\u6ee1\u8db3\u7ed9\u5b9a\u64cd\u4f5c\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u72b6\u6001\u4fdd\u6301\u4e0d\u53d8\u3002\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u5148\u51b3\u6761\u4ef6\uff0c\u5219\u53ef\u80fd\u4f1a\u5f15\u53d1\u9519\u8bef\uff1b\u53ef\u9009\u7684\u521d\u59cb\u5316\u53c2\u6570raise_error_on_invalid_action\u5141\u8bb8\u6b64\u884c\u4e3a\u3002 PDDLGym\u4e2d\u7684\u5956\u52b1\u662f\u7a00\u758f\u7684\u548c\u4e8c\u8fdb\u5236\u7684\u3002\u7279\u522b\u5730\uff0c\u5f53\u8fbe\u5230\u95ee\u9898\u76ee\u6807\u65f6\uff0c\u5956\u52b1\u4e3a1.0\uff0c\u5426\u5219\u4e3a0.0\u3002\u540c\u6837\uff0c\u8fbe\u5230\u76ee\u6807\u65f6\uff0c\u5e03\u5c14\u5e03\u5c14\u503c\u4e3aTrue\uff0c\u5426\u5219\u4e3aFalse\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u901a\u5e38\u4f7f\u7528\u6700\u5927\u60c5\u8282\u957f\u5ea6\u3002\uff09","title":"6.1.2. \u5b9e\u65bdstep\u65b9\u6cd5"},{"location":"Papers/Survey%20of%20research%20literature/#613","text":"\u5982\u679c\u57fa\u7840\u7684PDDL\u57df\u5177\u6709\u6982\u7387\u6548\u5e94\uff0c\u5982PPDDL\uff0c\u5219\u6b65\u8fdb\u65b9\u6cd5\u5c06\u5bf9\u6b64\u8fdb\u884c\u9002\u5f53\u89e3\u6790\uff0c\u5e76\u6839\u636e\u7ed9\u5b9a\u7684\u6982\u7387\u5206\u5e03\u9009\u62e9\u4e00\u79cd\u6548\u5e94\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6982\u7387\u4e4b\u548c\u4e0d\u4e3a1\uff0c\u5219\u4f1a\u6dfb\u52a0\u9ed8\u8ba4\u7684\u7410\u788e\u6548\u679c\u3002 **PDDLGym\u73af\u5883\u4e4b\u95f4\u7684\u5dee\u5f02\u3002**PDDLGym\u4e2d\u5185\u7f6e\u7684PDDL\u57df\u548c\u95ee\u9898\u5728\u8ba1\u5212\u96be\u5ea6\uff08\u5de6\uff09\u548c\u6a21\u578b\u5b66\u4e60\u96be\u5ea6\uff08\u53f3\uff09\u65b9\u9762\u6709\u5f88\u5927\u4e0d\u540c\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u6587\u672c\u3002\u4e3a\u4e86\u6e05\u6670\u8d77\u89c1\uff0c\u7701\u7565\u4e86\u5176\u4e2d\u4e00\u4e2a\u9886\u57dfDepot\uff0c\u4f46\u6bd4\u6700\u7b80\u5355\u7684\u9886\u57df\uff08TSP\uff09\u9700\u8981\u591a\u4e24\u4e2a\u6570\u91cf\u7ea7\u7684\u8ba1\u5212\u65f6\u95f4\u3002 \u5bf9\u4e8e\u6240\u793a\u7684\u65b9\u6cd5\uff0c\u4f46\u5176\u4ed6\u65b9\u6cd5\uff08\u5305\u62ec\u70d8\u7119\uff0c\u4ed3\u5e93\u548c\u63a8\u7bb1\u5b50\uff09\u5bf9\u4e8e\u7684\u5b66\u4e60\u65b9\u6cd5\u6765\u8bf4\u6bd4\u8f83\u56f0\u96be\uff1aFOLDT\u5b66\u4e60\u65e0\u6cd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u627e\u5230\u9002\u5408\u6570\u636e\u7684\u6a21\u578b\u3002\u5f53\u7136\uff0c\u6a21\u578b\u5b66\u4e60\u7684\u96be\u5ea6\u56e0\u5b66\u4e60\u65b9\u6cd5\u548c\u63a2\u7d22\u7b56\u7565\u7684\u4e0d\u540c\u800c\u6709\u5f88\u5927\u5dee\u5f02\u3002\u5728\u8fd9\u91cc\u5b9e\u65bd\u4e86\u7b80\u5355\u7684\u7b56\u7565\u6765\u663e\u793a\u8fd9\u4e9b\u7ed3\u679c\uff0c\u4f46\u662f\u8fd9\u4e9b\u5c06\u6765\u7684\u7814\u7a76\u9014\u5f84\u6b63\u662f\u5e0c\u671b\u901a\u8fc7PDDLGym\u5b9e\u73b0\u7684\u90a3\u79cd\u9014\u5f84\u3002 \u4ecb\u7ecd\u4e86PDDLGym\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u7684Python\u6846\u67b6\uff0c\u53ef\u4ee5\u4ecePDDL\u57df\u548c\u95ee\u9898\u6587\u4ef6\u81ea\u52a8\u521b\u5efaOpenAI Gym\u73af\u5883\u3002\u7684\u7ecf\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u5185\u7f6e\u73af\u5883\u4e4b\u95f4\u5b58\u5728\u76f8\u5f53\u5927\u7684\u5dee\u5f02\u3002 Thomas M Mitchell.Machine Learning. McGraw-Hill, Inc., New York,NY, USA, 1 edition, 1997. \u21a9 Paul E Utgoff. Incremental induction of decision trees.Machine learning,4(2):161\u2013186, 1989. \u21a9 Sergio Jim \u0301enez and Anders Jonsson. Computing Plans with Control Flowand Procedures Using a Classical Planner. InSOCS, 2015. \u21a9 Blai Bonet, H \u0301ector Palacios, and Hector Geffner. Automatic derivation offinite-state machines for behavior control. InAAAI, 2010 \u21a9 C \u0301edric Pralet, G \u0301erard Verfaillie, Michel Lema\u02c6\u0131tre, and Guillaume Infantes.Constraint-based controller synthesis in non-deterministic and partiallyobservable domains. InECAI, 2010 \u21a9 Yuxiao Hu and Giuseppe De Giacomo. A generic technique for synthesiz-ing bounded finite-state controllers. InICAPS, 2013. \u21a9 Jorge A Baier, Christian Fritz, and Sheila A McIlraith. Exploiting proce-dural domain control knowledge in state-of-the-art planners. InICAPS,2007. \u21a9 Javier Segovia-Aguas, Sergio Jim \u0301enez, and Anders Jonsson. Generalizedplanning with procedural domain control knowledge. InICAPS, 2016. \u21a9 Miquel Ramirez and Hector Geffner. Heuristics for planning, plan recog-nition and parsing.arXiv preprint arXiv:1605.05807, 2016 \u21a9","title":"6.1.3. \u5b9e\u9a8c"},{"location":"PlanLanguages/ADL/","text":"Action Description Language (ADL) \u00b6 The Action Description Language (ADL) (Pednault, 1994) extended STRIPSal-lowing actions to have conditional effects, so some effects are triggered dependingon the state. In contrast to STRIPS, ADL allows existential quantification, nega-tive literals, goals with disjunctions, different object types, and while variables inSTRIPSare either true or false, in ADL they can be true, false or undefined. In the year 1998, with the aim to make a standard representation of planninglanguages, the Planning Domain Definition Language (PDDL) (McDermott et al.,1998) was published. The IPC has been used to compare planning solvers perfor-mance but also to include new features to the language.","title":"ADL"},{"location":"PlanLanguages/ADL/#action-description-language-adl","text":"The Action Description Language (ADL) (Pednault, 1994) extended STRIPSal-lowing actions to have conditional effects, so some effects are triggered dependingon the state. In contrast to STRIPS, ADL allows existential quantification, nega-tive literals, goals with disjunctions, different object types, and while variables inSTRIPSare either true or false, in ADL they can be true, false or undefined. In the year 1998, with the aim to make a standard representation of planninglanguages, the Planning Domain Definition Language (PDDL) (McDermott et al.,1998) was published. The IPC has been used to compare planning solvers perfor-mance but also to include new features to the language.","title":"Action Description Language (ADL)"},{"location":"PlanLanguages/Extension%20to%20PDDL%28SAS%29/","text":"An Extension to PDDL for Hierarchical Planning \u00b6 chrome-extension://oemmndcbldboiebfnladdacbdfmadadm/ https://users.cecs.anu.edu.au/~thiebaux/workshops/ICAPS03/proceedings/PDDL-ICAPS03.pdf An Extension to PDDL for Hierarchical Planning...................1 Extending PDDL to nondeterminism, limited sensing and iterative conditional plans Extending PDDL for Hierarchical Planning and Topological Abstraction pddl\u8fdb\u9636SAS\uff1a","title":"PDDL\u6269\u5c55"},{"location":"PlanLanguages/Extension%20to%20PDDL%28SAS%29/#an-extension-to-pddl-for-hierarchical-planning","text":"chrome-extension://oemmndcbldboiebfnladdacbdfmadadm/ https://users.cecs.anu.edu.au/~thiebaux/workshops/ICAPS03/proceedings/PDDL-ICAPS03.pdf An Extension to PDDL for Hierarchical Planning...................1 Extending PDDL to nondeterminism, limited sensing and iterative conditional plans Extending PDDL for Hierarchical Planning and Topological Abstraction pddl\u8fdb\u9636SAS\uff1a","title":"An Extension to PDDL for Hierarchical Planning"},{"location":"PlanLanguages/PDDL%E8%AF%AD%E8%A8%80/","text":"PDDL\u7b80\u4ecb \u00b6 en.wikipedia.org/wiki/Planning_Domain_Definition_Language https://dblp.uni-trier.de/search?q=pddl Writing Planning Domains and Problems in PDDL en.wikipedia.org/wiki/Planning_Domain_Definition_Language \u53e4\u5178\u8ba1\u5212\u4f7f\u7528\u4eceSTRIPS\u5efa\u6a21\u8bed\u8a00[Richard E Fikes and Nils J Nilsson. Strips: A new approach to the application of theorem proving to problemsolving.Artificial intelligence, 2(3-4):189\u2013208, 1971]\u6d3e\u751f\u800c\u6765\u7684\u6b63\u5f0f\u63cf\u8ff0\u8bed\u8a00\uff0c\u79f0\u4e3a\u8ba1\u5212\u9886\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09[Drew McDermott, Malik Ghallab, Adele Howe, Craig Knoblock, Ashwin Ram, Manuela Veloso, Daniel Weld,and David Wilkins. Pddl-the planning domain definition language, 1998.] \u6211\u4eec\u5173\u6ce8\u7684\u662f\u4ee4\u4eba\u6ee1\u610f\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u5b83\u53ef\u4ee5\u7531\u96c6\u5408\uff08F\uff0cO\uff0cI\uff0cG\uff09\u5b9a\u4e49\uff0c\u5176\u4e2dF\u662f\u4e00\u7ec4\u547d\u9898\uff08\u6216\u8c13\u8bcd\uff09\uff0c\u5b83\u4eec\u63cf\u8ff0\u4efb\u52a1\u5b9e\u4f8b\u4e2d\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u5c5e\u6027\u53ca\u5176\u5173\u7cfb\uff0cO\u662f\u4e00\u7ec4\u8fd0\u7b97\u7b26\uff08\u6216\u64cd\u4f5c\u7c7b\u578b\uff09\uff0cICF\u662f\u521d\u59cb\u72b6\u6001\uff0c\u800cGCF\u662f\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u52a8\u4f5c\u7c7b\u578bGO\u90fd\u7531\u4e09\u5143\u7ec4\uff08Pre\uff08o\uff09\uff0cAdd\uff08o\uff09\uff0cDel\uff08o\uff09\uff09\u5b9a\u4e49\uff0c\u5176\u4e2d\u524d\u63d0\u4e3aPre\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u5fc5\u987b\u5177\u6709\u6b63\u786e\u7684\u503c\u624d\u80fd\u9002\u7528\u4e8e\u8be5\u64cd\u4f5c\uff0cAdd\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u5728\u5e94\u7528\u540e\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3a\u771f\uff0c\u800cDel\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3afalse\u6839\u636e\u7533\u8bf7\u3002\u6211\u4eec\u8bd5\u56fe\u627e\u5230\u4e00\u4e2a\u8ba1\u5212\u6216\u4e00\u7cfb\u5217\u884c\u52a8\uff0c\u8fd9\u4e9b\u884c\u52a8\u6216\u884c\u52a8\u5e8f\u5217\u4e00\u65e6\u5e94\u7528\uff0c\u5c31\u4f1a\u5728\u4e00\u5b9a\u65f6\u9650\u6216\u9884\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u5185\u5bfc\u81f4\u72b6\u6001\u4e3aG C\u7684\u72b6\u6001\u3002\u67e5\u627e\u8ba1\u5212\u4efb\u52a1\u7684\u8ba1\u5212\u901a\u5e38\u662f\u901a\u8fc7\u542f\u53d1\u5f0f\u641c\u7d22\u65b9\u6cd5\u6765\u5b8c\u6210\u7684\uff0c\u4f46\u662f\uff0c\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4e13\u6ce8\u4e8e\u5b66\u4e60\u53cd\u5e94\u5f0f\u8ba1\u5212\u7b56\u7565\uff0c\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u5728\u7279\u5b9a\u9886\u57df\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u540e\u63a8\u5e7f\u5230\u540c\u4e00\u9886\u57df\u4e2d\u65b0\u7684\u770b\u4e0d\u89c1\u7684\u5b9e\u4f8b\u3002 \u4eba\u5de5\u667a\u80fd\u9886\u57df\u8bed\u8a00\u4e2dPDDL \u548cProlog https://www.metalevel.at/prolog/showcases/turing.pl \u7b80\u4ecb\uff1aPDDL\u662f\u4e00\u79cd\u7528\u4e8e\u8868\u8fbe\u8ba1\u5212\u4efb\u52a1\u7684\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff0c\u800cProlog\u662f\u4e00\u79cd\u6210\u719f\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u53ef\u8ba9\u60a8\u8868\u8fbe\u6240\u6709\u53ef\u80fd\u7684\u8ba1\u7b97\uff08\u5305\u62ec\u89e3\u51b3\u8ba1\u5212\u4efb\u52a1\uff09\u3002 https://www.quora.com/What-is-difference-in-expressive-power-between-PDDL-and-Prolog PDDL\u4ee3\u8868\u89c4\u5212\u57df\u5b9a\u4e49\u8bed\u8a00\u3002\u5b83\u662f\u7528\u4e8e\u8ba1\u5212\u4efb\u52a1\u7684\u6807\u51c6\u7f16\u7801\u3002\u8bf7\u6ce8\u610f\uff0cPDDL\u6709\u4e0d\u540c\u7248\u672c\uff0c\u5e76\u4e14\u5177\u6709\u5404\u79cd\u6269\u5c55\u540d\u3002 \u5b9e\u9645\u4e0a\uff0c\u8bb8\u591a\u201c PDDL\u201d\u6c42\u89e3\u5668\u4ec5\u652f\u6301PDDL\u7684\u67d0\u4e9b\u5b50\u96c6\u3002 \u901a\u5e38\uff0c\u5bf9\u8ba1\u5212\u4efb\u52a1\u7684\u63cf\u8ff0\u7531\u7279\u5b9a\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f8b\u5982\uff1a \u521d\u59cb\u72b6\u6001 \u4e00\u4e2a\u76ee\u6807 \u53ef\u4ee5\u6267\u884c\u7684\u52a8\u4f5c \u7b49 \u5982\u679c\u60a8\u7684\u8ba1\u5212\u6846\u67b6\u8db3\u591f\u901a\u7528\uff0c\u90a3\u4e48\u8fd9\u79cd\u7279\u5b9a\u4e8e\u9886\u57df\u7684\u8ba1\u5212\u8bed\u8a00\u5b9e\u9645\u4e0a\u53ef\u4ee5\u662f**Turing-complete** \uff0c\u56e0\u6b64\u4e0e\u901a\u7528\u7f16\u7a0b\u8bed\u8a00\uff08\u4f8b\u5982Prolog\uff09\u5177\u6709\u76f8\u540c\u7684\u8ba1\u7b97\u80fd\u529b\uff1a\u8bc1\u660e\u56fe\u7075\u673a\u9886\u57df\u53ef\u4ee5\u770b\u4f5c\u662f\u7ecf\u5178\u7684\u8ba1\u5212\u9886\u57df\u3002 \u4f46\u662f\uff0cPDDL\u5e76\u975e\u5982\u6b64\uff1a\u5728PDDL\u4e2d\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u67d0\u4e9b\u6709\u9650\u57df\uff08\u4f8b\u5982\u6574\u6570\u7684\u6709\u9650\u95f4\u9694\uff09\u8fdb\u884c\u63a8\u7406\u3002\u5982\u679c\u57df\u662f\u6709\u9650\u7684\uff0c\u5219\u65e0\u6cd5\u5efa\u6a21\u65e0\u9650\u7684\u78c1\u5e26\uff0c\u56e0\u6b64PDDL\u7684\u8868\u8fbe\u80fd\u529b**\u660e\u663e\u4f4e\u4e8e**Prolog\u3002 \u6b64\u5916\uff0c\u60a8\u901a\u5e38\u53ea\u5bf9\u591a\u9879\u5f0f\u957f\u5ea6\u7684\u8ba1\u5212\u611f\u5174\u8da3\uff0c\u751a\u81f3\u4ec5\u9650\u4e8e\u591a\u9879\u5f0f\u957f\u5ea6\u7684\u8ba1\u5212\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPDDL\u662fPSPACE\u6216EXPTIME\u5b8c\u6574\u7684\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684\u6269\u5c55\u540d\u548c\u53d8\u4f53\u3002\u8fd9\u5c24\u5176\u610f\u5473\u7740**\u5b58\u5728\u8bb8\u591a\u65e0\u6cd5\u5728PDDL\u4e2d\u8868\u8fbe\u7684\u8ba1\u7b97\u4efb\u52a1**\u3002 \u4ece\u5b9e\u8df5\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5373\u4f7fPDDL\u5728\u7406\u8bba\u4e0a\u8db3\u591f\u5f3a\u5927\uff0c\u53ef\u4ee5\u5bf9\u6240\u6709\u8ba1\u7b97\u4efb\u52a1\u8fdb\u884c\u5efa\u6a21\uff0c\u4f46\u5728\u8ba1\u5212\u4efb\u52a1\u7684\u9884\u671f\u5e94\u7528\u9886\u57df\u4e4b\u5916\u4f7f\u7528\u5b83\u662f\u5426\u662f\u65b9\u4fbf\u6216\u53ef\u53d6\u7684\u4ecd\u503c\u5f97\u5546\u69b7\uff0c\u6240\u4ee5\u7528pddl\u63cf\u8ff0\u81ea\u52a8\u673a\u63a8\u6f14\u751f\u6210policy\u7b97\u6cd5\u63a7\u5236\u6d41\u56fe\u89e3\u5b50\u56fe\"\u7a0b\u5e8f\u7efc\u5408\"\u53ef\u80fd\u9700\u8981PDDL\u7684\u6269\u5c55\u7248\u672c\u6216\u8005\u57fa\u4e8e\u5176\u4e0a\u505a\u5199framwork\u3002 \u53e6\u4e00\u65b9\u9762\uff0cProlog\u662f\u56fe\u7075\u5b8c\u5907\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u8fd9\u5c24\u5176\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u8868\u73b0\u4e00\u5207\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u53ef\u4ee5\u4e5f\u8868\u8fbe\u5e8f\u8a00\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528Prolog\u6a21\u62df\u56fe\u7075\u673a\u6765\u663e\u793a\u6b64\u4fe1\u606f\uff1a \u4ee5\u4e0b\u662f\u4e00\u4e9b\u5176\u4ed6\u53c2\u8003\u8d44\u6599\uff0c\u5e0c\u671b\u5bf9\u60a8\u6709\u7528\uff1a https://www.cs.toronto.edu/~sheila/2542/s14/A1/introtopddl2.pdf \u5728PDDL\u4e2d\u7f16\u5199\u8ba1\u5212\u9886\u57df\u548c\u95ee\u9898 \u00b6 PDDL\u80cc\u666f http://homepages.inf.ed.ac.uk/mfourman/tools/propplan/pddl.pdf http://users.cecs.anu.edu.au/~thiebaux/papers/ijcai03.pdf https://fai.cs.uni-saarland.de/hoffmann/papers/ki11.pdf \u5728\u7ebf https://editor.planning.domains/# PDDL\u7f16\u8f91\u5668","title":"HelloPDDL"},{"location":"PlanLanguages/PDDL%E8%AF%AD%E8%A8%80/#pddl","text":"en.wikipedia.org/wiki/Planning_Domain_Definition_Language https://dblp.uni-trier.de/search?q=pddl Writing Planning Domains and Problems in PDDL en.wikipedia.org/wiki/Planning_Domain_Definition_Language \u53e4\u5178\u8ba1\u5212\u4f7f\u7528\u4eceSTRIPS\u5efa\u6a21\u8bed\u8a00[Richard E Fikes and Nils J Nilsson. Strips: A new approach to the application of theorem proving to problemsolving.Artificial intelligence, 2(3-4):189\u2013208, 1971]\u6d3e\u751f\u800c\u6765\u7684\u6b63\u5f0f\u63cf\u8ff0\u8bed\u8a00\uff0c\u79f0\u4e3a\u8ba1\u5212\u9886\u57df\u5b9a\u4e49\u8bed\u8a00\uff08PDDL\uff09[Drew McDermott, Malik Ghallab, Adele Howe, Craig Knoblock, Ashwin Ram, Manuela Veloso, Daniel Weld,and David Wilkins. Pddl-the planning domain definition language, 1998.] \u6211\u4eec\u5173\u6ce8\u7684\u662f\u4ee4\u4eba\u6ee1\u610f\u7684\u8ba1\u5212\u4efb\u52a1\uff0c\u5b83\u53ef\u4ee5\u7531\u96c6\u5408\uff08F\uff0cO\uff0cI\uff0cG\uff09\u5b9a\u4e49\uff0c\u5176\u4e2dF\u662f\u4e00\u7ec4\u547d\u9898\uff08\u6216\u8c13\u8bcd\uff09\uff0c\u5b83\u4eec\u63cf\u8ff0\u4efb\u52a1\u5b9e\u4f8b\u4e2d\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u5c5e\u6027\u53ca\u5176\u5173\u7cfb\uff0cO\u662f\u4e00\u7ec4\u8fd0\u7b97\u7b26\uff08\u6216\u64cd\u4f5c\u7c7b\u578b\uff09\uff0cICF\u662f\u521d\u59cb\u72b6\u6001\uff0c\u800cGCF\u662f\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u52a8\u4f5c\u7c7b\u578bGO\u90fd\u7531\u4e09\u5143\u7ec4\uff08Pre\uff08o\uff09\uff0cAdd\uff08o\uff09\uff0cDel\uff08o\uff09\uff09\u5b9a\u4e49\uff0c\u5176\u4e2d\u524d\u63d0\u4e3aPre\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8fd9\u4e9b\u8c13\u8bcd\u5fc5\u987b\u5177\u6709\u6b63\u786e\u7684\u503c\u624d\u80fd\u9002\u7528\u4e8e\u8be5\u64cd\u4f5c\uff0cAdd\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u5728\u5e94\u7528\u540e\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3a\u771f\uff0c\u800cDel\uff08o\uff09\u662f\u4e00\u7ec4\u8c13\u8bcd\uff0c\u8be5\u884c\u4e3a\u5c06\u53d8\u4e3afalse\u6839\u636e\u7533\u8bf7\u3002\u6211\u4eec\u8bd5\u56fe\u627e\u5230\u4e00\u4e2a\u8ba1\u5212\u6216\u4e00\u7cfb\u5217\u884c\u52a8\uff0c\u8fd9\u4e9b\u884c\u52a8\u6216\u884c\u52a8\u5e8f\u5217\u4e00\u65e6\u5e94\u7528\uff0c\u5c31\u4f1a\u5728\u4e00\u5b9a\u65f6\u9650\u6216\u9884\u5b9a\u6570\u91cf\u7684\u6b65\u9aa4\u5185\u5bfc\u81f4\u72b6\u6001\u4e3aG C\u7684\u72b6\u6001\u3002\u67e5\u627e\u8ba1\u5212\u4efb\u52a1\u7684\u8ba1\u5212\u901a\u5e38\u662f\u901a\u8fc7\u542f\u53d1\u5f0f\u641c\u7d22\u65b9\u6cd5\u6765\u5b8c\u6210\u7684\uff0c\u4f46\u662f\uff0c\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4e13\u6ce8\u4e8e\u5b66\u4e60\u53cd\u5e94\u5f0f\u8ba1\u5212\u7b56\u7565\uff0c\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u5728\u7279\u5b9a\u9886\u57df\u7684\u5b9e\u4f8b\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u7136\u540e\u63a8\u5e7f\u5230\u540c\u4e00\u9886\u57df\u4e2d\u65b0\u7684\u770b\u4e0d\u89c1\u7684\u5b9e\u4f8b\u3002 \u4eba\u5de5\u667a\u80fd\u9886\u57df\u8bed\u8a00\u4e2dPDDL \u548cProlog https://www.metalevel.at/prolog/showcases/turing.pl \u7b80\u4ecb\uff1aPDDL\u662f\u4e00\u79cd\u7528\u4e8e\u8868\u8fbe\u8ba1\u5212\u4efb\u52a1\u7684\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff0c\u800cProlog\u662f\u4e00\u79cd\u6210\u719f\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u53ef\u8ba9\u60a8\u8868\u8fbe\u6240\u6709\u53ef\u80fd\u7684\u8ba1\u7b97\uff08\u5305\u62ec\u89e3\u51b3\u8ba1\u5212\u4efb\u52a1\uff09\u3002 https://www.quora.com/What-is-difference-in-expressive-power-between-PDDL-and-Prolog PDDL\u4ee3\u8868\u89c4\u5212\u57df\u5b9a\u4e49\u8bed\u8a00\u3002\u5b83\u662f\u7528\u4e8e\u8ba1\u5212\u4efb\u52a1\u7684\u6807\u51c6\u7f16\u7801\u3002\u8bf7\u6ce8\u610f\uff0cPDDL\u6709\u4e0d\u540c\u7248\u672c\uff0c\u5e76\u4e14\u5177\u6709\u5404\u79cd\u6269\u5c55\u540d\u3002 \u5b9e\u9645\u4e0a\uff0c\u8bb8\u591a\u201c PDDL\u201d\u6c42\u89e3\u5668\u4ec5\u652f\u6301PDDL\u7684\u67d0\u4e9b\u5b50\u96c6\u3002 \u901a\u5e38\uff0c\u5bf9\u8ba1\u5212\u4efb\u52a1\u7684\u63cf\u8ff0\u7531\u7279\u5b9a\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f8b\u5982\uff1a \u521d\u59cb\u72b6\u6001 \u4e00\u4e2a\u76ee\u6807 \u53ef\u4ee5\u6267\u884c\u7684\u52a8\u4f5c \u7b49 \u5982\u679c\u60a8\u7684\u8ba1\u5212\u6846\u67b6\u8db3\u591f\u901a\u7528\uff0c\u90a3\u4e48\u8fd9\u79cd\u7279\u5b9a\u4e8e\u9886\u57df\u7684\u8ba1\u5212\u8bed\u8a00\u5b9e\u9645\u4e0a\u53ef\u4ee5\u662f**Turing-complete** \uff0c\u56e0\u6b64\u4e0e\u901a\u7528\u7f16\u7a0b\u8bed\u8a00\uff08\u4f8b\u5982Prolog\uff09\u5177\u6709\u76f8\u540c\u7684\u8ba1\u7b97\u80fd\u529b\uff1a\u8bc1\u660e\u56fe\u7075\u673a\u9886\u57df\u53ef\u4ee5\u770b\u4f5c\u662f\u7ecf\u5178\u7684\u8ba1\u5212\u9886\u57df\u3002 \u4f46\u662f\uff0cPDDL\u5e76\u975e\u5982\u6b64\uff1a\u5728PDDL\u4e2d\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u67d0\u4e9b\u6709\u9650\u57df\uff08\u4f8b\u5982\u6574\u6570\u7684\u6709\u9650\u95f4\u9694\uff09\u8fdb\u884c\u63a8\u7406\u3002\u5982\u679c\u57df\u662f\u6709\u9650\u7684\uff0c\u5219\u65e0\u6cd5\u5efa\u6a21\u65e0\u9650\u7684\u78c1\u5e26\uff0c\u56e0\u6b64PDDL\u7684\u8868\u8fbe\u80fd\u529b**\u660e\u663e\u4f4e\u4e8e**Prolog\u3002 \u6b64\u5916\uff0c\u60a8\u901a\u5e38\u53ea\u5bf9\u591a\u9879\u5f0f\u957f\u5ea6\u7684\u8ba1\u5212\u611f\u5174\u8da3\uff0c\u751a\u81f3\u4ec5\u9650\u4e8e\u591a\u9879\u5f0f\u957f\u5ea6\u7684\u8ba1\u5212\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPDDL\u662fPSPACE\u6216EXPTIME\u5b8c\u6574\u7684\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u4f7f\u7528\u7684\u6269\u5c55\u540d\u548c\u53d8\u4f53\u3002\u8fd9\u5c24\u5176\u610f\u5473\u7740**\u5b58\u5728\u8bb8\u591a\u65e0\u6cd5\u5728PDDL\u4e2d\u8868\u8fbe\u7684\u8ba1\u7b97\u4efb\u52a1**\u3002 \u4ece\u5b9e\u8df5\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5373\u4f7fPDDL\u5728\u7406\u8bba\u4e0a\u8db3\u591f\u5f3a\u5927\uff0c\u53ef\u4ee5\u5bf9\u6240\u6709\u8ba1\u7b97\u4efb\u52a1\u8fdb\u884c\u5efa\u6a21\uff0c\u4f46\u5728\u8ba1\u5212\u4efb\u52a1\u7684\u9884\u671f\u5e94\u7528\u9886\u57df\u4e4b\u5916\u4f7f\u7528\u5b83\u662f\u5426\u662f\u65b9\u4fbf\u6216\u53ef\u53d6\u7684\u4ecd\u503c\u5f97\u5546\u69b7\uff0c\u6240\u4ee5\u7528pddl\u63cf\u8ff0\u81ea\u52a8\u673a\u63a8\u6f14\u751f\u6210policy\u7b97\u6cd5\u63a7\u5236\u6d41\u56fe\u89e3\u5b50\u56fe\"\u7a0b\u5e8f\u7efc\u5408\"\u53ef\u80fd\u9700\u8981PDDL\u7684\u6269\u5c55\u7248\u672c\u6216\u8005\u57fa\u4e8e\u5176\u4e0a\u505a\u5199framwork\u3002 \u53e6\u4e00\u65b9\u9762\uff0cProlog\u662f\u56fe\u7075\u5b8c\u5907\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u8fd9\u5c24\u5176\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u8868\u73b0\u4e00\u5207\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u53ef\u4ee5\u4e5f\u8868\u8fbe\u5e8f\u8a00\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528Prolog\u6a21\u62df\u56fe\u7075\u673a\u6765\u663e\u793a\u6b64\u4fe1\u606f\uff1a \u4ee5\u4e0b\u662f\u4e00\u4e9b\u5176\u4ed6\u53c2\u8003\u8d44\u6599\uff0c\u5e0c\u671b\u5bf9\u60a8\u6709\u7528\uff1a https://www.cs.toronto.edu/~sheila/2542/s14/A1/introtopddl2.pdf","title":"PDDL\u7b80\u4ecb"},{"location":"PlanLanguages/PDDL%E8%AF%AD%E8%A8%80/#pddl_1","text":"PDDL\u80cc\u666f http://homepages.inf.ed.ac.uk/mfourman/tools/propplan/pddl.pdf http://users.cecs.anu.edu.au/~thiebaux/papers/ijcai03.pdf https://fai.cs.uni-saarland.de/hoffmann/papers/ki11.pdf \u5728\u7ebf https://editor.planning.domains/# PDDL\u7f16\u8f91\u5668","title":"\u5728PDDL\u4e2d\u7f16\u5199\u8ba1\u5212\u9886\u57df\u548c\u95ee\u9898"},{"location":"PlanLanguages/STRIPS%E8%AF%AD%E8%A8%80/","text":"Fluent https://en.wikipedia.org/wiki/Fluent_(artificial_intelligence ) fluent STRIPS\u8bed\u8a00 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5728\u7ebf\u5e94\u7528\u7a0b\u5e8f Strips-Fiddle \u5c1d\u8bd5\u4e0d\u540c\u7684STRIPS PDDL\u57df\u548c\u95ee\u9898\u3002\u5c1d\u8bd5\u4efb\u4f55\u793a\u4f8b\u9886\u57df\uff0c\u6216\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u6765\u8bbe\u8ba1\u81ea\u5df1\u7684\u4eba\u5de5\u667a\u80fd\u8ba1\u5212\u9886\u57df\u548c\u95ee\u9898\u3002 \u8981\u5c06\u57fa\u4e8eSTRIPS\u7684AI\u89c4\u5212\u96c6\u6210\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u6e38\u620f\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528node.js strips \u5e93\uff0c\u8be5\u5e93\u652f\u6301\u5e7f\u5ea6\u4f18\u5148\uff0c\u6df1\u5ea6\u4f18\u5148\u548cA *\u641c\u7d22\u3002Strips\u5e93\u7684 github\u4e3b\u9875 \u63d0\u4f9b\u4e86\u5bf9\u8be5\u5e93\u7684\u66f4\u9ad8\u5c42\u6b21\u7684\u6982\u8ff0\uff0c\u5176\u4e2d\u5305\u62ec Starcraft \u57df\u7684\u793a\u4f8b\u3002 \u5165\u95e8\u770b\u8fd9\u91cc primaryobjects.com/2015/11/06/artificial-intelligence-planning-with-strips-a-gentle-introduction/#:~:text=The%20Standford%20Research%20Institute%20Problem%20Solver%20%28STRIPS%29%20is,things%20you%20can%20do%20in%20the%20game%20world. \u7b80\u4ecb jiqizhixin.com/graph/technologies/9ad9b15f-b57d-4a18-b4fa-6d1728c35b63 en.wikipedia.org/wiki/Stanford_Research_Institute_Problem_Solver STRIPS \u8868\u8fbe\u5f0f\u4e00\u79cd\u4ee5\u884c\u52a8\u4e3a\u4e2d\u5fc3\u7684\u8868\u793a\uff0c\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u52a8\u4f5c\uff08action\uff09\u6765\u8bf4\uff0c\u90fd\u9700\u8981\u6307\u5b9a\u8fd9\u4e2a\u52a8\u4f5c\u6240\u83b7\u5f97\u7684\u6548\u679c\uff08effect\uff09\u3002\u4e00\u4e2a\u8fd9\u6837\u7684\u8868\u793a\u5c31\u662f**STRIPS representation**\u3002\u201c\u65af\u5766\u798f\u7814\u7a76\u9662\u95ee\u9898\u89e3\u51b3\u5668\u201d(Stanford Research Institute Problem Solver)\u7684\u7f29\u5199\uff0c \u9996\u5148\uff0c\u5c06\u63cf\u8ff0\u4e16\u754c\u7684\u7279\u5f81\u5212\u5206\u4e3a\u539f\u59cb\u7684**primitive**\u548c\u6d3e\u751f\u7684**primitive**\u7279\u5f81\u3002\u4e00\u5b9a\u6570\u91cf\u7684\u5b50\u53e5\u7528\u6765\u786e\u5b9a\u4ece\u4efb\u4f55\u7ed9\u5b9a\u72b6\u6001\u7684\u539f\u59cb**primitive**\u7279\u5f81\u503c\u5f97\u51fa\u7684\u6d3e\u751fderived\u7279\u5f81\u7684\u503c\u3002STRIPS\u8868\u793a\u57fa\u4e8e\u5148\u524d\u72b6\u6001\u548c\u4e4b\u524dagent\u6240\u91c7\u53d6\u7684\u64cd\u4f5c\uff0c\u6765\u786e\u5b9a\u4e00\u4e2a\u72b6\u6001\u4e0b\u7684\u539f\u59cb\u7279\u5f81\u503c\uff0c STRIPS representation**\u662f\u57fa\u4e8e\u5927\u591a\u6570\u4e8b\u7269\u4e0d\u53d7\u5355\u4e2a\u52a8\u4f5c\u5f71\u54cd\u7684\u89c2\u70b9\u8bbe\u8ba1\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u52a8\u4f5c\uff0c\u5f53\u52a8\u4f5c\u53ef\u884c\u65f6\uff0cSTRIPS models\u4e2d\u539f\u59cb**primitive**\u7279\u5f81\u503c\u4f1a\u88ab\u52a8\u4f5c\u6240\u5f71\u54cd\u3002\u52a8\u4f5c\u7684\u6548\u679c\u4f9d\u8d56\u4e8e**STRIPS assumption : \u52a8\u4f5c\u63cf\u8ff0\u4e2d\u6240\u63d0\u5230\u7684\u6240\u6709\u539f\u59cb\u7279\u5f81\u4fdd\u6301\u4e0d\u53d8\u3002 \u4e00\u4e2a\u52a8\u4f5c\u7684**STRIPS representation**\u5305\u62ec\uff1a \u524d\u7f6e\u6761\u4ef6**precondition**\uff0c\u5b83\u662f\u4e00\u7ec4\u503c\u7684\u8d4b\u503c\uff0c\u64cd\u4f5c\u53d1\u751f\u65f6\uff0c\u5b83\u4eec\u5fc5\u987b\u662fTrue\u7684\u3002 \u6548\u679c**effect**\uff0c\u5b83\u662f\u4e00\u7ec4\u7ed3\u679c\u8d4b\u503c\u7ed9\u90a3\u4e9b\u7531\u4e8e\u52a8\u4f5c\u800c\u6539\u53d8\u7684\u539f\u59cb\u7279\u5f81\u3002 \u539f\u59cb\u7279\u5f81V\u5728\u52a8\u4f5c*act*\u884c\u4e3a\u540e\u5177\u6709v\u503c\uff0c\u5982\u679cV= v\u5728\u884c\u4e3a\u5217\u8868\u4e2d\uff0c\u6216\u8005\u5728act\u7684\u6548\u679c\u5217\u8868\u4e2d\u6ca1\u6709\u63d0\u5230V\uff0c\u5219V\u5728\u52a8\u4f5c*act*\u524d\u7acb\u5373\u5177\u6709v\u503c\u3002\u975e\u539f\u59cb\u7684\u7279\u6027\u53ef\u4ee5\u4ece\u539f\u59cb\u7279\u6027\u7684\u503c\u4e2d\u6d3e\u751f\u51fa\u6765\u3002 \u5f53\u53d8\u91cf\u662f\u5e03\u5c14\u503c\u65f6\uff0c\u6709\u65f6\u5c06\u6548\u679c\u5212\u5206\u4e3a\u4e00\u4e2a\u5220\u9664\u5217\u8868delete list\u662f\u5f88\u6709\u7528\u7684\uff0c\u5176\u4e2d\u5305\u62ec\u90a3\u4e9b\u53ef\u80fd\u5bfc\u81f4false\u7684\u53d8\u91cf\uff0c\u4ee5\u53ca\u4e00\u4e2aadd list\u6dfb\u52a0\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u5bfc\u81f4True\u7684\u53d8\u91cf\u3002 \u4f8b:Rob\u62ff\u8d77\u5496\u5561(puc)\u7684\u52a8\u4f5c\u5982\u4e0b\uff0cSTRIPS representation: precondition [cs,$\\neg rhc$ effect [rhc] \u5e74\u4efd \u4e8b\u4ef6 \u76f8\u5173\u8bba\u6587/Reference 1971 Fikes, R. E., & Nilsson, N. J.\u63d0\u51faSTRIPS Fikes, R. E., & Nilsson, N. J. (1971). STRIPS: A new approach to the application of theorem proving to problem solving. Artificial intelligence, 2(3-4), 189-208. 1992 H. A. Kautz and B. Selman\u63d0\u51fa\u7684Satplan Kautz, H. A., & Selman, B. (1992, August). Planning as Satisfiability. In ECAI (Vol. 92, pp. 359-363). 1993 Fikes, R. E., & Nilsson, N. J.\u5bf9STRIPS\u8fdb\u884c\u56de\u987e Fikes, R. E., & Nilsson, N. J. (1993). STRIPS, a retrospective. Artificial Intelligence, 59(1-2), 227-232. 1997 Blum, A. L., & Furst, M. L.\u63d0\u51fa\u4e00\u79cd\u5feb\u901f\u7684\u56fe\u89c4\u5212\u7b97\u6cd5 Blum, A. L., & Furst, M. L. (1997). Fast planning through planning graph analysis. Artificial intelligence, 90(1-2), 281-300. 2010 Galuszka, A., & Swierniak, A.\u5728\u591a\u673a\u5668\u4eba\u4e2d\u57fa\u4e8eSTRIPS\u548c\u975e\u5408\u4f5c\u535a\u5f08\u7684\u89c4\u5212\u7b97\u6cd5 Galuszka, A., & Swierniak, A. (2010). Planning in multi-agent environment using strips representation and non-cooperative equilibrium strategy. Journal of Intelligent and Robotic Systems, 58(3-4), 239-251. JS-STRIP \u00b6 npmjs.com/package/strips github.com/primaryobjects/strips","title":"STRIPS"},{"location":"PlanLanguages/STRIPS%E8%AF%AD%E8%A8%80/#js-strip","text":"npmjs.com/package/strips github.com/primaryobjects/strips","title":"JS-STRIP"},{"location":"PlanLanguages/version/","text":"\u5199\u51fa automated-programming-framework \u7684 Javier Segovia-Aguas \u5728\u76f8\u5173\u8bba\u6587\u4e2d\u603b\u7ed3\u8fc7PDDL\u7684\u7248\u672c\u8fed\u4ee3\u60c5\u51b5\uff1a The Action Description Language (ADL) (Pednault, 1994) extended STRIPS al-lowing actions to have conditional effects, so some effects are triggered depending on the state. In contrast to STRIPS, ADL allows existential quantification, negative literals, goals with disjunctions, different object types, and while variables in STRIPS are either true or false, in ADL they can be true, false or undefined. In the year 1998, with the aim to make a standard representation of planning languages, the Planning Domain Definition Language (PDDL) (McDermott et al.,1998) was published. The IPC has been used to compare planning solvers performance but also to include new features to the language. These are the different published versions: PDDL1.2is the version used in the first international planning competition IPC-98 (Long et al., 2000) where the planning problem model is splitted into a domain and a problem description.- PDDL2.1(Fox and Long, 2003) introduced numeric fluents so resources can be represented. In previous versions, actions were directly applied indiscrete time, but in this version actions can be described and performed in continuous space, so they are described as temporal or durative actions. PDDL2.2(Edelkamp and Hoffmann, 2004) introduced derived predicates that can represent dependency among literals through transitive closures. This version also introduces timed initial literals where some literals are triggered by independent events at different times.\u4f20\u9012\u95ed\u5305\uff0c\u63cf\u8ff0\u66f4\u52a0\u7cbe\u70bc\u3002\u65f6\u5e8f\u7f51\u7edc\u5efa\u6a21\u3002 PDDL3.0(Gerevini and Long, 2006) introduced hard constraints called state-trajectory constraints that must be true along the execution of a plan,and soft constraints called preferences where plans that satisfy them are considered of better quality.\u6bd4\u5982\u8f6f\u7ea6\u675f\u5c3d\u91cf\u5c11new ListNode\u76f4\u63a5\u7528O(1)\u7a7a\u95f4\u590d\u6742\u5ea6\u5904\u7406\u94fe\u8868\u7c7b\u4f3c\u4e8e\u76f8\u5173\u95ee\u9898\uff0c\u6216\u8005\u8f6f\u94fe\u63a5\u5e0c\u671b\u5904\u7406goto\u6c47\u7f16\u4ee3\u7801\u63a7\u5236\u6d41\u7a0b\u6307\u4ee4\u884c\u6570\u5c3d\u91cf\u5c11\u3002 PDDL3.1 introduced object-fluents where any function can be an object type. This feature is a reformulation of Functional STRIPS(Geffner, 2000). \u5b9a\u4e492.8\uff08\u7b80\u6d01\uff09\u3002\u5e7f\u4e49\u8ba1\u5212\u7684\u7b80\u6d01\u6027\u662f\u89e3 n \\\u7684\u5927\u5c0f\u3002\u5927\u5c0f\u53ef\u4ee5\u5ea6\u91cf\u4e3a\u7b97\u6cd5\u4e2d\u5df2\u7f16\u7a0b\u7684\u884c\u6570\uff0cFSC\u4e2d\u7684\u63a7\u5236\u5668\u6570\uff0c\u7b56\u7565\u89c4\u5219\u7684\u6570\u91cf\u7b49\u7b49\u3002 \u5b9a\u4e492.9\uff08\u590d\u6742\u6027\uff09\u3002\u5e7f\u4e49\u8ba1\u5212\u7684\u590d\u6742\u6027\u662f\u5173\u4e8e\u7528\u4e8e\u63cf\u8ff0\u8ba1\u5212\u5b9e\u4f8b\u7684\u8f93\u5165\u53d8\u91cf\u7684\u65f6\u7a7a\u51fd\u6570\u7684\u6e10\u8fd1\u5206\u6790\u3002\u4f8b\u5982\uff0c\u5728\u8ba1\u7b97\u590d\u6742\u6027\u7406\u8bba\u4e2d\u4f7f\u7528big-O\u7b26\u53f7\u8fdb\u884c\u529f\u80fd\u5206\u6790\u548c\u590d\u6742\u6027\u7c7b\u7684\u7814\u7a76\u3002","title":"\u7248\u672c\u8fed\u4ee3"},{"location":"PlanLanguages/Golog/Golog_ROS/","text":"GOLOG and PDDL What is the RelativeExpressiveness \u00b6 https://jens-classen.net/pub/EyerichEtAl2006.pdf PDDL+Golog \u00b6 \u57fa\u4e8ePDDL\u7684\u751f\u6210\u7684\u8ba1\u5212\u7684\u6267\u884c\u4e0e\u5e38\u89c4\u7684Golog\u7a0b\u5e8f\u548c\u6267\u884c\u76d1\u89c6\u76f8\u7ed3\u5408\u3002 https://www.fawkesrobotics.org/projects/golog-cp/ prolog\u9a8c\u8bc1 \u00b6 Source Code Verification for Embedded Systems using Prolog \u4e0e\u7cfb\u7edf\u76f8\u5173\u7684\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u9700\u8981\u53ef\u9760\uff0c\u56e0\u6b64\u5fc5\u987b\u7ecf\u8fc7\u826f\u597d\u7684\u6d4b\u8bd5\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u822a\u7a7a\u822a\u5929\u7cfb\u7edf\u800c\u8a00\u3002\u9a8c\u8bc1\u7a0b\u5e8f\u7684\u5e38\u7528\u6280\u672f\u662f\u5bf9\u5176\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\u7684\u5206\u6790\u3002\u53ef\u4ee5\u4f7f\u7528\u903b\u8f91\u7f16\u7a0b\u8bed\u8a00Prolog\u4f18\u96c5\u5730\u5206\u6790\u6811\u7ed3\u6784\u3002\u6b64\u5916\uff0cProlog\u8fd8\u63d0\u4f9b\u4e86\u8fdb\u884c\u5168\u9762\u5206\u6790\u7684\u66f4\u591a\u4f18\u52bf\uff1a\u4e00\u65b9\u9762\uff0c\u5b83\u672c\u8eab\u63d0\u4f9b\u4e86\u591a\u79cd\u9009\u9879\u6765\u6709\u6548\u5730\u5904\u7406\u6811\u6216\u56fe\u5f62\u6570\u636e\u7ed3\u6784\u3002\u53e6\u4e00\u65b9\u9762\uff0cProlog\u7684\u4e0d\u786e\u5b9a\u6027\u548c\u56de\u6eaf\u529f\u80fd\u53ef\u8f7b\u677e\u6d4b\u8bd5\u7a0b\u5e8f\u6d41\u7a0b\u7684\u5404\u79cd\u53d8\u5316\u3002Prolog\u57fa\u4e8e\u89c4\u5219\u7684\u65b9\u6cd5\u5141\u8bb8\u4ee5\u7b80\u6d01\u660e\u4e86\u7684\u65b9\u5f0f\u8868\u5f81\u9a8c\u8bc1\u76ee\u6807\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5728Prolog\u7684\u5e2e\u52a9\u4e0b\u9a8c\u8bc1Flash\u6587\u4ef6\u7cfb\u7edf\u6e90\u4ee3\u7801\u7684\u65b9\u6cd5\u3002Flash\u6587\u4ef6\u7cfb\u7edf\u662f\u7528C ++\u7f16\u5199\u7684\uff0c\u5e76\u4e14\u662f\u4e13\u95e8\u4e3a\u5728\u536b\u661f\u4e2d\u4f7f\u7528\u800c\u5f00\u53d1\u7684\u3002\u6211\u4eec\u5c06\u7ed9\u5b9a\u7684C ++\u6e90\u4ee3\u7801\u62bd\u8c61\u8bed\u6cd5\u6811\u8f6c\u6362\u4e3aProlog\u4e8b\u5b9e\uff0c\u5e76\u5f97\u51fa\u8c03\u7528\u56fe\u548c\u6267\u884c\u5e8f\u5217\uff08\u6811\uff09\uff0c\u7136\u540e\u9488\u5bf9\u9a8c\u8bc1\u76ee\u6807\u5bf9\u5b83\u4eec\u8fdb\u884c\u8fdb\u4e00\u6b65\u6d4b\u8bd5\u3002\u7531\u63a7\u5236\u7ed3\u6784\u5f15\u8d77\u7684\u4e0d\u540c\u7a0b\u5e8f\u6d41\u5206\u652f\u662f\u901a\u8fc7\u56de\u6eaf\u4f5c\u4e3a\u5b8c\u6574\u6267\u884c\u5e8f\u5217\u7684\u5b50\u6811\u800c\u5f97\u51fa\u7684\u3002\u6700\u540e\uff0c\u8fd9\u4e9b\u5b50\u6811\u5728Prolog\u4e2d\u8fdb\u884c\u4e86\u9a8c\u8bc1\u3002 \u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u6848\u4f8b\u7814\u7a76\u6765\u8bf4\u660e\u6211\u4eec\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u6211\u4eec\u4f7f\u7528\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edfRODOS\u5728\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u4e2d\u641c\u7d22\u4fe1\u53f7\u706f\u7684\u4e0d\u6b63\u786e\u5e94\u7528\u3002\u6211\u4eec\u4f9d\u9760\u8ba1\u7b97\u6811\u903b\u8f91\uff08CTL\uff09\u5e76\u5728Prolog\u4e2d\u8bbe\u8ba1\u4e86\u4e00\u79cd\u5d4c\u5165\u5f0f\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff08DSL\uff09\u6765\u8868\u8fbe\u9a8c\u8bc1\u76ee\u6807\u3002","title":"Golog"},{"location":"PlanLanguages/Golog/Golog_ROS/#golog-and-pddl-what-is-the-relativeexpressiveness","text":"https://jens-classen.net/pub/EyerichEtAl2006.pdf","title":"GOLOG and PDDL  What is the RelativeExpressiveness"},{"location":"PlanLanguages/Golog/Golog_ROS/#pddlgolog","text":"\u57fa\u4e8ePDDL\u7684\u751f\u6210\u7684\u8ba1\u5212\u7684\u6267\u884c\u4e0e\u5e38\u89c4\u7684Golog\u7a0b\u5e8f\u548c\u6267\u884c\u76d1\u89c6\u76f8\u7ed3\u5408\u3002 https://www.fawkesrobotics.org/projects/golog-cp/","title":"PDDL+Golog"},{"location":"PlanLanguages/Golog/Golog_ROS/#prolog","text":"Source Code Verification for Embedded Systems using Prolog \u4e0e\u7cfb\u7edf\u76f8\u5173\u7684\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u9700\u8981\u53ef\u9760\uff0c\u56e0\u6b64\u5fc5\u987b\u7ecf\u8fc7\u826f\u597d\u7684\u6d4b\u8bd5\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u822a\u7a7a\u822a\u5929\u7cfb\u7edf\u800c\u8a00\u3002\u9a8c\u8bc1\u7a0b\u5e8f\u7684\u5e38\u7528\u6280\u672f\u662f\u5bf9\u5176\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\u7684\u5206\u6790\u3002\u53ef\u4ee5\u4f7f\u7528\u903b\u8f91\u7f16\u7a0b\u8bed\u8a00Prolog\u4f18\u96c5\u5730\u5206\u6790\u6811\u7ed3\u6784\u3002\u6b64\u5916\uff0cProlog\u8fd8\u63d0\u4f9b\u4e86\u8fdb\u884c\u5168\u9762\u5206\u6790\u7684\u66f4\u591a\u4f18\u52bf\uff1a\u4e00\u65b9\u9762\uff0c\u5b83\u672c\u8eab\u63d0\u4f9b\u4e86\u591a\u79cd\u9009\u9879\u6765\u6709\u6548\u5730\u5904\u7406\u6811\u6216\u56fe\u5f62\u6570\u636e\u7ed3\u6784\u3002\u53e6\u4e00\u65b9\u9762\uff0cProlog\u7684\u4e0d\u786e\u5b9a\u6027\u548c\u56de\u6eaf\u529f\u80fd\u53ef\u8f7b\u677e\u6d4b\u8bd5\u7a0b\u5e8f\u6d41\u7a0b\u7684\u5404\u79cd\u53d8\u5316\u3002Prolog\u57fa\u4e8e\u89c4\u5219\u7684\u65b9\u6cd5\u5141\u8bb8\u4ee5\u7b80\u6d01\u660e\u4e86\u7684\u65b9\u5f0f\u8868\u5f81\u9a8c\u8bc1\u76ee\u6807\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5728Prolog\u7684\u5e2e\u52a9\u4e0b\u9a8c\u8bc1Flash\u6587\u4ef6\u7cfb\u7edf\u6e90\u4ee3\u7801\u7684\u65b9\u6cd5\u3002Flash\u6587\u4ef6\u7cfb\u7edf\u662f\u7528C ++\u7f16\u5199\u7684\uff0c\u5e76\u4e14\u662f\u4e13\u95e8\u4e3a\u5728\u536b\u661f\u4e2d\u4f7f\u7528\u800c\u5f00\u53d1\u7684\u3002\u6211\u4eec\u5c06\u7ed9\u5b9a\u7684C ++\u6e90\u4ee3\u7801\u62bd\u8c61\u8bed\u6cd5\u6811\u8f6c\u6362\u4e3aProlog\u4e8b\u5b9e\uff0c\u5e76\u5f97\u51fa\u8c03\u7528\u56fe\u548c\u6267\u884c\u5e8f\u5217\uff08\u6811\uff09\uff0c\u7136\u540e\u9488\u5bf9\u9a8c\u8bc1\u76ee\u6807\u5bf9\u5b83\u4eec\u8fdb\u884c\u8fdb\u4e00\u6b65\u6d4b\u8bd5\u3002\u7531\u63a7\u5236\u7ed3\u6784\u5f15\u8d77\u7684\u4e0d\u540c\u7a0b\u5e8f\u6d41\u5206\u652f\u662f\u901a\u8fc7\u56de\u6eaf\u4f5c\u4e3a\u5b8c\u6574\u6267\u884c\u5e8f\u5217\u7684\u5b50\u6811\u800c\u5f97\u51fa\u7684\u3002\u6700\u540e\uff0c\u8fd9\u4e9b\u5b50\u6811\u5728Prolog\u4e2d\u8fdb\u884c\u4e86\u9a8c\u8bc1\u3002 \u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u6848\u4f8b\u7814\u7a76\u6765\u8bf4\u660e\u6211\u4eec\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u6211\u4eec\u4f7f\u7528\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edfRODOS\u5728\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u4e2d\u641c\u7d22\u4fe1\u53f7\u706f\u7684\u4e0d\u6b63\u786e\u5e94\u7528\u3002\u6211\u4eec\u4f9d\u9760\u8ba1\u7b97\u6811\u903b\u8f91\uff08CTL\uff09\u5e76\u5728Prolog\u4e2d\u8bbe\u8ba1\u4e86\u4e00\u79cd\u5d4c\u5165\u5f0f\u9886\u57df\u7279\u5b9a\u8bed\u8a00\uff08DSL\uff09\u6765\u8868\u8fbe\u9a8c\u8bc1\u76ee\u6807\u3002","title":"prolog\u9a8c\u8bc1"},{"location":"SolversBaseOnPDDL/PDDL%20Benchmark%20Instances/","text":"Learn PDDL by Samples \u00b6 http://fai.cs.uni-saarland.de/hoffmann/ff-domains.html \u8be5\u9875\u9762\u662f\u7531Joerg Hoffmann\u521b\u5efa\u7684\uff0c\u5b83\u662f\u60f3\u8981\u5728\u89c4\u5212\u4e2d\u8fdb\u884c\u5927\u89c4\u6a21\u5b9e\u8bc1\u7814\u7a76\u7684\u4eba\u4eec\u7684\u8d77\u70b9\u3002FF\u57df\u96c6\u5408\u4e3a20\u4e2aSTRIPS\u548cADL\u89c4\u5212\u57fa\u51c6\u57df\u63d0\u4f9b\uff08\u53ef\u80fd\u7684\u8bdd\uff09\u751f\u6210\u5668\uff0c\u5305\u62ec\u4e24\u4e2a\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u57df\u63d0\u4f9b\u6709\u5173\u8d77\u6e90\uff0c\u8fdb\u884c\u7684\u8c03\u6574\uff08\u5982\u679c\u6709\uff09\uff0c\u751f\u6210\u5668\u7684\u53c2\u6570\u4ee5\u53ca\u968f\u673a\u5316\u7b56\u7565\u7684\u4fe1\u606f\u3002\u53ef\u4ee5\u4e0b\u8f7d\u57df\u6587\u4ef6\u548c\u751f\u6210\u5668\u7684C\u6e90\u4ee3\u7801\u3002\u5355\u51fb \u6b64\u5904 \u4e0b\u8f7d\u6574\u4e2a\u8f6f\u4ef6\u5305\u3002\u5173\u4e8e\u5982\u4f55\u751f\u6210\u5b83\u4eec\uff08\u5305\u62ecmakefile\uff09\u4ee5\u53ca\u5982\u4f55\u8fd0\u884c\u5b83\u4eec\uff0c\u751f\u6210\u5668\u5e94\u8be5\u662f\u4e0d\u8a00\u81ea\u660e\u7684\u3002\u5728\u4e0d\u592a\u660e\u663e\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u5305\u62ec\u4e86README\u6587\u4ef6\u3002","title":"BenchMark"},{"location":"SolversBaseOnPDDL/PDDL%20Benchmark%20Instances/#learn-pddl-by-samples","text":"http://fai.cs.uni-saarland.de/hoffmann/ff-domains.html \u8be5\u9875\u9762\u662f\u7531Joerg Hoffmann\u521b\u5efa\u7684\uff0c\u5b83\u662f\u60f3\u8981\u5728\u89c4\u5212\u4e2d\u8fdb\u884c\u5927\u89c4\u6a21\u5b9e\u8bc1\u7814\u7a76\u7684\u4eba\u4eec\u7684\u8d77\u70b9\u3002FF\u57df\u96c6\u5408\u4e3a20\u4e2aSTRIPS\u548cADL\u89c4\u5212\u57fa\u51c6\u57df\u63d0\u4f9b\uff08\u53ef\u80fd\u7684\u8bdd\uff09\u751f\u6210\u5668\uff0c\u5305\u62ec\u4e24\u4e2a\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u57df\u63d0\u4f9b\u6709\u5173\u8d77\u6e90\uff0c\u8fdb\u884c\u7684\u8c03\u6574\uff08\u5982\u679c\u6709\uff09\uff0c\u751f\u6210\u5668\u7684\u53c2\u6570\u4ee5\u53ca\u968f\u673a\u5316\u7b56\u7565\u7684\u4fe1\u606f\u3002\u53ef\u4ee5\u4e0b\u8f7d\u57df\u6587\u4ef6\u548c\u751f\u6210\u5668\u7684C\u6e90\u4ee3\u7801\u3002\u5355\u51fb \u6b64\u5904 \u4e0b\u8f7d\u6574\u4e2a\u8f6f\u4ef6\u5305\u3002\u5173\u4e8e\u5982\u4f55\u751f\u6210\u5b83\u4eec\uff08\u5305\u62ecmakefile\uff09\u4ee5\u53ca\u5982\u4f55\u8fd0\u884c\u5b83\u4eec\uff0c\u751f\u6210\u5668\u5e94\u8be5\u662f\u4e0d\u8a00\u81ea\u660e\u7684\u3002\u5728\u4e0d\u592a\u660e\u663e\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u5305\u62ec\u4e86README\u6587\u4ef6\u3002","title":"Learn PDDL by Samples"},{"location":"SolversBaseOnPDDL/PyperPlan_STRIPS/","text":"PyperPlan \u00b6 https://github.com/aibasel/pyperplan Pyperplan\u662f\u7528Python\u7f16\u5199\u7684\u8f7b\u91cf\u7ea7STRIPS\u8ba1\u5212\u5668\u3002","title":"PyperPlan_STRIPS"},{"location":"SolversBaseOnPDDL/PyperPlan_STRIPS/#pyperplan","text":"https://github.com/aibasel/pyperplan Pyperplan\u662f\u7528Python\u7f16\u5199\u7684\u8f7b\u91cf\u7ea7STRIPS\u8ba1\u5212\u5668\u3002","title":"PyperPlan"},{"location":"SolversBaseOnPDDL/Solvers/","text":"IPC\u6545\u4e8b\u5f00\u59cb\u7684\u5730\u65b9 \u00b6 https://www.icaps-conference.org/competitions/ \u6c47\u603b\u6bcf\u4e00\u5c4a\u6bd4\u8d5b\u94fe\u63a5 An Overview of theInternational Planning Competition chrome-extension://oemmndcbldboiebfnladdacbdfmadadm/ https://www.nms.kcl.ac.uk/andrew.coles/PlanningCompetitionAAAISlides.pdf https://helios.hud.ac.uk/scommv/IPC-14/selection.html 2014 International Planning Competition https://ipc2018-classical.bitbucket.io/ 2018 eecs.oregonstate.edu/ipc-learn/ 6 cs.cmu.edu/afs/cs/project/jair/pub/volume20/long03a-html/node2.html \u56fd\u9645\u89c4\u5212\u5927\u8d5b\u7cfb\u5217 solver\u6c47\u603b \u00b6 \u4e3b\u8981\u5206\uff1a \u53e4\u5178\u89c4\u5212\uff1a\u4e00\u4e2a\u5b9e\u4f8b\u4e00\u4e2a\u89e3\uff1b \u901a\u7528\u89c4\u5212\uff1a\u591a\u4e2a\u5b9e\u4f8b\u5171\u7528\u4e00\u4e2a\u89e3\u5b50\u56fe\u7b97\u6cd5Control Flow Graph\uff0c\u5e38\u89c1\u7684\u6709QNP,FOND CP\u53e4\u5178\u89c4\u5212 \u00b6 FF FD LPKT GP\u901a\u7528\u89c4\u5212 \u00b6 MyND PRP FOND-SAT PRP_planner-for-relevant-policies \u5b8f\u89c2\u6765\u770b\uff0c\u4e00\u822c\u4e24\u6761\u8def\uff1a Top-Down(\u4e0e\u6216\u6811{\u6216\u8005\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3aControlFlowGraph}\u5728\u56fe\u4e2d\u641c\u7d22\u2192algorithm-like \u7684policy\uff0c\u5728\u6211\u770b\u6765\uff0c\u8fd9\u5c31\u662f\u7b26\u53f7\u5316goto\u8bed\u53e5\u7684\u5e95\u5c42\u6c47\u7f16\u7b97\u6cd5\u7b49\u4ef7\u63cf\u8ff0) && Bottom-Up(\u751f\u6210\u5b9e\u4f8b\u7ecf\u5178\u89c4\u5212\u4e2d\u5b8c\u5584\u8865\u5168\u62bd\u8c61\u56fe\uff0c\u4e0d\u65ad\u54cd\u5e94\u5f0f\u6253\u8865\u4e01)\uff0cFONS-SAT\u53ef\u4ee5\u770b\u4f5c\u6587\u6cd5\u81ea\u52a8\u673a\uff0c\u7528\u7b26\u53f7SAT\u53ef\u6ee1\u8db3\u6027\u6c42\u89e3\uff0c\u5c31\u6211\u7684\u7406\u89e3\u6765\u8bf4\uff0c\u5176\u5b9e\u5c5e\u4e8eTop-Down\u201c\u6c42\u89e3\u201d\u3002 \u5982\uff1aMerging Example Plans into Generalized Plans forNon-deterministic Environments\u548cDirected Search for Generalized Plans Using Classical Planners \u6b63\u5982Dijkstra\u5728\u4ed6\u4e66\u4e2d\u8bf4\u5230\u610f\u601d\uff0c\u7f16\u7a0b\u662f\u4e25\u8c28\u601d\u8003\u63a8\u7406\u5f97\u5230\u7684\u7b97\u6cd5\uff0c\u800c\u4e0d\u5e94\u8be5\u662f\u610f\u5927\u5229\u82d7\u6761\u4ee3\u7801\u4e2d\u76f2\u76eedebug\u51fd\u8bd5\u9519\uff0c\u75af\u72c2\u4e3a\u7279\u6b8a\u60c5\u51b5\u6253\u8865\u4e01\u3002 \u56fe\u7075\u5f00\u542f\u7684\u81ea\u52a8\u7f16\u7a0b\u6545\u4e8b\uff0c\u76f8\u4fe1plan\u4f1a\u662f\u4e00\u4e2a\u7f8e\u4e3d\u7684\u89e3\u6cd5\u3002 QNP\u5176\u5b9e\u5c31\u662f\u5728\u6a21\u62df\u6709while\u5faa\u73af\u7684Linked list reverse\u53d7\u5230\u7684\u542f\u53d1\uff0c\u624d\u63d0\u51fa\u6765\u7684\uff0c\u8fd9\u7c7b\u95ee\u9898\u7684\u89e3\u5b50\u56fepolicy\u5176\u5b9e\u5c31\u662f**\u5305\u542bwhile\u5faa\u73af\u7684algorithm**\u3002 \u5b9e\u4f8b\u4e2d\u5b66\u4e60\uff0c\u5c31\u6bd4\u53ef\u907f\u514d\u8981\u8003\u8651**\u8986\u76d6\u7387**(\u8ba1\u5212\u95ee\u9898\u603b\u6570\u4e2d\u5df2\u89e3\u51b3\u95ee\u9898\u7684\u6570\u76ee)\uff0c\u6211\u4eec\u8bbe\u60f3\u5982\u679c\u6709\u4e00\u4e2a\u6bd4\u8f83\u5b8c\u5584\u7684GP\u826f\u5b9a\u4e49\uff0c\u8fd9\u4e2a\u7ed3\u679c\u5e94\u8be5\u662f\u5b8c\u5584\u7684\u81ea\u9876\u5411\u4e0b\u7684\u7cbe\u5de7\u8bbe\u8ba1\uff0c\u800c\u4e0d\u662f\u8349\u8349\u4e0a\u7ebf\u4e0d\u65ad\u6253\u8865\u4e01\u7684\u7f1d\u5408\u602a(\u5c3d\u7ba1\u591a\u6570\u65f6\u95f4\u662f\u8fd9\u4e48\u505a\u7684) \u4e00\u4e2a\u6bd4\u8f83\u5408\u9002\u7684\u7b97\u6cd5\u4f8b\u5b50\u662f\u4e09\u6570\u4e4b\u548c\uff1a \u7ed9\u4f60\u4e00\u4e2a\u5305\u542b n \u4e2a\u6574\u6570\u7684\u6570\u7ec4 nums\uff0c\u5224\u65ad nums \u4e2d\u662f\u5426\u5b58\u5728\u4e09\u4e2a\u5143\u7d20 a\uff0cb\uff0cc \uff0c\u4f7f\u5f97 a + b + c = 0 \uff1f\u8bf7\u4f60\u627e\u51fa\u6240\u6709\u548c\u4e3a 0 \u4e14\u4e0d\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002 \u6ce8\u610f\uff1a\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002 class Solution { public : vector < vector < int >> threeSum ( vector < int >& nums ) { vector < vector < int >> res ; sort ( nums . begin (), nums . end ()); for ( int i = 0 ; i < nums . size (); i ++ ){ if ( nums [ i ] > 0 ) return res ; // \u9519\u8bef\u53bb\u91cd\u65b9\u6cd5\uff0c\u5c06\u4f1a\u6f0f\u6389-1,-1,2 \u8fd9\u79cd\u60c5\u51b5 /* if (nums[i] == nums[i + 1]) { continue; } */ // \u6b63\u786e\u53bb\u91cd\u65b9\u6cd5 if ( i > 0 && nums [ i ] == nums [ i - 1 ] ){ continue ; }; int left = i + 1 ; int right = nums . size () -1 ; while ( left < right ){ // \u53bb\u91cd\u590d\u903b\u8f91\u5982\u679c\u653e\u5728\u8fd9\u91cc\uff0c0\uff0c0\uff0c0 \u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u76f4\u63a5\u5bfc\u81f4 right<=left \u4e86\uff0c\u4ece\u800c\u6f0f\u6389\u4e86 0,0,0 \u8fd9\u79cd\u4e09\u5143\u7ec4 /* while (right > left && nums[right] == nums[right - 1]) right--; while (right > left && nums[left] == nums[left + 1]) left++; */ if ( nums [ i ] + nums [ left ] + nums [ right ] > 0 ){ right -- ; } else if ( nums [ i ] + nums [ left ] + nums [ right ] < 0 ){ left ++ ; } else { //nums[i] + nums[left] + nums[right] = 0 res . push_back ( vector < int > { nums [ i ], nums [ left ], nums [ right ]}); // \u53bb\u91cd\u903b\u8f91\u5e94\u8be5\u653e\u5728\u627e\u5230\u4e00\u4e2a\u4e09\u5143\u7ec4\u4e4b\u540e while ( right > left && nums [ right ] == nums [ right - 1 ]) right -- ; while ( right > left && nums [ left ] == nums [ left + 1 ]) left ++ ; // \u627e\u5230\u7b54\u6848\u65f6\uff0c\u53cc\u6307\u9488\u540c\u65f6\u6536\u7f29 right -- ; left ++ ; } } } return res ; } }; \u6ce8\u610f\u4e0a\u8ff0\u8fd9\u4e2a\u4f8b\u5b50\uff1a \u9519\u8bef\u53bb\u91cd\u65b9\u6cd5\u5c06\u4f1a\u6f0f\u6389-1,-1,2 \u8fd9\u79cd\u60c5\u51b5\uff1b\u53bb\u91cd\u590d\u903b\u8f91\u653e\u7f6e\u4f4d\u7f6e\uff0c0\uff0c0\uff0c0 \u7684\u60c5\u51b5 \u3002 \u7ed9\u6211\u4eec\u7684\u542f\u53d1\u662f\u6b63\u5982dijkstra\u5728\u4ed6\u7684\u8457\u4f5c\u4e2d\u5199\u5230\u7684\uff0ctop-down\u7cbe\u5de7\u7684\u8bbe\u8ba1\u624d\u80fd\u505a\u51fa\u4e0d\u662f\u73a9\u5177\u53ef\u7528\u6027\u9c81\u68d2\u6027\u5f3a\u7684\u7b97\u6cd5\u89e3\u3002 \u800c\u8fd9\uff0c\u6070\u6070\u662f\u5b9e\u4f8bCP\u4e2d\u5b66\u4e60GP\u62bd\u8c61\u56fe\u4e0d\u65ad\u6253\u8865\u4e01\u7684bottom-up\u65b9\u6cd5\u4e2d\u5b66\u4e0d\u5230\u7684\u4e1c\u897f\uff0c\u8fd9\u6837\u5b9e\u4f8bCP\u4e2d\u5b66\u4e60\u7684GP\u62bd\u8c61\u63a7\u5236\u6d41\u56fe\u53ea\u4f1a\u5343\u75ae\u767e\u5b54\u6253\u6ee1\u8865\u4e01\uff0c\u751a\u81f3\u8fd8\u4e0d\u80fdAC\u6ee1\u8db3\u8db3\u591f\u7684\u6d4b\u4f8b\u8986\u76d6\u7387\u3002 \u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3aCFG\u63a7\u5236\u56fe\u662f\u6700\u4f73\u4e2d\u95f4intermediate representation\u8868\u793a\u65b9\u6cd5 \u00b6 Planning Graph Analysis \u00b6 Fast planning through planning graph analysis 1997 https://dblp.uni-trier.de/pid/b/AvrimBlum.html \u4f5c\u8005\u4e3b\u9875 2003 SAT-Based Model-Checking of Security Protocols Using Planning Graph Analysis. 2006 2017 link.springer.com/chapter/10.1007%2F3-540-46238-4_31 On Plan Adaptation through Planning Graph Analysis A Planning Heuristic Based on Causal Graph Analysis 2004 aaai.org/Library/ICAPS/2004/icaps04-021.php \u8fd9\u4e9b\u95ee\u9898\u5bf9\u4e8e\u57fa\u4e8e\u8ba1\u5212\u56fe\uff08\u4f8b\u5982IPP\uff0cGraphplan\u548cBlackbox\uff09\u7684\u5f53\u524d\u8ba1\u5212\u8005 \u56fe\u6700\u65b0\u8def\u5f84\u67e5\u627e\u7b97\u6cd5 \u00b6 \u7528\u4e8e\u66f4\u6539\u56fe\u5f62\uff08D *\uff0cD * -Lite\uff0cLPA *\u7b49\uff09\u7684\u6700\u65b0\u8def\u5f84\u67e5\u627e\u7b97\u6cd5\u6709\u4f55\u4e0d\u540c\uff1f https://qastack.cn/cstheory/11855/how-do-the-state-of-the-art-pathfinding-algorithms-for-changing-graphs-d-d-l \u6211\u5230\u76ee\u524d\u4e3a\u6b62\u80fd\u591f\u627e\u5230\u7684\uff1a ``` D *\uff081994\uff09 \u4e13\u6ce8D *\uff081995\uff09 \u52a8\u6001SWSF-FP\uff081996\uff09 LPA\uff081997\uff09 LPA * /\u589e\u91cfA *\uff082001\uff09 D * Lite\uff082002\uff09 SetA *\uff082002\u5e74\uff09 HPA *\uff082004\uff09 \u968f\u65f6D *\uff082005\uff09 PRA *\uff082005\u5e74\uff09 \u9886\u57dfD *\uff082007\uff09 Theta *\uff082007\uff09 HAA *\uff082008\uff09 GAA *\uff082008\uff09 LEARCH\uff082009\uff09 BDDD *\uff082009\u5e74-\u6211\u65e0\u6cd5\u8bbf\u95ee\u672c\u6587\uff1a|\uff09 \u589e\u91cf\u62ab\u62ab*\uff082009\uff09 GFRA *\uff082010\uff09 MTD * -Lite\uff082010\uff09 \u6811AA *\uff082011\uff09 ``` \u53ef\u4ee5\u5728\u4e0a\u65b9\u7684\u95ee\u9898\u680f\u4e2d\u627e\u5230\u6bcf\u7bc7\u8bba\u6587\u7684\u94fe\u63a5\u3002 \u7b80\u5355\u7684\u91cd\u65b0\u8ba1\u7b97 ``` D * \uff08\u53c8\u540dDynamic A *\uff09\uff081994\u5e74\uff09\uff1a\u5728\u6700\u521d\u7684\u8fd0\u884c\u4e2d\uff0cD *\u7684\u8fd0\u884c\u4e0eA *\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u6b64\u53ef\u4ee5\u975e\u5e38\u8fc5\u901f\u5730\u627e\u5230\u4ece\u5934\u5230\u5c3e\u7684\u6700\u4f73\u8def\u5f84\u3002\u4f46\u662f\uff0c\u968f\u7740\u5355\u5143\u4ece\u5934\u5230\u5c3e\u79fb\u52a8\uff0c\u5982\u679c\u56fe\u5f62\u53d1\u751f\u53d8\u5316\uff0cD *\u80fd\u591f\u975e\u5e38\u5feb\u901f\u5730\u91cd\u65b0\u8ba1\u7b97\u4ece\u8be5\u5355\u5143\u4f4d\u7f6e\u5230\u7ec8\u70b9\u7684\u6700\u4f73\u8def\u5f84\uff0c\u8fd9\u6bd4\u518d\u6b21\u4ece\u8be5\u5355\u5143\u4f4d\u7f6e\u7b80\u5355\u5730\u8fd0\u884cA *\u5feb\u5f97\u591a\u3002\u4f46\u662f\uff0cD *\u4ee5\u6781\u5176\u590d\u6742\u800c\u8457\u79f0\uff0c\u800c\u66f4\u7b80\u5355\u7684D * -Lite\u5df2\u5b8c\u5168\u6dd8\u6c70\u4e86D *\u3002 \u805a\u7126D *\uff081995\u5e74\uff09\uff1a\u5bf9D *\u7684\u6539\u8fdb\uff0c\u4f7f\u5176\u66f4\u5feb/\u201c\u66f4\u5b9e\u65f6\u201d\u3002\u6211\u627e\u4e0d\u5230\u4e0eD * -Lite\u7684\u4efb\u4f55\u6bd4\u8f83\uff0c\u4f46\u662f\u9274\u4e8e\u5b83\u6bd4\u8f83\u8001\uff0c\u5e76\u4e14D * -Lite\u7684\u8ba8\u8bba\u66f4\u591a\uff0c\u6211\u8ba4\u4e3aD * -Lite\u66f4\u597d\u3002 DynamicSWSF-FP\uff081996\uff09\uff1a\u5b58\u50a8\u4ece\u6bcf\u4e2a\u8282\u70b9\u5230\u5b8c\u6210\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u5177\u6709\u8f83\u5927\u7684\u521d\u59cb\u8bbe\u7f6e\u4ee5\u8ba1\u7b97\u6240\u6709\u8ddd\u79bb\u3002\u66f4\u6539\u56fe\u5f62\u540e\uff0c\u5b83\u53ea\u80fd\u66f4\u65b0\u8ddd\u79bb\u5df2\u66f4\u6539\u7684\u8282\u70b9\u3002\u4e0eA *\u548cD *\u65e0\u5173\u3002\u5f53\u60a8\u8981\u67e5\u627e\u6bcf\u6b21\u66f4\u6539\u540e\u4ece\u591a\u4e2a\u8282\u70b9\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\u65f6\u5f88\u6709\u7528\uff1b\u5426\u5219\uff0cLPA *\u6216D * -Lite\u901a\u5e38\u66f4\u6709\u7528\u3002 LPA * / Incremental A *\uff082001\uff09\uff1aLPA * \uff08\u7ec8\u8eab\u8ba1\u5212A *\uff09\uff0c\u4e5f\u79f0\u4e3aIncremental A * \uff08\u6709\u65f6\u4ee4\u4eba\u56f0\u60d1\uff0c\u4e5f\u79f0\u4e3a\u201c LPA\u201d\uff0c\u5c3d\u7ba1\u5b83\u4e0e\u5176\u4ed6\u540d\u4e3aLPA\u7684\u7b97\u6cd5\u65e0\u5173\uff09\u662fDynamicSWSF-FP\u548cA *\u7684\u7ec4\u5408\u3002\u5728\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\uff0c\u5b83\u4e0eA *\u5b8c\u5168\u76f8\u540c\u3002\u4f46\u662f\uff0c\u5728\u5bf9\u56fe\u5f62\u8fdb\u884c\u8f83\u5c0f\u7684\u66f4\u6539\u540e\uff0c\u4e0eA *\u76f8\u6bd4\uff0c\u4ece\u540c\u4e00\u5f00\u59cb/\u5b8c\u6210\u5bf9\u4e2d\u8fdb\u884c\u540e\u7eed\u641c\u7d22\u5c31\u53ef\u4ee5\u4f7f\u7528\u5148\u524d\u8fd0\u884c\u4e2d\u7684\u4fe1\u606f\u6765\u5927\u5927\u51cf\u5c11\u9700\u8981\u68c0\u67e5\u7684\u8282\u70b9\u6570\u91cf\u3002\u8fd9\u6b63\u662f\u6211\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u542c\u8d77\u6765LPA *\u5c06\u662f\u6211\u7684\u6700\u4f73\u9009\u62e9\u3002LPA *\u4e0eD *\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u603b\u662f\u627e\u5230\u4ece\u540c\u4e00\u8d77\u70b9\u5230\u540c\u4e00\u7ec8\u70b9\u7684\u6700\u4f73\u8def\u5f84\u3002\u8d77\u70b9\u79fb\u52a8\u65f6\u4e0d\u4f7f\u7528\uff08\u4f8b\u5982\u6cbf\u521d\u59cb\u6700\u4f73\u8def\u5f84\u79fb\u52a8\u7684\u5355\u4f4d\uff09\u3002\u7136\u800c... D * -Lite\uff082002\uff09\uff1a\u6b64\u7b97\u6cd5\u4f7f\u7528LPA *\u6a21\u4effD *\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u5b83\u6cbf\u7740\u521d\u59cb\u6700\u4f73\u8def\u5f84\u79fb\u52a8\u5e76\u4e14\u56fe\u5f62\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5b83\u4f1a\u4f7f\u7528LPA *\u67e5\u627e\u8be5\u5355\u5143\u7684\u65b0\u6700\u4f73\u8def\u5f84\u3002D * -Lite\u88ab\u8ba4\u4e3a\u6bd4D *\u7b80\u5355\u5f97\u591a\uff0c\u5e76\u4e14\u7531\u4e8e\u5b83\u59cb\u7ec8\u81f3\u5c11\u4e0eD *\u4e00\u6837\u5feb\u5730\u8fd0\u884c\uff0c\u56e0\u6b64\u5b83\u5df2\u7ecf\u5b8c\u5168\u5e9f\u5f03\u4e86D *\u3002\u56e0\u6b64\uff0c\u4ece\u6ca1\u6709\u4efb\u4f55\u7406\u7531\u4f7f\u7528D *\u3002\u6539\u7528D * -Lite\u3002 \u4efb\u4f55\u89d2\u5ea6\u7684\u8fd0\u52a8 \u5b57\u6bb5D *\uff082007\u5e74\uff09\uff1aD * -Lite\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u4e0d\u9650\u5236\u79fb\u52a8\u5230\u7f51\u683c\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u4f73\u8def\u5f84\u53ef\u4ee5\u4f7f\u5355\u4f4d\u6cbf\u4efb\u610f\u89d2\u5ea6\u79fb\u52a8\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7f51\u683c\u70b9\u4e4b\u95f4\u768445\u5ea6\uff08\u621690\u5ea6\uff09\u3002\u88ab\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\uff08NASA\uff09\u7528\u6765\u5bfb\u627e\u706b\u661f\u63a2\u6d4b\u5668\u3002 Theta *\uff082007\uff09\uff1aA *\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u6bd4Field D *\u63d0\u4f9b\u66f4\u597d\uff08\u66f4\u77ed\uff09\u7684\u8def\u5f84\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5b83\u57fa\u4e8eA *\u800c\u4e0d\u662fD * -Lite\uff0c\u56e0\u6b64\u5b83\u6ca1\u6709Field D *\u6240\u5177\u6709\u7684\u5feb\u901f\u91cd\u65b0\u8ba1\u5212\u529f\u80fd\u3002 \u53e6\u8bf7\u53c2\u9605\u3002 Incremental Phi *\uff082009\uff09\uff1a\u4e24\u5168\u5176\u7f8e\u3002Theta *\u7684\u4e00\u4e2a\u589e\u91cf\u7248\u672c\uff08\u53c8\u540d\u5141\u8bb8\u5feb\u901f\u91cd\u65b0\u8ba1\u5212\uff09 \u79fb\u52a8\u76ee\u6807\u70b9 GAA *\uff082008\u5e74\uff09\uff1aGAA * \uff08\u5e7f\u4e49\u81ea\u9002\u5e94A *\uff09\u662fA *\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u7528\u4e8e\u5904\u7406\u8fd0\u52a8\u76ee\u6807\u70b9\u3002\u8fd9\u662f\u751a\u81f3\u66f4\u65e9\u7684\u7b97\u6cd5\u201c\u8fd0\u52a8\u76ee\u6807\u81ea\u9002\u5e94A *\u201d\u7684\u6982\u62ec GRFA \uff082010\uff09\uff1aGFRA * \uff08\u5e7f\u4e49\u8fb9\u7f18\u68c0\u7d22A *\uff09\u4f3c\u4e4e\u662f\uff08GA\uff09 \uff0c\u5b83\u662f\u4f7f\u7528\u53e6\u4e00\u79cd\u79f0\u4e3aFRA *\u7684\u7b97\u6cd5\u5c06GAA *\u6982\u62ec\u4e3a\u4efb\u610f\u56fe\u5f62\uff08\u5373\uff0c\u4e0d\u9650\u4e8e2D\uff09\u7684\u56fe\u3002 MTD * -Lite\uff082010\uff09\uff1aMTD * -Lite \uff08\u79fb\u52a8\u76ee\u6807D * -Lite\uff09\u662f\u201c D * Lite\u7684\u6269\u5c55\uff0c\u5b83\u4f7f\u7528\u5e7f\u4e49\u8fb9\u7f18\u68c0\u7d22A *\u80cc\u540e\u7684\u539f\u7406\u201d\u6765\u8fdb\u884c\u5feb\u901f\u91cd\u65b0\u8ba1\u5212\u7684\u79fb\u52a8\u76ee\u6807\u641c\u7d22\u3002 Tree-AA *\uff082011\uff09\uff1a\uff08???\uff09\u4f3c\u4e4e\u662f\u4e00\u79cd\u7528\u4e8e\u641c\u7d22\u672a\u77e5\u5730\u5f62\u7684\u7b97\u6cd5\uff0c\u4f46\u4e0e\u672c\u8282\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u7b97\u6cd5\u4e00\u6837\uff0c\u5b83\u4e5f\u662f\u57fa\u4e8eAdaptive A *\u7684\uff0c\u56e0\u6b64\u5728\u6b64\u5c06\u5176\u653e\u5728\u6b64\u5904\u3002\u4e0d\u786e\u5b9a\u4e0e\u672c\u8282\u4e2d\u7684\u5176\u4ed6\u5185\u5bb9\u76f8\u6bd4\u3002 \u5feb\u901f/\u6b21\u4f18 \u968f\u65f6D *\uff082005\uff09\uff1a\u8fd9\u662fD * -Lite \u7684\u201c\u968f\u65f6\u201d\u53d8\u4f53\uff0c\u901a\u8fc7\u5c06D * -Lite\u4e0e\u79f0\u4e3aAnytime Repairing A *\u7684\u7b97\u6cd5\u7ed3\u5408\u4f7f\u7528\u6765\u5b8c\u6210\u3002\u201c\u968f\u65f6\u201d\u7b97\u6cd5\u662f\u4e00\u79cd\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u95f4\u9650\u5236\u4e0b\u8fd0\u884c\u7684\u7b97\u6cd5-\u5b83\u4f1a\u975e\u5e38\u5feb\u5730\u627e\u5230\u4e00\u6761\u975e\u5e38\u4e0d\u7406\u60f3\u7684\u8def\u5f84\u4f5c\u4e3a\u8d77\u70b9\uff0c\u7136\u540e\u5728\u7ed9\u51fa\u66f4\u591a\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\u5bf9\u8be5\u8def\u5f84\u8fdb\u884c\u6539\u8fdb\u3002 HPA *\uff082004\u5e74\uff09\uff1aHPA * \uff08\u5206\u7ea7\u8def\u5f84\u67e5\u627eA *\uff09\u7528\u4e8e\u5728\u5927\u578b\u56fe\u5f62\u4e0a\u67e5\u627e\u5927\u91cf\u5355\u4f4d\uff0c\u4f8b\u5982RTS \uff08\u5b9e\u65f6\u7b56\u7565\uff09\u89c6\u9891\u6e38\u620f\u3002\u5b83\u4eec\u90fd\u5c06\u5177\u6709\u4e0d\u540c\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5e76\u4e14\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002HPA *\u5c06\u56fe\u5206\u6210\u5c42\u6b21\u7ed3\u6784\uff0c\u4ee5\u4fbf\u5feb\u901f\u627e\u5230\u6240\u6709\u8fd9\u4e9b\u5355\u5143\u7684\u201c\u63a5\u8fd1\u6700\u4f73\u201d\u8def\u5f84\uff0c\u6bd4\u5728\u6bcf\u4e2a\u5355\u5143\u4e0a\u5355\u72ec\u8fd0\u884cA *\u8981\u5feb\u5f97\u591a\u3002 \u4e5f\u53ef\u4ee5\u770b\u770b PRA *\uff082005\u5e74\uff09\uff1a\u636e\u6211\u4e86\u89e3\uff0cPRA * \uff08\u90e8\u5206\u4f18\u5316A *\uff09\u89e3\u51b3\u4e86\u4e0eHPA *\u76f8\u540c\u7684\u95ee\u9898\uff0c\u4f46\u662f\u65b9\u5f0f\u4e0d\u540c\u3002\u5b83\u4eec\u90fd\u5177\u6709\u201c\u76f8\u4f3c\u7684\u6027\u80fd\u7279\u5f81\u201d\u3002 HAA *\uff082008\uff09\uff1aHAA * \uff08\u5206\u5c42\u6ce8\u91caA *\uff09\u662fHPA *\u7684\u6982\u62ec\uff0c\u5b83\u5141\u8bb8\u5728\u67d0\u4e9b\u5730\u5f62\u4e0a\u9650\u5236\u67d0\u4e9b\u5355\u5143\u7684\u7a7f\u8d8a\uff08\u4f8b\u5982\uff0c\u67d0\u4e9b\u5355\u5143\u53ef\u4ee5\u7a7f\u8fc7\u800c\u8f83\u5c0f\u7684\u901a\u9053\u5219\u65e0\u6cd5\u901a\u8fc7\uff1b\u6216\u53ea\u6709\u98de\u884c\u5355\u4f4d\u53ef\u4ee5\u7a7f\u8fc7\u7684\u5b54\uff1b\u7b49\u7b49\uff09 \u5176\u4ed6/\u672a\u77e5 LPA\uff081997\uff09\uff1aLPA \uff08\u65e0\u73af\u8def\u8def\u5f84\u67e5\u627e\u7b97\u6cd5\uff09\u4f3c\u4e4e\u662f\u4e00\u79cd\u8def\u7531\u7b97\u6cd5\uff0c\u4ec5\u4e0e\u6b64\u5904\u5176\u4ed6\u7b97\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\u7565\u76f8\u5173\u3002\u6211\u4e4b\u6240\u4ee5\u4ec5\u63d0\u53ca\u5b83\uff0c\u662f\u56e0\u4e3a\u8be5\u8bba\u6587\u5728\u4ecb\u7ecdLPA *\u7684\u8bba\u6587\u4e2d\u5728Internet\u4e0a\u7684\u591a\u4e2a\u5730\u65b9\u88ab\u6df7\u6dc6\uff08\u5e76\u4e14\u9519\u8bef\u5730\uff09\u5f15\u7528\uff0c\u800c\u5e76\u975e\u5982\u6b64\u3002 LEARCH\uff082009\uff09\uff1aLEARCH\u662f\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u7ec4\u5408\uff0c\u7528\u4e8e\u6559\u673a\u5668\u4eba\u5982\u4f55\u81ea\u884c\u5bfb\u627e\u63a5\u8fd1\u6700\u4f73\u7684\u8def\u5f84\u3002\u4f5c\u8005\u5efa\u8bae\u5c06LEARCH\u4e0eField D *\u7ed3\u5408\u4f7f\u7528\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 BDDD *\uff082009\uff09\uff1a??? \u6211\u65e0\u6cd5\u83b7\u53d6\u8bba\u6587\u3002 SetA *\uff082002\uff09\uff1a??? \u663e\u7136\uff0c\u8fd9\u662fA *\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u53ef\u4ee5\u641c\u7d22\u56fe\u7684\u201c\u4e8c\u8fdb\u5236\u51b3\u7b56\u56fe\u201d\uff08BDD\uff09\u6a21\u578b\uff1f\u4ed6\u4eec\u58f0\u79f0\u5b83\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u201c\u6bd4A *\u5feb\u51e0\u4e2a\u6570\u91cf\u7ea7\u201d\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u7406\u89e3\u6b63\u786e\uff0c\u90a3\u4e48\u8fd9\u4e9b\u60c5\u51b5\u662f\u56fe\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u5f88\u591a\u8fb9\u5417\uff1f \u8003\u8651\u5230\u6240\u6709\u8fd9\u4e9b\uff0cLPA *\u4f3c\u4e4e\u6700\u9002\u5408\u6211\u7684\u95ee\u9898\u3002 ```","title":"Solvers"},{"location":"SolversBaseOnPDDL/Solvers/#ipc","text":"https://www.icaps-conference.org/competitions/ \u6c47\u603b\u6bcf\u4e00\u5c4a\u6bd4\u8d5b\u94fe\u63a5 An Overview of theInternational Planning Competition chrome-extension://oemmndcbldboiebfnladdacbdfmadadm/ https://www.nms.kcl.ac.uk/andrew.coles/PlanningCompetitionAAAISlides.pdf https://helios.hud.ac.uk/scommv/IPC-14/selection.html 2014 International Planning Competition https://ipc2018-classical.bitbucket.io/ 2018 eecs.oregonstate.edu/ipc-learn/ 6 cs.cmu.edu/afs/cs/project/jair/pub/volume20/long03a-html/node2.html \u56fd\u9645\u89c4\u5212\u5927\u8d5b\u7cfb\u5217","title":"IPC\u6545\u4e8b\u5f00\u59cb\u7684\u5730\u65b9"},{"location":"SolversBaseOnPDDL/Solvers/#solver","text":"\u4e3b\u8981\u5206\uff1a \u53e4\u5178\u89c4\u5212\uff1a\u4e00\u4e2a\u5b9e\u4f8b\u4e00\u4e2a\u89e3\uff1b \u901a\u7528\u89c4\u5212\uff1a\u591a\u4e2a\u5b9e\u4f8b\u5171\u7528\u4e00\u4e2a\u89e3\u5b50\u56fe\u7b97\u6cd5Control Flow Graph\uff0c\u5e38\u89c1\u7684\u6709QNP,FOND","title":"solver\u6c47\u603b"},{"location":"SolversBaseOnPDDL/Solvers/#cp","text":"FF FD LPKT","title":"CP\u53e4\u5178\u89c4\u5212"},{"location":"SolversBaseOnPDDL/Solvers/#gp","text":"MyND PRP FOND-SAT PRP_planner-for-relevant-policies \u5b8f\u89c2\u6765\u770b\uff0c\u4e00\u822c\u4e24\u6761\u8def\uff1a Top-Down(\u4e0e\u6216\u6811{\u6216\u8005\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3aControlFlowGraph}\u5728\u56fe\u4e2d\u641c\u7d22\u2192algorithm-like \u7684policy\uff0c\u5728\u6211\u770b\u6765\uff0c\u8fd9\u5c31\u662f\u7b26\u53f7\u5316goto\u8bed\u53e5\u7684\u5e95\u5c42\u6c47\u7f16\u7b97\u6cd5\u7b49\u4ef7\u63cf\u8ff0) && Bottom-Up(\u751f\u6210\u5b9e\u4f8b\u7ecf\u5178\u89c4\u5212\u4e2d\u5b8c\u5584\u8865\u5168\u62bd\u8c61\u56fe\uff0c\u4e0d\u65ad\u54cd\u5e94\u5f0f\u6253\u8865\u4e01)\uff0cFONS-SAT\u53ef\u4ee5\u770b\u4f5c\u6587\u6cd5\u81ea\u52a8\u673a\uff0c\u7528\u7b26\u53f7SAT\u53ef\u6ee1\u8db3\u6027\u6c42\u89e3\uff0c\u5c31\u6211\u7684\u7406\u89e3\u6765\u8bf4\uff0c\u5176\u5b9e\u5c5e\u4e8eTop-Down\u201c\u6c42\u89e3\u201d\u3002 \u5982\uff1aMerging Example Plans into Generalized Plans forNon-deterministic Environments\u548cDirected Search for Generalized Plans Using Classical Planners \u6b63\u5982Dijkstra\u5728\u4ed6\u4e66\u4e2d\u8bf4\u5230\u610f\u601d\uff0c\u7f16\u7a0b\u662f\u4e25\u8c28\u601d\u8003\u63a8\u7406\u5f97\u5230\u7684\u7b97\u6cd5\uff0c\u800c\u4e0d\u5e94\u8be5\u662f\u610f\u5927\u5229\u82d7\u6761\u4ee3\u7801\u4e2d\u76f2\u76eedebug\u51fd\u8bd5\u9519\uff0c\u75af\u72c2\u4e3a\u7279\u6b8a\u60c5\u51b5\u6253\u8865\u4e01\u3002 \u56fe\u7075\u5f00\u542f\u7684\u81ea\u52a8\u7f16\u7a0b\u6545\u4e8b\uff0c\u76f8\u4fe1plan\u4f1a\u662f\u4e00\u4e2a\u7f8e\u4e3d\u7684\u89e3\u6cd5\u3002 QNP\u5176\u5b9e\u5c31\u662f\u5728\u6a21\u62df\u6709while\u5faa\u73af\u7684Linked list reverse\u53d7\u5230\u7684\u542f\u53d1\uff0c\u624d\u63d0\u51fa\u6765\u7684\uff0c\u8fd9\u7c7b\u95ee\u9898\u7684\u89e3\u5b50\u56fepolicy\u5176\u5b9e\u5c31\u662f**\u5305\u542bwhile\u5faa\u73af\u7684algorithm**\u3002 \u5b9e\u4f8b\u4e2d\u5b66\u4e60\uff0c\u5c31\u6bd4\u53ef\u907f\u514d\u8981\u8003\u8651**\u8986\u76d6\u7387**(\u8ba1\u5212\u95ee\u9898\u603b\u6570\u4e2d\u5df2\u89e3\u51b3\u95ee\u9898\u7684\u6570\u76ee)\uff0c\u6211\u4eec\u8bbe\u60f3\u5982\u679c\u6709\u4e00\u4e2a\u6bd4\u8f83\u5b8c\u5584\u7684GP\u826f\u5b9a\u4e49\uff0c\u8fd9\u4e2a\u7ed3\u679c\u5e94\u8be5\u662f\u5b8c\u5584\u7684\u81ea\u9876\u5411\u4e0b\u7684\u7cbe\u5de7\u8bbe\u8ba1\uff0c\u800c\u4e0d\u662f\u8349\u8349\u4e0a\u7ebf\u4e0d\u65ad\u6253\u8865\u4e01\u7684\u7f1d\u5408\u602a(\u5c3d\u7ba1\u591a\u6570\u65f6\u95f4\u662f\u8fd9\u4e48\u505a\u7684) \u4e00\u4e2a\u6bd4\u8f83\u5408\u9002\u7684\u7b97\u6cd5\u4f8b\u5b50\u662f\u4e09\u6570\u4e4b\u548c\uff1a \u7ed9\u4f60\u4e00\u4e2a\u5305\u542b n \u4e2a\u6574\u6570\u7684\u6570\u7ec4 nums\uff0c\u5224\u65ad nums \u4e2d\u662f\u5426\u5b58\u5728\u4e09\u4e2a\u5143\u7d20 a\uff0cb\uff0cc \uff0c\u4f7f\u5f97 a + b + c = 0 \uff1f\u8bf7\u4f60\u627e\u51fa\u6240\u6709\u548c\u4e3a 0 \u4e14\u4e0d\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002 \u6ce8\u610f\uff1a\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002 class Solution { public : vector < vector < int >> threeSum ( vector < int >& nums ) { vector < vector < int >> res ; sort ( nums . begin (), nums . end ()); for ( int i = 0 ; i < nums . size (); i ++ ){ if ( nums [ i ] > 0 ) return res ; // \u9519\u8bef\u53bb\u91cd\u65b9\u6cd5\uff0c\u5c06\u4f1a\u6f0f\u6389-1,-1,2 \u8fd9\u79cd\u60c5\u51b5 /* if (nums[i] == nums[i + 1]) { continue; } */ // \u6b63\u786e\u53bb\u91cd\u65b9\u6cd5 if ( i > 0 && nums [ i ] == nums [ i - 1 ] ){ continue ; }; int left = i + 1 ; int right = nums . size () -1 ; while ( left < right ){ // \u53bb\u91cd\u590d\u903b\u8f91\u5982\u679c\u653e\u5728\u8fd9\u91cc\uff0c0\uff0c0\uff0c0 \u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u76f4\u63a5\u5bfc\u81f4 right<=left \u4e86\uff0c\u4ece\u800c\u6f0f\u6389\u4e86 0,0,0 \u8fd9\u79cd\u4e09\u5143\u7ec4 /* while (right > left && nums[right] == nums[right - 1]) right--; while (right > left && nums[left] == nums[left + 1]) left++; */ if ( nums [ i ] + nums [ left ] + nums [ right ] > 0 ){ right -- ; } else if ( nums [ i ] + nums [ left ] + nums [ right ] < 0 ){ left ++ ; } else { //nums[i] + nums[left] + nums[right] = 0 res . push_back ( vector < int > { nums [ i ], nums [ left ], nums [ right ]}); // \u53bb\u91cd\u903b\u8f91\u5e94\u8be5\u653e\u5728\u627e\u5230\u4e00\u4e2a\u4e09\u5143\u7ec4\u4e4b\u540e while ( right > left && nums [ right ] == nums [ right - 1 ]) right -- ; while ( right > left && nums [ left ] == nums [ left + 1 ]) left ++ ; // \u627e\u5230\u7b54\u6848\u65f6\uff0c\u53cc\u6307\u9488\u540c\u65f6\u6536\u7f29 right -- ; left ++ ; } } } return res ; } }; \u6ce8\u610f\u4e0a\u8ff0\u8fd9\u4e2a\u4f8b\u5b50\uff1a \u9519\u8bef\u53bb\u91cd\u65b9\u6cd5\u5c06\u4f1a\u6f0f\u6389-1,-1,2 \u8fd9\u79cd\u60c5\u51b5\uff1b\u53bb\u91cd\u590d\u903b\u8f91\u653e\u7f6e\u4f4d\u7f6e\uff0c0\uff0c0\uff0c0 \u7684\u60c5\u51b5 \u3002 \u7ed9\u6211\u4eec\u7684\u542f\u53d1\u662f\u6b63\u5982dijkstra\u5728\u4ed6\u7684\u8457\u4f5c\u4e2d\u5199\u5230\u7684\uff0ctop-down\u7cbe\u5de7\u7684\u8bbe\u8ba1\u624d\u80fd\u505a\u51fa\u4e0d\u662f\u73a9\u5177\u53ef\u7528\u6027\u9c81\u68d2\u6027\u5f3a\u7684\u7b97\u6cd5\u89e3\u3002 \u800c\u8fd9\uff0c\u6070\u6070\u662f\u5b9e\u4f8bCP\u4e2d\u5b66\u4e60GP\u62bd\u8c61\u56fe\u4e0d\u65ad\u6253\u8865\u4e01\u7684bottom-up\u65b9\u6cd5\u4e2d\u5b66\u4e0d\u5230\u7684\u4e1c\u897f\uff0c\u8fd9\u6837\u5b9e\u4f8bCP\u4e2d\u5b66\u4e60\u7684GP\u62bd\u8c61\u63a7\u5236\u6d41\u56fe\u53ea\u4f1a\u5343\u75ae\u767e\u5b54\u6253\u6ee1\u8865\u4e01\uff0c\u751a\u81f3\u8fd8\u4e0d\u80fdAC\u6ee1\u8db3\u8db3\u591f\u7684\u6d4b\u4f8b\u8986\u76d6\u7387\u3002","title":"GP\u901a\u7528\u89c4\u5212"},{"location":"SolversBaseOnPDDL/Solvers/#cfgintermediate-representation","text":"","title":"\u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3aCFG\u63a7\u5236\u56fe\u662f\u6700\u4f73\u4e2d\u95f4intermediate representation\u8868\u793a\u65b9\u6cd5"},{"location":"SolversBaseOnPDDL/Solvers/#planning-graph-analysis","text":"Fast planning through planning graph analysis 1997 https://dblp.uni-trier.de/pid/b/AvrimBlum.html \u4f5c\u8005\u4e3b\u9875 2003 SAT-Based Model-Checking of Security Protocols Using Planning Graph Analysis. 2006 2017 link.springer.com/chapter/10.1007%2F3-540-46238-4_31 On Plan Adaptation through Planning Graph Analysis A Planning Heuristic Based on Causal Graph Analysis 2004 aaai.org/Library/ICAPS/2004/icaps04-021.php \u8fd9\u4e9b\u95ee\u9898\u5bf9\u4e8e\u57fa\u4e8e\u8ba1\u5212\u56fe\uff08\u4f8b\u5982IPP\uff0cGraphplan\u548cBlackbox\uff09\u7684\u5f53\u524d\u8ba1\u5212\u8005","title":"Planning Graph Analysis"},{"location":"SolversBaseOnPDDL/Solvers/#_1","text":"\u7528\u4e8e\u66f4\u6539\u56fe\u5f62\uff08D *\uff0cD * -Lite\uff0cLPA *\u7b49\uff09\u7684\u6700\u65b0\u8def\u5f84\u67e5\u627e\u7b97\u6cd5\u6709\u4f55\u4e0d\u540c\uff1f https://qastack.cn/cstheory/11855/how-do-the-state-of-the-art-pathfinding-algorithms-for-changing-graphs-d-d-l \u6211\u5230\u76ee\u524d\u4e3a\u6b62\u80fd\u591f\u627e\u5230\u7684\uff1a ``` D *\uff081994\uff09 \u4e13\u6ce8D *\uff081995\uff09 \u52a8\u6001SWSF-FP\uff081996\uff09 LPA\uff081997\uff09 LPA * /\u589e\u91cfA *\uff082001\uff09 D * Lite\uff082002\uff09 SetA *\uff082002\u5e74\uff09 HPA *\uff082004\uff09 \u968f\u65f6D *\uff082005\uff09 PRA *\uff082005\u5e74\uff09 \u9886\u57dfD *\uff082007\uff09 Theta *\uff082007\uff09 HAA *\uff082008\uff09 GAA *\uff082008\uff09 LEARCH\uff082009\uff09 BDDD *\uff082009\u5e74-\u6211\u65e0\u6cd5\u8bbf\u95ee\u672c\u6587\uff1a|\uff09 \u589e\u91cf\u62ab\u62ab*\uff082009\uff09 GFRA *\uff082010\uff09 MTD * -Lite\uff082010\uff09 \u6811AA *\uff082011\uff09 ``` \u53ef\u4ee5\u5728\u4e0a\u65b9\u7684\u95ee\u9898\u680f\u4e2d\u627e\u5230\u6bcf\u7bc7\u8bba\u6587\u7684\u94fe\u63a5\u3002 \u7b80\u5355\u7684\u91cd\u65b0\u8ba1\u7b97 ``` D * \uff08\u53c8\u540dDynamic A *\uff09\uff081994\u5e74\uff09\uff1a\u5728\u6700\u521d\u7684\u8fd0\u884c\u4e2d\uff0cD *\u7684\u8fd0\u884c\u4e0eA *\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u6b64\u53ef\u4ee5\u975e\u5e38\u8fc5\u901f\u5730\u627e\u5230\u4ece\u5934\u5230\u5c3e\u7684\u6700\u4f73\u8def\u5f84\u3002\u4f46\u662f\uff0c\u968f\u7740\u5355\u5143\u4ece\u5934\u5230\u5c3e\u79fb\u52a8\uff0c\u5982\u679c\u56fe\u5f62\u53d1\u751f\u53d8\u5316\uff0cD *\u80fd\u591f\u975e\u5e38\u5feb\u901f\u5730\u91cd\u65b0\u8ba1\u7b97\u4ece\u8be5\u5355\u5143\u4f4d\u7f6e\u5230\u7ec8\u70b9\u7684\u6700\u4f73\u8def\u5f84\uff0c\u8fd9\u6bd4\u518d\u6b21\u4ece\u8be5\u5355\u5143\u4f4d\u7f6e\u7b80\u5355\u5730\u8fd0\u884cA *\u5feb\u5f97\u591a\u3002\u4f46\u662f\uff0cD *\u4ee5\u6781\u5176\u590d\u6742\u800c\u8457\u79f0\uff0c\u800c\u66f4\u7b80\u5355\u7684D * -Lite\u5df2\u5b8c\u5168\u6dd8\u6c70\u4e86D *\u3002 \u805a\u7126D *\uff081995\u5e74\uff09\uff1a\u5bf9D *\u7684\u6539\u8fdb\uff0c\u4f7f\u5176\u66f4\u5feb/\u201c\u66f4\u5b9e\u65f6\u201d\u3002\u6211\u627e\u4e0d\u5230\u4e0eD * -Lite\u7684\u4efb\u4f55\u6bd4\u8f83\uff0c\u4f46\u662f\u9274\u4e8e\u5b83\u6bd4\u8f83\u8001\uff0c\u5e76\u4e14D * -Lite\u7684\u8ba8\u8bba\u66f4\u591a\uff0c\u6211\u8ba4\u4e3aD * -Lite\u66f4\u597d\u3002 DynamicSWSF-FP\uff081996\uff09\uff1a\u5b58\u50a8\u4ece\u6bcf\u4e2a\u8282\u70b9\u5230\u5b8c\u6210\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u5177\u6709\u8f83\u5927\u7684\u521d\u59cb\u8bbe\u7f6e\u4ee5\u8ba1\u7b97\u6240\u6709\u8ddd\u79bb\u3002\u66f4\u6539\u56fe\u5f62\u540e\uff0c\u5b83\u53ea\u80fd\u66f4\u65b0\u8ddd\u79bb\u5df2\u66f4\u6539\u7684\u8282\u70b9\u3002\u4e0eA *\u548cD *\u65e0\u5173\u3002\u5f53\u60a8\u8981\u67e5\u627e\u6bcf\u6b21\u66f4\u6539\u540e\u4ece\u591a\u4e2a\u8282\u70b9\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\u65f6\u5f88\u6709\u7528\uff1b\u5426\u5219\uff0cLPA *\u6216D * -Lite\u901a\u5e38\u66f4\u6709\u7528\u3002 LPA * / Incremental A *\uff082001\uff09\uff1aLPA * \uff08\u7ec8\u8eab\u8ba1\u5212A *\uff09\uff0c\u4e5f\u79f0\u4e3aIncremental A * \uff08\u6709\u65f6\u4ee4\u4eba\u56f0\u60d1\uff0c\u4e5f\u79f0\u4e3a\u201c LPA\u201d\uff0c\u5c3d\u7ba1\u5b83\u4e0e\u5176\u4ed6\u540d\u4e3aLPA\u7684\u7b97\u6cd5\u65e0\u5173\uff09\u662fDynamicSWSF-FP\u548cA *\u7684\u7ec4\u5408\u3002\u5728\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\uff0c\u5b83\u4e0eA *\u5b8c\u5168\u76f8\u540c\u3002\u4f46\u662f\uff0c\u5728\u5bf9\u56fe\u5f62\u8fdb\u884c\u8f83\u5c0f\u7684\u66f4\u6539\u540e\uff0c\u4e0eA *\u76f8\u6bd4\uff0c\u4ece\u540c\u4e00\u5f00\u59cb/\u5b8c\u6210\u5bf9\u4e2d\u8fdb\u884c\u540e\u7eed\u641c\u7d22\u5c31\u53ef\u4ee5\u4f7f\u7528\u5148\u524d\u8fd0\u884c\u4e2d\u7684\u4fe1\u606f\u6765\u5927\u5927\u51cf\u5c11\u9700\u8981\u68c0\u67e5\u7684\u8282\u70b9\u6570\u91cf\u3002\u8fd9\u6b63\u662f\u6211\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u542c\u8d77\u6765LPA *\u5c06\u662f\u6211\u7684\u6700\u4f73\u9009\u62e9\u3002LPA *\u4e0eD *\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u603b\u662f\u627e\u5230\u4ece\u540c\u4e00\u8d77\u70b9\u5230\u540c\u4e00\u7ec8\u70b9\u7684\u6700\u4f73\u8def\u5f84\u3002\u8d77\u70b9\u79fb\u52a8\u65f6\u4e0d\u4f7f\u7528\uff08\u4f8b\u5982\u6cbf\u521d\u59cb\u6700\u4f73\u8def\u5f84\u79fb\u52a8\u7684\u5355\u4f4d\uff09\u3002\u7136\u800c... D * -Lite\uff082002\uff09\uff1a\u6b64\u7b97\u6cd5\u4f7f\u7528LPA *\u6a21\u4effD *\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u5b83\u6cbf\u7740\u521d\u59cb\u6700\u4f73\u8def\u5f84\u79fb\u52a8\u5e76\u4e14\u56fe\u5f62\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5b83\u4f1a\u4f7f\u7528LPA *\u67e5\u627e\u8be5\u5355\u5143\u7684\u65b0\u6700\u4f73\u8def\u5f84\u3002D * -Lite\u88ab\u8ba4\u4e3a\u6bd4D *\u7b80\u5355\u5f97\u591a\uff0c\u5e76\u4e14\u7531\u4e8e\u5b83\u59cb\u7ec8\u81f3\u5c11\u4e0eD *\u4e00\u6837\u5feb\u5730\u8fd0\u884c\uff0c\u56e0\u6b64\u5b83\u5df2\u7ecf\u5b8c\u5168\u5e9f\u5f03\u4e86D *\u3002\u56e0\u6b64\uff0c\u4ece\u6ca1\u6709\u4efb\u4f55\u7406\u7531\u4f7f\u7528D *\u3002\u6539\u7528D * -Lite\u3002 \u4efb\u4f55\u89d2\u5ea6\u7684\u8fd0\u52a8 \u5b57\u6bb5D *\uff082007\u5e74\uff09\uff1aD * -Lite\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u4e0d\u9650\u5236\u79fb\u52a8\u5230\u7f51\u683c\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u4f73\u8def\u5f84\u53ef\u4ee5\u4f7f\u5355\u4f4d\u6cbf\u4efb\u610f\u89d2\u5ea6\u79fb\u52a8\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7f51\u683c\u70b9\u4e4b\u95f4\u768445\u5ea6\uff08\u621690\u5ea6\uff09\u3002\u88ab\u7f8e\u56fd\u56fd\u5bb6\u822a\u7a7a\u822a\u5929\u5c40\uff08NASA\uff09\u7528\u6765\u5bfb\u627e\u706b\u661f\u63a2\u6d4b\u5668\u3002 Theta *\uff082007\uff09\uff1aA *\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u6bd4Field D *\u63d0\u4f9b\u66f4\u597d\uff08\u66f4\u77ed\uff09\u7684\u8def\u5f84\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5b83\u57fa\u4e8eA *\u800c\u4e0d\u662fD * -Lite\uff0c\u56e0\u6b64\u5b83\u6ca1\u6709Field D *\u6240\u5177\u6709\u7684\u5feb\u901f\u91cd\u65b0\u8ba1\u5212\u529f\u80fd\u3002 \u53e6\u8bf7\u53c2\u9605\u3002 Incremental Phi *\uff082009\uff09\uff1a\u4e24\u5168\u5176\u7f8e\u3002Theta *\u7684\u4e00\u4e2a\u589e\u91cf\u7248\u672c\uff08\u53c8\u540d\u5141\u8bb8\u5feb\u901f\u91cd\u65b0\u8ba1\u5212\uff09 \u79fb\u52a8\u76ee\u6807\u70b9 GAA *\uff082008\u5e74\uff09\uff1aGAA * \uff08\u5e7f\u4e49\u81ea\u9002\u5e94A *\uff09\u662fA *\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u7528\u4e8e\u5904\u7406\u8fd0\u52a8\u76ee\u6807\u70b9\u3002\u8fd9\u662f\u751a\u81f3\u66f4\u65e9\u7684\u7b97\u6cd5\u201c\u8fd0\u52a8\u76ee\u6807\u81ea\u9002\u5e94A *\u201d\u7684\u6982\u62ec GRFA \uff082010\uff09\uff1aGFRA * \uff08\u5e7f\u4e49\u8fb9\u7f18\u68c0\u7d22A *\uff09\u4f3c\u4e4e\u662f\uff08GA\uff09 \uff0c\u5b83\u662f\u4f7f\u7528\u53e6\u4e00\u79cd\u79f0\u4e3aFRA *\u7684\u7b97\u6cd5\u5c06GAA *\u6982\u62ec\u4e3a\u4efb\u610f\u56fe\u5f62\uff08\u5373\uff0c\u4e0d\u9650\u4e8e2D\uff09\u7684\u56fe\u3002 MTD * -Lite\uff082010\uff09\uff1aMTD * -Lite \uff08\u79fb\u52a8\u76ee\u6807D * -Lite\uff09\u662f\u201c D * Lite\u7684\u6269\u5c55\uff0c\u5b83\u4f7f\u7528\u5e7f\u4e49\u8fb9\u7f18\u68c0\u7d22A *\u80cc\u540e\u7684\u539f\u7406\u201d\u6765\u8fdb\u884c\u5feb\u901f\u91cd\u65b0\u8ba1\u5212\u7684\u79fb\u52a8\u76ee\u6807\u641c\u7d22\u3002 Tree-AA *\uff082011\uff09\uff1a\uff08???\uff09\u4f3c\u4e4e\u662f\u4e00\u79cd\u7528\u4e8e\u641c\u7d22\u672a\u77e5\u5730\u5f62\u7684\u7b97\u6cd5\uff0c\u4f46\u4e0e\u672c\u8282\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u7b97\u6cd5\u4e00\u6837\uff0c\u5b83\u4e5f\u662f\u57fa\u4e8eAdaptive A *\u7684\uff0c\u56e0\u6b64\u5728\u6b64\u5c06\u5176\u653e\u5728\u6b64\u5904\u3002\u4e0d\u786e\u5b9a\u4e0e\u672c\u8282\u4e2d\u7684\u5176\u4ed6\u5185\u5bb9\u76f8\u6bd4\u3002 \u5feb\u901f/\u6b21\u4f18 \u968f\u65f6D *\uff082005\uff09\uff1a\u8fd9\u662fD * -Lite \u7684\u201c\u968f\u65f6\u201d\u53d8\u4f53\uff0c\u901a\u8fc7\u5c06D * -Lite\u4e0e\u79f0\u4e3aAnytime Repairing A *\u7684\u7b97\u6cd5\u7ed3\u5408\u4f7f\u7528\u6765\u5b8c\u6210\u3002\u201c\u968f\u65f6\u201d\u7b97\u6cd5\u662f\u4e00\u79cd\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u95f4\u9650\u5236\u4e0b\u8fd0\u884c\u7684\u7b97\u6cd5-\u5b83\u4f1a\u975e\u5e38\u5feb\u5730\u627e\u5230\u4e00\u6761\u975e\u5e38\u4e0d\u7406\u60f3\u7684\u8def\u5f84\u4f5c\u4e3a\u8d77\u70b9\uff0c\u7136\u540e\u5728\u7ed9\u51fa\u66f4\u591a\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\u5bf9\u8be5\u8def\u5f84\u8fdb\u884c\u6539\u8fdb\u3002 HPA *\uff082004\u5e74\uff09\uff1aHPA * \uff08\u5206\u7ea7\u8def\u5f84\u67e5\u627eA *\uff09\u7528\u4e8e\u5728\u5927\u578b\u56fe\u5f62\u4e0a\u67e5\u627e\u5927\u91cf\u5355\u4f4d\uff0c\u4f8b\u5982RTS \uff08\u5b9e\u65f6\u7b56\u7565\uff09\u89c6\u9891\u6e38\u620f\u3002\u5b83\u4eec\u90fd\u5c06\u5177\u6709\u4e0d\u540c\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5e76\u4e14\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002HPA *\u5c06\u56fe\u5206\u6210\u5c42\u6b21\u7ed3\u6784\uff0c\u4ee5\u4fbf\u5feb\u901f\u627e\u5230\u6240\u6709\u8fd9\u4e9b\u5355\u5143\u7684\u201c\u63a5\u8fd1\u6700\u4f73\u201d\u8def\u5f84\uff0c\u6bd4\u5728\u6bcf\u4e2a\u5355\u5143\u4e0a\u5355\u72ec\u8fd0\u884cA *\u8981\u5feb\u5f97\u591a\u3002 \u4e5f\u53ef\u4ee5\u770b\u770b PRA *\uff082005\u5e74\uff09\uff1a\u636e\u6211\u4e86\u89e3\uff0cPRA * \uff08\u90e8\u5206\u4f18\u5316A *\uff09\u89e3\u51b3\u4e86\u4e0eHPA *\u76f8\u540c\u7684\u95ee\u9898\uff0c\u4f46\u662f\u65b9\u5f0f\u4e0d\u540c\u3002\u5b83\u4eec\u90fd\u5177\u6709\u201c\u76f8\u4f3c\u7684\u6027\u80fd\u7279\u5f81\u201d\u3002 HAA *\uff082008\uff09\uff1aHAA * \uff08\u5206\u5c42\u6ce8\u91caA *\uff09\u662fHPA *\u7684\u6982\u62ec\uff0c\u5b83\u5141\u8bb8\u5728\u67d0\u4e9b\u5730\u5f62\u4e0a\u9650\u5236\u67d0\u4e9b\u5355\u5143\u7684\u7a7f\u8d8a\uff08\u4f8b\u5982\uff0c\u67d0\u4e9b\u5355\u5143\u53ef\u4ee5\u7a7f\u8fc7\u800c\u8f83\u5c0f\u7684\u901a\u9053\u5219\u65e0\u6cd5\u901a\u8fc7\uff1b\u6216\u53ea\u6709\u98de\u884c\u5355\u4f4d\u53ef\u4ee5\u7a7f\u8fc7\u7684\u5b54\uff1b\u7b49\u7b49\uff09 \u5176\u4ed6/\u672a\u77e5 LPA\uff081997\uff09\uff1aLPA \uff08\u65e0\u73af\u8def\u8def\u5f84\u67e5\u627e\u7b97\u6cd5\uff09\u4f3c\u4e4e\u662f\u4e00\u79cd\u8def\u7531\u7b97\u6cd5\uff0c\u4ec5\u4e0e\u6b64\u5904\u5176\u4ed6\u7b97\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\u7565\u76f8\u5173\u3002\u6211\u4e4b\u6240\u4ee5\u4ec5\u63d0\u53ca\u5b83\uff0c\u662f\u56e0\u4e3a\u8be5\u8bba\u6587\u5728\u4ecb\u7ecdLPA *\u7684\u8bba\u6587\u4e2d\u5728Internet\u4e0a\u7684\u591a\u4e2a\u5730\u65b9\u88ab\u6df7\u6dc6\uff08\u5e76\u4e14\u9519\u8bef\u5730\uff09\u5f15\u7528\uff0c\u800c\u5e76\u975e\u5982\u6b64\u3002 LEARCH\uff082009\uff09\uff1aLEARCH\u662f\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u7ec4\u5408\uff0c\u7528\u4e8e\u6559\u673a\u5668\u4eba\u5982\u4f55\u81ea\u884c\u5bfb\u627e\u63a5\u8fd1\u6700\u4f73\u7684\u8def\u5f84\u3002\u4f5c\u8005\u5efa\u8bae\u5c06LEARCH\u4e0eField D *\u7ed3\u5408\u4f7f\u7528\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 BDDD *\uff082009\uff09\uff1a??? \u6211\u65e0\u6cd5\u83b7\u53d6\u8bba\u6587\u3002 SetA *\uff082002\uff09\uff1a??? \u663e\u7136\uff0c\u8fd9\u662fA *\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u53ef\u4ee5\u641c\u7d22\u56fe\u7684\u201c\u4e8c\u8fdb\u5236\u51b3\u7b56\u56fe\u201d\uff08BDD\uff09\u6a21\u578b\uff1f\u4ed6\u4eec\u58f0\u79f0\u5b83\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u201c\u6bd4A *\u5feb\u51e0\u4e2a\u6570\u91cf\u7ea7\u201d\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u7406\u89e3\u6b63\u786e\uff0c\u90a3\u4e48\u8fd9\u4e9b\u60c5\u51b5\u662f\u56fe\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u5f88\u591a\u8fb9\u5417\uff1f \u8003\u8651\u5230\u6240\u6709\u8fd9\u4e9b\uff0cLPA *\u4f3c\u4e4e\u6700\u9002\u5408\u6211\u7684\u95ee\u9898\u3002 ```","title":"\u56fe\u6700\u65b0\u8def\u5f84\u67e5\u627e\u7b97\u6cd5"},{"location":"SolversBaseOnPDDL/%E5%88%8A%E7%89%A9%E4%B8%8A%E7%BB%8F%E5%85%B8demos/","text":"\u5df2\u7ecf\u53d1\u8868\u520a\u7269\u4e0a\u7684\u7ecf\u5178\u95ee\u9898\u4eec triangle tireworld\uff1f Tireword Spiky: Tireworld Truck: Islands. Doors: Miner. \u5df2\u7ecf\u53d1\u8868\u520a\u7269\u4e0a\u7684\u7ecf\u5178\u95ee\u9898\u4eec \u00b6 \u8fd9\u91cc\u8fd8\u6709\u5f88\u591a\u4f8b\u5b50\uff1a\u4f46\u8fd9\u91cc\u4f7f\u7528ff\u6c42\u89e3STRIP fai.cs.uni-saarland.de/hoffmann/ff-domains.html Blocks world en.wikipedia.org/wiki/Blocks_world acrobatics blocksworld-ipc08 earth_observation faults-ipc08 zenotravel beam-walk elevators first-responders-ipc08 tireworld triangle tireworld\uff1f \u00b6 triangle-tireworld Tireword Spiky: \u00b6 A modification of triangle tireworld. Tireworld Truck: \u00b6 A modification ofTireworld Spiky where there are a few spiky segments. Islands. \u00b6 Two grid-like islands of size n \u00d7 n each are connected by a bridge. Doors: \u00b6 Arow of n rooms one after the other connected through doors. Miner. \u00b6 An agent has to retrieve a number of items that can be found in two regions.","title":"\u520a\u7269\u4e0a\u7ecf\u5178demos"},{"location":"SolversBaseOnPDDL/%E5%88%8A%E7%89%A9%E4%B8%8A%E7%BB%8F%E5%85%B8demos/#_1","text":"\u8fd9\u91cc\u8fd8\u6709\u5f88\u591a\u4f8b\u5b50\uff1a\u4f46\u8fd9\u91cc\u4f7f\u7528ff\u6c42\u89e3STRIP fai.cs.uni-saarland.de/hoffmann/ff-domains.html Blocks world en.wikipedia.org/wiki/Blocks_world acrobatics blocksworld-ipc08 earth_observation faults-ipc08 zenotravel beam-walk elevators first-responders-ipc08 tireworld","title":"\u5df2\u7ecf\u53d1\u8868\u520a\u7269\u4e0a\u7684\u7ecf\u5178\u95ee\u9898\u4eec"},{"location":"SolversBaseOnPDDL/%E5%88%8A%E7%89%A9%E4%B8%8A%E7%BB%8F%E5%85%B8demos/#triangle-tireworld","text":"triangle-tireworld","title":"triangle tireworld\uff1f"},{"location":"SolversBaseOnPDDL/%E5%88%8A%E7%89%A9%E4%B8%8A%E7%BB%8F%E5%85%B8demos/#tireword-spiky","text":"A modification of triangle tireworld.","title":"Tireword Spiky:"},{"location":"SolversBaseOnPDDL/%E5%88%8A%E7%89%A9%E4%B8%8A%E7%BB%8F%E5%85%B8demos/#tireworld-truck","text":"A modification ofTireworld Spiky where there are a few spiky segments.","title":"Tireworld Truck:"},{"location":"SolversBaseOnPDDL/%E5%88%8A%E7%89%A9%E4%B8%8A%E7%BB%8F%E5%85%B8demos/#islands","text":"Two grid-like islands of size n \u00d7 n each are connected by a bridge.","title":"Islands."},{"location":"SolversBaseOnPDDL/%E5%88%8A%E7%89%A9%E4%B8%8A%E7%BB%8F%E5%85%B8demos/#doors","text":"Arow of n rooms one after the other connected through doors.","title":"Doors:"},{"location":"SolversBaseOnPDDL/%E5%88%8A%E7%89%A9%E4%B8%8A%E7%BB%8F%E5%85%B8demos/#miner","text":"An agent has to retrieve a number of items that can be found in two regions.","title":"Miner."},{"location":"SolversBaseOnPDDL/CP/LAPKT%E8%BD%BB%E9%87%8F%E8%87%AA%E5%8A%A8%E8%A7%84%E5%88%92%E5%B7%A5%E5%85%B7%E5%8C%85/","text":"1. LAPKT\u8f7b\u91cf\u81ea\u52a8\u89c4\u5212\u5de5\u5177\u5305 \u00b6 https://lapkt-dev.github.io/docs/gettingStarted/ \u8f7b\u91cf\u81ea\u52a8\u89c4\u5212\u5de5\u5177\u53050\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8ba1\u5212\u4eba\u5458\u4f7f\u7528FD\u5206\u6790\u5668\u3002\u6bcf\u4e2a\u8ba1\u5212\u7a0b\u5e8f\u7684\u7248\u672c\u90fd\u4f7f\u7528FF\u89e3\u6790\u5668\u3002\uff09","title":"LAPKT\u8f7b\u91cf\u81ea\u52a8\u89c4\u5212\u5de5\u5177\u5305"},{"location":"SolversBaseOnPDDL/CP/LAPKT%E8%BD%BB%E9%87%8F%E8%87%AA%E5%8A%A8%E8%A7%84%E5%88%92%E5%B7%A5%E5%85%B7%E5%8C%85/#1-lapkt","text":"https://lapkt-dev.github.io/docs/gettingStarted/ \u8f7b\u91cf\u81ea\u52a8\u89c4\u5212\u5de5\u5177\u53050\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8ba1\u5212\u4eba\u5458\u4f7f\u7528FD\u5206\u6790\u5668\u3002\u6bcf\u4e2a\u8ba1\u5212\u7a0b\u5e8f\u7684\u7248\u672c\u90fd\u4f7f\u7528FF\u89e3\u6790\u5668\u3002\uff09","title":"1. LAPKT\u8f7b\u91cf\u81ea\u52a8\u89c4\u5212\u5de5\u5177\u5305"},{"location":"SolversBaseOnPDDL/CP/fast-downward/","text":"fast-downward \u00b6 https://stackoverflow.com/questions/18945035/fast-forward-and-pddl-is-the-computed-solution-the-best fd\u4f18\u4e8eff http://www.fast-downward.org/ https://github.com/aibasel/downward https://hackage.haskell.org/package/fast-downward \u6bd4\u5982\u8fd9\u91cc\u6709\u4e2agripper\u4f8b\u5b50 https://planning.wiki/ref/planners/fd Jendrik Seipp 7:54 PM Shameless plug: I'll be giving an ICAPS tutorial about \"Evaluating Planners with Downward Lab\" on October 20 at 19:00 UTC ( https://icaps20subpages.icaps-conference.org/tutorials/evaluating-planners-with-downward-lab/ ). We'll talk about best practices for Downward Lab experiments and there'll be a Q&A session, so bring your questions! https://icaps20subpages.icaps-conference.org/tutorials/evaluating-planners-with-downward-lab/ Lab and Downward Lab \u00b6 https://github.com/aibasel/lab Lab\u662f\u4e00\u4e2aPython\u8f6f\u4ef6\u5305\uff0c\u7528\u4e8e\u8bc4\u4f30\u57fa\u51c6\u96c6\u4e0a\u7684\u6c42\u89e3\u5668\u3002\u5b9e\u9a8c\u53ef\u4ee5\u5728\u5355\u53f0\u8ba1\u7b97\u673a\u6216\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e0a\u8fd0\u884c\u3002\u8be5\u8f6f\u4ef6\u5305\u8fd8\u5305\u542b\u7528\u4e8e\u89e3\u6790\u7ed3\u679c\u548c\u521b\u5efa\u62a5\u544a\u7684\u4ee3\u7801\u3002 \u8be5\u5411\u4e0b\u5b9e\u9a8c\u5ba4Python\u5305\u65b9\u4fbf\u7684\u8fd0\u884c\u5b9e\u9a8c\u5feb\u901f\u5411\u4e0b\u89c4\u5212\u4f53\u7cfb\u3002\u5b83\u4f7f\u7528\u901a\u7528\u5b9e\u9a8c\u8f6f\u4ef6\u5305Lab\u3002\u5f53\u524d\uff0c\u5b9e\u9a8c\u5ba4\u548c\u5411\u4e0b\u5b9e\u9a8c\u5ba4\u4e00\u8d77\u5206\u53d1\u3002 \u4ee3\u7801\uff1ahttps : //github.com/aibasel/lab \u6587\u6863\uff1ahttps : //lab.readthedocs.io \u5f15\u7528\uff1a\u8bf7\u4f7f\u7528\u5f15\u7528\u5411\u4e0b\u5b9e\u9a8c\u5ba4","title":"FD"},{"location":"SolversBaseOnPDDL/CP/fast-downward/#fast-downward","text":"https://stackoverflow.com/questions/18945035/fast-forward-and-pddl-is-the-computed-solution-the-best fd\u4f18\u4e8eff http://www.fast-downward.org/ https://github.com/aibasel/downward https://hackage.haskell.org/package/fast-downward \u6bd4\u5982\u8fd9\u91cc\u6709\u4e2agripper\u4f8b\u5b50 https://planning.wiki/ref/planners/fd Jendrik Seipp 7:54 PM Shameless plug: I'll be giving an ICAPS tutorial about \"Evaluating Planners with Downward Lab\" on October 20 at 19:00 UTC ( https://icaps20subpages.icaps-conference.org/tutorials/evaluating-planners-with-downward-lab/ ). We'll talk about best practices for Downward Lab experiments and there'll be a Q&A session, so bring your questions! https://icaps20subpages.icaps-conference.org/tutorials/evaluating-planners-with-downward-lab/","title":"fast-downward"},{"location":"SolversBaseOnPDDL/CP/fast-downward/#lab-and-downward-lab","text":"https://github.com/aibasel/lab Lab\u662f\u4e00\u4e2aPython\u8f6f\u4ef6\u5305\uff0c\u7528\u4e8e\u8bc4\u4f30\u57fa\u51c6\u96c6\u4e0a\u7684\u6c42\u89e3\u5668\u3002\u5b9e\u9a8c\u53ef\u4ee5\u5728\u5355\u53f0\u8ba1\u7b97\u673a\u6216\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e0a\u8fd0\u884c\u3002\u8be5\u8f6f\u4ef6\u5305\u8fd8\u5305\u542b\u7528\u4e8e\u89e3\u6790\u7ed3\u679c\u548c\u521b\u5efa\u62a5\u544a\u7684\u4ee3\u7801\u3002 \u8be5\u5411\u4e0b\u5b9e\u9a8c\u5ba4Python\u5305\u65b9\u4fbf\u7684\u8fd0\u884c\u5b9e\u9a8c\u5feb\u901f\u5411\u4e0b\u89c4\u5212\u4f53\u7cfb\u3002\u5b83\u4f7f\u7528\u901a\u7528\u5b9e\u9a8c\u8f6f\u4ef6\u5305Lab\u3002\u5f53\u524d\uff0c\u5b9e\u9a8c\u5ba4\u548c\u5411\u4e0b\u5b9e\u9a8c\u5ba4\u4e00\u8d77\u5206\u53d1\u3002 \u4ee3\u7801\uff1ahttps : //github.com/aibasel/lab \u6587\u6863\uff1ahttps : //lab.readthedocs.io \u5f15\u7528\uff1a\u8bf7\u4f7f\u7528\u5f15\u7528\u5411\u4e0b\u5b9e\u9a8c\u5ba4","title":"Lab and Downward Lab"},{"location":"SolversBaseOnPDDL/CP/ffPlaner/","text":"ffPlaner Planning Domain Definition Language ffPlaner \u00b6 \u5728\u7ebf\u7f16\u8f91\u6c42\u89e3FF Planer online\uff1a http://editor.planning.domains/# \u6ce8\u610f\u4e0d\u8981\u4f7f\u7528https\uff0c\u5426\u5219\u4f1a\u62a5malformed url http://www.ai.mit.edu/courses/16.412J/ff.html \u5927\u5b66\u6559\u7a0b\u94fe\u63a5\u6709\u4e00\u4e2atireworl\u8f6e\u80ce\u66f4\u6362\u57df\u5b9e\u4f8b\uff1a ff -o tyreworld_domain.pddl -f tyreworld_facts1 https://fai.cs.uni-saarland.de/hoffmann/ff.html ff\u5b98\u65b9\u4e0b\u8f7d\u4e3b\u9875 FF\u89c4\u5212\u5668\u662f\u667a\u80fd\u89c4\u5212\u754c\u6700\u5bcc\u76db\u540d\u7684\u4f5c\u54c1\uff0c\u91c7\u7528\u7ecf\u5178\u7684\u524d\u5411\u641c\u7d22\u65b9\u6cd5\uff0c\u7ed3\u5408\u542f\u53d1\u5f0f\u7b97\u6cd5\u6709\u6548\u63d0\u9ad8\u4e86\u89c4\u5212\u7b97\u6cd5\u641c\u7d22\u6548\u7387\uff0c\u5728\u591a\u6b21\u4e16\u754c\u89c4\u5212\u5927\u8d5b\u4e2d\u90fd\u6709\u597d\u7684\u540d\u6b21\u3002 \u4e0b\u8f7d\u955c\u50cf http://www.pudn.com/Download/item/id/2027550.html \u4f7f\u7528\uff1a\u5728ff\u6587\u4ef6\u540c\u76ee\u5f55\u4e0b\u8fd0\u884c ./ff -o ./ff-domains/domain.pddl -f ./ff-domains/data.pddl \u4e5f\u53ef\u4ee5\u5c06ff\u590d\u5236\u5230/etc/bin\u4e0b\uff0c\u547d\u4ee4\u4e3a sudo cp ff /etc/bin \uff0c\u8fd0\u884cff\u65f6\u53ea\u9700\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ff -o ./ff-domains/domain.pddl -f ./ff-domains/data.pddl demo \u8fd9\u91cc\u8fd8\u6709\u5f88\u591a\u4f8b\u5b50\uff1a http://fai.cs.uni-saarland.de/hoffmann/ff-domains.html \u8be5\u9875\u9762\u662f\u7531Joerg Hoffmann\u521b\u5efa\u7684\uff0c\u5b83\u662f\u60f3\u8981\u5728\u89c4\u5212\u4e2d\u8fdb\u884c\u5927\u89c4\u6a21\u5b9e\u8bc1\u7814\u7a76\u7684\u4eba\u4eec\u7684\u8d77\u70b9\u3002FF\u57df\u96c6\u5408\u4e3a20\u4e2aSTRIPS\u548cADL\u89c4\u5212\u57fa\u51c6\u57df\u63d0\u4f9b\uff08\u53ef\u80fd\u7684\u8bdd\uff09\u751f\u6210\u5668\uff0c\u5305\u62ec\u4e24\u4e2a\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u57df\u63d0\u4f9b\u6709\u5173\u8d77\u6e90\uff0c\u8fdb\u884c\u7684\u8c03\u6574\uff08\u5982\u679c\u6709\uff09\uff0c\u751f\u6210\u5668\u7684\u53c2\u6570\u4ee5\u53ca\u968f\u673a\u5316\u7b56\u7565\u7684\u4fe1\u606f\u3002\u53ef\u4ee5\u4e0b\u8f7d\u57df\u6587\u4ef6\u548c\u751f\u6210\u5668\u7684C\u6e90\u4ee3\u7801\u3002\u5355\u51fb \u6b64\u5904 \u4e0b\u8f7d\u6574\u4e2a\u8f6f\u4ef6\u5305\u3002\u5173\u4e8e\u5982\u4f55\u751f\u6210\u5b83\u4eec\uff08\u5305\u62ecmakefile\uff09\u4ee5\u53ca\u5982\u4f55\u8fd0\u884c\u5b83\u4eec\uff0c\u751f\u6210\u5668\u5e94\u8be5\u662f\u4e0d\u8a00\u81ea\u660e\u7684\u3002\u5728\u4e0d\u592a\u660e\u663e\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u5305\u62ec\u4e86README\u6587\u4ef6\u3002 Ubuntu\u7cfb\u7edf\u8fd0\u884cFF-planner Ubuntu 18.04.2 LTS Prerequisit: 1. change to software source to Tsinghua source. 2. sudo apt-add-repository ppa:swi-prolog/stable 3. sudo apt-get update 4. sudo apt-get install python3-pip 5. sudo apt-get install flex Installation: 1. Download z3 from https://github.com/Z3Prover/z3 2. python3 scripts/mk_make.py 3. cd build 4. make 5. sudo make install 6. sudo apt-get install swi-prolog 7. sudo pip3 install pyswip 8. Download FF-planner from http://fai.cs.uni-saarland.de/hoffmann/ff.html 9. make \u62a5\u9519 gcc -c -Wall -g -std=gnu99 -O6 inst_hard.c gcc -c -Wall -g -std=gnu99 -O6 inst_final.c gcc -c -Wall -g -std=gnu99 -O6 orderings.c gcc -c -Wall -g -std=gnu99 -O6 relax.c gcc -c -Wall -g -std=gnu99 -O6 search.c flex -Pfct_pddl lex-fct_pddl.l bison -pfct_pddl -bscan-fct_pddl scan-fct_pddl.y make: bison: Command not found makefile:78: recipe for target 'scan-fct_pddl.tab.c' failed make: *** [scan-fct_pddl.tab.c] Error 127 \u5b89\u88c5bison\u5373\u53ef Planning Domain Definition Language \u00b6 \u57fa\u672c\u5185\u5bb9\uff1a \u2022 Domain Name \u2022 Requirements \u2022 Types \u2022 Constants \u2022 Domain Variables \u2022 Predicates \u2022 Actions spare tire domain_spare_tire_d.pddl \uff1b\u7ed9\u51fadomain\u540d\u79f0\uff0c\u8bed\u6cd5\u4f7f\u7528\u5c31\u662f(domain \u540d\u79f0) (define (domain spare_tire ) ;\u7ed9\u51fa\u4f9d\u8d56\u9879\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684\u4e09\u4e2a\u90fd\u662f\u4f9d\u8d56\u9879\uff0c\u8bed\u6cd5\u4f7f\u7528\u662f\u201c:\u4f9d\u8d56\u9879\u201d, ;strip---The most basic subset of PDDL, consisting of STRIPS only ;equality---This requirement means that the domain uses the predicate =, interpreted as equality. ;typing---This requirement means that the domain uses types (see Typing below). ;adl---Means that the domain uses some or all of ADL (i.e. disjunctions and quantifiers in preconditions and goals, quantified and conditional effects). (:requirements : strips : equality : typing ) (:types physob location ) \uff1b\u5b9a\u4e49\u8be5domain\u5f53\u4e2d\u9700\u8981\u4f7f\u7528\u7684\u7c7b\u578b\uff0c\u6bd4\u5982physic object\u3001location\u90fd\u662f\u7c7b\u578b\uff0c\u76f4\u63a5\u5c06\u4f60\u9700\u8981\u5b9a\u4e49\u7684\u7c7b\u578b\u52a0\u5165\u5230:type\u7684\u540e\u9762 (:predicates ( Tire ?x \u2212 physob) ( at ?x \u2212 physob ?y \u2212 location )) \uff1b\u5b9a\u4e49\u8be5domain\u9700\u8981\u4f7f\u7528\u7684\u8c13\u8bcd\uff0c\u5355\u5143\u8c13\u8bcd\u8868\u793a\u5c5e\u6027\uff0c\u5982\u8fd9\u91cc\u7684Tire x\u8868\u793ax\u8fd9\u4e2aphysic object\u662f\u5426\u6709\u8f6e\u80ce\u5c5e\u6027\u3002 \uff1b\u8c13\u8bcd\u540d\u79f0\u6700\u5148\u7ed9\u51fa\uff0c\u7136\u540e\u4f9d\u6b21\u7ed9\u51fa\u8be5\u8c13\u8bcd\u7684\u9879\uff0c\u683c\u5f0f\u4e3a\u201c\uff1f\u53c2\u6570 \u2013 \u53c2\u6570\u7c7b\u578b\u201d\uff0c \uff1b\u6bd4\u5982\u8fd9\u91cc\u7684\u201c\uff1fx \u2013 physob \uff1fy \u2013 physob\u201d\u8868\u793ax\u8fd9\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u5e94\u8be5\u662fphysob\u7684\uff0c\u4e0d\u80fd\u4f20\u9012\u5176\u4ed6\u7c7b\u578b\u7684\u53c2\u6570\u3002 \uff1b\u6574\u4e2a\u201cTire \uff1fx \u2013 physob\u201d\u5bf9\u5e94Tire(x)\u8fd9\u4e00\u539f\u5b50\uff08\u516c\u5f0f\uff09\u3002 \uff1b\u4e8c\u5143\u8c13\u8bcd\u8868\u793a\u5173\u7cfb\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684at\u8868\u793ax\u7269\u4f53\u662f\u5426\u5728y\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5206\u6790\u4e0e\u4e0a\u9762\u7684\u5355\u5143\u8c13\u8bcd\u7c7b\u4f3c (:action Remove :parameters (?x \u2212 physob ?y \u2212 location ) :precondition (At ?x ?y) :effect (and(not(At ?x ?y) ) (At ?x Ground) ) ) ;\u5b9a\u4e49\u8be5domain\u4e2d\u7684\u64cd\u4f5c\uff0c\u8fd9\u91cc\u7684remove\u8868\u793a\u79fb\u9664\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u9700\u8981\u7ed9\u5b9a\u53c2\u6570\uff0c\u53c2\u6570\u5b9a\u4e49\u89c4\u5219\u4e0e\u524d\u9762\u7684\u8c13\u8bcd\u4e00\u6837\uff1b ;action\u6267\u884c\u9700\u8981\u4e00\u5b9a\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u524d\u63d0\u6761\u4ef6\u662f\u4e00\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c ;\u6839\u636e\u5176\u771f\u503c\u5224\u65ad\u64cd\u4f5c\u662f\u5426\u53ef\u4ee5\u6267\u884c\uff1b ;\u6700\u540e\u6267\u884c\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u4e00\u5b9a\u7684\u7ed3\u679c\uff0c\u8fd9\u5728effect\u4e2d\u6307\u5b9a\uff0c\u6307\u5b9a\u7684effect\u4f1a\u6539\u5199\u5f53\u524d\u72b6\u6001\uff08\u76f8\u5f53\u4e8e\u6539\u5199\u77e5\u8bc6\u5e93\u4e2d\u57fa\u7840\u539f\u5b50\u7684\u771f\u503c\uff09 ;\u8bed\u6cd5\u4e0a\u6765\u8bf4\uff0cprecondition\u540e\u9762\u53ef\u4ee5\u7ed9\u51fa\u539f\u5b50\u516c\u5f0f\u7684\u4e0e\u6216\u975e\u7ec4\u5408\uff0c ;\u5176\u4e2d\u539f\u5b50\u516c\u5f0f\u8bed\u6cd5\u524d\u9762\u8c13\u8bcd\u8bf4\u8fc7\u4e86\uff0c\u975e\uff1a\uff08not \u539f\u5b50\u516c\u5f0f\uff09\uff1b\u4e0e\uff1a\uff08and \u539f\u5b50\u516c\u5f0f1 \u539f\u5b50\u516c\u5f0f2 \u7b49\u7b49\uff09\uff1b\u6216\u4e0eand\u7528\u6cd5\u4e00\u81f4\uff0c\u628aand\u6362\u4e3aor\u5373\u53ef (:action PutOn :parameters (?x \u2212 physob) :precondition (and( Tire ?x) (At ?x Ground) (not(At Flat Axle) ) ) :effect (and(not(At ?x Ground) ) (At ?x Axle) ) ) (:action LeaveOvernight :effect (and(not(At Spare Ground) ) (not(At Spare Axle) ) (not(At Spare Trunk) ) (not(At Flat Ground) ) (not(At Flat Axle) ) (not(At Flat Trunk) ) ) ) ) spare_tire_p.pddl (define (problem prob) (:domain spare_tire ) (:objects Flat Spare \u2212physob Axle Trunk Ground \u2212 location ) (:init ( Tire Flat ) ( Tire Spare) (At Flat Axle) (At Spare Trunk) ) (:goal (At Spare Axle) ) ) breiefcase world forall\u548cwhen\u7684\u7528\u6cd5,\u9996\u5148\u8bb2\u4e00\u4e0b\u8fd9\u4e2adomain\u7684\u542b\u4e49\uff0c\u7136\u540e\u5c06\u4e0b\u9762\u7684forall\u548cwhen\u7528\u6cd5 briefcase_d.pddl (define (domain briefcase) (:requirements :strips :equality :typing :conditional-effects) (:types location physob) (:constants B - physob) (:predicates (at ?x - physob ?l - location) (in ?x - physob)) (:action mov-b :parameters (?m ?l - location) :precondition (and (at B ?m) (not (= ?m ?l))) :effect (and (at B ?l) (not (at B ?m)) ;\u6ce8\u610f\u5230\u5199\u5728effect\u4e2d\u7684\u8fd9\u6bb5\u4ee3\u7801\uff1a (forall (?z - physob) (when (and (in ?z) (not (= ?z B))) ;\u8fd9\u91cc\u610f\u601d\u5c31\u662f\u904d\u5386\u6240\u6709\u7684object z\uff0c\u5f53z\u5728B\u4e2d\uff0c\u5c31\u4ea7\u751feffect ;\u5373\u5c06z\u7684\u4f4d\u7f6elocation\u8bbe\u7f6e\u4e3al\uff08\u56e0\u4e3az\u5728briefcase\u5f53\u4e2d\uff0cbriefcase\u88ab\u643a\u5e26\u5230\u4e86l\u5730\u70b9\uff0c\u90a3\u4e48z\u81ea\u7136\u4e5f\u88ab\u79fb\u52a8\u5230l\uff09 (and (at ?z ?l) (not (at ?z ?m))) ;\u8fd9\u91cc\u5fc5\u987b\u4f7f\u7528forall\uff0c\u56e0\u4e3a\u4f60\u65e0\u6cd5\u8bbe\u7f6e\u662f\u54ea\u4e2a\u5bf9\u8c61\u5728briefcase\u4e2d\uff0c\u6240\u4ee5\u9700\u8981\u904d\u5386\u5224\u65ad ) ) ) ) (:action put-in :parameters (?x - physob ?l - location) :precondition (not (= ?x B)) :effect (when (and (at ?x ?l) (at B ?l)) (in ?x)) ) (:action take-out :parameters (?x - physob) :precondition (not (= ?x B)) :effect (not (in ?x)) ) ) \u7136\u540e\u5c31\u662f\u6570\u636e\u6587\u4ef6\uff0c\u7ed9\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u5b9a\u4e49\uff1a \u5b83\u6d89\u53ca\u7684domain\u3001 \u95ee\u9898\u7684\u53c2\u6570\u5b9a\u4e49\u3001 \u95ee\u9898\u7684\u521d\u59cb\u72b6\u6001\u3001 \u95ee\u9898\u7684\u76ee\u6807\u72b6\u6001 \u5b9a\u4e49\u597d\u95ee\u9898\u540e\u6211\u4eec\u8c03\u7528\u6c42\u89e3\u5668\uff0c\u4ed6\u4f1a\u7ed9\u6211\u4eec\u6c42\u89e3\u51fa\u4e00\u7cfb\u5217\u7684action\u4f7f\u5f97\u95ee\u9898\u4ece\u521d\u59cb\u72b6\u6001\u5230\u8fbe\u76ee\u6807\u72b6\u6001\uff08\u5982\u679c\u6709\u89e3\uff09 briefcase_p.pddl (define (problem get-paid) (:domain briefcase) (:objects P D -physob home office - location) (:init (at B home) (at P home) (at D home) (in P) ) (:goal (and (at B office) (at D office) (at P home))) ) 8-puzzle domain_puzzle_d.pddl ; Header and description ( define (domain puzzle ) ; remove requirements that are not needed (:requirements :strips :typing :conditional\u2212effects :equality ) (:types ;todo: enumerate types and their hierarchy here,e.g. car truck bus \u2212 vehicle num loc ) ;un\u2212comment following line if constants are needed ;( :constants ) (:predicates ; todo: define predicates here ( at ?x \u2212 num ?y \u2212 loc ) ( adjecent ?x \u2212 loc ?y \u2212 loc ) ) ;(:functions; todo: define numeric functions here ;) ;define actions here (:action slide :parameters (?x \u2212 num ?y \u2212 loc ?z \u2212 loc ) :precondition (and( at ?x ?y) ( at num0?z) ( adjecent ?y ?z) ) :effect (and( at ?x ?z) ( at num0 ?y) (not( at ?x ?y) ) (not( at num0?z) ) ) ) ) domain_puzzle_p.pddl (define (problem prob) (: domain puzzle ) (: objects num0 num1 num2 num3 num4 num5 num6 num7 num8 \u2212 num loc1 loc2 loc3 loc4 loc5 loc6 loc7 loc8 loc0 \u2212 loc ) (: init ; todo: put the initial state \u2019 s facts and numeric values here ( at num1 loc1 ) ( at num2 loc2 ) ( at num3 loc3 ) ( at num7 loc4 ) ( at num8 loc5 ) ( at num0 loc6 ) ( at num6 loc7 ) ( at num4 loc8 ) ( at num5 loc0 ) ( adjecent loc1 loc2 ) ( adjecent loc2 loc1 ) ( adjecent loc1 loc4 ) ( adjecent loc4 loc1 ) ( adjecent loc2 loc3 ) ( adjecent loc3 loc2 ) ( adjecent loc2 loc5 ) ( adjecent loc5 loc2 ) ( adjecent loc3 loc6 ) ( adjecent loc6 loc3 ) ( adjecent loc4 loc5 ) ( adjecent loc5 loc4 ) ( adjecent loc4 loc7 ) ( adjecent loc7 loc4 ) ( adjecent loc5 loc6 ) ( adjecent loc6 loc5 ) ( adjecent loc5 loc8 ) ( adjecent loc8 loc5 ) ( adjecent loc6 loc0 ) ( adjecent loc0 loc6 ) ( adjecent loc7 loc8 ) ( adjecent loc8 loc7 ) ( adjecent loc8 loc0 ) ( adjecent loc0 loc8 ) ) (: goal (and ; todo: put the goal condition her e ( at num1 loc1 ) ( at num2 loc2 ) ( at num3 loc3 ) ( at num4 loc4 ) ( at num5 loc5 ) ( at num6 loc6 ) ( at num7 loc7 ) ( at num8 loc8 ) ( at num0 loc0 ) ) ) ; un\u2212comment the following line if metric is needed ; ( : metric minimize ( ? ? ? ) ) ) blockworld There are a collection of blocks: a block can be on the table, or on the top of another block. There are three predicates :\u2022clear(x): there is no block on top of block x; \u2022on(x,y): block x is on the top of block y; \u2022onTable(x): block x is on the table There are two actions in this task: \u2022move(x,y): move block x onto block y, provided that both x and y are clear; \u2022moveToTable(x): move block x on to the table, provided that x is clear and x is not on thetable; Give initial state and goal state, find the actions change the initial state to the goal state. domain_blocks_d.pddl ; Header and description ( define (domain blocks ) ;remove requirements that are not needed (:requirements :strips :typing :conditional\u2212effects :equality :universal\u2212preconditions : negative\u2212preconditions ) (:types ; todo: enumerate types and their hierarchy here , e.g. car truckbus \u2212 vehicle physob ) ;un\u2212comment following line if constants are needed ;( :constants ) (:predicates; todo: define predicates here (ontable ?x \u2212 physob) (clear ?x \u2212 physob) (on ?x ?y \u2212 physob) ) ;(:functions; todo:define numeric functions here ;) ;define actions here (:action move :parameters (?x ?y \u2212 physob) :precondition (and( clear ?x) ( clear ?y) ) :effect (and(on ?x ?y) (not( clear ?y) ) (when( ontable ?x) (not( ontable ?x) ) ) (forall (?z \u2212 physob) (when(on ?x ?z) (and(not(on ?x ?z) ) (clear ?z) ) ) ) ) ) (:action moveToTable :parameters (?x \u2212 physob) :precondition (and( clear ?x) (not( ontable ?x) ) ) :effect (and(not( clear ?x) ) ( ontable ?x) ( forall (?z \u2212 physob) (when(on ?x ?z) (and(not(on ?x ?z) ) (clear ?z) ) ) ) ) ) ) domain_blocks_p.pddl (define (problem prob) (:domain blocks) (:objects A B C D E F \u2212 physob ) (:init ; todo :put the initial state \u2019 s facts and numeric values here (clear A) (on A B) (on B C) (ontable C) (ontable D) (ontable F) (on E D) (clear E) (clear F) ) (:goal (and ; todo : put the goal condition here (clear F) (on F A) (on A C) (ontable C) (clear E) (on E B) (on B D) (ontable D) ) ) ;un\u2212comment the following line if metric is needed ;(:metric minimize ( ? ? ? ) ) ) FF\u89c4\u5212\u5668\u5e76\u4e0d\u80fd\u751f\u6210\u6700\u4f18\u7684\u65b9\u6848\uff0c\u4f8b\u5982\u5728Puzzle\u95ee\u9898\u4e2d\u5c31\u51fa\u73b0\u4e86\u8fde\u7eed\u62e8\u52a8\u6570\u5b576\u7684\u60c5\u51b5\uff0c\u7ecf\u8fc7\u624b\u52a8\u9a8c\u8bc1\u4e24\u4e2a\u95ee\u9898\u7684Plan\u90fd\u662f\u6b63\u786e\u7684\u3002\uff08\u6ce8\uff1a\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u7531Vscode\u63d2\u4ef6\u81ea\u52a8\u751f\u6210\uff09 >>\u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251 FF\u7684\u6027\u80fd\u5e26\u6765\u7684\u6700\u4ee4\u4eba\u632f\u594b\u7684\u95ee\u9898\u4e4b\u4e00\u662f\uff0c \u4e3a\u4ec0\u4e48*\u5728\u8fd9\u4e48\u591a\u9886\u57df\u5982\u6b64\u6709\u6548\uff1f\u542f\u53d1\u5f0f\u7b97\u6cd5\uff08\u5c24\u5176\u662f\u5c40\u90e8\u641c\u7d22\u7b97\u6cd5\uff09\u7684\u6210\u529f\u53d6\u51b3\u4e8e\u5176\u4f7f\u7528\u7684\u542f\u53d1\u5f0f\u51fd\u6570\u7684\u8d28\u91cf\uff0c\u5373\u53d6\u51b3\u4e8e\u4f7f\u7528\u8be5\u542f\u53d1\u5f0f\u51fd\u6570\u8fdb\u884c\u8bc4\u4f30\u7684\u57fa\u7840\u641c\u7d22\u7a7a\u95f4\u7684*\u5c40\u90e8\u641c\u7d22\u62d3\u6251 \uff0c\u8fd9\u662f\u6709\u4e89\u8bae\u7684\u3002\u6240\u4ee5\u95ee\u9898\u5f52\u7ed3\u4e3a\uff0c*\u5728FF\u8fd0\u4f5c\u826f\u597d\u7684\u90a3\u4e9b\u57df\u4e2d\uff0c\u641c\u7d22\u7a7a\u95f4\u7684\u7279\u5f81\u62d3\u6251\u7279\u6027\u662f\u4ec0\u4e48\uff1f*\u6211\u4eec\u8c03\u67e5\u4e8620\u4e2a\u6700\u5e38\u7528\u7684\u57fa\u51c6\u57df\u3002\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7814\u7a76\u5de5\u4f5c\u662f\u51ed\u7ecf\u9a8c\u89c2\u5bdf\u793a\u4f8b\u5b9e\u4f8b\u7684\u62d3\u6251\u3002\u6211\u4eec\u67e5\u770b\u4e86\u4e00\u4e9b\u968f\u673a\u793a\u4f8b\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u793a\u4f8b\u7684\u72b6\u6001\u7a7a\u95f4\u5c0f\u5230\u53ef\u4ee5\u5b8c\u5168\u6784\u5efa\u3002\u5bf9\u4e8eFF\u542f\u53d1\u5f0f\u51fd\u6570\u7684\u7406\u60f3\u7248\u672c\uff08\u6700\u4f73\u677e\u5f1b\u8ddd\u79bb\uff0c\u901a\u5e38\u8868\u793a\u4e3ah +\uff09\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u5173\u952e\u89c2\u5bdf\uff1a\u5728\u793a\u4f8b\u4e2d\u6ca1\u6709\u672a\u8bc6\u522b\u7684\u6b7b\u89d2\u72b6\u6001\uff08\u5b58\u5728\u677e\u5f1b\u89c4\u5212\u4f46\u6ca1\u6709\u5b9e\u9645\u89c4\u5212\u7684\u72b6\u6001\uff09\u572816\u4e2a\u57df\u4e2d\uff1b\u572814\u4e2a\u57df\u4e2d\u6839\u672c\u6ca1\u6709\u672c\u5730\u6700\u5c0f\u503c\uff1b\u57288\u4e2a\u57df\u4e2d\uff0c\u6700\u5927\u51fa\u53e3\u8ddd\u79bb\uff08\u5927\u81f4\u662f\u5e73\u5766\u533a\u57df\u4e0a\u8fbe\u5230\u8f83\u597d\u72b6\u6001\u7684\u6700\u5927\u8ddd\u79bb\uff09\u4f3c\u4e4e\u6709\u4e00\u4e2a\u6052\u5b9a\u7684\u4e0a\u9650\u3002FF'\u7684\u62d3\u6251\u6027\u8d28 \u7684\u5b9e\u9645\u542f\u53d1\u5f0f\u51fd\u6570\uff08\u6700\u4f73\u677e\u5f1b\u8ddd\u79bb\u7684\u8fd1\u4f3c\u503c\uff09\u76f8\u4f3c\u3002\u5177\u6709\u8fd9\u4e09\u4e2a\u5c5e\u6027\uff0cFF\u7684\u641c\u7d22\u7b97\u6cd5\u4f1a\u5728\u627e\u5230\u76ee\u6807\u4e4b\u524d\u5bf9\u591a\u9879\u72b6\u6001\u8fdb\u884c\u591a\u9879\u5f0f\u8bc4\u4f30\u3002 \u7ecf\u9a8c\u5de5\u4f5c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u89c4\u5212\u9886\u57df\u4e4b\u95f4\u7684\u76f8\u5173\u533a\u522b\uff0c\u4e0b\u4e00\u6b65\u662f\u9a8c\u8bc1\u603b\u4f53\u89c2\u5bdf\u7ed3\u679c\u3002\u7406\u8bba\u7814\u7a76\u8bc1\u660e\uff0c\u5bf9\u4e8e\u6700\u4f73\u677e\u5f1b\u8ddd\u79bbh +\uff0c\u9664\u4e86\u4e00\u4e2a\u4f8b\u5916\uff0c\u6211\u4eec\u6240\u6709\u5c0f\u793a\u4f8b\u4e2d\u7684\u6240\u6709\u89c2\u5bdf\u7ed3\u679c\u5b9e\u9645\u4e0a\u90fd\u5ef6\u7eed\u5230\u76f8\u5e94\u7684\u6574\u4e2a\u57df\u3002\u901a\u8fc7\u9a8c\u8bc1\u8fc7\u7a0b\uff0c\u8c03\u67e5\u8fd8\u63d0\u4f9b\u4e86\u5e38\u89c1*\u7684\u7ed3\u6784\u6a21\u5f0f\u56fe*\u5728\u88ab\u8c03\u67e5\u7684\u9886\u57df\u4e2d\uff0c\u8fd9\u4e9b\u95ee\u9898\u4f1a\u5bfc\u81f4\u653e\u677e\u8ddd\u79bb\u7684\u9ad8\u542f\u53d1\u5f0f\u8d28\u91cf\uff0c\u4ece\u800c\u5bfc\u81f4FF\u7b49\u8ba1\u5212\u8005\u7684\u8868\u73b0\u3002\u7ed3\u6784\u7684\u6a21\u5f0f\u975e\u5e38\u7c97\u7cd9\uff1a1.\u53ef\u7528\u7684\u52a8\u4f5c\u662f\u53ef\u9006\u7684\u6216\u4e0d\u9700\u8981\u53cd\u8f6c\uff08->\u65e0\u6b7b\u89d2\uff09\uff1b2.\u4efb\u4f55\u6709\u5229\u4e8e\u89e3\u51b3\u5b9e\u9645\u4efb\u52a1\u7684\u52a8\u4f5c\u4e5f\u6709\u5229\u4e8e\u89e3\u51b3\u8f7b\u677e\u7684\u4efb\u52a1\uff08\u4e0e1.->\u6ca1\u6709\u5c40\u90e8\u6700\u5c0f\u503c\uff09\u4e00\u8d77\uff1b3.\u6709\u4e9b\u52a8\u4f5c\u5177\u6709\u4e0e\u5e94\u7528\u65e0\u5173\u7684\u5220\u9664\u6548\u679c\uff0c\u800c\u5176\u4ed6\u52a8\u4f5c\u6700\u591a\u9700\u8981\u8fde\u7eed\u6267\u884c\u6052\u5b9a\u7684\u6b21\u6570\uff08\u4ee5\u53ca1.\u548c2\u3002->\u6700\u5927\u9000\u51fa\u8ddd\u79bb\u7684\u6052\u5b9a\u4e0a\u9650\uff09 \u3002 \u6700\u540e\u7684\u7ecf\u9a8c\u5de5\u4f5c\u6b65\u9aa4\u8bc1\u5b9e\uff0c\u6700\u4f73\u677e\u5f1b\u8ddd\u79bb\u7684\u542f\u53d1\u5f0f\u8d28\u91cf\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5ef6\u7eed\u4e86FF\u5bf9\u8fd9\u4e9b\u8ddd\u79bb\u7684\u8fd1\u4f3c\u3002\u5c24\u5176\u662f\uff0c\u5728\u6240\u6709\u4e0a\u8ff0\u4e09\u79cd\u7ed3\u6784\u6a21\u5f0f\u5747\u51fa\u73b0\u7684\u88ab\u8c03\u67e5\u768420\u4e2a\u57df\u4e2d\u7684\u516b\u4e2a\u57df\u4e2d\uff0cFF\u662f\u201c\u5927\u201d\u591a\u9879\u5f0f\uff08\u5c24\u5176\u662f\u5728\u7269\u6d41\u57df\u4e2d\uff09\u3002 \u524d\u4e24\u4e2a\u8c03\u67e5\u4f5c\u4e3a\u4f1a\u8bae\u8bba\u6587\u53d1\u8868\u3002\u9996\u6b21\u5b9e\u8bc1\u5de5\u4f5c\u5728IJCAI'01\u4e0a\u53d1\u8868\uff1a \u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\uff1a\u4e00\u9879\u5b9e\u8bc1\u5206\u6790\uff0c\u8f7d\u4e8e\uff1a \u7b2c17\u5c4a\u56fd\u9645\u4eba\u5de5\u667a\u80fd\u8054\u5408\u4f1a\u8bae\u8bba\u6587\u96c6 \uff0c\u7f8e\u56fd\u534e\u76db\u987f\uff0c2001\u5e748\u6708\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u5173\u4e8e\u7406\u8bba\u5206\u6790\u7684\u8bba\u6587\u53d1\u8868\u5728AIPS'02\u4e0a\uff1a \u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\uff1a\u7406\u8bba\u5206\u6790\uff0c\u8f7d\u4e8e\uff1a2002\u5e744\u6708\u5728\u6cd5\u56fd\u56fe\u5362\u5179*\u4e3e\u884c\u7684\u7b2c\u516d\u5c4a\u56fd\u9645\u4eba\u5de5\u667a\u80fd\u89c4\u5212\u4e0e\u8c03\u5ea6\u56fd\u9645\u4f1a\u8bae\u8bba\u6587\u96c6\u4e0a*\u3002\uff08 gzip\u7684\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u53c2\u8003\u8d44\u6599 \u6761\u76ee \uff09 AIPS'02\u6587\u4ef6\u7684\u6269\u5c55\u548c\u4fee\u8ba2\u7248\uff0c\u5305\u62ec10\u4e2a\u65b0\u57df\u7684\u7ed3\u679c\uff08IPC-3\u548cIPC-4\u57fa\u51c6\uff09\uff0c\u4ee5\u53ca\u5bf9\u89c4\u5212\u57df\u4e4b\u95f4\u4e3b\u8981\u533a\u522b\u7684\u4fee\u8ba2\u5b9a\u4e49\uff0c\u5176\u4e2d\u6d89\u53ca\u9488\u5bf9AIPS'02\u7684\u51e0\u4e2a\u65b0\u7ed3\u679cJAIR\u4e2d\u53d1\u5e03\u4e8620\u4e2a``\u65e7''\u57df\uff1a J. Hoffmann\uff0c \u300a\u5ffd\u7565\u5220\u9664\u5217\u8868\u7684\u5de5\u4f5c \u539f\u7406 \uff1a\u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\u300b \uff0c \u300a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u300b \uff0c\u7b2c24\u5377\uff0c2005\u5e74\uff0c\u7b2c 685-758 \u9875\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09 JAIR\u8bba\u6587\u5305\u542b\u6982\u8ff0\u8bc1\u660e\u8349\u56fe\u3002\u8f83\u957f\u7684TR\uff08138\u9875\uff09\u63d0\u4f9b\u4e86\u8c03\u67e5\u7684\u5168\u90e8\u8be6\u7ec6\u4fe1\u606f\uff1a \u5ffd\u7565\u5220\u9664\u5217\u8868\u7684\u5de5\u4f5c \u539f\u7406 \uff1a\u300a\u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\u300b\uff0c\u6280\u672f\u62a5\u544a\u7b2c185\u53f7\uff0c\u4fe1\u606f\u5b66\u9662\uff0c2003\u5e743\u6708\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09 **>>**TorchLight \u8fd9\u662f\u6211\u6700\u8fd1\u5f00\u53d1\u7684\u5de5\u5177\u3002\u5b83\u5141\u8bb8**\u5206\u6790\u641c\u7d22\u7a7a\u95f4\u62d3\u6251\uff0c\u800c\u65e0\u9700\u5b9e\u9645\u8fd0\u884c\u4efb\u4f55\u641c\u7d22**\u3002\u6211\u7684\u610f\u601d\u662f\uff0cTorchLight\u53ef\u4ee5\u5b8c\u5168\u81ea\u52a8\u5730\u5728h +\uff08\u53c2\u89c1\u4e0a\u6587\uff09\u4e0b\u5bf9\u672c\u5730\u641c\u7d22\u62d3\u6251\u5f97\u51fa\u7ed3\u8bba\uff0c\u751a\u81f3\u65e0\u9700\u5f00\u59cb\u751f\u6210\u4efb\u4f55\u641c\u7d22\u72b6\u6001\u3002\u5173\u952e\u662f\u56e0\u679c\u56fe\u548c\u57df\u8f6c\u6362\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u6b63\u5982\u6211\u5728\u5b8c\u6210\u4e0a\u8ff0\u5de5\u4f5c\u540e\u51e0\u5e74\u6d41\u884c\u8d77\u6765\u7684\u90a3\u6837\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u57fa\u672c\u5c5e\u6027\u662f\uff1a \u5982\u679c\u56e0\u679c\u56fe\u662f\u975e\u5faa\u73af\u7684\uff0c\u5e76\u4e14\u6240\u6709\u53d8\u91cf\u8f6c\u6362\u90fd\u662f\u53ef\u9006\u7684\uff0c\u5219h +\u4e0b\u6ca1\u6709\u5c40\u90e8\u6700\u5c0f\u503c \u3002 \u57fa\u672c\u7ed3\u679c\u53ef\u4ee5\u901a\u8fc7\u66f4\u5c40\u90e8\u7684\u5206\u6790\u6765\u6269\u5c55\uff0c\u7740\u773c\u4e8e\u56e0\u679c\u56fe\u7684\u67d0\u4e9b\u5b50\u56fe\u800c\u4e0d\u662f\u5b8c\u6574\u7684\u5b50\u56fe\uff0c\u5e76\u5141\u8bb8\u67d0\u4e9b\u4e0d\u53ef\u9006\u8f6c\u6362\u7684\u7279\u6b8a\u60c5\u51b5\u3002\u901a\u8fc7\u8fd9\u4e9b\u6269\u5c55\uff0c\u8be5\u6807\u51c6\u8fd8\u5141\u8bb8\u5bfc\u51fah +\u4e0b\u51fa\u53e3\u8ddd\u79bb\u7684\u754c\u9650\uff0c\u5e76\u4e14\u9002\u7528\u4e8e4\u4e2a\u6807\u51c6\u57fa\u51c6\u57df\u3002\u867d\u7136\u8fd9\u53ea\u662f\u57fa\u51c6\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u4f46TorchLight\u8fd8\u5177\u6709\u4e00\u79cd\u7b80\u5355\u7684\u91c7\u6837\u65b9\u6cd5\uff0c\u53ef\u4ee5\u67e5\u770b\u5c11\u91cf\uff08\u9ed8\u8ba4\u503c\uff1a10\uff09\u968f\u673a\u751f\u6210\u7684\u72b6\u6001\uff0c\u5c06\u6bcf\u4e2a\u72b6\u6001\u7684\u51c6\u5219\u5e94\u7528\u5230\u6bcf\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u8fd4\u56de\u6837\u672c\u72b6\u6001\u4e2d\u6761\u4ef6\u8bf4\u201c\u662f\u201d\u3002\u6b64\u201c\u6210\u529f\u7387\u201d\u63d0\u4f9b\u4e86\u9488\u5bf9\u4efb\u610f\u8ba1\u5212\u4efb\u52a1\u7684\u201c\u786c\u5ea6\u201d\uff08\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u662fh +\u7684\u8d28\u91cf\uff09\u7684\u5ea6\u91cf\u3002 TorchLight\u7684\u6e90\u4ee3\u7801\u5df2\u901a\u8fc7GNU GPL\u8bb8\u53ef\u516c\u5f00\u63d0\u4f9b\uff1a TorchLight.zip \u3002 \u6709\u5173TorchLight\u7684\u8bba\u6587\u5df2\u5728JAIR'11\u548cICAPS'11\u4e0a\u53d1\u8868\uff08\u6309\u4ee5\u4e0b\u987a\u5e8f\u6392\u5217\uff1a-\uff09 J. Hoffmann\uff0c\u5728**\u4e0d\u8fd0\u884c\u4efb\u4f55\u641c\u7d22\u7684\u60c5\u51b5\u4e0b\u5206\u6790\u641c\u7d22\u62d3\u6251\uff1a\u5173\u4e8e\u56e0\u679c\u56fe\u4e0eh +\u4e4b\u95f4\u7684\u8054\u7cfb**\uff0c \u300a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u300b \uff0c\u7b2c41\u5377\uff0c2011\u5e74\uff0c\u7b2c155-229\u9875\u3002\uff08 PDF\u6587\u4ef6 \uff09 J. Hoffmann\uff0c \u201c\u5ffd\u7565\u5220\u9664\u5217\u8868\u7684\u5de5\u4f5c***\u539f\u7406* \uff0c\u7b2c\u4e8c\u90e8\u5206\uff1a\u56e0\u679c\u56fe\u201d**\uff0c\u57282011\u5e746\u6708\u4e8e\u5fb7\u56fd\u5f17\u8d56\u5821*\u4e3e\u884c\u7684\u7b2c21\u5c4a\u56fd\u9645\u81ea\u52a8\u89c4\u5212\u548c\u8ba1\u5212\u4f1a\u8bae\uff08ICAPS'11\uff09\u4e0a\u53d1\u8868*\u3002\u88ab\u63d0\u540d\u6700\u4f73\u8bba\u6587\u5956\u3002 \uff08 pdf\u6863\u6848 \uff09 \u8fd8\u6709\u4e00\u4e2a\u6613\u4e8e\u9605\u8bfb\u7684 ICAPS'11\u6f14\u793a\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u793a\u4f8b\u8fd0\u884c \uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6211\u7684 \u6f14\u8bb2\u5e7b\u706f\u7247 \u6216 ICAPS'11\u6f14\u793a\u6d77\u62a5 \u3002 >>FF\u5e38\u89c4\u4fe1\u606f Fast-Forward\uff0c\u7f29\u5199\u4e3aFF\uff0c\u662fJoerg\u5f00\u53d1\u7684\u4e0e\u9886\u57df\u65e0\u5173\u7684\u8ba1\u5212\u7cfb\u7edf\u3002FF\u53ef\u4ee5\u5904\u7406\u7ecf\u5178\u7684STRIPS-\u4ee5\u53ca\u5168\u9762\u7684ADL-\u8ba1\u5212\u4efb\u52a1\uff0c\u8fd9\u4e9b\u4efb\u52a1\u5c06\u5728PDDL\u4e2d\u6307\u5b9a\uff08\u5bf9\u4e8e\u53ef\u4ee5\u5904\u7406\u6570\u5b57\u72b6\u6001\u53d8\u91cf\u7684\u7248\u672c\uff0c\u8bf7\u67e5\u770b \u53e6\u4e00\u9875 \uff09\u3002\u8be5\u7cfb\u7edf\u5728C\u8bed\u8a00\u4e2d\u5b9e\u73b0\u3002\u5b83\u5df2\u7ecf\u53c2\u52a0\u4e86 \u7b2c\u4e8c\u5c4a\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b\u7684 \u5168\u81ea\u52a8\u8d5b\u9053\u3002\u6bd4\u8d5b\u7684\u7ed3\u679c\u662f\uff0cFF\u88ab\u6388\u4e88``A\u7ec4\u6770\u51fa\u7ee9\u6548\u8ba1\u5212\u7cfb\u7edf''\uff0c\u5e76\u4e14\u8fd8\u83b7\u5f97\u4e86Miconic 10\u7535\u68af\u9886\u57dfADL\u8f68\u9053\u4e0a\u8868\u73b0\u6700\u4f73\u7684\u8ba1\u5212\u7cfb\u7edf\u7684\u8fc5\u8fbe\u5956\u3002\u8be5\u7cfb\u7edf\uff08\u7565\u6709\u8c03\u8bd5\uff09\u8fd8\u53c2\u52a0\u4e86 \u7b2c\u4e09\u5c4a\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b \u5728STRIPS\u9886\u57df\u8868\u73b0\u51fa\u8272\uff08\u4f46\u7531\u4e8e\u5176\u4ed6\u7ade\u4e89\u7cfb\u7edf\u7684\u8bed\u8a00\u8986\u76d6\u9762\u66f4\u5e7f\uff0c\u56e0\u6b64\u6ca1\u6709\u83b7\u5f97\u5956\u9879\uff09\u3002\u8bf7\u67e5\u770b\u6211\u4eec\u7684 \u7f51\u9875\uff0c\u5728\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684STRIPS\uff08\u548c\u6570\u5b57\uff09\u57df\u4e2d\u63d0\u4f9b\u8fd0\u884c\u65f6\u6570\u636e\u548c\u89e3\u51b3\u65b9\u6848\u957f\u5ea6\u6570\u636e\u7684gnuplot \u3002\u5728\u5f53\u524d\u9875\u9762\u4e0a\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u7b2c\u4e09\u5c4a\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684\u6e90\u4ee3\u7801\uff0c\u4ee5\u53ca\u4e00\u4e9b\u8f83\u65e7\u7684\u6e90\u4ee3\u7801\uff0c\u4ee5\u4f7fSTRIPS\u7248\u672c\u66f4\u6613\u8bfb\u3002\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u4e0e\u8be5\u7cfb\u7edf\u76f8\u5173\u7684\u51fa\u7248\u7269\u7684\u6307\u9488\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u4fe1\u606f\uff0c\u8bf4\u660e\u4e86\u4f7f\u8be5\u7cfb\u7edf\u5728\u8bb8\u591a\u57fa\u51c6\u57df\u4e2d\u5982\u6b64\u9ad8\u6548\u7684\u539f\u56e0\u3002 >>\u57fa\u672c\u539f\u7406 FF\u662f\u524d\u5411\u542f\u53d1\u5f0f\u72b6\u6001\u7a7a\u95f4\u89c4\u5212\u5e08\u3002\u4e3b\u8981\u7684\u542f\u53d1\u5f0f\u539f\u7406\u6700\u521d\u662f\u7531 Blai Bonet \u548c Hector Geffner \u9488\u5bf9HSP\u7cfb\u7edf\u5f00\u53d1\u7684\uff1a\u8981\u83b7\u5f97\u542f\u53d1\u5f0f\u4f30\u8ba1\uff0c\u901a\u8fc7\u5ffd\u7565\u6240\u6709\u8fd0\u7b97\u7b26\u7684\u5220\u9664\u5217\u8868\uff0c\u5c06\u624b\u5934\u7684\u4efb\u52a1**P** \u653e\u677e*\u4e3a\u66f4\u7b80\u5355\u7684\u4efb\u52a1**P +* \u3002\u800cHSP\u91c7\u7528\u4e86\u4e00\u79cd\u6280\u672f\uff0c\u7ed9\u51fa\u4e86\u7684\u6eb6\u6db2\u957f\u5ea6\u7684\u7c97\u7565\u4f30\u8ba1**P + \uff0cFF *\u63d0\u53d6\u7684\u663e\u5f0f\u89e3*\u5230**P + \uff0c\u901a\u8fc7\u4f7f\u7528\u56fe\u89c4\u5212\u5f0f\u7b97\u6cd5\u3002\u677e\u5f1b\u89e3\u4e2d\u7684\u52a8\u4f5c\u6570\u7528\u4f5c\u76ee\u6807\u8ddd\u79bb\u4f30\u8ba1\u3002\u8fd9\u4e9b\u4f30\u7b97\u503c\u63a7\u5236\u7740\u4e00\u79cd\u65b0\u9896\u7684\u672c\u5730\u641c\u7d22\u7b56\u7565\uff0c \u5f3a\u5236\u722c\u5c71 \uff1a\u8fd9\u662f\u4e00\u4e2a\u722c\u5c71\u7a0b\u5e8f\uff0c\u5728\u6bcf\u4e2a\u4e2d\u95f4\u72b6\u6001\u4e0b\uff0c\u90fd\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6765\u627e\u5230*\u4e25\u683c\u66f4\u597d\u7684*\uff0c\u53ef\u80fd\u662f\u95f4\u63a5\u7684\u540e\u7ee7\u7a0b\u5e8f\u3002\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u91cd\u8981\u7684\u542f\u53d1\u5f0f\u4fe1\u606f\uff0c\u653e\u677e\u7684\u8ba1\u5212\u53ef\u7528\u4e8e\u4fee\u526a\u641c\u7d22\u7a7a\u95f4\uff1a\u901a\u5e38\uff0c\u5728\u4e00\u4e2a\u72b6\u6001\u4e2d\u771f\u6b63\u6709\u7528\u7684\u52a8\u4f5c\u5305\u542b\u5728\u653e\u677e\u7684\u8ba1\u5212\u4e2d\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u4efb\u4f55\u72b6\u6001\u7684\u540e\u7ee7\u8005\u9650\u5236\u4e3a\u6210\u5458\u5404\u81ea\u653e\u677e\u7684\u89e3\u51b3\u65b9\u6848\u3002FF\u8fd0\u7528\u4e86\u8fd9\u79cd\u542f\u53d1\u5f0f\u7684\u7a0d\u5fae\u8be6\u7ec6\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u79f0\u5176\u4e3a*\u6709\u7528\u7684\u52a8\u4f5c\u4fee\u526a*\u3002\u5230\u76ee\u524d\u4e3a\u6b62\u63cf\u8ff0\u7684\u7b80\u5355\u4f53\u7cfb\u7ed3\u6784\u5df2\u7ecf\u975e\u5e38\u6709\u6548\u5730\u89e3\u51b3\u4e86\u5927\u591a\u6570\u53ef\u7528\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002\u6709\u95ee\u9898\u7684\u60c5\u51b5\u662f \u6b7b\u80e1\u540c ---\u65e0\u6cd5\u8fbe\u5230\u76ee\u6807\u7684\u72b6\u6001---\u6216*\u76ee\u6807\u6392\u5e8f*\u3002\u5728\u540e\u4e00\u79cd\u73b0\u8c61\u7684\u5b58\u5728\u4e0b\uff0c\u4f8b\u5982\u5728Blocksworld\u4e2d\uff0c\u672c\u5730\u641c\u7d22\u6709\u65f6\u4f1a\u8fc7\u4e8e\u8d2a\u5a6a\u5730\u8fdb\u884c\uff0c\u5e76\u88ab\u56f0\u4f4f\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u57fa\u4e8e\u8f7b\u677e\u7684\u89e3\u51b3\u65b9\u6848\u96c6\u6210\u4e86\u76ee\u6807\u8bae\u7a0b\u7b97\u6cd5\uff08\u7531 Jana Koehler \u9996\u6b21\u63d0\u51fa\uff09\uff0c\u4ee5\u53ca\u6211\u4eec\u81ea\u5df1\u7684\u7b80\u5355\u76ee\u6807\u6392\u5e8f\u6280\u672f\u3002\u4e3a\u4e86\u5904\u7406\u53ef\u80fd\u5bfc\u81f4\u641c\u7d22\u5b8c\u5168\u5931\u8d25\u7684\u6b7b\u89d2\u72b6\u6001\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5b89\u5168\u7f51\u89e3\u51b3\u65b9\u6848\uff1a\u5982\u679c\u672c\u5730\u641c\u7d22\u5931\u8d25\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u8df3\u8fc7\u76ee\u524d\u4e3a\u6b62\u6240\u505a\u7684\u6240\u6709\u4e8b\u60c5\uff0c\u5e76\u5207\u6362\u5230\u5b8c\u6574\u7684\u201c\u6700\u4f73\u4f18\u5148\u201d\u7b97\u6cd5\uff0c\u53ea\u9700\u589e\u52a0\u76ee\u6807\u8ddd\u79bb\u8bc4\u4f30\u7684\u987a\u5e8f\u5373\u53ef\u6269\u5c55*\u6240\u6709*\u641c\u7d22\u8282\u70b9\u3002 >>\u6e90\u4ee3\u7801\u53ef\u7528 FF\u662f\u6839\u636eGNU\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\u516c\u5f00\u63d0\u4f9b\u7684\u3002\u6709\u5173Metric-FF\u7684\u6e90\u4ee3\u7801\uff0c\u8bf7\u53c2\u89c1 \u5176\u4ed6\u7f51\u9875 \u3002FF-v2.3\u5728 \u8fd9\u91cc \u3002\u8fd9\u662fADL\u7248\u672c\uff0c\u901a\u8fc7\u6211\u4eec\u81ea\u5df1\u7684\u76ee\u6807\u6392\u5e8f\u4fee\u526a\u6280\u672f\u4ee5\u53ca\u201c\u76ee\u6807\u8bae\u7a0b\u201d\u63d0\u4f9b\u7684\u6392\u5e8f\u4fe1\u606f\u8fdb\u884c\u4e86\u589e\u5f3a\uff0c\u8be5\u4fe1\u606f\u6458\u81ea Jana Koehler \u7684\u8457\u4f5c\u3002\u5b83\u4e0e\u7b2c\u4e8c\u5c4a\u56fd\u9645\u89c4\u5212\u5927\u8d5b\u4e2d\u4f7f\u7528\u7684FF-v2.2\u7248\u672c\u76f8\u540c\uff0c\u5bf9\u9884\u5904\u7406\u9636\u6bb5\u4e2d\u7684\u4e00\u4e9b\u5c0f\u9519\u8bef\u8fdb\u884c\u4e86\u6a21\u5220\u9664\u3002 \u90a3\u4e9b\u66fe\u7ecf\u4e0eFF\u8054\u7cfb\u8fc7\u7684\u4eba\u53ef\u80fd\u4f1a\u610f\u8bc6\u5230\uff0c\u89e3\u6790\u5668\u591a\u5e74\u6765\u4e00\u76f4\u5b58\u5728\u9ebb\u70e6\uff0c\u8be5\u89e3\u6790\u5668\u7f16\u5199\u4e8e1997\u5e74\uff0c\u4e0d\u518d\u7b26\u5408\u6700\u65b0\u7684bison / flex\u7248\u672c\u3002\u6211\u8981**\u5bf9\u65af\u7279\u62c9\u65af\u514b\u83b1\u5fb7\u5927\u5b66\u7684\u5b89\u5fb7\u9c81\u00b7\u79d1\u5c14\u65af\uff08Andrew Coles\uff09\u8868\u793a\u8877\u5fc3\u7684\u611f\u8c22\uff0c\u4ed6\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u7814\u7a76\u5e76\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002** \u4e0a\u9762\u7684\u94fe\u63a5 \u63d0\u4f9b\u4e86FF-v2.3\u7684\u65b0\u4fee\u8865\u7248\u672c\u3002\u5b89\u5fb7\u9c81\u5df2\u4f7f\u7528flex 2.5.34\u548c2.5.35\u4ee5\u53ca\u91ce\u725b2.3\u548c2.4.1\u5bf9\u5b83\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u6bd5\u7adf\uff0c\u6240\u9700\u7684\u66f4\u6539\u975e\u5e38\u7b80\u5355\u3002\u8fd9\u662f\u5b89\u5fb7\u9c81\u7684\u63cf\u8ff0\uff1a \u5728lex-fct_pddl.l\u4e2d\uff0c\u5c06\u201c #define fct_pddlwrap\uff08\uff091\u201d\u66ff\u6362\u4e3a\u201c int fct_pddlwrap\uff08\uff09{return 1;};\u201d \u5728lex-ops_pddl.l\u4e2d\uff0c\u5c06\u201c #define ops_pddlwrap\uff08\uff091\u201d\u66ff\u6362\u4e3a\u201c int ops_pddlwrap\uff08\uff09{return 1;};\u201d \u7f57\u4f2f\u7279\u00b7\u6208\u5fb7\u66fc\uff08Robert Goldman\uff09\u53cb\u5584\u5730\u8d21\u732e\u4e86 FF-v2.3 \u7684 \u8865\u4e01\u7248\u672c\uff0c\u5176\u4e2d\u89e3\u6790\u5668\u5141\u8bb8\u5728\u7c7b\u578b\u5217\u8868\u4e2d\u4f7f\u7528\u6362\u884c\u7b26 \u3002 \u6700\u540e\uff0c\u9a6c\u4e01\u00b7\u82cf\u8fbe\uff08Martin Suda\uff09\u63d0\u4f9b\u4e86 FF-v2.3\u7684\u4fee\u8865\u7248\u672c\uff0c\u8be5\u89e3\u6790\u5668\u5e94\u8be5\u80fd\u591f\u89e3\u6790\u8f83\u5927\u7684\u8f93\u5165 \u3002\u6211\u8fd8\u6ca1\u6709\u6d4b\u8bd5\u8fc7\uff0c\u4f46\u8fd8\u662f\u60f3\u8ba9\u4f60\u62e5\u6709\u5b83\u3002 >>\u76f8\u5173\u8bba\u6587 \u5728\u6bd4\u8d5b\u4e2d\u4f7f\u7528\u4e86\u6709\u5173FF\u7cfb\u7edf\u7684\u8be6\u7ec6JAIR\u6587\u7ae0\uff08FF-v2.2 / 3\uff09\u3002 B. Nebel \uff0c \u300a FF\u8ba1\u5212\u7cfb\u7edf\uff1a\u901a\u8fc7\u542f\u53d1\u5f0f\u641c\u7d22\u5feb\u901f\u751f\u6210\u8ba1\u5212\u300b \uff0c\u53d1\u8868\u4e8e\uff1a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u6742\u5fd7\uff0c\u7b2c14\u5377\uff0c2001\u5e74\uff0c\u7b2c 253-302 \u9875\u3002\uff08 gzip\u7684\u9644\u8a00\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u7b80\u77ed\u7684\u6613\u4e8e\u9605\u8bfb\u7684\u8bba\u6587\u603b\u7ed3\u4e86\u4ee5\u4e0a\u6587\u7ae0\u7684\u8bb8\u591a\u5185\u5bb9\uff0c\u5e76\u5728AI\u6742\u5fd7\u4e0a\u53d1\u8868\u3002 FF\uff1a\u5feb\u8fdb\u8ba1\u5212\u7cfb\u7edf\uff0c\u5728\uff1aAI\u6742\u5fd7\uff0c\u7b2c22\u5377\uff0c\u7b2c3\u671f\uff0c2001\u5e74\uff0c\u7b2c 57-62 \u9875\u3002\uff08 gzip\u7684\u9644\u8a00\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u6211\u4eec\u8fdb\u884c\u4e86\u5927\u89c4\u6a21\u7684\u5b9e\u8bc1\u7814\u7a76\uff0c\u786e\u5b9a\u4e86HSP\u548cFF\u4e4b\u95f4\u7684\u5173\u952e\u5dee\u5f02\u3002\u6211\u4eec\u7684\u53d1\u73b0\u7684\u63cf\u8ff0\u6784\u6210\u4e86\u4e0a\u9762JAIR\u6587\u7ae0\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u5df2\u5728IJCAI'01\u5173\u4e8eAI\u7684\u7ecf\u9a8c\u65b9\u6cd5\u7684\u7814\u8ba8\u4f1a\u4e0a\u8fdb\u884c\u4e86\u4ecb\u7ecd\u3002 B. Nebel \uff0c \u4ec0\u4e48\u4f7fHSP\u548cFF\u6709\u6240\u4e0d\u540c\uff1f \uff0c\u57282001\u5e748\u6708\u5728\u7f8e\u56fd\u534e\u76db\u987f\u5dde\u897f\u96c5\u56fe\u5e02*IJCAI'01\u7684AI\u7ecf\u9a8c\u65b9\u6cd5\u7814\u8ba8\u4f1a\u4e0a*\u8fdb\u884c\u4e86\u4ecb\u7ecd\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u6211\u4eec\u7814\u7a76\u4e86\u8ba1\u5212\u57fa\u51c6\u7684\u7ed3\u6784\u5c5e\u6027\uff0c\u9610\u660e\u4e86FF\u548c\u5176\u4ed6\u5148\u8fdb\u7684\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u7a0b\u5e8f\u6210\u529f\u7684\u539f\u56e0\u3002\u8bba\u6587\u5728IJCAI'01\uff0cAIPS'02\u548cJAIR\u4e0a\u53d1\u8868\u3002JAIR\u6587\u7ae0\u662f\u6700\u65b0\u7684\uff0c\u5e76\u4e14\u5728\u6240\u6709\u65b9\u9762\u90fd\u7edd\u5bf9\u503c\u5f97\u63a8\u8350\u3002 \u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\uff1a\u4e00\u9879\u5b9e\u8bc1\u5206\u6790\uff0c\u8f7d\u4e8e\uff1a \u7b2c17\u5c4a\u56fd\u9645\u4eba\u5de5\u667a\u80fd\u8054\u5408\u4f1a\u8bae\u8bba\u6587\u96c6 \uff0c\u7f8e\u56fd\u534e\u76db\u987f\uff0c2001\u5e748\u6708\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\uff1a\u7406\u8bba\u5206\u6790\uff0c\u8f7d\u4e8e\uff1a2002\u5e744\u6708\u5728\u6cd5\u56fd\u56fe\u5362\u5179*\u4e3e\u884c\u7684\u7b2c\u516d\u5c4a\u56fd\u9645\u4eba\u5de5\u667a\u80fd\u89c4\u5212\u4e0e\u8c03\u5ea6\u56fd\u9645\u4f1a\u8bae\u8bba\u6587\u96c6\u4e0a*\u3002\uff08 gzip\u7684\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u53c2\u8003\u8d44\u6599 \u6761\u76ee \uff09 J. Hoffmann\uff0c \u300a\u5ffd\u7565\u5220\u9664\u5217\u8868\u7684\u5de5\u4f5c \u539f\u7406 \uff1a\u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\u300b \uff0c \u300a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u300b \uff0c\u7b2c24\u5377\uff0c2005\u5e74\uff0c\u7b2c 685-758 \u9875\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09 \u5728ISMIS'00\uff082000\u5e7410\u670811\u65e5\u81f314\u65e5\uff0c\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u590f\u6d1b\u7279\uff09\u4e0a\u53d1\u5e03\u4e86\u6709\u5173FF\u7684\u9996\u4e2aSTRIPS\u7248\u672c\u7684\u7b80\u77ed\u8bba\u6587\uff08FF-v1.0\uff09\uff0c\u5e76\u5728ECAI 2000\u7814\u8ba8\u4f1aPuK2000\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u6709\u5173\u8be5\u8bba\u6587\u65b0\u6210\u679c\u7684\u8bba\u6587\u3002\u89c4\u5212\uff0c\u8fdb\u5ea6\u5b89\u6392\u548c\u8bbe\u8ba1\uff08\u67cf\u6797\uff0c2000\u5e748\u670820\u65e5\u81f325\u65e5\uff09\u3002 \uff0c\u89c1\uff1a 2000\u5e7410\u6708\u5728\u7f8e\u56fd\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u590f\u6d1b\u7279*\u4e3e\u884c\u7684\u7b2c12\u5c4a\u56fd\u9645\u667a\u80fd\u7cfb\u7edf\u65b9\u6cd5\u8bba\u56fd\u9645\u4f1a\u8bae\u8bba\u6587\u96c6*\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u5173\u4e8e\u201c\u76ee\u6807\u8bae\u7a0b\u201d\u673a\u5236\u7684\u8bba\u6587\u5df2\u7ecf\u9488\u5bf9FF\u8fdb\u884c\u4e86\u4fee\u6539\u3002 Jana Koehler \u7684\u539f\u59cb\u8bba\u6587\u5728AIPS-98\u4f1a\u8bae\u4e0a\u3002\u4e0eJoerg Hoffmann\u5408\u4f5c\u64b0\u5199\u4e86\u4e00\u7bc7\u66f4\u8be6\u7ec6\u7684\u6587\u7ae0\uff0c\u6b63\u5f0f\u4ecb\u7ecd\u4e86\u8be5\u65b9\u6cd5\uff0c\u5e76\u5728JAIR\u4e0a\u53d1\u8868\u3002 J. Koehler \uff0c\u201c \u901a\u8fc7\u63d0\u53d6\u5b50\u95ee\u9898\u89e3\u51b3\u590d\u6742\u7684\u8ba1\u5212\u4efb\u52a1\u201d \uff0c\u8f7d\u4e8e\uff1a \u7b2c4\u5c4a\u4eba\u5de5\u667a\u80fd\u8ba1\u5212\u4e0e\u8c03\u5ea6\u4f1a\u8bae\u8bba\u6587\u96c6 \uff0c\u7f8e\u56fd\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u5339\u5179\u5821\uff0c1998\u5e747\u6708\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 J. Koehler \uff0c\uff0c \u4e8e\uff1a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u6742\u5fd7\uff0c2000\u5e74\u7b2c12\u5377\uff0c\u7b2c 338-386 \u9875\uff08\u7528 gzip\u538b\u7f29\u7684\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u5634\u6761\u76ee \uff09 \u6700\u540e\uff0c\u6709\u4e00\u4e9b\u5de5\u4f5c\u63cf\u8ff0\u4e86IPP\u7528\u4e8e\u5229\u7528\u9886\u57df\u5b9a\u4e49\u7684\u7ed3\u6784\u5c5e\u6027\u5c06\u5b8c\u6574\u7684ADL\u4efb\u52a1\u7f16\u8bd1\u4e3a\u547d\u9898\u8303\u5f0f\u7684\u9884\u5904\u7406\u65b9\u6cd5\u3002\u5bf9\u4e8eFF\uff0c\u6b64\u65b9\u6cd5\u5df2\u66f4\u6709\u6548\u5730\u5b9e\u65bd\uff0c\u5e76\u901a\u8fc7\u4e00\u79cd\u53ef\u8fbe\u6027\u5206\u6790\u9636\u6bb5\u8fdb\u884c\u4e86\u6269\u5c55\u3002\u5728ECAI 2000\u7814\u8ba8\u4f1a\u4e0a\u4ecb\u7ecd\u4e86\u63cf\u8ff0IPP\u9884\u5904\u7406\u65b9\u6cd5\u7684\u8bba\u6587\u3002 J. Koehler \u548cJ.Hoffmann\uff0c \u5173\u4e8e\u6d89\u53ca\u4efb\u610f\u4e00\u9636\u516c\u5f0f\u7684ADL\u8fd0\u7b97\u7b26\u7684\u5b9e\u4f8b\u5316 \uff0c\u5c06 \u57282000\u5e74 8\u6708\u4e8e\u5fb7\u56fd\u67cf\u6797*ECAI 2000\u4e3e\u884c\u7684\u89c4\u5212\uff0c\u65e5\u7a0b\u5b89\u6392\u548c\u8bbe\u8ba1\u65b0\u7ed3\u679c\u7814\u8ba8\u4f1a\uff08PuK2000\uff09\u4e0a\u53d1\u8868*\u3002 \uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09","title":"FF"},{"location":"SolversBaseOnPDDL/CP/ffPlaner/#ffplaner","text":"\u5728\u7ebf\u7f16\u8f91\u6c42\u89e3FF Planer online\uff1a http://editor.planning.domains/# \u6ce8\u610f\u4e0d\u8981\u4f7f\u7528https\uff0c\u5426\u5219\u4f1a\u62a5malformed url http://www.ai.mit.edu/courses/16.412J/ff.html \u5927\u5b66\u6559\u7a0b\u94fe\u63a5\u6709\u4e00\u4e2atireworl\u8f6e\u80ce\u66f4\u6362\u57df\u5b9e\u4f8b\uff1a ff -o tyreworld_domain.pddl -f tyreworld_facts1 https://fai.cs.uni-saarland.de/hoffmann/ff.html ff\u5b98\u65b9\u4e0b\u8f7d\u4e3b\u9875 FF\u89c4\u5212\u5668\u662f\u667a\u80fd\u89c4\u5212\u754c\u6700\u5bcc\u76db\u540d\u7684\u4f5c\u54c1\uff0c\u91c7\u7528\u7ecf\u5178\u7684\u524d\u5411\u641c\u7d22\u65b9\u6cd5\uff0c\u7ed3\u5408\u542f\u53d1\u5f0f\u7b97\u6cd5\u6709\u6548\u63d0\u9ad8\u4e86\u89c4\u5212\u7b97\u6cd5\u641c\u7d22\u6548\u7387\uff0c\u5728\u591a\u6b21\u4e16\u754c\u89c4\u5212\u5927\u8d5b\u4e2d\u90fd\u6709\u597d\u7684\u540d\u6b21\u3002 \u4e0b\u8f7d\u955c\u50cf http://www.pudn.com/Download/item/id/2027550.html \u4f7f\u7528\uff1a\u5728ff\u6587\u4ef6\u540c\u76ee\u5f55\u4e0b\u8fd0\u884c ./ff -o ./ff-domains/domain.pddl -f ./ff-domains/data.pddl \u4e5f\u53ef\u4ee5\u5c06ff\u590d\u5236\u5230/etc/bin\u4e0b\uff0c\u547d\u4ee4\u4e3a sudo cp ff /etc/bin \uff0c\u8fd0\u884cff\u65f6\u53ea\u9700\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ff -o ./ff-domains/domain.pddl -f ./ff-domains/data.pddl demo \u8fd9\u91cc\u8fd8\u6709\u5f88\u591a\u4f8b\u5b50\uff1a http://fai.cs.uni-saarland.de/hoffmann/ff-domains.html \u8be5\u9875\u9762\u662f\u7531Joerg Hoffmann\u521b\u5efa\u7684\uff0c\u5b83\u662f\u60f3\u8981\u5728\u89c4\u5212\u4e2d\u8fdb\u884c\u5927\u89c4\u6a21\u5b9e\u8bc1\u7814\u7a76\u7684\u4eba\u4eec\u7684\u8d77\u70b9\u3002FF\u57df\u96c6\u5408\u4e3a20\u4e2aSTRIPS\u548cADL\u89c4\u5212\u57fa\u51c6\u57df\u63d0\u4f9b\uff08\u53ef\u80fd\u7684\u8bdd\uff09\u751f\u6210\u5668\uff0c\u5305\u62ec\u4e24\u4e2a\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684\u793a\u4f8b\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u57df\u63d0\u4f9b\u6709\u5173\u8d77\u6e90\uff0c\u8fdb\u884c\u7684\u8c03\u6574\uff08\u5982\u679c\u6709\uff09\uff0c\u751f\u6210\u5668\u7684\u53c2\u6570\u4ee5\u53ca\u968f\u673a\u5316\u7b56\u7565\u7684\u4fe1\u606f\u3002\u53ef\u4ee5\u4e0b\u8f7d\u57df\u6587\u4ef6\u548c\u751f\u6210\u5668\u7684C\u6e90\u4ee3\u7801\u3002\u5355\u51fb \u6b64\u5904 \u4e0b\u8f7d\u6574\u4e2a\u8f6f\u4ef6\u5305\u3002\u5173\u4e8e\u5982\u4f55\u751f\u6210\u5b83\u4eec\uff08\u5305\u62ecmakefile\uff09\u4ee5\u53ca\u5982\u4f55\u8fd0\u884c\u5b83\u4eec\uff0c\u751f\u6210\u5668\u5e94\u8be5\u662f\u4e0d\u8a00\u81ea\u660e\u7684\u3002\u5728\u4e0d\u592a\u660e\u663e\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u5305\u62ec\u4e86README\u6587\u4ef6\u3002 Ubuntu\u7cfb\u7edf\u8fd0\u884cFF-planner Ubuntu 18.04.2 LTS Prerequisit: 1. change to software source to Tsinghua source. 2. sudo apt-add-repository ppa:swi-prolog/stable 3. sudo apt-get update 4. sudo apt-get install python3-pip 5. sudo apt-get install flex Installation: 1. Download z3 from https://github.com/Z3Prover/z3 2. python3 scripts/mk_make.py 3. cd build 4. make 5. sudo make install 6. sudo apt-get install swi-prolog 7. sudo pip3 install pyswip 8. Download FF-planner from http://fai.cs.uni-saarland.de/hoffmann/ff.html 9. make \u62a5\u9519 gcc -c -Wall -g -std=gnu99 -O6 inst_hard.c gcc -c -Wall -g -std=gnu99 -O6 inst_final.c gcc -c -Wall -g -std=gnu99 -O6 orderings.c gcc -c -Wall -g -std=gnu99 -O6 relax.c gcc -c -Wall -g -std=gnu99 -O6 search.c flex -Pfct_pddl lex-fct_pddl.l bison -pfct_pddl -bscan-fct_pddl scan-fct_pddl.y make: bison: Command not found makefile:78: recipe for target 'scan-fct_pddl.tab.c' failed make: *** [scan-fct_pddl.tab.c] Error 127 \u5b89\u88c5bison\u5373\u53ef","title":"ffPlaner"},{"location":"SolversBaseOnPDDL/CP/ffPlaner/#planning-domain-definition-language","text":"\u57fa\u672c\u5185\u5bb9\uff1a \u2022 Domain Name \u2022 Requirements \u2022 Types \u2022 Constants \u2022 Domain Variables \u2022 Predicates \u2022 Actions spare tire domain_spare_tire_d.pddl \uff1b\u7ed9\u51fadomain\u540d\u79f0\uff0c\u8bed\u6cd5\u4f7f\u7528\u5c31\u662f(domain \u540d\u79f0) (define (domain spare_tire ) ;\u7ed9\u51fa\u4f9d\u8d56\u9879\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684\u4e09\u4e2a\u90fd\u662f\u4f9d\u8d56\u9879\uff0c\u8bed\u6cd5\u4f7f\u7528\u662f\u201c:\u4f9d\u8d56\u9879\u201d, ;strip---The most basic subset of PDDL, consisting of STRIPS only ;equality---This requirement means that the domain uses the predicate =, interpreted as equality. ;typing---This requirement means that the domain uses types (see Typing below). ;adl---Means that the domain uses some or all of ADL (i.e. disjunctions and quantifiers in preconditions and goals, quantified and conditional effects). (:requirements : strips : equality : typing ) (:types physob location ) \uff1b\u5b9a\u4e49\u8be5domain\u5f53\u4e2d\u9700\u8981\u4f7f\u7528\u7684\u7c7b\u578b\uff0c\u6bd4\u5982physic object\u3001location\u90fd\u662f\u7c7b\u578b\uff0c\u76f4\u63a5\u5c06\u4f60\u9700\u8981\u5b9a\u4e49\u7684\u7c7b\u578b\u52a0\u5165\u5230:type\u7684\u540e\u9762 (:predicates ( Tire ?x \u2212 physob) ( at ?x \u2212 physob ?y \u2212 location )) \uff1b\u5b9a\u4e49\u8be5domain\u9700\u8981\u4f7f\u7528\u7684\u8c13\u8bcd\uff0c\u5355\u5143\u8c13\u8bcd\u8868\u793a\u5c5e\u6027\uff0c\u5982\u8fd9\u91cc\u7684Tire x\u8868\u793ax\u8fd9\u4e2aphysic object\u662f\u5426\u6709\u8f6e\u80ce\u5c5e\u6027\u3002 \uff1b\u8c13\u8bcd\u540d\u79f0\u6700\u5148\u7ed9\u51fa\uff0c\u7136\u540e\u4f9d\u6b21\u7ed9\u51fa\u8be5\u8c13\u8bcd\u7684\u9879\uff0c\u683c\u5f0f\u4e3a\u201c\uff1f\u53c2\u6570 \u2013 \u53c2\u6570\u7c7b\u578b\u201d\uff0c \uff1b\u6bd4\u5982\u8fd9\u91cc\u7684\u201c\uff1fx \u2013 physob \uff1fy \u2013 physob\u201d\u8868\u793ax\u8fd9\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u5e94\u8be5\u662fphysob\u7684\uff0c\u4e0d\u80fd\u4f20\u9012\u5176\u4ed6\u7c7b\u578b\u7684\u53c2\u6570\u3002 \uff1b\u6574\u4e2a\u201cTire \uff1fx \u2013 physob\u201d\u5bf9\u5e94Tire(x)\u8fd9\u4e00\u539f\u5b50\uff08\u516c\u5f0f\uff09\u3002 \uff1b\u4e8c\u5143\u8c13\u8bcd\u8868\u793a\u5173\u7cfb\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684at\u8868\u793ax\u7269\u4f53\u662f\u5426\u5728y\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u5206\u6790\u4e0e\u4e0a\u9762\u7684\u5355\u5143\u8c13\u8bcd\u7c7b\u4f3c (:action Remove :parameters (?x \u2212 physob ?y \u2212 location ) :precondition (At ?x ?y) :effect (and(not(At ?x ?y) ) (At ?x Ground) ) ) ;\u5b9a\u4e49\u8be5domain\u4e2d\u7684\u64cd\u4f5c\uff0c\u8fd9\u91cc\u7684remove\u8868\u793a\u79fb\u9664\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u9700\u8981\u7ed9\u5b9a\u53c2\u6570\uff0c\u53c2\u6570\u5b9a\u4e49\u89c4\u5219\u4e0e\u524d\u9762\u7684\u8c13\u8bcd\u4e00\u6837\uff1b ;action\u6267\u884c\u9700\u8981\u4e00\u5b9a\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u524d\u63d0\u6761\u4ef6\u662f\u4e00\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c ;\u6839\u636e\u5176\u771f\u503c\u5224\u65ad\u64cd\u4f5c\u662f\u5426\u53ef\u4ee5\u6267\u884c\uff1b ;\u6700\u540e\u6267\u884c\u8fd9\u4e2a\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u4e00\u5b9a\u7684\u7ed3\u679c\uff0c\u8fd9\u5728effect\u4e2d\u6307\u5b9a\uff0c\u6307\u5b9a\u7684effect\u4f1a\u6539\u5199\u5f53\u524d\u72b6\u6001\uff08\u76f8\u5f53\u4e8e\u6539\u5199\u77e5\u8bc6\u5e93\u4e2d\u57fa\u7840\u539f\u5b50\u7684\u771f\u503c\uff09 ;\u8bed\u6cd5\u4e0a\u6765\u8bf4\uff0cprecondition\u540e\u9762\u53ef\u4ee5\u7ed9\u51fa\u539f\u5b50\u516c\u5f0f\u7684\u4e0e\u6216\u975e\u7ec4\u5408\uff0c ;\u5176\u4e2d\u539f\u5b50\u516c\u5f0f\u8bed\u6cd5\u524d\u9762\u8c13\u8bcd\u8bf4\u8fc7\u4e86\uff0c\u975e\uff1a\uff08not \u539f\u5b50\u516c\u5f0f\uff09\uff1b\u4e0e\uff1a\uff08and \u539f\u5b50\u516c\u5f0f1 \u539f\u5b50\u516c\u5f0f2 \u7b49\u7b49\uff09\uff1b\u6216\u4e0eand\u7528\u6cd5\u4e00\u81f4\uff0c\u628aand\u6362\u4e3aor\u5373\u53ef (:action PutOn :parameters (?x \u2212 physob) :precondition (and( Tire ?x) (At ?x Ground) (not(At Flat Axle) ) ) :effect (and(not(At ?x Ground) ) (At ?x Axle) ) ) (:action LeaveOvernight :effect (and(not(At Spare Ground) ) (not(At Spare Axle) ) (not(At Spare Trunk) ) (not(At Flat Ground) ) (not(At Flat Axle) ) (not(At Flat Trunk) ) ) ) ) spare_tire_p.pddl (define (problem prob) (:domain spare_tire ) (:objects Flat Spare \u2212physob Axle Trunk Ground \u2212 location ) (:init ( Tire Flat ) ( Tire Spare) (At Flat Axle) (At Spare Trunk) ) (:goal (At Spare Axle) ) ) breiefcase world forall\u548cwhen\u7684\u7528\u6cd5,\u9996\u5148\u8bb2\u4e00\u4e0b\u8fd9\u4e2adomain\u7684\u542b\u4e49\uff0c\u7136\u540e\u5c06\u4e0b\u9762\u7684forall\u548cwhen\u7528\u6cd5 briefcase_d.pddl (define (domain briefcase) (:requirements :strips :equality :typing :conditional-effects) (:types location physob) (:constants B - physob) (:predicates (at ?x - physob ?l - location) (in ?x - physob)) (:action mov-b :parameters (?m ?l - location) :precondition (and (at B ?m) (not (= ?m ?l))) :effect (and (at B ?l) (not (at B ?m)) ;\u6ce8\u610f\u5230\u5199\u5728effect\u4e2d\u7684\u8fd9\u6bb5\u4ee3\u7801\uff1a (forall (?z - physob) (when (and (in ?z) (not (= ?z B))) ;\u8fd9\u91cc\u610f\u601d\u5c31\u662f\u904d\u5386\u6240\u6709\u7684object z\uff0c\u5f53z\u5728B\u4e2d\uff0c\u5c31\u4ea7\u751feffect ;\u5373\u5c06z\u7684\u4f4d\u7f6elocation\u8bbe\u7f6e\u4e3al\uff08\u56e0\u4e3az\u5728briefcase\u5f53\u4e2d\uff0cbriefcase\u88ab\u643a\u5e26\u5230\u4e86l\u5730\u70b9\uff0c\u90a3\u4e48z\u81ea\u7136\u4e5f\u88ab\u79fb\u52a8\u5230l\uff09 (and (at ?z ?l) (not (at ?z ?m))) ;\u8fd9\u91cc\u5fc5\u987b\u4f7f\u7528forall\uff0c\u56e0\u4e3a\u4f60\u65e0\u6cd5\u8bbe\u7f6e\u662f\u54ea\u4e2a\u5bf9\u8c61\u5728briefcase\u4e2d\uff0c\u6240\u4ee5\u9700\u8981\u904d\u5386\u5224\u65ad ) ) ) ) (:action put-in :parameters (?x - physob ?l - location) :precondition (not (= ?x B)) :effect (when (and (at ?x ?l) (at B ?l)) (in ?x)) ) (:action take-out :parameters (?x - physob) :precondition (not (= ?x B)) :effect (not (in ?x)) ) ) \u7136\u540e\u5c31\u662f\u6570\u636e\u6587\u4ef6\uff0c\u7ed9\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u5b9a\u4e49\uff1a \u5b83\u6d89\u53ca\u7684domain\u3001 \u95ee\u9898\u7684\u53c2\u6570\u5b9a\u4e49\u3001 \u95ee\u9898\u7684\u521d\u59cb\u72b6\u6001\u3001 \u95ee\u9898\u7684\u76ee\u6807\u72b6\u6001 \u5b9a\u4e49\u597d\u95ee\u9898\u540e\u6211\u4eec\u8c03\u7528\u6c42\u89e3\u5668\uff0c\u4ed6\u4f1a\u7ed9\u6211\u4eec\u6c42\u89e3\u51fa\u4e00\u7cfb\u5217\u7684action\u4f7f\u5f97\u95ee\u9898\u4ece\u521d\u59cb\u72b6\u6001\u5230\u8fbe\u76ee\u6807\u72b6\u6001\uff08\u5982\u679c\u6709\u89e3\uff09 briefcase_p.pddl (define (problem get-paid) (:domain briefcase) (:objects P D -physob home office - location) (:init (at B home) (at P home) (at D home) (in P) ) (:goal (and (at B office) (at D office) (at P home))) ) 8-puzzle domain_puzzle_d.pddl ; Header and description ( define (domain puzzle ) ; remove requirements that are not needed (:requirements :strips :typing :conditional\u2212effects :equality ) (:types ;todo: enumerate types and their hierarchy here,e.g. car truck bus \u2212 vehicle num loc ) ;un\u2212comment following line if constants are needed ;( :constants ) (:predicates ; todo: define predicates here ( at ?x \u2212 num ?y \u2212 loc ) ( adjecent ?x \u2212 loc ?y \u2212 loc ) ) ;(:functions; todo: define numeric functions here ;) ;define actions here (:action slide :parameters (?x \u2212 num ?y \u2212 loc ?z \u2212 loc ) :precondition (and( at ?x ?y) ( at num0?z) ( adjecent ?y ?z) ) :effect (and( at ?x ?z) ( at num0 ?y) (not( at ?x ?y) ) (not( at num0?z) ) ) ) ) domain_puzzle_p.pddl (define (problem prob) (: domain puzzle ) (: objects num0 num1 num2 num3 num4 num5 num6 num7 num8 \u2212 num loc1 loc2 loc3 loc4 loc5 loc6 loc7 loc8 loc0 \u2212 loc ) (: init ; todo: put the initial state \u2019 s facts and numeric values here ( at num1 loc1 ) ( at num2 loc2 ) ( at num3 loc3 ) ( at num7 loc4 ) ( at num8 loc5 ) ( at num0 loc6 ) ( at num6 loc7 ) ( at num4 loc8 ) ( at num5 loc0 ) ( adjecent loc1 loc2 ) ( adjecent loc2 loc1 ) ( adjecent loc1 loc4 ) ( adjecent loc4 loc1 ) ( adjecent loc2 loc3 ) ( adjecent loc3 loc2 ) ( adjecent loc2 loc5 ) ( adjecent loc5 loc2 ) ( adjecent loc3 loc6 ) ( adjecent loc6 loc3 ) ( adjecent loc4 loc5 ) ( adjecent loc5 loc4 ) ( adjecent loc4 loc7 ) ( adjecent loc7 loc4 ) ( adjecent loc5 loc6 ) ( adjecent loc6 loc5 ) ( adjecent loc5 loc8 ) ( adjecent loc8 loc5 ) ( adjecent loc6 loc0 ) ( adjecent loc0 loc6 ) ( adjecent loc7 loc8 ) ( adjecent loc8 loc7 ) ( adjecent loc8 loc0 ) ( adjecent loc0 loc8 ) ) (: goal (and ; todo: put the goal condition her e ( at num1 loc1 ) ( at num2 loc2 ) ( at num3 loc3 ) ( at num4 loc4 ) ( at num5 loc5 ) ( at num6 loc6 ) ( at num7 loc7 ) ( at num8 loc8 ) ( at num0 loc0 ) ) ) ; un\u2212comment the following line if metric is needed ; ( : metric minimize ( ? ? ? ) ) ) blockworld There are a collection of blocks: a block can be on the table, or on the top of another block. There are three predicates :\u2022clear(x): there is no block on top of block x; \u2022on(x,y): block x is on the top of block y; \u2022onTable(x): block x is on the table There are two actions in this task: \u2022move(x,y): move block x onto block y, provided that both x and y are clear; \u2022moveToTable(x): move block x on to the table, provided that x is clear and x is not on thetable; Give initial state and goal state, find the actions change the initial state to the goal state. domain_blocks_d.pddl ; Header and description ( define (domain blocks ) ;remove requirements that are not needed (:requirements :strips :typing :conditional\u2212effects :equality :universal\u2212preconditions : negative\u2212preconditions ) (:types ; todo: enumerate types and their hierarchy here , e.g. car truckbus \u2212 vehicle physob ) ;un\u2212comment following line if constants are needed ;( :constants ) (:predicates; todo: define predicates here (ontable ?x \u2212 physob) (clear ?x \u2212 physob) (on ?x ?y \u2212 physob) ) ;(:functions; todo:define numeric functions here ;) ;define actions here (:action move :parameters (?x ?y \u2212 physob) :precondition (and( clear ?x) ( clear ?y) ) :effect (and(on ?x ?y) (not( clear ?y) ) (when( ontable ?x) (not( ontable ?x) ) ) (forall (?z \u2212 physob) (when(on ?x ?z) (and(not(on ?x ?z) ) (clear ?z) ) ) ) ) ) (:action moveToTable :parameters (?x \u2212 physob) :precondition (and( clear ?x) (not( ontable ?x) ) ) :effect (and(not( clear ?x) ) ( ontable ?x) ( forall (?z \u2212 physob) (when(on ?x ?z) (and(not(on ?x ?z) ) (clear ?z) ) ) ) ) ) ) domain_blocks_p.pddl (define (problem prob) (:domain blocks) (:objects A B C D E F \u2212 physob ) (:init ; todo :put the initial state \u2019 s facts and numeric values here (clear A) (on A B) (on B C) (ontable C) (ontable D) (ontable F) (on E D) (clear E) (clear F) ) (:goal (and ; todo : put the goal condition here (clear F) (on F A) (on A C) (ontable C) (clear E) (on E B) (on B D) (ontable D) ) ) ;un\u2212comment the following line if metric is needed ;(:metric minimize ( ? ? ? ) ) ) FF\u89c4\u5212\u5668\u5e76\u4e0d\u80fd\u751f\u6210\u6700\u4f18\u7684\u65b9\u6848\uff0c\u4f8b\u5982\u5728Puzzle\u95ee\u9898\u4e2d\u5c31\u51fa\u73b0\u4e86\u8fde\u7eed\u62e8\u52a8\u6570\u5b576\u7684\u60c5\u51b5\uff0c\u7ecf\u8fc7\u624b\u52a8\u9a8c\u8bc1\u4e24\u4e2a\u95ee\u9898\u7684Plan\u90fd\u662f\u6b63\u786e\u7684\u3002\uff08\u6ce8\uff1a\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u7531Vscode\u63d2\u4ef6\u81ea\u52a8\u751f\u6210\uff09 >>\u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251 FF\u7684\u6027\u80fd\u5e26\u6765\u7684\u6700\u4ee4\u4eba\u632f\u594b\u7684\u95ee\u9898\u4e4b\u4e00\u662f\uff0c \u4e3a\u4ec0\u4e48*\u5728\u8fd9\u4e48\u591a\u9886\u57df\u5982\u6b64\u6709\u6548\uff1f\u542f\u53d1\u5f0f\u7b97\u6cd5\uff08\u5c24\u5176\u662f\u5c40\u90e8\u641c\u7d22\u7b97\u6cd5\uff09\u7684\u6210\u529f\u53d6\u51b3\u4e8e\u5176\u4f7f\u7528\u7684\u542f\u53d1\u5f0f\u51fd\u6570\u7684\u8d28\u91cf\uff0c\u5373\u53d6\u51b3\u4e8e\u4f7f\u7528\u8be5\u542f\u53d1\u5f0f\u51fd\u6570\u8fdb\u884c\u8bc4\u4f30\u7684\u57fa\u7840\u641c\u7d22\u7a7a\u95f4\u7684*\u5c40\u90e8\u641c\u7d22\u62d3\u6251 \uff0c\u8fd9\u662f\u6709\u4e89\u8bae\u7684\u3002\u6240\u4ee5\u95ee\u9898\u5f52\u7ed3\u4e3a\uff0c*\u5728FF\u8fd0\u4f5c\u826f\u597d\u7684\u90a3\u4e9b\u57df\u4e2d\uff0c\u641c\u7d22\u7a7a\u95f4\u7684\u7279\u5f81\u62d3\u6251\u7279\u6027\u662f\u4ec0\u4e48\uff1f*\u6211\u4eec\u8c03\u67e5\u4e8620\u4e2a\u6700\u5e38\u7528\u7684\u57fa\u51c6\u57df\u3002\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7814\u7a76\u5de5\u4f5c\u662f\u51ed\u7ecf\u9a8c\u89c2\u5bdf\u793a\u4f8b\u5b9e\u4f8b\u7684\u62d3\u6251\u3002\u6211\u4eec\u67e5\u770b\u4e86\u4e00\u4e9b\u968f\u673a\u793a\u4f8b\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u793a\u4f8b\u7684\u72b6\u6001\u7a7a\u95f4\u5c0f\u5230\u53ef\u4ee5\u5b8c\u5168\u6784\u5efa\u3002\u5bf9\u4e8eFF\u542f\u53d1\u5f0f\u51fd\u6570\u7684\u7406\u60f3\u7248\u672c\uff08\u6700\u4f73\u677e\u5f1b\u8ddd\u79bb\uff0c\u901a\u5e38\u8868\u793a\u4e3ah +\uff09\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u5173\u952e\u89c2\u5bdf\uff1a\u5728\u793a\u4f8b\u4e2d\u6ca1\u6709\u672a\u8bc6\u522b\u7684\u6b7b\u89d2\u72b6\u6001\uff08\u5b58\u5728\u677e\u5f1b\u89c4\u5212\u4f46\u6ca1\u6709\u5b9e\u9645\u89c4\u5212\u7684\u72b6\u6001\uff09\u572816\u4e2a\u57df\u4e2d\uff1b\u572814\u4e2a\u57df\u4e2d\u6839\u672c\u6ca1\u6709\u672c\u5730\u6700\u5c0f\u503c\uff1b\u57288\u4e2a\u57df\u4e2d\uff0c\u6700\u5927\u51fa\u53e3\u8ddd\u79bb\uff08\u5927\u81f4\u662f\u5e73\u5766\u533a\u57df\u4e0a\u8fbe\u5230\u8f83\u597d\u72b6\u6001\u7684\u6700\u5927\u8ddd\u79bb\uff09\u4f3c\u4e4e\u6709\u4e00\u4e2a\u6052\u5b9a\u7684\u4e0a\u9650\u3002FF'\u7684\u62d3\u6251\u6027\u8d28 \u7684\u5b9e\u9645\u542f\u53d1\u5f0f\u51fd\u6570\uff08\u6700\u4f73\u677e\u5f1b\u8ddd\u79bb\u7684\u8fd1\u4f3c\u503c\uff09\u76f8\u4f3c\u3002\u5177\u6709\u8fd9\u4e09\u4e2a\u5c5e\u6027\uff0cFF\u7684\u641c\u7d22\u7b97\u6cd5\u4f1a\u5728\u627e\u5230\u76ee\u6807\u4e4b\u524d\u5bf9\u591a\u9879\u72b6\u6001\u8fdb\u884c\u591a\u9879\u5f0f\u8bc4\u4f30\u3002 \u7ecf\u9a8c\u5de5\u4f5c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u89c4\u5212\u9886\u57df\u4e4b\u95f4\u7684\u76f8\u5173\u533a\u522b\uff0c\u4e0b\u4e00\u6b65\u662f\u9a8c\u8bc1\u603b\u4f53\u89c2\u5bdf\u7ed3\u679c\u3002\u7406\u8bba\u7814\u7a76\u8bc1\u660e\uff0c\u5bf9\u4e8e\u6700\u4f73\u677e\u5f1b\u8ddd\u79bbh +\uff0c\u9664\u4e86\u4e00\u4e2a\u4f8b\u5916\uff0c\u6211\u4eec\u6240\u6709\u5c0f\u793a\u4f8b\u4e2d\u7684\u6240\u6709\u89c2\u5bdf\u7ed3\u679c\u5b9e\u9645\u4e0a\u90fd\u5ef6\u7eed\u5230\u76f8\u5e94\u7684\u6574\u4e2a\u57df\u3002\u901a\u8fc7\u9a8c\u8bc1\u8fc7\u7a0b\uff0c\u8c03\u67e5\u8fd8\u63d0\u4f9b\u4e86\u5e38\u89c1*\u7684\u7ed3\u6784\u6a21\u5f0f\u56fe*\u5728\u88ab\u8c03\u67e5\u7684\u9886\u57df\u4e2d\uff0c\u8fd9\u4e9b\u95ee\u9898\u4f1a\u5bfc\u81f4\u653e\u677e\u8ddd\u79bb\u7684\u9ad8\u542f\u53d1\u5f0f\u8d28\u91cf\uff0c\u4ece\u800c\u5bfc\u81f4FF\u7b49\u8ba1\u5212\u8005\u7684\u8868\u73b0\u3002\u7ed3\u6784\u7684\u6a21\u5f0f\u975e\u5e38\u7c97\u7cd9\uff1a1.\u53ef\u7528\u7684\u52a8\u4f5c\u662f\u53ef\u9006\u7684\u6216\u4e0d\u9700\u8981\u53cd\u8f6c\uff08->\u65e0\u6b7b\u89d2\uff09\uff1b2.\u4efb\u4f55\u6709\u5229\u4e8e\u89e3\u51b3\u5b9e\u9645\u4efb\u52a1\u7684\u52a8\u4f5c\u4e5f\u6709\u5229\u4e8e\u89e3\u51b3\u8f7b\u677e\u7684\u4efb\u52a1\uff08\u4e0e1.->\u6ca1\u6709\u5c40\u90e8\u6700\u5c0f\u503c\uff09\u4e00\u8d77\uff1b3.\u6709\u4e9b\u52a8\u4f5c\u5177\u6709\u4e0e\u5e94\u7528\u65e0\u5173\u7684\u5220\u9664\u6548\u679c\uff0c\u800c\u5176\u4ed6\u52a8\u4f5c\u6700\u591a\u9700\u8981\u8fde\u7eed\u6267\u884c\u6052\u5b9a\u7684\u6b21\u6570\uff08\u4ee5\u53ca1.\u548c2\u3002->\u6700\u5927\u9000\u51fa\u8ddd\u79bb\u7684\u6052\u5b9a\u4e0a\u9650\uff09 \u3002 \u6700\u540e\u7684\u7ecf\u9a8c\u5de5\u4f5c\u6b65\u9aa4\u8bc1\u5b9e\uff0c\u6700\u4f73\u677e\u5f1b\u8ddd\u79bb\u7684\u542f\u53d1\u5f0f\u8d28\u91cf\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5ef6\u7eed\u4e86FF\u5bf9\u8fd9\u4e9b\u8ddd\u79bb\u7684\u8fd1\u4f3c\u3002\u5c24\u5176\u662f\uff0c\u5728\u6240\u6709\u4e0a\u8ff0\u4e09\u79cd\u7ed3\u6784\u6a21\u5f0f\u5747\u51fa\u73b0\u7684\u88ab\u8c03\u67e5\u768420\u4e2a\u57df\u4e2d\u7684\u516b\u4e2a\u57df\u4e2d\uff0cFF\u662f\u201c\u5927\u201d\u591a\u9879\u5f0f\uff08\u5c24\u5176\u662f\u5728\u7269\u6d41\u57df\u4e2d\uff09\u3002 \u524d\u4e24\u4e2a\u8c03\u67e5\u4f5c\u4e3a\u4f1a\u8bae\u8bba\u6587\u53d1\u8868\u3002\u9996\u6b21\u5b9e\u8bc1\u5de5\u4f5c\u5728IJCAI'01\u4e0a\u53d1\u8868\uff1a \u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\uff1a\u4e00\u9879\u5b9e\u8bc1\u5206\u6790\uff0c\u8f7d\u4e8e\uff1a \u7b2c17\u5c4a\u56fd\u9645\u4eba\u5de5\u667a\u80fd\u8054\u5408\u4f1a\u8bae\u8bba\u6587\u96c6 \uff0c\u7f8e\u56fd\u534e\u76db\u987f\uff0c2001\u5e748\u6708\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u5173\u4e8e\u7406\u8bba\u5206\u6790\u7684\u8bba\u6587\u53d1\u8868\u5728AIPS'02\u4e0a\uff1a \u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\uff1a\u7406\u8bba\u5206\u6790\uff0c\u8f7d\u4e8e\uff1a2002\u5e744\u6708\u5728\u6cd5\u56fd\u56fe\u5362\u5179*\u4e3e\u884c\u7684\u7b2c\u516d\u5c4a\u56fd\u9645\u4eba\u5de5\u667a\u80fd\u89c4\u5212\u4e0e\u8c03\u5ea6\u56fd\u9645\u4f1a\u8bae\u8bba\u6587\u96c6\u4e0a*\u3002\uff08 gzip\u7684\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u53c2\u8003\u8d44\u6599 \u6761\u76ee \uff09 AIPS'02\u6587\u4ef6\u7684\u6269\u5c55\u548c\u4fee\u8ba2\u7248\uff0c\u5305\u62ec10\u4e2a\u65b0\u57df\u7684\u7ed3\u679c\uff08IPC-3\u548cIPC-4\u57fa\u51c6\uff09\uff0c\u4ee5\u53ca\u5bf9\u89c4\u5212\u57df\u4e4b\u95f4\u4e3b\u8981\u533a\u522b\u7684\u4fee\u8ba2\u5b9a\u4e49\uff0c\u5176\u4e2d\u6d89\u53ca\u9488\u5bf9AIPS'02\u7684\u51e0\u4e2a\u65b0\u7ed3\u679cJAIR\u4e2d\u53d1\u5e03\u4e8620\u4e2a``\u65e7''\u57df\uff1a J. Hoffmann\uff0c \u300a\u5ffd\u7565\u5220\u9664\u5217\u8868\u7684\u5de5\u4f5c \u539f\u7406 \uff1a\u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\u300b \uff0c \u300a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u300b \uff0c\u7b2c24\u5377\uff0c2005\u5e74\uff0c\u7b2c 685-758 \u9875\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09 JAIR\u8bba\u6587\u5305\u542b\u6982\u8ff0\u8bc1\u660e\u8349\u56fe\u3002\u8f83\u957f\u7684TR\uff08138\u9875\uff09\u63d0\u4f9b\u4e86\u8c03\u67e5\u7684\u5168\u90e8\u8be6\u7ec6\u4fe1\u606f\uff1a \u5ffd\u7565\u5220\u9664\u5217\u8868\u7684\u5de5\u4f5c \u539f\u7406 \uff1a\u300a\u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\u300b\uff0c\u6280\u672f\u62a5\u544a\u7b2c185\u53f7\uff0c\u4fe1\u606f\u5b66\u9662\uff0c2003\u5e743\u6708\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09 **>>**TorchLight \u8fd9\u662f\u6211\u6700\u8fd1\u5f00\u53d1\u7684\u5de5\u5177\u3002\u5b83\u5141\u8bb8**\u5206\u6790\u641c\u7d22\u7a7a\u95f4\u62d3\u6251\uff0c\u800c\u65e0\u9700\u5b9e\u9645\u8fd0\u884c\u4efb\u4f55\u641c\u7d22**\u3002\u6211\u7684\u610f\u601d\u662f\uff0cTorchLight\u53ef\u4ee5\u5b8c\u5168\u81ea\u52a8\u5730\u5728h +\uff08\u53c2\u89c1\u4e0a\u6587\uff09\u4e0b\u5bf9\u672c\u5730\u641c\u7d22\u62d3\u6251\u5f97\u51fa\u7ed3\u8bba\uff0c\u751a\u81f3\u65e0\u9700\u5f00\u59cb\u751f\u6210\u4efb\u4f55\u641c\u7d22\u72b6\u6001\u3002\u5173\u952e\u662f\u56e0\u679c\u56fe\u548c\u57df\u8f6c\u6362\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u6b63\u5982\u6211\u5728\u5b8c\u6210\u4e0a\u8ff0\u5de5\u4f5c\u540e\u51e0\u5e74\u6d41\u884c\u8d77\u6765\u7684\u90a3\u6837\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u57fa\u672c\u5c5e\u6027\u662f\uff1a \u5982\u679c\u56e0\u679c\u56fe\u662f\u975e\u5faa\u73af\u7684\uff0c\u5e76\u4e14\u6240\u6709\u53d8\u91cf\u8f6c\u6362\u90fd\u662f\u53ef\u9006\u7684\uff0c\u5219h +\u4e0b\u6ca1\u6709\u5c40\u90e8\u6700\u5c0f\u503c \u3002 \u57fa\u672c\u7ed3\u679c\u53ef\u4ee5\u901a\u8fc7\u66f4\u5c40\u90e8\u7684\u5206\u6790\u6765\u6269\u5c55\uff0c\u7740\u773c\u4e8e\u56e0\u679c\u56fe\u7684\u67d0\u4e9b\u5b50\u56fe\u800c\u4e0d\u662f\u5b8c\u6574\u7684\u5b50\u56fe\uff0c\u5e76\u5141\u8bb8\u67d0\u4e9b\u4e0d\u53ef\u9006\u8f6c\u6362\u7684\u7279\u6b8a\u60c5\u51b5\u3002\u901a\u8fc7\u8fd9\u4e9b\u6269\u5c55\uff0c\u8be5\u6807\u51c6\u8fd8\u5141\u8bb8\u5bfc\u51fah +\u4e0b\u51fa\u53e3\u8ddd\u79bb\u7684\u754c\u9650\uff0c\u5e76\u4e14\u9002\u7528\u4e8e4\u4e2a\u6807\u51c6\u57fa\u51c6\u57df\u3002\u867d\u7136\u8fd9\u53ea\u662f\u57fa\u51c6\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u4f46TorchLight\u8fd8\u5177\u6709\u4e00\u79cd\u7b80\u5355\u7684\u91c7\u6837\u65b9\u6cd5\uff0c\u53ef\u4ee5\u67e5\u770b\u5c11\u91cf\uff08\u9ed8\u8ba4\u503c\uff1a10\uff09\u968f\u673a\u751f\u6210\u7684\u72b6\u6001\uff0c\u5c06\u6bcf\u4e2a\u72b6\u6001\u7684\u51c6\u5219\u5e94\u7528\u5230\u6bcf\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u8fd4\u56de\u6837\u672c\u72b6\u6001\u4e2d\u6761\u4ef6\u8bf4\u201c\u662f\u201d\u3002\u6b64\u201c\u6210\u529f\u7387\u201d\u63d0\u4f9b\u4e86\u9488\u5bf9\u4efb\u610f\u8ba1\u5212\u4efb\u52a1\u7684\u201c\u786c\u5ea6\u201d\uff08\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u662fh +\u7684\u8d28\u91cf\uff09\u7684\u5ea6\u91cf\u3002 TorchLight\u7684\u6e90\u4ee3\u7801\u5df2\u901a\u8fc7GNU GPL\u8bb8\u53ef\u516c\u5f00\u63d0\u4f9b\uff1a TorchLight.zip \u3002 \u6709\u5173TorchLight\u7684\u8bba\u6587\u5df2\u5728JAIR'11\u548cICAPS'11\u4e0a\u53d1\u8868\uff08\u6309\u4ee5\u4e0b\u987a\u5e8f\u6392\u5217\uff1a-\uff09 J. Hoffmann\uff0c\u5728**\u4e0d\u8fd0\u884c\u4efb\u4f55\u641c\u7d22\u7684\u60c5\u51b5\u4e0b\u5206\u6790\u641c\u7d22\u62d3\u6251\uff1a\u5173\u4e8e\u56e0\u679c\u56fe\u4e0eh +\u4e4b\u95f4\u7684\u8054\u7cfb**\uff0c \u300a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u300b \uff0c\u7b2c41\u5377\uff0c2011\u5e74\uff0c\u7b2c155-229\u9875\u3002\uff08 PDF\u6587\u4ef6 \uff09 J. Hoffmann\uff0c \u201c\u5ffd\u7565\u5220\u9664\u5217\u8868\u7684\u5de5\u4f5c***\u539f\u7406* \uff0c\u7b2c\u4e8c\u90e8\u5206\uff1a\u56e0\u679c\u56fe\u201d**\uff0c\u57282011\u5e746\u6708\u4e8e\u5fb7\u56fd\u5f17\u8d56\u5821*\u4e3e\u884c\u7684\u7b2c21\u5c4a\u56fd\u9645\u81ea\u52a8\u89c4\u5212\u548c\u8ba1\u5212\u4f1a\u8bae\uff08ICAPS'11\uff09\u4e0a\u53d1\u8868*\u3002\u88ab\u63d0\u540d\u6700\u4f73\u8bba\u6587\u5956\u3002 \uff08 pdf\u6863\u6848 \uff09 \u8fd8\u6709\u4e00\u4e2a\u6613\u4e8e\u9605\u8bfb\u7684 ICAPS'11\u6f14\u793a\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u793a\u4f8b\u8fd0\u884c \uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6211\u7684 \u6f14\u8bb2\u5e7b\u706f\u7247 \u6216 ICAPS'11\u6f14\u793a\u6d77\u62a5 \u3002 >>FF\u5e38\u89c4\u4fe1\u606f Fast-Forward\uff0c\u7f29\u5199\u4e3aFF\uff0c\u662fJoerg\u5f00\u53d1\u7684\u4e0e\u9886\u57df\u65e0\u5173\u7684\u8ba1\u5212\u7cfb\u7edf\u3002FF\u53ef\u4ee5\u5904\u7406\u7ecf\u5178\u7684STRIPS-\u4ee5\u53ca\u5168\u9762\u7684ADL-\u8ba1\u5212\u4efb\u52a1\uff0c\u8fd9\u4e9b\u4efb\u52a1\u5c06\u5728PDDL\u4e2d\u6307\u5b9a\uff08\u5bf9\u4e8e\u53ef\u4ee5\u5904\u7406\u6570\u5b57\u72b6\u6001\u53d8\u91cf\u7684\u7248\u672c\uff0c\u8bf7\u67e5\u770b \u53e6\u4e00\u9875 \uff09\u3002\u8be5\u7cfb\u7edf\u5728C\u8bed\u8a00\u4e2d\u5b9e\u73b0\u3002\u5b83\u5df2\u7ecf\u53c2\u52a0\u4e86 \u7b2c\u4e8c\u5c4a\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b\u7684 \u5168\u81ea\u52a8\u8d5b\u9053\u3002\u6bd4\u8d5b\u7684\u7ed3\u679c\u662f\uff0cFF\u88ab\u6388\u4e88``A\u7ec4\u6770\u51fa\u7ee9\u6548\u8ba1\u5212\u7cfb\u7edf''\uff0c\u5e76\u4e14\u8fd8\u83b7\u5f97\u4e86Miconic 10\u7535\u68af\u9886\u57dfADL\u8f68\u9053\u4e0a\u8868\u73b0\u6700\u4f73\u7684\u8ba1\u5212\u7cfb\u7edf\u7684\u8fc5\u8fbe\u5956\u3002\u8be5\u7cfb\u7edf\uff08\u7565\u6709\u8c03\u8bd5\uff09\u8fd8\u53c2\u52a0\u4e86 \u7b2c\u4e09\u5c4a\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b \u5728STRIPS\u9886\u57df\u8868\u73b0\u51fa\u8272\uff08\u4f46\u7531\u4e8e\u5176\u4ed6\u7ade\u4e89\u7cfb\u7edf\u7684\u8bed\u8a00\u8986\u76d6\u9762\u66f4\u5e7f\uff0c\u56e0\u6b64\u6ca1\u6709\u83b7\u5f97\u5956\u9879\uff09\u3002\u8bf7\u67e5\u770b\u6211\u4eec\u7684 \u7f51\u9875\uff0c\u5728\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684STRIPS\uff08\u548c\u6570\u5b57\uff09\u57df\u4e2d\u63d0\u4f9b\u8fd0\u884c\u65f6\u6570\u636e\u548c\u89e3\u51b3\u65b9\u6848\u957f\u5ea6\u6570\u636e\u7684gnuplot \u3002\u5728\u5f53\u524d\u9875\u9762\u4e0a\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u7b2c\u4e09\u5c4a\u56fd\u9645\u8ba1\u5212\u7ade\u8d5b\u4e2d\u4f7f\u7528\u7684\u6e90\u4ee3\u7801\uff0c\u4ee5\u53ca\u4e00\u4e9b\u8f83\u65e7\u7684\u6e90\u4ee3\u7801\uff0c\u4ee5\u4f7fSTRIPS\u7248\u672c\u66f4\u6613\u8bfb\u3002\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u4e0e\u8be5\u7cfb\u7edf\u76f8\u5173\u7684\u51fa\u7248\u7269\u7684\u6307\u9488\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u4fe1\u606f\uff0c\u8bf4\u660e\u4e86\u4f7f\u8be5\u7cfb\u7edf\u5728\u8bb8\u591a\u57fa\u51c6\u57df\u4e2d\u5982\u6b64\u9ad8\u6548\u7684\u539f\u56e0\u3002 >>\u57fa\u672c\u539f\u7406 FF\u662f\u524d\u5411\u542f\u53d1\u5f0f\u72b6\u6001\u7a7a\u95f4\u89c4\u5212\u5e08\u3002\u4e3b\u8981\u7684\u542f\u53d1\u5f0f\u539f\u7406\u6700\u521d\u662f\u7531 Blai Bonet \u548c Hector Geffner \u9488\u5bf9HSP\u7cfb\u7edf\u5f00\u53d1\u7684\uff1a\u8981\u83b7\u5f97\u542f\u53d1\u5f0f\u4f30\u8ba1\uff0c\u901a\u8fc7\u5ffd\u7565\u6240\u6709\u8fd0\u7b97\u7b26\u7684\u5220\u9664\u5217\u8868\uff0c\u5c06\u624b\u5934\u7684\u4efb\u52a1**P** \u653e\u677e*\u4e3a\u66f4\u7b80\u5355\u7684\u4efb\u52a1**P +* \u3002\u800cHSP\u91c7\u7528\u4e86\u4e00\u79cd\u6280\u672f\uff0c\u7ed9\u51fa\u4e86\u7684\u6eb6\u6db2\u957f\u5ea6\u7684\u7c97\u7565\u4f30\u8ba1**P + \uff0cFF *\u63d0\u53d6\u7684\u663e\u5f0f\u89e3*\u5230**P + \uff0c\u901a\u8fc7\u4f7f\u7528\u56fe\u89c4\u5212\u5f0f\u7b97\u6cd5\u3002\u677e\u5f1b\u89e3\u4e2d\u7684\u52a8\u4f5c\u6570\u7528\u4f5c\u76ee\u6807\u8ddd\u79bb\u4f30\u8ba1\u3002\u8fd9\u4e9b\u4f30\u7b97\u503c\u63a7\u5236\u7740\u4e00\u79cd\u65b0\u9896\u7684\u672c\u5730\u641c\u7d22\u7b56\u7565\uff0c \u5f3a\u5236\u722c\u5c71 \uff1a\u8fd9\u662f\u4e00\u4e2a\u722c\u5c71\u7a0b\u5e8f\uff0c\u5728\u6bcf\u4e2a\u4e2d\u95f4\u72b6\u6001\u4e0b\uff0c\u90fd\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6765\u627e\u5230*\u4e25\u683c\u66f4\u597d\u7684*\uff0c\u53ef\u80fd\u662f\u95f4\u63a5\u7684\u540e\u7ee7\u7a0b\u5e8f\u3002\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u91cd\u8981\u7684\u542f\u53d1\u5f0f\u4fe1\u606f\uff0c\u653e\u677e\u7684\u8ba1\u5212\u53ef\u7528\u4e8e\u4fee\u526a\u641c\u7d22\u7a7a\u95f4\uff1a\u901a\u5e38\uff0c\u5728\u4e00\u4e2a\u72b6\u6001\u4e2d\u771f\u6b63\u6709\u7528\u7684\u52a8\u4f5c\u5305\u542b\u5728\u653e\u677e\u7684\u8ba1\u5212\u4e2d\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u4efb\u4f55\u72b6\u6001\u7684\u540e\u7ee7\u8005\u9650\u5236\u4e3a\u6210\u5458\u5404\u81ea\u653e\u677e\u7684\u89e3\u51b3\u65b9\u6848\u3002FF\u8fd0\u7528\u4e86\u8fd9\u79cd\u542f\u53d1\u5f0f\u7684\u7a0d\u5fae\u8be6\u7ec6\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u79f0\u5176\u4e3a*\u6709\u7528\u7684\u52a8\u4f5c\u4fee\u526a*\u3002\u5230\u76ee\u524d\u4e3a\u6b62\u63cf\u8ff0\u7684\u7b80\u5355\u4f53\u7cfb\u7ed3\u6784\u5df2\u7ecf\u975e\u5e38\u6709\u6548\u5730\u89e3\u51b3\u4e86\u5927\u591a\u6570\u53ef\u7528\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002\u6709\u95ee\u9898\u7684\u60c5\u51b5\u662f \u6b7b\u80e1\u540c ---\u65e0\u6cd5\u8fbe\u5230\u76ee\u6807\u7684\u72b6\u6001---\u6216*\u76ee\u6807\u6392\u5e8f*\u3002\u5728\u540e\u4e00\u79cd\u73b0\u8c61\u7684\u5b58\u5728\u4e0b\uff0c\u4f8b\u5982\u5728Blocksworld\u4e2d\uff0c\u672c\u5730\u641c\u7d22\u6709\u65f6\u4f1a\u8fc7\u4e8e\u8d2a\u5a6a\u5730\u8fdb\u884c\uff0c\u5e76\u88ab\u56f0\u4f4f\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u57fa\u4e8e\u8f7b\u677e\u7684\u89e3\u51b3\u65b9\u6848\u96c6\u6210\u4e86\u76ee\u6807\u8bae\u7a0b\u7b97\u6cd5\uff08\u7531 Jana Koehler \u9996\u6b21\u63d0\u51fa\uff09\uff0c\u4ee5\u53ca\u6211\u4eec\u81ea\u5df1\u7684\u7b80\u5355\u76ee\u6807\u6392\u5e8f\u6280\u672f\u3002\u4e3a\u4e86\u5904\u7406\u53ef\u80fd\u5bfc\u81f4\u641c\u7d22\u5b8c\u5168\u5931\u8d25\u7684\u6b7b\u89d2\u72b6\u6001\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5b89\u5168\u7f51\u89e3\u51b3\u65b9\u6848\uff1a\u5982\u679c\u672c\u5730\u641c\u7d22\u5931\u8d25\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u8df3\u8fc7\u76ee\u524d\u4e3a\u6b62\u6240\u505a\u7684\u6240\u6709\u4e8b\u60c5\uff0c\u5e76\u5207\u6362\u5230\u5b8c\u6574\u7684\u201c\u6700\u4f73\u4f18\u5148\u201d\u7b97\u6cd5\uff0c\u53ea\u9700\u589e\u52a0\u76ee\u6807\u8ddd\u79bb\u8bc4\u4f30\u7684\u987a\u5e8f\u5373\u53ef\u6269\u5c55*\u6240\u6709*\u641c\u7d22\u8282\u70b9\u3002 >>\u6e90\u4ee3\u7801\u53ef\u7528 FF\u662f\u6839\u636eGNU\u901a\u7528\u516c\u5171\u8bb8\u53ef\u8bc1\u516c\u5f00\u63d0\u4f9b\u7684\u3002\u6709\u5173Metric-FF\u7684\u6e90\u4ee3\u7801\uff0c\u8bf7\u53c2\u89c1 \u5176\u4ed6\u7f51\u9875 \u3002FF-v2.3\u5728 \u8fd9\u91cc \u3002\u8fd9\u662fADL\u7248\u672c\uff0c\u901a\u8fc7\u6211\u4eec\u81ea\u5df1\u7684\u76ee\u6807\u6392\u5e8f\u4fee\u526a\u6280\u672f\u4ee5\u53ca\u201c\u76ee\u6807\u8bae\u7a0b\u201d\u63d0\u4f9b\u7684\u6392\u5e8f\u4fe1\u606f\u8fdb\u884c\u4e86\u589e\u5f3a\uff0c\u8be5\u4fe1\u606f\u6458\u81ea Jana Koehler \u7684\u8457\u4f5c\u3002\u5b83\u4e0e\u7b2c\u4e8c\u5c4a\u56fd\u9645\u89c4\u5212\u5927\u8d5b\u4e2d\u4f7f\u7528\u7684FF-v2.2\u7248\u672c\u76f8\u540c\uff0c\u5bf9\u9884\u5904\u7406\u9636\u6bb5\u4e2d\u7684\u4e00\u4e9b\u5c0f\u9519\u8bef\u8fdb\u884c\u4e86\u6a21\u5220\u9664\u3002 \u90a3\u4e9b\u66fe\u7ecf\u4e0eFF\u8054\u7cfb\u8fc7\u7684\u4eba\u53ef\u80fd\u4f1a\u610f\u8bc6\u5230\uff0c\u89e3\u6790\u5668\u591a\u5e74\u6765\u4e00\u76f4\u5b58\u5728\u9ebb\u70e6\uff0c\u8be5\u89e3\u6790\u5668\u7f16\u5199\u4e8e1997\u5e74\uff0c\u4e0d\u518d\u7b26\u5408\u6700\u65b0\u7684bison / flex\u7248\u672c\u3002\u6211\u8981**\u5bf9\u65af\u7279\u62c9\u65af\u514b\u83b1\u5fb7\u5927\u5b66\u7684\u5b89\u5fb7\u9c81\u00b7\u79d1\u5c14\u65af\uff08Andrew Coles\uff09\u8868\u793a\u8877\u5fc3\u7684\u611f\u8c22\uff0c\u4ed6\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u7814\u7a76\u5e76\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002** \u4e0a\u9762\u7684\u94fe\u63a5 \u63d0\u4f9b\u4e86FF-v2.3\u7684\u65b0\u4fee\u8865\u7248\u672c\u3002\u5b89\u5fb7\u9c81\u5df2\u4f7f\u7528flex 2.5.34\u548c2.5.35\u4ee5\u53ca\u91ce\u725b2.3\u548c2.4.1\u5bf9\u5b83\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u6bd5\u7adf\uff0c\u6240\u9700\u7684\u66f4\u6539\u975e\u5e38\u7b80\u5355\u3002\u8fd9\u662f\u5b89\u5fb7\u9c81\u7684\u63cf\u8ff0\uff1a \u5728lex-fct_pddl.l\u4e2d\uff0c\u5c06\u201c #define fct_pddlwrap\uff08\uff091\u201d\u66ff\u6362\u4e3a\u201c int fct_pddlwrap\uff08\uff09{return 1;};\u201d \u5728lex-ops_pddl.l\u4e2d\uff0c\u5c06\u201c #define ops_pddlwrap\uff08\uff091\u201d\u66ff\u6362\u4e3a\u201c int ops_pddlwrap\uff08\uff09{return 1;};\u201d \u7f57\u4f2f\u7279\u00b7\u6208\u5fb7\u66fc\uff08Robert Goldman\uff09\u53cb\u5584\u5730\u8d21\u732e\u4e86 FF-v2.3 \u7684 \u8865\u4e01\u7248\u672c\uff0c\u5176\u4e2d\u89e3\u6790\u5668\u5141\u8bb8\u5728\u7c7b\u578b\u5217\u8868\u4e2d\u4f7f\u7528\u6362\u884c\u7b26 \u3002 \u6700\u540e\uff0c\u9a6c\u4e01\u00b7\u82cf\u8fbe\uff08Martin Suda\uff09\u63d0\u4f9b\u4e86 FF-v2.3\u7684\u4fee\u8865\u7248\u672c\uff0c\u8be5\u89e3\u6790\u5668\u5e94\u8be5\u80fd\u591f\u89e3\u6790\u8f83\u5927\u7684\u8f93\u5165 \u3002\u6211\u8fd8\u6ca1\u6709\u6d4b\u8bd5\u8fc7\uff0c\u4f46\u8fd8\u662f\u60f3\u8ba9\u4f60\u62e5\u6709\u5b83\u3002 >>\u76f8\u5173\u8bba\u6587 \u5728\u6bd4\u8d5b\u4e2d\u4f7f\u7528\u4e86\u6709\u5173FF\u7cfb\u7edf\u7684\u8be6\u7ec6JAIR\u6587\u7ae0\uff08FF-v2.2 / 3\uff09\u3002 B. Nebel \uff0c \u300a FF\u8ba1\u5212\u7cfb\u7edf\uff1a\u901a\u8fc7\u542f\u53d1\u5f0f\u641c\u7d22\u5feb\u901f\u751f\u6210\u8ba1\u5212\u300b \uff0c\u53d1\u8868\u4e8e\uff1a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u6742\u5fd7\uff0c\u7b2c14\u5377\uff0c2001\u5e74\uff0c\u7b2c 253-302 \u9875\u3002\uff08 gzip\u7684\u9644\u8a00\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u7b80\u77ed\u7684\u6613\u4e8e\u9605\u8bfb\u7684\u8bba\u6587\u603b\u7ed3\u4e86\u4ee5\u4e0a\u6587\u7ae0\u7684\u8bb8\u591a\u5185\u5bb9\uff0c\u5e76\u5728AI\u6742\u5fd7\u4e0a\u53d1\u8868\u3002 FF\uff1a\u5feb\u8fdb\u8ba1\u5212\u7cfb\u7edf\uff0c\u5728\uff1aAI\u6742\u5fd7\uff0c\u7b2c22\u5377\uff0c\u7b2c3\u671f\uff0c2001\u5e74\uff0c\u7b2c 57-62 \u9875\u3002\uff08 gzip\u7684\u9644\u8a00\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u6211\u4eec\u8fdb\u884c\u4e86\u5927\u89c4\u6a21\u7684\u5b9e\u8bc1\u7814\u7a76\uff0c\u786e\u5b9a\u4e86HSP\u548cFF\u4e4b\u95f4\u7684\u5173\u952e\u5dee\u5f02\u3002\u6211\u4eec\u7684\u53d1\u73b0\u7684\u63cf\u8ff0\u6784\u6210\u4e86\u4e0a\u9762JAIR\u6587\u7ae0\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u5df2\u5728IJCAI'01\u5173\u4e8eAI\u7684\u7ecf\u9a8c\u65b9\u6cd5\u7684\u7814\u8ba8\u4f1a\u4e0a\u8fdb\u884c\u4e86\u4ecb\u7ecd\u3002 B. Nebel \uff0c \u4ec0\u4e48\u4f7fHSP\u548cFF\u6709\u6240\u4e0d\u540c\uff1f \uff0c\u57282001\u5e748\u6708\u5728\u7f8e\u56fd\u534e\u76db\u987f\u5dde\u897f\u96c5\u56fe\u5e02*IJCAI'01\u7684AI\u7ecf\u9a8c\u65b9\u6cd5\u7814\u8ba8\u4f1a\u4e0a*\u8fdb\u884c\u4e86\u4ecb\u7ecd\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u6211\u4eec\u7814\u7a76\u4e86\u8ba1\u5212\u57fa\u51c6\u7684\u7ed3\u6784\u5c5e\u6027\uff0c\u9610\u660e\u4e86FF\u548c\u5176\u4ed6\u5148\u8fdb\u7684\u542f\u53d1\u5f0f\u641c\u7d22\u8ba1\u5212\u7a0b\u5e8f\u6210\u529f\u7684\u539f\u56e0\u3002\u8bba\u6587\u5728IJCAI'01\uff0cAIPS'02\u548cJAIR\u4e0a\u53d1\u8868\u3002JAIR\u6587\u7ae0\u662f\u6700\u65b0\u7684\uff0c\u5e76\u4e14\u5728\u6240\u6709\u65b9\u9762\u90fd\u7edd\u5bf9\u503c\u5f97\u63a8\u8350\u3002 \u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\uff1a\u4e00\u9879\u5b9e\u8bc1\u5206\u6790\uff0c\u8f7d\u4e8e\uff1a \u7b2c17\u5c4a\u56fd\u9645\u4eba\u5de5\u667a\u80fd\u8054\u5408\u4f1a\u8bae\u8bba\u6587\u96c6 \uff0c\u7f8e\u56fd\u534e\u76db\u987f\uff0c2001\u5e748\u6708\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\uff1a\u7406\u8bba\u5206\u6790\uff0c\u8f7d\u4e8e\uff1a2002\u5e744\u6708\u5728\u6cd5\u56fd\u56fe\u5362\u5179*\u4e3e\u884c\u7684\u7b2c\u516d\u5c4a\u56fd\u9645\u4eba\u5de5\u667a\u80fd\u89c4\u5212\u4e0e\u8c03\u5ea6\u56fd\u9645\u4f1a\u8bae\u8bba\u6587\u96c6\u4e0a*\u3002\uff08 gzip\u7684\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u53c2\u8003\u8d44\u6599 \u6761\u76ee \uff09 J. Hoffmann\uff0c \u300a\u5ffd\u7565\u5220\u9664\u5217\u8868\u7684\u5de5\u4f5c \u539f\u7406 \uff1a\u89c4\u5212\u57fa\u51c6\u4e2d\u7684\u672c\u5730\u641c\u7d22\u62d3\u6251\u300b \uff0c \u300a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u300b \uff0c\u7b2c24\u5377\uff0c2005\u5e74\uff0c\u7b2c 685-758 \u9875\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09 \u5728ISMIS'00\uff082000\u5e7410\u670811\u65e5\u81f314\u65e5\uff0c\u5317\u5361\u7f57\u83b1\u7eb3\u5dde\u590f\u6d1b\u7279\uff09\u4e0a\u53d1\u5e03\u4e86\u6709\u5173FF\u7684\u9996\u4e2aSTRIPS\u7248\u672c\u7684\u7b80\u77ed\u8bba\u6587\uff08FF-v1.0\uff09\uff0c\u5e76\u5728ECAI 2000\u7814\u8ba8\u4f1aPuK2000\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u6709\u5173\u8be5\u8bba\u6587\u65b0\u6210\u679c\u7684\u8bba\u6587\u3002\u89c4\u5212\uff0c\u8fdb\u5ea6\u5b89\u6392\u548c\u8bbe\u8ba1\uff08\u67cf\u6797\uff0c2000\u5e748\u670820\u65e5\u81f325\u65e5\uff09\u3002 \uff0c\u89c1\uff1a 2000\u5e7410\u6708\u5728\u7f8e\u56fd\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u590f\u6d1b\u7279*\u4e3e\u884c\u7684\u7b2c12\u5c4a\u56fd\u9645\u667a\u80fd\u7cfb\u7edf\u65b9\u6cd5\u8bba\u56fd\u9645\u4f1a\u8bae\u8bba\u6587\u96c6*\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 \u5173\u4e8e\u201c\u76ee\u6807\u8bae\u7a0b\u201d\u673a\u5236\u7684\u8bba\u6587\u5df2\u7ecf\u9488\u5bf9FF\u8fdb\u884c\u4e86\u4fee\u6539\u3002 Jana Koehler \u7684\u539f\u59cb\u8bba\u6587\u5728AIPS-98\u4f1a\u8bae\u4e0a\u3002\u4e0eJoerg Hoffmann\u5408\u4f5c\u64b0\u5199\u4e86\u4e00\u7bc7\u66f4\u8be6\u7ec6\u7684\u6587\u7ae0\uff0c\u6b63\u5f0f\u4ecb\u7ecd\u4e86\u8be5\u65b9\u6cd5\uff0c\u5e76\u5728JAIR\u4e0a\u53d1\u8868\u3002 J. Koehler \uff0c\u201c \u901a\u8fc7\u63d0\u53d6\u5b50\u95ee\u9898\u89e3\u51b3\u590d\u6742\u7684\u8ba1\u5212\u4efb\u52a1\u201d \uff0c\u8f7d\u4e8e\uff1a \u7b2c4\u5c4a\u4eba\u5de5\u667a\u80fd\u8ba1\u5212\u4e0e\u8c03\u5ea6\u4f1a\u8bae\u8bba\u6587\u96c6 \uff0c\u7f8e\u56fd\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u5339\u5179\u5821\uff0c1998\u5e747\u6708\u3002\uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09 J. Koehler \uff0c\uff0c \u4e8e\uff1a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u6742\u5fd7\uff0c2000\u5e74\u7b2c12\u5377\uff0c\u7b2c 338-386 \u9875\uff08\u7528 gzip\u538b\u7f29\u7684\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u5634\u6761\u76ee \uff09 \u6700\u540e\uff0c\u6709\u4e00\u4e9b\u5de5\u4f5c\u63cf\u8ff0\u4e86IPP\u7528\u4e8e\u5229\u7528\u9886\u57df\u5b9a\u4e49\u7684\u7ed3\u6784\u5c5e\u6027\u5c06\u5b8c\u6574\u7684ADL\u4efb\u52a1\u7f16\u8bd1\u4e3a\u547d\u9898\u8303\u5f0f\u7684\u9884\u5904\u7406\u65b9\u6cd5\u3002\u5bf9\u4e8eFF\uff0c\u6b64\u65b9\u6cd5\u5df2\u66f4\u6709\u6548\u5730\u5b9e\u65bd\uff0c\u5e76\u901a\u8fc7\u4e00\u79cd\u53ef\u8fbe\u6027\u5206\u6790\u9636\u6bb5\u8fdb\u884c\u4e86\u6269\u5c55\u3002\u5728ECAI 2000\u7814\u8ba8\u4f1a\u4e0a\u4ecb\u7ecd\u4e86\u63cf\u8ff0IPP\u9884\u5904\u7406\u65b9\u6cd5\u7684\u8bba\u6587\u3002 J. Koehler \u548cJ.Hoffmann\uff0c \u5173\u4e8e\u6d89\u53ca\u4efb\u610f\u4e00\u9636\u516c\u5f0f\u7684ADL\u8fd0\u7b97\u7b26\u7684\u5b9e\u4f8b\u5316 \uff0c\u5c06 \u57282000\u5e74 8\u6708\u4e8e\u5fb7\u56fd\u67cf\u6797*ECAI 2000\u4e3e\u884c\u7684\u89c4\u5212\uff0c\u65e5\u7a0b\u5b89\u6392\u548c\u8bbe\u8ba1\u65b0\u7ed3\u679c\u7814\u8ba8\u4f1a\uff08PuK2000\uff09\u4e0a\u53d1\u8868*\u3002 \uff08 gzip\u540e\u8bb0\u6587\u4ef6 \uff09\uff08 \u56f4\u515c\u6761\u76ee \uff09","title":"Planning Domain Definition Language"},{"location":"SolversBaseOnPDDL/GP_Numerical/LPG%EF%BC%88%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2%E8%A7%84%E5%88%92%E5%9B%BE%EF%BC%89/","text":"1. LPG\uff08\u672c\u5730\u641c\u7d22\u89c4\u5212\u56fe\uff09 \u00b6 https://lpg.unibs.it/lpg/ LPG\uff08\u672c\u5730\u641c\u7d22\u89c4\u5212\u56fe\uff09\u662f\u57fa\u4e8e\u672c\u5730\u641c\u7d22\u548c\u89c4\u5212\u56fe\u7684\u89c4\u5212\u5668\uff0c\u7528\u4e8e\u5904\u7406\u6d89\u53ca\u6570\u5b57\u91cf\u548c\u6301\u7eed\u65f6\u95f4\u7684PDDL2.1\u57df\u3002\u8be5\u7cfb\u7edf\u53ef\u4ee5\u89e3\u51b3\u8ba1\u5212\u751f\u6210\u548c\u8ba1\u5212\u8c03\u6574\u95ee\u9898\u3002LPG\u7684\u57fa\u672c\u641c\u7d22\u65b9\u6848\u53d7\u5230Walksat\uff08\u4e00\u79cd\u89e3\u51b3SAT\u95ee\u9898\u7684\u6709\u6548\u7a0b\u5e8f\uff09\u7684\u542f\u53d1\u3002LPG\u7684\u641c\u7d22\u7a7a\u95f4\u7531\u201c\u52a8\u4f5c\u56fe\u201d\u7ec4\u6210\uff0c\u89c4\u5212\u56fe\u7684\u7279\u5b9a\u5b50\u56fe\u8868\u793a\u90e8\u5206\u8ba1\u5212\u3002\u641c\u7d22\u6b65\u9aa4\u662f\u5c06\u52a8\u4f5c\u56fe\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u52a8\u4f5c\u56fe\u7684\u67d0\u4e9b\u56fe\u4fee\u6539\u3002 \u8bc4\u4f30\u529f\u80fd\u4f7f\u7528\u4e00\u4e9b\u8bd5\u63a2\u6cd5\u6765\u4f30\u8ba1\u5b9e\u73b0\uff08\u53ef\u80fd\u662f\u6570\u5b57\uff09\u524d\u63d0\u7684\u201c\u641c\u7d22\u6210\u672c\u201d\u548c\u201c\u6267\u884c\u6210\u672c\u201d\u3002\u52a8\u4f5c\u6301\u7eed\u65f6\u95f4\u548c\u6570\u503c\uff08\u4f8b\u5982\uff0c\u71c3\u6cb9\u6d88\u8017\uff09\u5728\u52a8\u4f5c\u56fe\u4e2d\u8868\u793a\uff0c\u5e76\u5728\u8bc4\u4f30\u51fd\u6570\u4e2d\u5efa\u6a21\u3002\u5728\u65f6\u57df\u4e2d\uff0c\u4f7f\u7528\u201c\u4f18\u5148\u56fe\u201d\u5bf9\u52a8\u4f5c\u8fdb\u884c\u6392\u5e8f\uff0c\u8be5\u201c\u4f18\u5148\u56fe\u201d\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff0c\u5e76\u8003\u8651\u4e86\u89c4\u5212\u56fe\u7684\u4e92\u65a5\u5173\u7cfb\u3002 \u8be5\u7cfb\u7edf\u53ef\u4ee5\u6839\u636e\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u51c6\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u8ba1\u5212\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u968f\u65f6\u751f\u6210\u4e00\u7cfb\u5217\u8ba1\u5212\u7684\u8fc7\u7a0b\u6765\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u8ba1\u5212\u5728\u8d28\u91cf\u4e0a\u90fd\u662f\u5bf9\u5148\u524d\u8ba1\u5212\u7684\u6539\u8fdb\u3002LPG\u4e0e\u7c7b\u4f3c\u4e8eFF\u4f7f\u7528\u7684\u6700\u4f73\u4f18\u5148\u7b97\u6cd5\u96c6\u6210\u5728\u4e00\u8d77\u3002\u5728\u6267\u884c\u4e00\u5b9a\u6570\u91cf\u7684\u641c\u7d22\u6b65\u9aa4\u5e76\u6267\u884c\u201c\u91cd\u65b0\u542f\u52a8\u201d\u540e\uff0c\u7cfb\u7edf\u53ef\u4ee5\u81ea\u52a8\u5207\u6362\u5230\u6700\u4f73\u4f18\u5148\u641c\u7d22\u3002\u6700\u540e\uff0cLPG\u53ef\u4ee5\u7528\u4f5c\u9884\u5904\u7406\u5668\u4ee5\u751f\u6210\u62df\u89e3\uff0c\u7136\u540e\u7531ADJ\u4fee\u590d\uff0cADJ\u662f\u4e00\u79cd\u7528\u4e8e\u5feb\u901f\u8ba1\u5212\u81ea\u9002\u5e94\u7684\u8ba1\u5212\u5206\u6790\u6280\u672f\u3002 vs code pddl \u63a8\u8350\u4f7f\u7528 https://github.com/jan-dolejsi/vscode-pddl/wiki/Configuring-the-PDDL-planner","title":"LPG"},{"location":"SolversBaseOnPDDL/GP_Numerical/LPG%EF%BC%88%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2%E8%A7%84%E5%88%92%E5%9B%BE%EF%BC%89/#1-lpg","text":"https://lpg.unibs.it/lpg/ LPG\uff08\u672c\u5730\u641c\u7d22\u89c4\u5212\u56fe\uff09\u662f\u57fa\u4e8e\u672c\u5730\u641c\u7d22\u548c\u89c4\u5212\u56fe\u7684\u89c4\u5212\u5668\uff0c\u7528\u4e8e\u5904\u7406\u6d89\u53ca\u6570\u5b57\u91cf\u548c\u6301\u7eed\u65f6\u95f4\u7684PDDL2.1\u57df\u3002\u8be5\u7cfb\u7edf\u53ef\u4ee5\u89e3\u51b3\u8ba1\u5212\u751f\u6210\u548c\u8ba1\u5212\u8c03\u6574\u95ee\u9898\u3002LPG\u7684\u57fa\u672c\u641c\u7d22\u65b9\u6848\u53d7\u5230Walksat\uff08\u4e00\u79cd\u89e3\u51b3SAT\u95ee\u9898\u7684\u6709\u6548\u7a0b\u5e8f\uff09\u7684\u542f\u53d1\u3002LPG\u7684\u641c\u7d22\u7a7a\u95f4\u7531\u201c\u52a8\u4f5c\u56fe\u201d\u7ec4\u6210\uff0c\u89c4\u5212\u56fe\u7684\u7279\u5b9a\u5b50\u56fe\u8868\u793a\u90e8\u5206\u8ba1\u5212\u3002\u641c\u7d22\u6b65\u9aa4\u662f\u5c06\u52a8\u4f5c\u56fe\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u52a8\u4f5c\u56fe\u7684\u67d0\u4e9b\u56fe\u4fee\u6539\u3002 \u8bc4\u4f30\u529f\u80fd\u4f7f\u7528\u4e00\u4e9b\u8bd5\u63a2\u6cd5\u6765\u4f30\u8ba1\u5b9e\u73b0\uff08\u53ef\u80fd\u662f\u6570\u5b57\uff09\u524d\u63d0\u7684\u201c\u641c\u7d22\u6210\u672c\u201d\u548c\u201c\u6267\u884c\u6210\u672c\u201d\u3002\u52a8\u4f5c\u6301\u7eed\u65f6\u95f4\u548c\u6570\u503c\uff08\u4f8b\u5982\uff0c\u71c3\u6cb9\u6d88\u8017\uff09\u5728\u52a8\u4f5c\u56fe\u4e2d\u8868\u793a\uff0c\u5e76\u5728\u8bc4\u4f30\u51fd\u6570\u4e2d\u5efa\u6a21\u3002\u5728\u65f6\u57df\u4e2d\uff0c\u4f7f\u7528\u201c\u4f18\u5148\u56fe\u201d\u5bf9\u52a8\u4f5c\u8fdb\u884c\u6392\u5e8f\uff0c\u8be5\u201c\u4f18\u5148\u56fe\u201d\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff0c\u5e76\u8003\u8651\u4e86\u89c4\u5212\u56fe\u7684\u4e92\u65a5\u5173\u7cfb\u3002 \u8be5\u7cfb\u7edf\u53ef\u4ee5\u6839\u636e\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u51c6\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u8ba1\u5212\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u968f\u65f6\u751f\u6210\u4e00\u7cfb\u5217\u8ba1\u5212\u7684\u8fc7\u7a0b\u6765\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u8ba1\u5212\u5728\u8d28\u91cf\u4e0a\u90fd\u662f\u5bf9\u5148\u524d\u8ba1\u5212\u7684\u6539\u8fdb\u3002LPG\u4e0e\u7c7b\u4f3c\u4e8eFF\u4f7f\u7528\u7684\u6700\u4f73\u4f18\u5148\u7b97\u6cd5\u96c6\u6210\u5728\u4e00\u8d77\u3002\u5728\u6267\u884c\u4e00\u5b9a\u6570\u91cf\u7684\u641c\u7d22\u6b65\u9aa4\u5e76\u6267\u884c\u201c\u91cd\u65b0\u542f\u52a8\u201d\u540e\uff0c\u7cfb\u7edf\u53ef\u4ee5\u81ea\u52a8\u5207\u6362\u5230\u6700\u4f73\u4f18\u5148\u641c\u7d22\u3002\u6700\u540e\uff0cLPG\u53ef\u4ee5\u7528\u4f5c\u9884\u5904\u7406\u5668\u4ee5\u751f\u6210\u62df\u89e3\uff0c\u7136\u540e\u7531ADJ\u4fee\u590d\uff0cADJ\u662f\u4e00\u79cd\u7528\u4e8e\u5feb\u901f\u8ba1\u5212\u81ea\u9002\u5e94\u7684\u8ba1\u5212\u5206\u6790\u6280\u672f\u3002 vs code pddl \u63a8\u8350\u4f7f\u7528 https://github.com/jan-dolejsi/vscode-pddl/wiki/Configuring-the-PDDL-planner","title":"1. LPG\uff08\u672c\u5730\u641c\u7d22\u89c4\u5212\u56fe\uff09"},{"location":"SolversBaseOnPDDL/GP_Numerical/PRP/","text":"PRP \u00b6 https://github.com/QuMuLab/planner-for-relevant-policies","title":"PRP"},{"location":"SolversBaseOnPDDL/GP_Numerical/PRP/#prp","text":"https://github.com/QuMuLab/planner-for-relevant-policies","title":"PRP"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_ReduceTo_GraphProblem/","text":"QN_GraphPlanner\u672c\u5730\u6587\u4ef6 Qualitative Number Problem input text file format: Q = < F,V,\u4e28,O,G > \u5176\u4e2d\uff1a \u72b6\u6001\u7f16\u7801S= =\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\u7684\u6570\u3002\u5982\uff1a\u72b6\u6001S16={f1,-f2,-f3,v1>0,v2>0}\u7f16\u7801\u4e3a\u4e8c\u8fdb\u523610000\u5373\u5341\u8fdb\u523616\u3002\u7ecf\u6b64\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u72ec\u7acbS= \u5747\u7f16\u7801\u4e3a\u6570\u5b57\u3002 F\uff1aBoolean proposition \\(f_1\\) ... \\(f_n\\) \\(-f_1\\) ... \\(-f_n\\) 1 1 1 0 0 0 V\uff1a \\(v_1>0\\) ... \\(v_m>0\\) \\(v_1=0\\) ... \\(v_m=0\\) 0 0 0 1 1 1 I\u8d77\u59cb\u72b6\u6001 G\u76ee\u6807\u72b6\u6001\u540c\u6837\u53ea\u662f\u4e00\u4e2a\u72b6\u6001\u7f16\u7801\u3002 O\u52a8\u4f5c\u96c6={a1,a2,a3,a4,...}\u5b9a\u4e49\u4e3a\uff1a\u5230\u6620\u5c04\uff0c\u7136\u540e\u5141\u8bb8\u7f3a\u7701\u503c\u81ea\u52a8\u679a\u4e3e\u72b6\u6001\uff0c\u6bd4\u5982\u653e\u4e0b\u77f3\u5934\u52a8\u4f5c\uff0c\u552f\u4e00\u7684\u76f4\u89c2\u5f62\u5f0f\u5316\u8868\u793a<-E\u975e\u7a7a\u624b,\u53d8\u6210E\u7a7a\u624b>\u52a8\u4f5c\u5bf9\u5e94\u7684\u72b6\u6001\u53d8\u8fc1 \u2192\u3002 \u6ce8\uff1aQNP\u95ee\u9898\u4e2d\u539f\u95ee\u9898\u7684\u4e00\u822c\u4f7f\u7528V={v1,v2,v3...}\u4f5c\u4e3a\u975e\u786e\u5b9a\u6027\u52a8\u4f5c \\(a_x\\) \u7684 if conditions\u6761\u4ef6\u5224\u65ad\u4f9d\u636e\uff0c\u51b3\u5b9a\u7740\u5f53\u524d\u72b6\u6001\u91c7\u53d6\u884c\u52a8 \\(a_x\\) \u7684\u540e\u7ee7\u5f71\u54cdeffects\u3002\u6bd4\u5982\u79ef\u6728\u4e16\u754c\u4e2d\uff0c\u786e\u5b9a\u6027\u52a8\u4f5cPick-above-x\u6361\u8d77\u6765x\u4e0a\u65b9\u79ef\u6728\uff0c\u53ea\u8981if (x\u4e0a\u65b9\u79ef\u6728\u6570\u91cfn-1 !=0)\u6267\u884c\u52a8\u4f5cPick-above-x\u540e\u7ee7\u72b6\u6001\u5c31\u662f\u201c-clear(x)\u975e\u7a7a\u201d;if (x\u4e0a\u65b9\u79ef\u6728\u6570\u91cfn-1 !=0)\u6267\u884c\u52a8\u4f5cPick-above-x\u540e\u7ee7\u72b6\u6001\u5c31\u662f\u201cclear(x)\u7a7a\u201d\u3002 \u5728\u672c\u7b97\u6cd5\u6c42\u89e3\u95ee\u9898\u7684\u65f6\u5019\uff0c\u5148\u8003\u8651relaxed problem\uff0c\u653e\u677e(\u52a8\u4f5c\u6267\u884c\u540eif condition\u6761\u4ef6\u5224\u65ad\u51b3\u5b9a\u540e\u7eed\u7ed3\u679ceffect\u7684)\u7ea6\u675f\uff0c\u76f4\u63a5\u6682\u65f6\u5148\u5047\u88c5\u52a8\u4f5c\u201cPick-above-x\u201d\u662f\u975e\u786e\u5b9a\u7684\uff0c\u6267\u884c\u540e\u65e2\u6709\u53ef\u80fdclear(x)\u4e5f\u6709\u53ef\u80fd-clear(x)\u3002\u7b49\u5230\u4f7f\u7528\u56fe\u8bba\u7b97\u6cd5\u627e\u5230\u4e00\u6761\u4ece \\(S_i\\) \u2192 \\(S_G\\) \u6709\u5411\u6709\u73af\u901a\u8def\u56fe \\(G_{Solution}\\) \u4e4b\u540e\uff0c\u518d\u6062\u590dif condition\u7684\u529f\u80fd,\u4ece\u751f\u6210\u552f\u4e00\u53ef\u6267\u884c\u7684\u52a8\u4f5c\u5e8f\u5217{a1,a1,a1,a2,a3,......}\u89e3\u3002 \u5148\u628a\u6807\u51c6QNP\u95ee\u9898reduce to\u7ecf\u5178\u6709\u5411\u56feDirected graph\u95ee\u9898G= : QNP\u4e2dS= (\u5305\u62ec\u6c7e,\u800c)\u6709\u9650\u72b6\u6001\u96c6reduce to\u56feG\u4e2d\u7684\u70b9\u96c6Nodes; QNP\u4e2d\u7684O\u52a8\u4f5c\u96c6\u5219reduce to\u56feG\u4e2d\u7684\u8282\u70b9\u4e4b\u95f4\u6709\u5411\u8fb9Edges\u3002 \u539f\u95ee\u9898QNP\u4ece\u6b64\u53d8\u6210\u4e00\u5f20\u6709\u5411\u6709\u73af\u56feG\u4e2d\uff0c\u627e\u5230\u4e00\u6761\u4ece \\(S_i\\) \u2192 \\(S_G\\) \u6709\u5411\u6709\u73af\u901a\u8def\u56fe \\(G_{Solution}\\) \u7684\u95ee\u9898\u3002 \u7b97\u6cd5\u7b2c\u4e00\u6b65\uff1a\u5229\u7528\u300a\u7cfb\u7edf\u5de5\u7a0b\u300b\u4e2d\u7684\u89e3\u6790\u7ed3\u6784\u6a21\u578b\u5316\u6280\u672fISM\u7b97\u6cd5\uff0c\u53bb\u9664\u5b64\u7acb\u8282\u70b9(\u7f3a\u7701\u503c\u81ea\u52a8\u679a\u4e3e\u7684\u201c\u4e0d\u53ef\u80fd\u53d1\u751f\u7684\u201d\u72b6\u6001)\uff0c\u548c\u4e0d\u5305\u542b \\(S_i,S_G\\) \u7684**\u6709\u5411\u6709\u73af\u5b50\u56fe** \\(G_{pruning}\\) ------\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u4ece \\(s_i\\) \u5f00\u59cb\u679a\u4e3e\u52a8\u4f5c\u96c6O\u7834\u5708\u641c\u7d22\u5230 \\(S_G\\) \u5462\uff1f\u611f\u89c9\u4e5f\u884c\uff0c\u7ed3\u679c\u5e94\u8be5\u662f\u4e00\u6837\u7684\u3002\u53cd\u6b63\u90fd\u662f\u5efa\u7acb\u4e00\u5f20 \\(G=<N,E>\\) \u56fe\uff0c\u89c9\u5f97\u5199\u6210\u77e9\u9635\u683c\u5f0f\u7684\u56fe\u7528ISM\u7b97\u6cd5\u5904\u7406\u8d77\u6765\u66f4\u65b9\u4fbf\u3002 \u7b97\u6cd5\u7b2c\u4e8c\u6b65\uff1a\u7834\u73af\uff0ctarjan\u7b49\u56fe\u8bba\u7b97\u6cd5\u627e\u5230SCC\uff0c\uff08\u53ef\u9006\u5730\uff09\u5408\u5e76SCC\u5f3a\u8fde\u901a\u5206\u91cf\u4e3a\u201c\u4e00\u4e2a\u4e2a\u865a\u62df\u8282\u70b9\u201d\uff0c\u539f\u56fe\u5408\u5e76\u540e\u53d8\u6210\u4e00\u5f20**\u6709\u5411\u65e0\u73af\u56fe** \\(G_{DirectedAcyclicGraph}\\) \u3002 \u7b97\u6cd5\u7b2c\u4e09\u6b65\uff1a\u9488\u5bf9\u6709\u5411\u65e0\u73af\u56fe \\(G_{DirectedAcyclicGraph}\\) \uff0c\u627e\u4e00\u6761\u4ece\u8282\u70b9\u5230\u7684\u8def\u5f84\u6709\u5f88\u591a\u7b97\u6cd5\u53ef\u4ee5\u5b9e\u73b0\uff0c\u53ef\u4ee5\u76f4\u63a5dijkstra\u627e\u5230\u4e00\u6761\u4ece \\(S_i\\) \u2192 \\(S_G\\) \u6709\u5411\u6709\u73af\u901a\u8def\u56fe \\(G_{HalfSolution}\\) \u3002 \u7b97\u6cd5\u7b2c\u56db\u6b65\uff1a\u5411\u6709\u73af\u901a\u8def\u56fe \\(G_{HalfSolution}\\) \u5e94\u7528\u7b2c\u4e8c\u6b65\u7684\u53ef\u9006\u5408\u5e76\u64cd\u4f5c\uff0c\u89e3\u9664SCC\u7684\u5408\u5e76(\u7b2c\u4e8c\u6b65\u8981\u8bb0\u5f55\u5165\u5ea6\u70b9\u548c\u51fa\u5ea6\u70b9\u4eec\uff0cSCC\u8fd8\u539f\u7684\u65f6\u5019\u8981\u7528)\uff0c\u5f97\u5230**\u6709\u5411\u6709\u73af\u901a\u8def\u56fe** \\(G_{Solution}\\) \u518d\u4ece\u653e\u677e\u7ea6\u675frelaxed problem\u6536\u7d27\uff0c\u53d8\u6210\u524d\u6587\u63d0\u5230\u7684\u201c\u542bif\u6761\u4ef6\u7684\u786e\u5b9a\u6027\u52a8\u4f5c\"\uff0c\u5e94\u7528V\u6570\u503c\u7684if\u6761\u4ef6condition\u5224\u65ad\u529f\u80fd,\u4ece\u56fe \\(G_{Solution}\\) \u751f\u6210\u552f\u4e00\u53ef\u6267\u884c\u7684Policy\uff1a \\(S_{F,V}\\rightarrow O_{actions}\\) ,\u53ef\u4ee5\u5bf9\u5e94\u52a8\u4f5c\u5e8f\u5217{a1,a1,a1,a2,a3,......}\u89e3\u3002","title":"QNP_ReduceTo_GraphProblem"},{"location":"SolversBaseOnPDDL/GP_Numerical/SGPlan6/","text":"SGPlan6 \u00b6 SGPlan6\u662f\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u6700\u65b0\u7814\u5236\u7684\u667a\u80fd\u89c4\u5212\u5668\uff0c\u5728\u7b2c5\u754c\u4e16\u754c\u89c4\u5212\u5927\u8d5b\u4e2d\u83b7\u5f97\u6b21\u4f18\u89c4\u5212\u5668\u51a0\u519b\uff0c\u4f7f\u7528Linux C++\u8bbe\u8ba1\uff0c\u9700\u501f\u52a9Flex\u548cBison\u5de5\u5177\u63d0\u4f9b\u5bf9PDDL\u7684\u7f16\u8bd1\u5668\u529f\u80fd\u3002 http://www.pudn.com/Download/item/id/2027508.html Sensory GraphPlan home site \u00b6 aiweb.cs.washington.edu/ai/sgp.html web.cs.wpi.edu/~nth/cs534/resources/SensoryGraphPlan/sgp/ 1998\u5e74\u7531Daniel S. Weld,Corin R. Anderson\u548cDavid E. Smith\u63d0\u51fa\u7684\u611f\u77e5\u56fe\u89c4\u5212(SGP)\u3002\u611f\u77e5\u56fe\u89c4\u5212\u7b97\u6cd5\u65e2\u6709\u4f18\u70b9\u4e5f\u6709\u7f3a\u70b9,\u5b83\u7684\u7f3a\u70b9\u6709\u7b97\u6cd5\u6bd4\u8f83\u590d\u6742,\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8;\u4e0d\u5177\u6709\u542f\u53d1\u5f0f\u641c\u7d22,\u641c\u7d22\u662f\u4ece\u521d\u59cb\u72b6\u6001\u51fa\u53d1,\u641c\u7d22\u53ef\u80fd\u4e3a\u771f\u7684\u6240\u6709\u547d\u9898,\u6548\u7387\u8f83\u4f4e;\u8fd9\u6837\u81f4\u4f7fSGP\u89c4\u5212\u5668\u7684\u6574\u4f53\u6027\u80fd\u5f88\u4f4e\u3002\u4e3a\u4e86\u514b\u670d\u611f\u77e5\u56fe\u89c4\u5212\u7684\u7f3a\u70b9,\u672c\u6587\u63d0\u51fa\u4e86\u57fa\u4e8e\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u611f\u77e5\u56fe\u89c4\u5212\u7b97\u6cd5\u3002\u300a\u4e00\u79cd\u57fa\u4e8e\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u611f\u77e5\u56fe\u89c4\u5212\u7b97\u6cd5\u7684\u7814\u7a76\u4e0e\u5b9e\u73b0\u300b\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u611f\u77e5\u56fe\u89c4\u5212\u7b97\u6cd5\u7684\u65b0\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u4e0e\u73b0\u6709\u7b97\u6cd5\u4e0d\u540c,\u91c7\u7528\u4e86FF\u4e2d\u4f7f\u7528\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u540c\u65f6\u91c7\u7eb3\u4e86FF\u4e2d\u4f7f\u7528\u7684\u653e\u677e\u52a8\u4f5c\u3002\u56e0\u6b64\u5728\u56fe\u6269\u5f20\u9636\u6bb5,\u4e0d\u7528\u5904\u7406\u4e92\u65a5\u5173\u7cfb,\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u6548\u7387\u3002\u672c\u6587\u63d0\u51fa\u7684\u65b9\u6cd5\u63d0\u9ad8\u4e86\u89c4\u5212\u5668\u7684\u6c42\u89e3\u80fd\u529b,\u5bf9\u7406\u8bba\u548c\u5b9e\u9645\u5e94\u7528\u90fd\u6709\u5f88\u5927\u7684\u4ef7\u503c\u3002","title":"SGPlan6"},{"location":"SolversBaseOnPDDL/GP_Numerical/SGPlan6/#sgplan6","text":"SGPlan6\u662f\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u6700\u65b0\u7814\u5236\u7684\u667a\u80fd\u89c4\u5212\u5668\uff0c\u5728\u7b2c5\u754c\u4e16\u754c\u89c4\u5212\u5927\u8d5b\u4e2d\u83b7\u5f97\u6b21\u4f18\u89c4\u5212\u5668\u51a0\u519b\uff0c\u4f7f\u7528Linux C++\u8bbe\u8ba1\uff0c\u9700\u501f\u52a9Flex\u548cBison\u5de5\u5177\u63d0\u4f9b\u5bf9PDDL\u7684\u7f16\u8bd1\u5668\u529f\u80fd\u3002 http://www.pudn.com/Download/item/id/2027508.html","title":"SGPlan6"},{"location":"SolversBaseOnPDDL/GP_Numerical/SGPlan6/#sensory-graphplan-home-site","text":"aiweb.cs.washington.edu/ai/sgp.html web.cs.wpi.edu/~nth/cs534/resources/SensoryGraphPlan/sgp/ 1998\u5e74\u7531Daniel S. Weld,Corin R. Anderson\u548cDavid E. Smith\u63d0\u51fa\u7684\u611f\u77e5\u56fe\u89c4\u5212(SGP)\u3002\u611f\u77e5\u56fe\u89c4\u5212\u7b97\u6cd5\u65e2\u6709\u4f18\u70b9\u4e5f\u6709\u7f3a\u70b9,\u5b83\u7684\u7f3a\u70b9\u6709\u7b97\u6cd5\u6bd4\u8f83\u590d\u6742,\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8;\u4e0d\u5177\u6709\u542f\u53d1\u5f0f\u641c\u7d22,\u641c\u7d22\u662f\u4ece\u521d\u59cb\u72b6\u6001\u51fa\u53d1,\u641c\u7d22\u53ef\u80fd\u4e3a\u771f\u7684\u6240\u6709\u547d\u9898,\u6548\u7387\u8f83\u4f4e;\u8fd9\u6837\u81f4\u4f7fSGP\u89c4\u5212\u5668\u7684\u6574\u4f53\u6027\u80fd\u5f88\u4f4e\u3002\u4e3a\u4e86\u514b\u670d\u611f\u77e5\u56fe\u89c4\u5212\u7684\u7f3a\u70b9,\u672c\u6587\u63d0\u51fa\u4e86\u57fa\u4e8e\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u611f\u77e5\u56fe\u89c4\u5212\u7b97\u6cd5\u3002\u300a\u4e00\u79cd\u57fa\u4e8e\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u611f\u77e5\u56fe\u89c4\u5212\u7b97\u6cd5\u7684\u7814\u7a76\u4e0e\u5b9e\u73b0\u300b\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u611f\u77e5\u56fe\u89c4\u5212\u7b97\u6cd5\u7684\u65b0\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u4e0e\u73b0\u6709\u7b97\u6cd5\u4e0d\u540c,\u91c7\u7528\u4e86FF\u4e2d\u4f7f\u7528\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u540c\u65f6\u91c7\u7eb3\u4e86FF\u4e2d\u4f7f\u7528\u7684\u653e\u677e\u52a8\u4f5c\u3002\u56e0\u6b64\u5728\u56fe\u6269\u5f20\u9636\u6bb5,\u4e0d\u7528\u5904\u7406\u4e92\u65a5\u5173\u7cfb,\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u6548\u7387\u3002\u672c\u6587\u63d0\u51fa\u7684\u65b9\u6cd5\u63d0\u9ad8\u4e86\u89c4\u5212\u5668\u7684\u6c42\u89e3\u80fd\u529b,\u5bf9\u7406\u8bba\u548c\u5b9e\u9645\u5e94\u7528\u90fd\u6709\u5f88\u5927\u7684\u4ef7\u503c\u3002","title":"Sensory GraphPlan home site"},{"location":"SolversBaseOnPDDL/GP_Numerical/grahPlan/","text":"grahPlan \u00b6 http://www.ai.mit.edu/courses/16.412J/Graphplan.html Graphplan\u662f\u4e00\u79cd\u57fa\u4e8e\u8ba1\u5212\u56fe\u6982\u5ff5\u7684\u8ba1\u5212\u7b97\u6cd5\u3002\u8ba1\u5212\u56fe\u8868\u793a\u57fa\u4e8e\u5f53\u524d\u7ea7\u522b\u7684\u53ef\u884c\u7b97\u5b50\u7684\u5e94\u7528\u5728\u5c06\u6765\u7ea7\u522b\u4e2d\u53ef\u4ee5\u5b9e\u73b0\u7684\u4e8b\u5b9e\u3002\u7b2c\u4e00\u7ea7\u4ee3\u8868\u521d\u59cb\u72b6\u6001\uff0c\u6700\u540e\u4e00\u7ea7\u5305\u542b\u51fa\u73b0\u5728\u76ee\u6807\u72b6\u6001\u4e2d\u7684\u6240\u6709\u4e8b\u5b9e\uff08\u4ee5\u53ca\u53ef\u80fd\u7684\u8bb8\u591a\u5176\u4ed6\u4e8b\u5b9e\uff09\u3002\u4e8b\u5b9e\u548c\u64cd\u4f5c\u5458\u4e4b\u95f4\u7684\u4e92\u65a5\u5173\u7cfb\u5728\u8ba1\u5212\u56fe\u7684\u6bcf\u4e2a\u7ea7\u522b\u4e0a\u90fd\u5f97\u5230\u7ef4\u62a4\u3002\u751f\u6210\u8ba1\u5212\u56fe\u540e\uff0cGraphplan\u4ece\u76ee\u6807\uff08\u6700\u540e\uff09\u7ea7\u522b\u5411\u540e\u641c\u7d22\u4ee5\u751f\u6210\u53ef\u884c\u7684\u8ba1\u5212\u3002 \u6b64\u5904\u63d0\u4f9b\u4e86\u6e90\u4ee3\u7801\u4ee5\u53ca\u6709\u5173\u6784\u5efa\u548c\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8bf4\u660e\u3002\u6e90\u4ee3\u7801\u5728C\u4e2d\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2aMakefile\u3002\u6784\u5efa\u548c\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u5e94\u8be5\u5728\u4efb\u4f55\u4f7f\u7528C\u7684Unix\u7cfb\u7edf\u4e0a\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u793a\u4f8b\u95ee\u9898\uff08\u4e8b\u5b9e\u548c\u64cd\u4f5c\u5458\u6587\u4ef6\uff09\u4e5f\u5305\u62ec\u5728\u5185\u3002 \u53ef\u4ee5\u5728 Graphplan\u4e3b\u9875 \u4e0a\u627e\u5230\u6709\u5173Graphplan\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f \u3002\u51fa\u8272\u7684\u53c2\u8003\u8bba\u6587\u662f\uff1a A. Blum\uff0cM. Furst\uff0c\u201c\u901a\u8fc7\u89c4\u5212\u56fe\u5206\u6790\u8fdb\u884c\u5feb\u901f\u89c4\u5212\u201d \uff0c\u300a \u4eba\u5de5\u667a\u80fd \u300b \uff0c90\uff1a281--300\uff081997\uff09\u3002\u8fd9\u662f\u63cf\u8ff0\u7b97\u6cd5\u53ca\u5176\u5b9e\u73b0\u7684\u539f\u59cb\u8bba\u6587\u3002 (PDF) NGP: Numerical Graph Planning. https://fai.cs.uni-saarland.de/hoffmann/metric-ff.html#:~:text=Extending%20FF%20to%20Numerical%20State%20Variables%2C%20in%3A%20Proceedings,as%20used%20in%20the%203rd%20International%20Planning%20Competition .","title":"grahPlan"},{"location":"SolversBaseOnPDDL/GP_Numerical/grahPlan/#grahplan","text":"http://www.ai.mit.edu/courses/16.412J/Graphplan.html Graphplan\u662f\u4e00\u79cd\u57fa\u4e8e\u8ba1\u5212\u56fe\u6982\u5ff5\u7684\u8ba1\u5212\u7b97\u6cd5\u3002\u8ba1\u5212\u56fe\u8868\u793a\u57fa\u4e8e\u5f53\u524d\u7ea7\u522b\u7684\u53ef\u884c\u7b97\u5b50\u7684\u5e94\u7528\u5728\u5c06\u6765\u7ea7\u522b\u4e2d\u53ef\u4ee5\u5b9e\u73b0\u7684\u4e8b\u5b9e\u3002\u7b2c\u4e00\u7ea7\u4ee3\u8868\u521d\u59cb\u72b6\u6001\uff0c\u6700\u540e\u4e00\u7ea7\u5305\u542b\u51fa\u73b0\u5728\u76ee\u6807\u72b6\u6001\u4e2d\u7684\u6240\u6709\u4e8b\u5b9e\uff08\u4ee5\u53ca\u53ef\u80fd\u7684\u8bb8\u591a\u5176\u4ed6\u4e8b\u5b9e\uff09\u3002\u4e8b\u5b9e\u548c\u64cd\u4f5c\u5458\u4e4b\u95f4\u7684\u4e92\u65a5\u5173\u7cfb\u5728\u8ba1\u5212\u56fe\u7684\u6bcf\u4e2a\u7ea7\u522b\u4e0a\u90fd\u5f97\u5230\u7ef4\u62a4\u3002\u751f\u6210\u8ba1\u5212\u56fe\u540e\uff0cGraphplan\u4ece\u76ee\u6807\uff08\u6700\u540e\uff09\u7ea7\u522b\u5411\u540e\u641c\u7d22\u4ee5\u751f\u6210\u53ef\u884c\u7684\u8ba1\u5212\u3002 \u6b64\u5904\u63d0\u4f9b\u4e86\u6e90\u4ee3\u7801\u4ee5\u53ca\u6709\u5173\u6784\u5efa\u548c\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8bf4\u660e\u3002\u6e90\u4ee3\u7801\u5728C\u4e2d\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2aMakefile\u3002\u6784\u5efa\u548c\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u5e94\u8be5\u5728\u4efb\u4f55\u4f7f\u7528C\u7684Unix\u7cfb\u7edf\u4e0a\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u793a\u4f8b\u95ee\u9898\uff08\u4e8b\u5b9e\u548c\u64cd\u4f5c\u5458\u6587\u4ef6\uff09\u4e5f\u5305\u62ec\u5728\u5185\u3002 \u53ef\u4ee5\u5728 Graphplan\u4e3b\u9875 \u4e0a\u627e\u5230\u6709\u5173Graphplan\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f \u3002\u51fa\u8272\u7684\u53c2\u8003\u8bba\u6587\u662f\uff1a A. Blum\uff0cM. Furst\uff0c\u201c\u901a\u8fc7\u89c4\u5212\u56fe\u5206\u6790\u8fdb\u884c\u5feb\u901f\u89c4\u5212\u201d \uff0c\u300a \u4eba\u5de5\u667a\u80fd \u300b \uff0c90\uff1a281--300\uff081997\uff09\u3002\u8fd9\u662f\u63cf\u8ff0\u7b97\u6cd5\u53ca\u5176\u5b9e\u73b0\u7684\u539f\u59cb\u8bba\u6587\u3002 (PDF) NGP: Numerical Graph Planning. https://fai.cs.uni-saarland.de/hoffmann/metric-ff.html#:~:text=Extending%20FF%20to%20Numerical%20State%20Variables%2C%20in%3A%20Proceedings,as%20used%20in%20the%203rd%20International%20Planning%20Competition .","title":"grahPlan"},{"location":"SolversBaseOnPDDL/GP_Numerical/myND/","text":"follow\u4f5c\u8005\u4e00\u4e0b\u5148 https://github.com/robertmattmueller myND \u00b6 JRE 1.6 java https://github.com/robertmattmueller/myND/blob/master/README.rst https://github.com/robertmattmueller/myND \u62a5\u9519 $ ./build ./main/java/javabdd/BDDFactory.java:40: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (AccessControlException _) { ^ ./main/java/javabdd/BDDFactory.java:88: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (ClassNotFoundException _) { ^ ./main/java/javabdd/BDDFactory.java:89: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (NoSuchMethodException _) { ^ ./main/java/javabdd/BDDFactory.java:90: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IllegalAccessException _) { ^ ./main/java/javabdd/BDDFactory.java:91: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (InvocationTargetException _) { ^ ./main/java/javabdd/BDDFactory.java:565: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./main/java/javabdd/BDDFactory.java:735: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./main/java/javabdd/FindBestOrder.java:213: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./main/java/javabdd/TryVarOrder.java:71: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./net/sf/javabdd/BDDFactory.java:40: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (AccessControlException _) { ^ ./net/sf/javabdd/BDDFactory.java:88: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (ClassNotFoundException _) { ^ ./net/sf/javabdd/BDDFactory.java:89: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (NoSuchMethodException _) { ^ ./net/sf/javabdd/BDDFactory.java:90: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IllegalAccessException _) { ^ ./net/sf/javabdd/BDDFactory.java:91: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (InvocationTargetException _) { ^ ./net/sf/javabdd/BDDFactory.java:565: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./net/sf/javabdd/BDDFactory.java:735: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./net/sf/javabdd/FindBestOrder.java:213: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./net/sf/javabdd/TryVarOrder.java:71: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ https://www.javatpoint.com/java-9-underscore-keyword \u5728Java\u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u4e0b\u5212\u7ebf\u53ef\u4ee5\u7528\u4f5c\u6807\u8bc6\u7b26\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u53d8\u91cf\u540d\u3002\u4f46\u662f\u5728Java 9\u53d1\u884c\u7248\u4e2d\uff0c\u4e0b\u5212\u7ebf\u662f\u5173\u952e\u5b57\uff0c\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\u6216\u53d8\u91cf\u540d\u3002 \u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e0b\u5212\u7ebf\u5b57\u7b26\uff08\u201c _\u201d\uff09\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u5219\u65e0\u6cd5\u518d\u7f16\u8bd1\u6211\u4eec\u7684\u6e90\u4ee3\u7801 Gamer \u00b6 while we obtained Gamer from the authors of MyND. sdac-compiler \u00b6 https://github.com/robertmattmueller/sdac-compiler EVMDD Library for Python (pyevmdd) \u00b6 EVMDD Library for Python (pyevmdd)","title":"myND"},{"location":"SolversBaseOnPDDL/GP_Numerical/myND/#mynd","text":"JRE 1.6 java https://github.com/robertmattmueller/myND/blob/master/README.rst https://github.com/robertmattmueller/myND \u62a5\u9519 $ ./build ./main/java/javabdd/BDDFactory.java:40: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (AccessControlException _) { ^ ./main/java/javabdd/BDDFactory.java:88: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (ClassNotFoundException _) { ^ ./main/java/javabdd/BDDFactory.java:89: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (NoSuchMethodException _) { ^ ./main/java/javabdd/BDDFactory.java:90: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IllegalAccessException _) { ^ ./main/java/javabdd/BDDFactory.java:91: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (InvocationTargetException _) { ^ ./main/java/javabdd/BDDFactory.java:565: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./main/java/javabdd/BDDFactory.java:735: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./main/java/javabdd/FindBestOrder.java:213: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./main/java/javabdd/TryVarOrder.java:71: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./net/sf/javabdd/BDDFactory.java:40: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (AccessControlException _) { ^ ./net/sf/javabdd/BDDFactory.java:88: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (ClassNotFoundException _) { ^ ./net/sf/javabdd/BDDFactory.java:89: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (NoSuchMethodException _) { ^ ./net/sf/javabdd/BDDFactory.java:90: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IllegalAccessException _) { ^ ./net/sf/javabdd/BDDFactory.java:91: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (InvocationTargetException _) { ^ ./net/sf/javabdd/BDDFactory.java:565: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./net/sf/javabdd/BDDFactory.java:735: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./net/sf/javabdd/FindBestOrder.java:213: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ ./net/sf/javabdd/TryVarOrder.java:71: error: as of release 9, '_' is a keyword, and may not be used as an identifier } catch (IOException _) { ^ https://www.javatpoint.com/java-9-underscore-keyword \u5728Java\u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u4e0b\u5212\u7ebf\u53ef\u4ee5\u7528\u4f5c\u6807\u8bc6\u7b26\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u53d8\u91cf\u540d\u3002\u4f46\u662f\u5728Java 9\u53d1\u884c\u7248\u4e2d\uff0c\u4e0b\u5212\u7ebf\u662f\u5173\u952e\u5b57\uff0c\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\u6216\u53d8\u91cf\u540d\u3002 \u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e0b\u5212\u7ebf\u5b57\u7b26\uff08\u201c _\u201d\uff09\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u5219\u65e0\u6cd5\u518d\u7f16\u8bd1\u6211\u4eec\u7684\u6e90\u4ee3\u7801","title":"myND"},{"location":"SolversBaseOnPDDL/GP_Numerical/myND/#gamer","text":"while we obtained Gamer from the authors of MyND.","title":"Gamer"},{"location":"SolversBaseOnPDDL/GP_Numerical/myND/#sdac-compiler","text":"https://github.com/robertmattmueller/sdac-compiler","title":"sdac-compiler"},{"location":"SolversBaseOnPDDL/GP_Numerical/myND/#evmdd-library-for-python-pyevmdd","text":"EVMDD Library for Python (pyevmdd)","title":"EVMDD Library for Python (pyevmdd)"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/","text":"QNP\u56fe\u89e3 \u4e00\u4e2a\u53d8\u91cf \u4e24\u4e2a\u53d8\u91cf QNP\u95ee\u9898\u5f62\u5f0f\u5316 states Actions: \u201c\u5355\u4e00\u72b6\u6001\u94fe\u7b49\u6548\u201d---\u5f03 solution\u56fe\u89e3 \u77e9\u9635\u5bf9\u89d2\u51431-1\uff0c\u5f3a\u8054\u901a\u5173\u7cfb\u7684\u7b49\u6548\u7ed3\u70b9-\u5f3a\u8fde\u901a\u7b49\u6548 ISM\u6cd5boolen-matrix Gripper **\u91cd\u70b9\u662f\u6709\u73af\u7684\u6709\u5411\u56fe-->DGA**\u7b97\u6cd5\uff1a \u8bbe\u8ba1deisgn \u8f93\u5165 \u7c7b\u56fe\u8bbe\u8ba1 \u8bc1\u660e\u201c\u7a0b\u5e8f\u7ec8\u6b62\u6027\u201d \u8f93\u51fa \u5173\u952e\u4ee3\u7801\u548c\u5b9e\u73b0demo demo\u5c01\u88c5Packages \u53c2\u80032-SAT\u95ee\u9898\u6c42\u89e3\u7b97\u6cd5 QNP\u56fe\u89e3 \u00b6 \u4e00\u4e2a\u53d8\u91cf \u00b6 \u79ef\u6728\u4e16\u754c \u4e24\u4e2a\u53d8\u91cf \u00b6 \u79ef\u6728\u4e16\u754c\u63a5\u9f99\u7248 \u6587\u4e2d\u8fd9\u6837\u7684\u89e3\u6cd5\u7684\u56fe\u6211\u611f\u89c9\u662f\u4e0d\u5408\u9002\u7684\uff1a \u611f\u89c9\u4e0d\u4e00\u5b9a\u6e05\u7406\u5b8cX\u4e0a\u7684n\u4e2a\u79ef\u6728\uff0c\u518d\u8bf7\u5f00y\u4e0a\u7684m\u4e2a\u79ef\u6728\uff0c \u4e5f\u53ef\u80fd\u662f\u5148y\u540ex **\u66f4\u53ef\u80fd\u6c42\u89e3\u7684\u56fe**\u5e94\u8be5\u662f\u50cf\u4e0b\u9762\u8fd9\u6837x\uff0cy\u6df7\u5408\u7740\u6765\uff1a QNP\u95ee\u9898\u5f62\u5f0f\u5316 \u00b6 QNP\u95ee\u9898\u5f62\u5f0f\u5316\u4e3a\uff1a \\(Q = < F,V,I,O,G >\\) \\(F = \\{ E\u7a7a\u624b,X\u624b\u6301\u79ef\u6728'x',D \u8fbe\u6210\u76ee\u6807\u79ef\u6728'x'\u653e\u5728\u79ef\u6728'y'\u4e0a\u65b9\\}\\) \\(V = {\u79ef\u6728'x'\u4e0a\u65b9\u6709n\u5757\u79ef\u6728,\u79ef\u6728'y'\u4e0a\u65b9\u6709\u975e\u8d1f\u6574\u6570m\u5757\u79ef\u6728}\\) \u6ce8\uff1a\u6211\u8ba4\u4e3a\u5c31\u7b97\u662f\u5c0f\u6570n,m,\u6bd4\u5982\u6676\u5706\u5806\u53e0\u5236\u9020\uff0c\u53ea\u8981\u662f\u53ef\u5b9a\u4e49\u5355\u4f4d\u6570\u91cf\u79bb\u6563\u4e8b\u4ef6\uff0c\u5c31\u80fd\u591f\u901a\u8fc7GCD(n,m)\uff0c\u7136\u540e\u628an'=n/GCD,m'=m/GCD\u53d8\u6210\u6574\u6570\u5355\u4f4d\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u8003\u8651\u6574\u6570n,m\u3002 states \u00b6 \\(Init = S_{16}:(E,\\overline{X},\\overline{D},n>0,m>0)\\) \\(Goal = S_{22}(E,\\overline{X},D,n=0,m>0)\\) \u6bcf\u4e2a\u72b6\u6001\u90fd \\(S=F+V=f_1,f_2,...,f_f+v_1,v_2,...,v_v\\) \u7ec4\u6210\uff0c \u65b9\u4fbf\u53ef\u7528\u72b6\u6001\u7684\u679a\u4e3e\u8fc7\u7a0b\u505a\u5230\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u5e76\u4e14\u540e\u7eed\u753b\u56fe\u7b80\u4fbf: \u7ea6\u5b9a\u4e00\u79cd\"\u72b6\u6001s \u2192 interger\u6574\u6570 \\(\\in \\{0,1,2, ... ,2^{f+v}-1\\}\\) \"\u7684\u6620\u5c04\u65b9\u5f0f---\u72b6\u6001\u7801\u3002 \u95ed\u7740\u773c\u775b\u679a\u4e3e\u7684\u8bdd\uff0c\u6709 \\(2^n*2^n\\) \u72b6\u6001\u5173\u7cfb\u53ef\u8fbe\u77e9\u9635M\uff0c\u5176\u4e2d\uff0c\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff1a\u5f53\u72b6\u6001\u7ed3\u70b9 \\(S_i\\) \u7684\u884c\u5217\u90fd\u5168\u4e3a\u96f6\uff0c\u8fd9\u662f\u5b64\u7acb\u8282\u70b9\u6216\u8005\u8bf4\u662f\u56fe\uff0c\u53ef\u4ee5\u5220\u51cf\u6389\u8fd9\u4e9b\u6ca1\u6709\u7528\u7684\u72b6\u6001\u8282\u70b9\u3002 \u7a7a\u624b \u624b\u6301X Goal X\u4e0an Y\u4e0am \u72b6\u6001\u7f16\u7801 E X D n=0 m=0 \\(11111_B = 31_H\\) \\(\\overline{E}\\) \\(\\overline{X}\\) \\(\\overline{D}\\) n>0 m>0 \\(00000_B = 0_H\\) Actions: \u00b6 Pick-above-x = hE,\u00acX,\u00acD,n>0,m>0;\u00acE,n\u2193i to pick the topmost block that is above x, \\(a_1\\) ,Pick-above-x\u6361\u8d77\u6765x\u4e0a\u65b9\u79ef\u6728: graph LR; \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0(\u00acE,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2(\u00acE,\u00acX,\u00acD,n=0,m>0) ; \u3000\u3000S17(E,\u00acX,\u00acD,n>0,m=0) -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1(\u00acE,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S17(E,\u00acX,\u00acD,n>0,m=0) -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3(\u00acE,\u00acX,\u00acD,n=0,m=0); \\(a_2\\) \uff0cPick-above-y\u6361\u8d77\u6765y\u4e0a\u65b9\u79ef\u6728: Pick-above-y = hE,\u00acX,\u00acD,n=0,m>0;\u00acE,m\u2193i to pick the topmost block that is above x, graph LR; \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0(\u00acE,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S18(E,\u00acX,\u00acD,n=0,m>0) -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2(\u00acE,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S18(E,\u00acX,\u00acD,n=0,m>0) -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3(\u00acE,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1(\u00acE,\u00acX,\u00acD,n>0,m=0) ; \\(a_3\\) \uff0cput-aside\u79ef\u6728(\u4e0d\u5305\u62ecx\uff0c\u624b\u6301x\u653e\u4e00\u8fb9\u53eb\u505aput-x-aside\u662f\u4e0b\u9762\u8ba8\u8bba\u7684\u4e00\u4e2a\u52a8\u4f5c)\u653e\u4e00\u8fb9\u5230\u684c\u9762Table: Putaside-1 = h\u00acE,\u00acX,\u00acD,n=0;Ei to put aside (not above x or y) the block being held, Putaside-2 = h\u00acE,\u00acX,\u00acD,n>0,m>0;Ei to put aside (not above x or y) the block being held, graph LR; \u3000\u3000S0(\u00acE,\u00acX,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S16(E,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S2(\u00acE,\u00acX,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S18(E,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S1(\u00acE,\u00acX,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S17(E,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S3(\u00acE,\u00acX,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S19(E,\u00acX,\u00acD,n=0,m=0); \\(a_4\\) \uff0cpick-x\uff0c\u62ff\u8d77\u6765x\u77f3\u5934\uff0c \u5173\u952e\u52a8\u4f5c \uff0cpre\u4e00\u5bf9\u4e00\u6620\u5c04effect\u7684\u884c\u4e3a\uff0c \u53ef\u4ee5\u5408\u5e76 ** \\(\\bf{g^{...}}\\) \u2192...\u2192g'\u2192G**\u72b6\u6001\u94fe \u8868\u793a\u4e3a \\(g^{...}\\) \u72b6\u6001,\u76ee\u6807\u72b6\u6001G\u7684\u201c\u7b49\u4ef7\u6001s\u201d\uff0c\u51cf\u5c11\u72b6\u6001\u6570\uff0c\u65b9\u4fbf\u4e0d\u5fc5\u8981\u7684\u6392\u5e8f\u3002 Pick-x = hE,\u00acX,\u00acD,n=0,m=0;\u00acE,Xi to pick block x, graph LR; \u3000\u3000S19(E,\u00acX,\u00acD,n=0,m=0) -->|\u62ffx\u79ef\u6728| S11(E,\u00acX,\u00acD,n=0,m=0); \u201c\u5355\u4e00\u72b6\u6001\u94fe\u7b49\u6548\u201d---\u5f03 \u00b6 \u7b97\u6cd5\u539f\u7406\uff1a\u77e9\u9635A\u7ed3\u70b9\u884c\u5217\u5404\u53ea\u6709\u4e00\u4e2a\u4e14\u4e0d\u76f8\u7b49\uff0c\u56e0\u4e3a\u63d0\u9ad8\u590d\u6742\u5ea6\u800c\u4e14\u4e0d\u53bb\u6389\u4e5f\u884c\uff0c\u5728\u8fd9\u6700\u540e\u5408\u5e76\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u9012\u5f52\u6df1\u5ea6\uff0c\u6ca1\u5fc5\u8981\u592a\u6df1\u7684\u5c01\u88c5\uff0c\u6700\u65b0\u66f4\u65b0\uff0c\u8fd9\u662f\u591a\u4f59\u7684\u60f3\u6cd5\u3002 \u6700\u540e\u51b3\u5b9a\u820d\u5f03\u8fd9\u4e2a\u7b49\u6548\uff0c\u4e0d\u9002\u7528 \u540c\u7406\uff0c\u4e0d\u4ec5\u6709\u7ec8\u6b62\u7b49\u4ef7\u6001\uff0c\u8fc7\u7a0b\u4e2d,\u4e5f\u628a\u4e00\u5bf9\u4e00\u6620\u5c04\u7684\u5355\u4e00\u72b6\u6001\u94fe\uff0c\u7b49\u4ef7\u6807\u8bc6\u4e3a \\(S_{\u72b6\u6001\u94fe\u4e2d\u6700\u65e9\uff08\u5de6\uff09\u7684\u72b6\u6001}'\\) \u6bd4\u5982\uff1a \\(S_3 -->S_{19} --> S_{11} --> S_{21}\\) graph LR; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u6807\u8bc6\u4e3a \\(S_3'\\) graph LR; \u3000\u3000S3'; \\(a_5\\) \uff0cput-x-on-y,\u628a\u624b\u4e2d\u7684x\u653e\u5728y\u4e0a\u65b9\uff1a Put-x-on-y = h\u00acE,X,\u00acD,n=0,m=0;E,\u00acX,D,m\u2191i to put x on y. graph LR; \u3000\u3000S11(E,\u00acX,\u00acD,n=0,m=0) -->|\u628ax\u653e\u5728y\u4e0a| S22(E,\u00acX,D,n=0,m>0); \\(a_6\\) ,put-x-aside,\u5efa\u8bae\u522b\u5b9a\u4e49\u8fd9\u52a8\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5371\u9669\uff08\u6beb\u65e0\u610f\u4e49\u800c\u4e14\u591a\u4f59\uff09\u7684\u52a8\u4f5c\uff0c\u56e0\u4e3a\u6ca1\u6709\u5b9a\u4e49pick-block-from-table\uff0c\u5982\u679cx\u653e\u684c\u9762\u62ff\u4e0d\u8d77\u6765\u4efb\u52a1\u5931\u8d25\uff0c\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u526a\u679d\u7684\u5931\u8d25\u8def\u5f84\u3002\u4f46\u662f\u5728\u5bf9\u95ee\u9898\u5206\u6790\u4e0d\u591f\u6e05\u695a\u7684\u65f6\u5019\uff0c\u6709\u53ef\u80fd\u4f20\u8fdb\u53bb\u8fd9\u79cd\u9519\u7684\u3002 Put-x-aside = h\u00acE,X,\u00acD,n=0,m>0;E,\u00acXi to put block x aside (not above y), and graph LR; \u3000\u3000S11(E,\u00acX,\u00acD,n=0,m=0) -->|put_x_aside| S19(E,\u00acX,\u00acD,n=0,m=0); \uff081\uff09\u5982\u679c\u4e0d\u5141\u8bb8put-x-aside\u884c\u4e3a\uff1a graph LR; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u6216\u8005\u628apick-x\u4e0d\u7406\u89e3\u4e3a\u201c\u4ecex\u6240\u5728tower\u53d6\u51fa\u6765x\u201d(\u673a\u68b0\u81c2\u5b9a\u70b9\u4e24\u4e2atower\u53d6\u4ef6)\uff0c\u800c\u662f\u7406\u89e3\u4e3a\u201cpick-x\u53ef\u4ee5\u81ea\u52a8\u68c0\u7d22table\u4e2dx\u7684\u4f4d\u7f6e\uff0c\u54ea\u6015x\u5728tower\u4e0a\u4f46\u662fx\u4e0a\u65b9\u6ca1\u6709\u79ef\u6728\uff0c\u7136\u540e\u81ea\u52a8\u6293\u53d6x\u201d\u3002\u5c31\u4f1a\u9677\u5165\u4e00\u79cd \\(a_6\\) \u653ex\u7136\u540e \\(a_4\\) \u6293\u8d77\u6765x\u7684\u65e0\u610f\u4e49\u5faa\u73af\u4e2d\uff0c\u5f53\u7136\u4e0d\u5b9a\u4e49\u8fd9\u6b65\u4e0d\u5c31\u884c\u4e86\u5417\uff08\u5f53\u95ee\u9898\u5206\u6790\u8db3\u591f\u6e05\u695a\uff09\uff1f \u6211\u4eec\u5e0c\u671b\u5f53\u95ee\u9898\u5206\u6790\u4e0d\u6e05\u695a\uff0c\u5047\u5982\u5b9a\u4e49\u4e86\u8fd9\u6b65 \\(a_6\\) \uff0c\u4e5f\u80fd\u6c42\u89e3\u7684\u65f6\u5019\u907f\u5f00 \u901a\u5f80Error\u7684\u5931\u8d25Plan\u3002 \uff082\uff09\u5982\u679c\u5141\u8bb8put-x-aside\u884c\u4e3a\uff1a graph LR; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u53ea\u8981\u5bf9\u95ee\u9898\u601d\u8003\u8db3\u591f\u6e05\u6670\uff0c\u5582\u8fdb\u53bb\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u51fa\u73b0\u6709put-x-aside\u8fd9\u4e2a\u60c5\u51b5\uff0c\u95ee\u9898\u662f\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u7684action\u4e0d\u662f \u5168\u5c40\u552f\u4e00\u6807\u8bc6\u72b6\u6001\u7801\u7684precondition-->\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u72b6\u6001\u7801\u7684effect \u8fd9\u4e48\u6e05\u6670\u7684\uff0c\u6240\u4ee5\u6709\u51e0\u4e2a\u95ee\u9898\uff1a \u6709\u53ef\u80fd\u51fa\u73b0\u5197\u4f59\u7684action\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u95ee\u9898\uff0c\u96be\u4ee5\u76f4\u63a5\u4e00\u5f00\u59cb\u8f93\u5165\u5c31\u628a\u95ee\u9898\u63cf\u8ff0\u5f88\u6e05\u6670\uff0c\u786e\u5b9a\u6240\u6709\u6709\u53ef\u80fd\u8fbe\u5230\u7684\u72b6\u6001\u603b\u6570\uff0c\u6bd4\u5982\u653e\u4e0b\u77f3\u5934\uff0c\u552f\u4e00\u7684\u76f4\u89c2\u5f62\u5f0f\u5316\u8868\u793a< \\(\\overline{E},E\\) >,\u5176\u5b9e\u5bf9\u5e94\u7684\u72b6\u6001\u6709\uff1a graph LR; \u3000\u3000S_(\u00acE,_,_,_,_) -->|put-aside| S__(E,_,_,_,_); \u7b80\u5355\u6765\u8bf4\uff0c_\u7f3a\u7701\u503c\u4e5f\u662fQNPSAT\u65b9\u6cd5\u4e2d\uff0c\u628a\u5728r\u6b65\u4ee5\u5185\u201d \\(S_0,S_G,S_1,...,S_{r-2}\\) \u201c\u72b6\u6001\u503c\u7edf\u7edf\u679a\u4e3e\uff0c\u5582\u8fdb\u53bb\u751f\u6210\u201d\u539f\u5b50\u547d\u9898\u201c\u7684\u539f\u56e0\u3002 \u6839\u636e\u8fd9\u4e2a\u8868\u683c\uff0c\u76f4\u63a5\u679a\u4e3e\u7684\u8bdd\uff1a \u7a7a\u624b \u624b\u6301X Goal X\u4e0an Y\u4e0am \u72b6\u6001\u7f16\u7801 E X D n>0 m>0 \\(11111_B = 31_H\\) \\(\\overline{E}\\) \\(\\overline{X}\\) \\(\\overline{D}\\) n=0 m=0 \\(00000_B = 0_H\\) \u95ed\u7740\u773c\u775b\u679a\u4e3e\u7684\u8bdd\uff0c graph LR; \u3000\u3000S12(\u00acE,X,D,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S28(E,X,D,n>0,m>0); \u3000\u3000S14(\u00acE,X,D,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S30(E,X,D,n=0,m>0); \u3000\u3000S13(\u00acE,X,D,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S29(E,X,D,n>0,m=0); \u3000\u3000S15(\u00acE,X,D,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S31(E,X,D,n=0,m=0);\u3000 \u3000\u3000S8(\u00acE,X,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S24(E,X,\u00acD,n>0,m>0); \u3000\u3000S10(\u00acE,X,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S26(E,X,\u00acD,n=0,m>0); \u3000\u3000S9(\u00acE,X,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S25(E,X,\u00acD,n>0,m=0); \u3000\u3000S11(\u00acE,X,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S27(E,X,\u00acD,n=0,m=0); \u3000\u3000S4(\u00acE,\u00acX,D,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S20(E,\u00acX,D,n>0,m>0); \u3000\u3000S6(\u00acE,\u00acX,D,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S22(E,\u00acX,D,n=0,m>0); \u3000\u3000S5(\u00acE,\u00acX,D,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S21(E,\u00acX,D,n>0,m=0); \u3000\u3000S7(\u00acE,\u00acX,D,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S23(E,\u00acX,D,n=0,m=0);\u3000 \u3000\u3000S0(\u00acE,\u00acX,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S16(E,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S2(\u00acE,\u00acX,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S18(E,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S1(\u00acE,\u00acX,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S17(E,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S3(\u00acE,\u00acX,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S19(E,\u00acX,\u00acD,n=0,m=0); \u4f1a\u591a\u51fa\u6765\u51e0\u4e2a\u5b64\u7acb\u7684\u56fe\uff0c\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff1a\u5f53\u72b6\u6001\u7ed3\u70b9 \\(S_i\\) \u7684\u884c\u5217\u90fd\u5168\u4e3a\u96f6\uff0c\u8fd9\u662f\u5b64\u7acb\u8282\u70b9\uff0c\u53ef\u4ee5\u5220\u51cf\u6389\u8fd9\u4e9b\u6ca1\u6709\u7528\u7684\u72b6\u6001\u8282\u70b9\u3002 \u5982\u679c\u8fd9\u4e9b\u5197\u4f59\u4e0d\u53ef\u80fd\u62b5\u8fbe\u7684\u72b6\u6001\u8fd8\u4e0d\u5e78\u5f62\u6210\u53e6\u4e00\u5c0f\u6bb5\u7ed3\u70b9\u6570>1\u7684\u56fe\uff0c\u90a3\u4e48\u5c31\u9700\u8981\uff08\u4e0b\u6587\u7684ISM\u6280\u672f\u540e\u53bb\u6389\u533a\u57df\u65e0\u5173\u7684\u56fe\uff09 graph LR; \u3000\u3000S0(\u00acE,\u00acX,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S16(E,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S2(\u00acE,\u00acX,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S18(E,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S1(\u00acE,\u00acX,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S17(E,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S3(\u00acE,\u00acX,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S19(E,\u00acX,\u00acD,n=0,m=0); \u5b9e\u9645\u4e0a\u771f\u6b63\u6709\u53ef\u80fd\u7684\u53ea\u6709\u8fd9\u56db\u79cd\u60c5\u51b5\uff1a solution\u56fe\u89e3 \u00b6 \u7136\u540e\u6574\u4e2a\u95ee\u9898\u7684\u56fe\u89e3\u5c31\u662f\u201c\u5728\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e2d\u627e\u5230\u4e00\u6761\u8def\u5f84\u201d\uff1a graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u5176\u4e2d\uff1a graph LR; \u3000\u3000$S16(E,\u00acX,\u00acD,n>0,m>0),S0(\u00acE,\u00acX,\u00acD,n>0,m>0)$ \u3000\u3000$S2(\u00acE,\u00acX,\u00acD,n=0,m>0),S18(E,\u00acX,\u00acD,n=0,m>0)$ \u3000\u3000$S1(\u00acE,\u00acX,\u00acD,n>0,m=0),S17(E,\u00acX,\u00acD,n>0,m=0)$ \u3000\u3000$S3(\u00acE,\u00acX,\u00acD,n=0,m=0),S11(E,\u00acX,\u00acD,n=0,m=0),S19(E,\u00acX,\u00acD,n=0,m=0),S22(E,\u00acX,D,n=0,m>0)$ \u3000\u3000 \u5982\u679c\u6362\u6210\u72b6\u6001\u8be6\u7ec6\u7684\u56fe\u5c31\u662f\uff1a graph LR; \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0(\u00acE,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S0(\u00acE,\u00acX,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S16(E,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2(\u00acE,\u00acX,\u00acD,n=0,m>0) ; \u3000\u3000S2(\u00acE,\u00acX,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S18(E,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S18(E,\u00acX,\u00acD,n=0,m>0) -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2(\u00acE,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S18(E,\u00acX,\u00acD,n=0,m>0) -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3(\u00acE,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1(\u00acE,\u00acX,\u00acD,n>0,m=0) ; \u3000\u3000S1(\u00acE,\u00acX,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S17(E,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S17(E,\u00acX,\u00acD,n>0,m=0) -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1(\u00acE,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S17(E,\u00acX,\u00acD,n>0,m=0) -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3(\u00acE,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S3(\u00acE,\u00acX,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S19(E,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S19(E,\u00acX,\u00acD,n=0,m=0) -->|\u62ffx\u79ef\u6728| S11(E,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S11(E,\u00acX,\u00acD,n=0,m=0) -->|put_x_aside| S19(E,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S11(E,\u00acX,\u00acD,n=0,m=0) -->|\u628ax\u653e\u5728y\u4e0a| S22(E,\u00acX,D,n=0,m>0); \u603b\u8ba1\u4e00\u4e0b\u6c42\u89e3\u7684\u6b65\u9aa4 \u6807\u6ce8\u51fa\u6240\u6709\u72b6\u6001\uff1a\u6839\u636e\u52a8\u4f5c\u5168\u89c2\u5bdf\u63cf\u8ff0\uff0c\u628a\u52a8\u4f5c\u4e2d\uff08precondition+effect\uff09\u4e2d\u6d89\u53caStates\u90fd\u201c\u72b6\u6001\u7f16\u7801\u201d\u7ed3\u70b9node\uff1b \u52a8\u4f5cprint\u95ee\u9898\u63cf\u8ff0\u7684\u7f51\u7edc\u56fe.jpg(\u4e0a\u56fe)\uff1b \u5728DG\u6709\u5411\u8fde\u901a\u56fe\u4e2d\u627e\u5230\u4ece\u201c \\(S_{\u521d\u59cb}\\) \u201d\u5230\" \\(S_{\u76ee\u6807}\\) \"\u7684\u67d0\u4e00\u6761\u8def\u5f84\uff0c\u5c31\u7b49\u4e8e\u89c4\u5212\u6210\u529f\uff01 DG\u6709\u5411\u56fe graph LR; \u3000\u3000DG\u6709\u5411\u56fe -->|\u524d\u5411\u641c\u7d22\u4eceS\u521d\u59cb\u5f00\u59cb| \u89e3\u7b54\u601d\u8def\u4e00; \u3000\u3000DG\u6709\u5411\u56fe -->|\u540e\u5411\u641c\u7d22\u4eceS\u76ee\u6807\u56de\u6eaf| \u89e3\u7b54\u601d\u8def\u4e8c\u80fd\u5f97\u5230\u6240\u6709\u8def\u5f84; \u3000\u3000DG\u6709\u5411\u56fe -->|dijkstra\u7b49\u7b49\u6700\u77ed\u8def\u7b97\u6cd5\u6bcf\u7ecf\u8282\u70b9+1\u6d88\u8017\u6700\u77ed| \u89e3\u7b54\u601d\u8def\u4e09\u6700\u77ed\u8def\u5f84; \u3000\u3000DG\u6709\u5411\u56fe -->|QNP2SAT.md\u6587\u6863| \u89e3\u7b54\u65b9\u6cd5\u56db; \u524d\u5411\u641c\u7d22\u4eceS\u521d\u59cb\u5f00\u59cb\u5305\u62ec\u5404\u79cd\u542f\u53d1\u5f0f\uff0c\u5e7f\u5ea6\u4f18\u5148\uff0c\u6df1\u5ea6\u4f18\u5148\u3002\u679a\u4e3e\u7b28\u65b9\u6cd5 \u540e\u5411\u641c\u7d22\u4eceS\u76ee\u6807\u56de\u6eaf\u591a\u4e2a\u6808\u5b58\u4e0b\u6765\u591a\u4e2aaction\u5e8f\u5217\u7136\u540e\u6bcf\u4e2a\u6808\u5206\u652f\uff0c\u90fd\u540e\u8fdb\u5148\u51fa\u5f97\u5230\u6240\u6709\u65b9\u6848\uff08\u53ef\u8fbe\u77e9\u9635 \\(M=(A+I\uff09^r\\) \uff0c\u6bcf\u6b21\u591a\u8d70\u4e00\u6b65\uff0c\u591a\u51fa\u6765\u7684\u53ef\u4ee5\u901a\u8fc7(A+I) r-(A+I) \u4ece\u81f3\u8868\u77e9\u9635\u4e2d\uff0c\u4e0a\u6b21\u7684\u7ed3\u70b9\u5bf9\u5e94\u7684\u5165\u5ea6\u7684\u201c\u5217\u201d\u4e2d\u6709\u591a\u5c11\u4e2a\u975e\u96f6\u5143\u7d20\u72b6\u6001\uff0c\u5f53\u90a3\u4e2a\u72b6\u6001\u4e0d\u662f \\(S_{\u521d\u59cb}\\) \u5c31mark\u4e0b\u6765\uff0c\u5982\u679c\u662f\uff0c\u5c31\u7ed3\u675f\u8fd9\u6761\u5206\u652f\uff09\uff0c\u5982\u679c\u53ea\u9700\u8981\u627e\u4e00\u6761\u8def\u5f84\uff0c\u5012\u7740\u8d70\u8ff7\u5bab\uff0c\u8fd8\u662f\u5c11\u5f88\u591a\u5c94\u8def\u7684\u3002 \u8ba1\u7b97 \\((A+I)^\\infty=(A+I)^r\\) \u662f\u6700\u957fr\u6b65\u7684\u6709\u5411\u56fe\u4e2d\u53ef\u8fbe\u77e9\u9635 \\(M_r\\) \uff0cS\u521d\u2192S\u76ee\u6807\u5982\u679cM[\u521d\uff0c\u76ee\u6807]==1\u8bf4\u660e\u6709\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u9000\u51fa\u7a0b\u5e8f\u3002 \u56de\u6eaf \\((A+I)^r-(A+I)^{r - 1}=A^r\\) \u7b2cr\u6b65\u65b0\u589e\u53ef\u8fbe\u77e9\u9635\u4e2d\uff0c\u627eS\u76ee\u6807\u72b6\u6001\u7ed3\u70b9\u6240\u5728\u5217\u7684\uff08\u884c \\(\\neq 0\\) \u7684\u6a2a\u5750\u6807\uff09\u5165\u5ea6\u7ed3\u70b9\u4eec\uff0c\u5224\u65ad\u662f\u5426==S_\u521d\uff0c\u5982\u679c\u4e0d\u7b49\u4e8eS\u521d\u7edf\u7edf\u8fdb\u6808\uff0c\u8fd9\u4e9b\u7ed3\u70b9\u96c6\u6807\u8bb0\u4e3aReachableG\u00ae,\u610f\u601d\u662fr\u6b65\u5185\u53ef\u8fbe\uff0c\u5982\u679c\u91cc\u9762\u6709\u67d0\u4e2a\u7ed3\u70b9\u7b49\u4e8eS\u521d\u5c31\u8bf4\u660e\u627e\u5230\u5176\u4e2d\u4e00\u6761\u8def\u5f84\u3002 \u56de\u6eaf \\((A+I)^{r-1}-(A+I)^{r-2}=A^{r-1}\\) \u7b2cr-1\u6b65\u65b0\u589e\u53ef\u8fbe\u77e9\u9635,\u5faa\u73af ......\u56de\u6eaf \\((A+I)^2-(A+I)^{1}=A^2\\) 2\u6b65\u4ee5\u5185\u65b0\u589e\u53ef\u8fbe\u77e9\u9635\u503c\u4e2d\uff0c\u5faa\u73af \u6267\u884c\u5faa\u73af\u76f4\u5230\u56de\u6eaf \\((A+I)^1-(A+I)^{0}=(A+I)^1-I=A\\) ,\u6b63\u5e38\u6765\u8bf4\uff0c\u53ea\u8981\u6bcf\u6b21\u6709S_\u521d\u7684\u8def\u5f84\u90fd\u627e\u51fa\u6765\u6808\u91cc\u5b58\u8d77\u6765\uff0c\u5c31\u80fd\u5f97\u5230\u6240\u6709\u7684\u8def\u5f84\uff01\u5982\u679c\u524d\u9762\u6240\u6709\u5faa\u73af\u4e2d\u4e00\u4e2aS_\u521d\u90fd\u8fd8\u6ca1\u627e\u5230\uff0c\u90a3\u4e00\u5f00\u59cb\u5c31\u4e0d\u53ef\u80fd\u201cM[\u521d\uff0c\u76ee\u6807]==1\u8bf4\u660e\u6709\u89e3\u201d\uff0c\u8bf4\u660e\u8f93\u5165\u9519\u8bef\u6216\u8005\u53d1\u751f\u67d0\u4e9b\u7684\u7a0b\u5e8f\u9519\u8bef\uff0c\u5426\u5219\u7b2c\u4e00\u6b65\u5c31\u5e94\u8be5\u9000\u51fa\u7a0b\u5e8f\u3002 \u77e9\u9635\u5bf9\u89d2\u51431-1\uff0c\u5f3a\u8054\u901a\u5173\u7cfb\u7684\u7b49\u6548\u7ed3\u70b9-\u5f3a\u8fde\u901a\u7b49\u6548 \u00b6 \u8fd8\u6709\u4e00\u4e2a\u7b49\u6548\u65b9\u4fbf\u56fe\u7684\u601d\u8003\u6c42\u89e3\u8fc7\u7a0b\u5219\u662f\u201c\u6211\u4eecn>0,n=0\u4f5c\u4e3anon-deterministic\u201d \u7b49\u6548\u4e3a\u4e0b\u56fe\uff1a \u5176\u4e2d\u53ef\u80fd\u5f88\u591a\u6b21\u5faa\u73af\uff0c\u4f46\u662f\u6211\u4eec\u6c42\u89e3\" \\(S_\u521d\u59cb-->S_\u76ee\u6807\\) \"\u95ee\u9898\u4e2d\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u5173\u5fc3\u5faa\u73af\u4e86\u591a\u5c11\u6b21\uff0c\u56e0\u4e3a\u5177\u4f53\u95ee\u9898\u7684n,m\u5177\u4f53\u6570\u503c\u4e0d\u9700\u8981\u4e00\u6837\uff0c\u6211\u4eec\u53ea\u8981\u5f53\u4f5c\u7b49\u6548\u7684 \\(S_{16-0}\\) \u7ed3\u70b9\u5373\u53ef\u3002\u8fd9\u6837\u4e0d\u4f46\u6709\u52a9\u4e8e\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u4e5f\u80fd\u66f4\u597d\u6293\u4f4f\u95ee\u9898\u6c42\u89e3\u7684\u672c\u8d28---\u627e\u4e00\u6761 \\(S_\u521d\u59cb-->S_\u76ee\u6807\\) \u8def\u5f84\u3002 \u4e8e\u662f\u539f\u6765\u7684\u95ee\u9898\u7684\u56fe A\u90bb\u63a5\u77e9\u9635\uff1a \u7f16\u53f7 S16 S0 S2 S18 S1 S17 S3' S16 0 1 0 0 0 0 0 S0 1 0 1 1 0 0 0 S2 0 0 0 0 1 0 0 S18 0 0 0 0 0 1 0 S1 0 0 1 0 0 0 1 S17 0 0 0 1 0 0 1 S3' 0 0 1 0 0 0 0 \u4e00\u6b65\u5185\u8d70\u5b8c\u7684 \\(M^1=(A+I)^1\\) \u7f16\u53f7 S16 S0 S2 S18 S1 S17 S3' S16 1 1 0 0 0 0 0 S0 1 1 1 1 0 0 0 S2 0 0 1 0 1 0 0 S18 0 0 0 1 0 1 0 S1 0 0 1 0 1 0 1 S17 0 0 0 1 0 1 1 S3' 0 0 1 0 0 0 1 \u8fd9\u77e9\u9635\u4e2d\u7684 \\(S_s'\\) \u662f\uff1a\u5bf9 \\(s_{19}\\) \u548c \\(S_{11}\\) \u5e94\u7528\u201c\u5f3a\u8fde\u901a\u7b49\u6548\u201d\u4e4b\u540e\uff0c\u518d\u5e94\u7528\u201c\u5355\u4e00\u72b6\u6001\u94fe\u7b49\u6548\u201d\u5f97\u5230 \\(S_3'\\) \u5982\u56fe\u6240\u793a\uff1a \u6ce8\u610f\u8981\u6570\u636e\u7ed3\u6784\u4e2d\u8981\u4fdd\u5b58\u5230\u5e95\u662f\u8c01\u5728\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u4fdd\u5b58\u6210\u4e00\u4e2a\u4e8c\u7ef4\u8868\u683c\u3002\u6bd4\u5982\"S19-11\u4e2d\uff0cS19\u5165\u5ea6\uff0cS11\u51fa\u5ea6\"\uff0c\u5728\u5408\u5e76\u7684\u65f6\u5019\u8981\u5b58\u4e0b\u6765\u8fd9\u6837\u7684\u4fe1\u606f\uff08\u65b9\u4fbf\u8fd8\u539f\u6c42\u89e3\u8def\u5f84\uff09\uff1a S19 S11 \u5165\u5ea6 1 0 \u51fa\u5ea6 0 1 \u5b9e\u9645\u4e0a\u4e00\u4e2a\u56fe\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u6807\u8bb0\u53d8\u91cfchanged==0/1\uff0c\u5bf9\u4e00\u5f20\u56fe\u53cd\u590d\u5faa\u73af\u5e94\u7528\u4e24\u4e2a\u7b49\u6548\uff1a graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffy\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffy\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; do{ changed=0; if(\u5b58\u5728\u5bf9\u89d2\u5143\u7d201-1) {\"\u5f3a\u8fde\u901a\u7b49\u6548+changed=1}; if(actions\u7684pre-effect\u4e2d\u5b58\u57281-1\u6620\u5c04\u7684\u60c5\u51b5) {\"\u5355\u4e00\u72b6\u6001\u94fe\u7b49\u6548\"+changed=1; } Until (changed==0) \u53d8\u6210\u65b0\u7684\u56fe graph LR; \u3000\u3000S0-16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2-18 ; \u3000\u3000S2-18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S0-16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1-17 ; \u3000\u3000S1-17 -->|\u5f53n==1\u62ffy\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19-11; \u3000\u3000S19-11 -->|\u628ax\u653e\u5728y\u4e0a| S22; A\u90bb\u63a5\u77e9\u9635\uff1a \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 0 1 1 0 S2-18 0 0 0 1 S1-17 0 0 0 1 S3' 0 0 0 0 \u4e00\u6b65\u5185\u8d70\u5b8c\u7684 \\(M^1=(A+I)^1\\) \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 1 1 1 0 S2-18 0 1 0 1 S1-17 0 0 1 1 S3' 0 0 0 1 \u5e03\u5c14\u4ee3\u6570\u6cd5\uff1a 0+0=0\uff0c0+1=1\uff0c1+0=1\uff0c1+1=1 0*0=0\uff0c0*1=0\uff0c1*0=0,1*1=1 \u4e24\u6b65\u5185\u8d70\u5b8c\u53ef\u8fbe\u77e9\u9635 \\(M^2=(A+I)^2=A^2+(A+I)\\) \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 1 1 1 1 S2-18 0 1 0 1 S1-17 0 0 1 1 S3' 0 0 0 1 \\(A^2\\) \u77e9\u9635\uff1a \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 0 1 1 1=0*0+1*1+1*1+0*0 S2-18 0 0 0 1 S1-17 0 0 0 1 S3' 0 0 0 0 \u5176\u4e2d\u591a\u51fa\u6765\u7684\u53ef\u8fbe\u7684\u5730\u65b9\u53ef\u4ee5\u7528 \\(M^2-M^1-A=A^2-A\\) \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 0 0 0 1 S2-18 0 0 0 0 S1-17 0 0 0 0 S3' 0 0 0 0 \u76f4\u63a5\u5f97\u5230. \u7b2c......\u6b65 \u5047\u8bbe\u8fd9\u4e2a\u6709\u5411\u56feDG\u6700\u591ar\u6b65\u4ee5\u5185\u4ece\u521d\u59cb\u70b9\u80fd\u62b5\u8fbe\u76ee\u6807\u5750\u6807\uff0c\u90a3\u4e48\u6211\u4eec\u6709 \\((A+I)^1 \\neq (A+I)^2 \\neq (A+I)^{...} \\neq (A+I)^r =(A+I)^{r+1} = (A+I)^{...} =(A+I)^{\\infty}\\) \u6240\u4ee5\u6700\u540er\u6b65\u5185\u53ef\u8fbe\u7684\u56fe\u5c31\u662f\u53ef\u8fbe\u77e9\u9635M,\u8868\u793a\u7684\u610f\u4e49\u5c31\u662f\u201cr\u6b65\u6216\u8005\u8bf4\u65e0\u7a77\u5185\uff0c\u56fe\u4e2d\u884c\u8282\u70b9i\u8fde\u901a\u5217\u8282\u70b9j\u8fd9\u4ef6\u4e8b\u5982\u679c\u4e3a\u771f\uff0c\u90a3\u4e48\u4ece\u81f3\u8868\uff08\u53ef\u8fbe\u77e9\u9635\uff09\u5bf9\u5e94m[i,j]=0,\u5426\u5219M[i,j]=0.\u201d \u8fd9\u4e2ademo\u7684r=2,\u53cd\u6b63r\u66f4\u5927\u4e5f\u662f\u4e00\u6837\u6ef4\u7b97\uff0c\u6700\u540e\u77e5\u9053r\u6b65\u6216\u8005\u8bf4\u65e0\u7a77\u6b65\u4e4b\u5185\u7684\u53ef\u8fbe\u77e9\u9635\uff1a \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 1 1 1 1 S2-18 0 1 0 1 S1-17 0 0 1 1 S3' 0 0 0 1 \u5165\u5ea6\u5217\u5168\u4e3a\u96f6,\u8d77\u59cb\u96c6B(S)={s0-16}\uff0c\u53ef\u8fbe\u96c6S0-16\u884c\u5bf9\u5e94\u5217\u4e3a1\u7684{S0-16\uff0cS2-18\uff0cS1-17\uff0cS3' }\uff0c\u5f53B(S)\u4e2d\u6240\u6709\u5143\u7d20\u5404\u81ea\u7684\u53ef\u8fbe\u96c6 \u4ea4\u96c6\u4e3a\u7a7a\uff0c\u8bf4\u660e\u533a\u57df\u53ef\u5206\u3002\u8fd9\u91ccB(s)\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u533a\u57df\u4e0d\u53ef\u5206\u3002 \u51fa\u5ea6\u884c\u5168\u4e3a\u96f6,\u7ec8\u6b62\u96c6E(S)={S3'}\uff0c\u4e5f\u80fd\u770b\u5148\u884c\u96c6\u6709\u6ca1\u6709\u4ea4\u96c6\uff0c\u7565\uff0c\u53cd\u6b63\u4e5f\u80fd\u770b\u51fa\u533a\u57df\u4e0d\u53ef\u5206\u3002 ISM\u6cd5boolen-matrix \u00b6 \u6216\u8005\u62d3\u6734\u6392\u5e8f\u627e\u4e2a\u5148\u540e\u6b21\u5e8f\u5e8f\u5217 ISM\u6280\u672f\u662f\u9012\u9636\u7ed3\u6784\u6a21\u578b\u6280\u672f\uff0c\u6700\u5f00\u59cb\u662f\u7f8e\u56fdJ.N.\u6c83\u83f2\u5c14\u5fb7\u6559\u63881973\u5e74\u63d0\u51fa\u7684\u5206\u6790\u793e\u4f1a\u7ecf\u6d4e\u7cfb\u7edf\u7ed3\u6784\u95ee\u9898\u7684\u65b9\u6cd5\u3002 \u533a\u57df\u5212\u5206 \u7ea7\u4f4d\u5212\u5206 \u63d0\u53d6\u9aa8\u67b6\u77e9\u9635 \u7ed8\u5236\u591a\u7ea7\u9012\u9636\u6709\u5411\u56feD(A') graph LR; \u3000\u3000M -->|\u533a\u57df\u5212\u5206| \u5757\u5bf9\u89d2M<P> \u3000\u3000\u5757\u5bf9\u89d2M<P> --> |\u7ea7\u4f4d\u5212\u5206| \u533a\u57df\u5757\u4e09\u89d2M<L> \u3000\u3000\u533a\u57df\u5757\u4e09\u89d2M<L> --> |\u7f29\u51cf\u5f3a\u8fde\u63a5\u8981\u7d20\u5408\u5e76| \u533a\u57df\u5757\u4e09\u89d2M'<L> \u3000\u3000\u533a\u57df\u5757\u4e09\u89d2M'<L> --> |\u5254\u9664\u8d8a\u7ea7\u5173\u7cfb| \u9aa8\u67b6\u77e9\u9635M''<L> \u3000\u3000\u9aa8\u67b6\u77e9\u9635M''<L> --> |\u53bb\u6389\u7ed3\u70b9\u81ea\u8eab\u53ef\u8fbe\u5173\u7cfb| A'; \u3000\u3000A' --> |\u7ed8\u56fe| G<A'> \u6700\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\u8ba1\u7b97\u673a\u80fd\u591f\u201c\u7406\u89e3\u201d\u56fe\u4e2d\u5148\u540e\u6b21\u5e8f\uff0c\u91cd\u8981\u6027\u548c\u7b49\u7ea7\uff0c\u663e\u5f0f\u6253\u5370\u51fa\u8fd9\u4e2a\u95ee\u9898\u5bf9\u5e94\u56fe\u7684\u7b49\u7ea7\uff1a graph LR; \u3000\u3000S0-16 -->|bala| S2-18 ; \u3000\u3000S2-18 -->|bala| S3'; \u3000\u3000S0-16 -->|bala| S1-17 ; \u3000\u3000S1-17 -->|bala| S3'; \u5373 \u8fd9\u4e2a\u95ee\u9898ISM\u7b97\u6cd5\u4f18\u52bf\u4e0d\u592a\u660e\u663e\u662f\u56e0\u4e3a\u8fc7\u5206\u7b80\u5355\uff0c\u5982\u679c\u6709\u5f88\u591a\u7684\u8def\u5f84\uff0c\u4ed6\u80fd\u591f\u544a\u8bc9\u4f60\uff0c\u54ea\u4e9b\u5143\u7d20\u662f\u7b49\u6548\u7684\uff0c\u53ef\u4ee5\u5ffd\u7565\u5408\u5e76\u67d0\u4e9b\u5faa\u73af/1-1\u72b6\u6001\u94fe\uff0c\u6216\u8005\u7b49\u4ef7\u770b\u4f5c\u865a\u62df\u72b6\u6001\u8282\u70b9\u8282\u7701\u8ba1\u7b97\u6210\u672c\u3002 \u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u66f4\u52a0\u5145\u5206\u7684demo \u663e\u793a\u201c\u526a\u679d\u201d\u53bb\u6389\u65e0\u5173\u5b50\u56fe\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u7ed9\u7684\u529f\u80fdaction\u8fc7\u591a\uff0c\u5b9e\u9645\u4e0a\u6709\u4e9bactions\u5bf9\u89e3\u51b3\u201cS_\u521d\u59cb\u2192S_\u76ee\u6807\u201d \u95ee\u9898\u6beb\u65e0\u5173\u7cfb\uff0c\u5728\u524d\u9762\u72b6\u6001\u751f\u6210\u4e2d\uff0c\u5c31\u9700\u8981\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\u7684\u201c\u533a\u57df\u5212\u5206\u201d\u53bb\u6389\u65e0\u5173\u4e0d\u8fde\u901a\u7684\u5176\u4ed6\u56fe\u3002 \u5982\u679c\u6709\u5f88\u591a\u6761\u8def\u53ef\u89e3\u51b3\u201cS_\u521d\u59cb\u2192S_\u76ee\u6807\u201d \u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e2aISM\u65b9\u6cd5\u7684\u7ed3\u679c\u80fd\u591f\u5b9e\u73b0\u5206\u7ea7\uff0c\u5206\u8ddd\u79bb\uff0c\u6700\u6e05\u6670\u7b80\u660e\u7684\u65b9\u6cd5\u627e\u5230\u4e00\u5f20\u590d\u6742\u6709\u5411\u56fe\u7684\u201c\u9aa8\u67b6\u77e9\u9635\u5bf9\u5e94\u6700\u6838\u5fc3\u7b80\u660e\u627c\u8981\u7684\u56fe\u201d\uff01\u8fd9\u6837\u5904\u7406\u540e\uff0c\u4fdd\u5b58\uff0c\u641c\u7d22\u4e00\u6761\u8def\u5f84\u548c\u6c42\u89e3\u90fd\u662f\u6781\u597d\u7684\u3002 Gripper \u00b6 \u76ee\u6807\u623f\u95f4 \u8981\u88ab\u79fb\u8d70\u7684ball 0<=\u642c\u8fd0\u4e2d\u7684<=2 \u7a7a\u5939\u5b50\u6570 \u72b6\u6001\u7f16\u7801 T b>0 c>0 g>0 \\(1111_B = 15_H\\) \\(\\overline{T}\\) b=0 c>=0 g=0 \\(0000_B = 0_H\\) \u56fe\u7684\u8282\u70b9\u662f\u72b6\u6001\u6570\u91cf\uff0c\u5148\u8981\u786e\u5b9a\u6709\u591a\u5c11\u72b6\u6001\uff1a actions\u4e2d \\(a_i\\) \u51fa\u73b0\u7684\u80fd\u591f\u5b8c\u5168\u8868\u8fbe\u552f\u4e00\u786e\u8ba4\u7684\u72b6\u6001\u5148\u5168\u90e8\u5217\u51fa \u7136\u540e\u5bf9\u4e8e\u6709\u7f3a\u7701\u503c\u7684\uff0c\u6bd4\u5982\u653e\u4e0b\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u653e\u4e0b\u79ef\u6728\u7684< \\(\\overline{E},\\_,\\_,\\_,\\_;E,\\_,\\_,\\_,\\_\\) >\uff0c\u56e0\u4e3a\u95ee\u9898\u4e2d\u7684\u9690\u542b\u7ea6\u675f\u7b49\u9650\u5236\uff0c\u4e5f\u8981\u628a\u72b6\u6001\u8868\u8fbe\u6e05\u6670\uff0c\u786e\u5b9a\u7684pre\u72b6\u6001 \u2192 \u786e\u5b9a\u7684effect\u72b6\u6001\uff0c\u624d\u662f\u201c\u8db3\u591f\u7684\u95ee\u9898\u63cf\u8ff0\u201d \u4e0d\u53ef\u80fd\u53d1\u751f\u7684\u77db\u76fe\u72b6\u6001\uff1a\u9690\u542b\u6761\u4ef6\"c=0\u6ca1\u5728\u5939\u6301\uff0cg=0\u7a7a\u5939\u5b50\u6570\u91cf\u4e3a\u96f6\"\uff0c\u4e0d\u53ef\u80fd\u540c\u65f6\u53d1\u751f\u3002\u8fd9\u4e2a\u9700\u8981\u95ee\u9898\u5f62\u5f0f\u5316\u7684\u6c42\u89e3\u8005\u81ea\u5df1\u60f3\u660e\u767d\uff0c\u5728action\u522b\u8f93\u5165\u8fd9\u79cd\u72b6\u6001\uff0c\u5426\u5219\u8ba1\u7b97\u673a\u81ea\u52a8\u5316\u8fd0\u7b97\u4e5f\u5e2e\u4e0d\u4e86\u4f60\uff0c\u8ba1\u7b97\u673a\u4e0d\u77e5\u9053\u5b9e\u9645\u8bed\u4e49\u662f\u5426\u5141\u8bb8\u8fd9\u51e0\u4e2a\u77db\u76fe\u72b6\u6001\uff0c\u4ed6\u53ea\u7ba1\u8bed\u6cd5\u63a8\u5bfc\u7684\u5408\u7406\u6027\uff01 \\(S_{...}:(\\_,\\_,c=0,g=0)\\) \u5177\u4f53\u5c31\u662f\u8fd9\u56db\u79cd\uff1a \\(S_{0}:(\\overline{T},b=0,c=0,g=0)\\) \\(S_{4}:(\\overline{T},b>0,c=0,g=0)\\) \\(S_{8}:(T,b=0,c=0,g=0)\\) \\(S_{12}:(T,b>0,c=0,g=0)\\) \u8fc7\u7a0b\u4e2d\u4e0d\u5173\u5fc3\u7684\u65e0\u5173\u72b6\u6001\uff1a \\(S_{1}:(\\overline{T},b=0,c=0,g>0)\\) **\u91cd\u70b9\u662f\u6709\u73af\u7684\u6709\u5411\u56fe\u2192DGA**\u7b97\u6cd5\uff1a \u00b6 \u72b6\u6001\u7801\u7f16\u7801,\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u5904\u74061-1\u6620\u5c04\u7684\u552f\u4e00\u6807\u8bc6\u7684\u5168\u5c40\u72b6\u6001\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u5b9a\u4e49\uff1a \\(v_i>0\\) \u53d61\uff0c \\(v_i=0\\) \u53d60\u3002\u53ea\u662f\u6807\u8bc6\u65e0\u6240\u8c13\uff0c\u800c\u5199\u6210\u7a0b\u5e8f\u9700\u8981\u7edf\u4e00\u7ea6\u5b9a\u4e00\u4e2a\uff0c\u6bd4\u5982\u6211\u4eec\u7ea6\u5b9a \\(f_i\\) \u4e3a\u771f\u53d61\uff0c \\(\\neg f_i\\) \u4e3a\u771f\u53d60; \\(v_i>0\\) \u53d61\uff0c \\(v_i=0\\) \u53d60\u3002 \u6bd4\u5982\u8fd9\u91cc\u6211\u6545\u610f\u7528\u548cBlock world\u4e0d\u540c\u7684\u7f16\u7801\u7ea6\u5b9a\uff1a \u76ee\u6807\u623f\u95f4 \u5269\u4e0b\u8981\u79fbball carried ball \u7a7agripper\u6570 \u72b6\u6001\u7f16\u7801 T b>0 c>0 g>0 \\(1111_B = 15_H\\) \\(\\overline{T}\\) $b=0 c=0 g=0 \\(0000_B = 0_H\\) graph LR; \u3000\u3000S5 -->|Pick1-2| S7; \u3000\u3000S7 -->|Pick1| S6; \u3000\u3000S7 -->|Pick1| S2;\u3000\u3000 \u3000\u3000S5 -->|Pick1-2| S6; \u3000\u3000S6 -->|MoveFullyLoaded| S14; \u3000\u3000S14 -->|Drop2| S13; \u3000\u3000S14 -->|Drop1| S15; \u3000\u3000S15 -->|Drop1| S13; \u3000\u3000S13 -->|LeaveTargetRoom| S5; \u3000\u3000S5 -->|b==1Pick1| S3; \u3000\u3000S5 -->|b==2Pick2| S2; \u3000\u3000S3 -->|MoveHalfLoaded| S11; \u3000\u3000S11 -->|Drop1| S9; \u3000\u3000S2 -->|MoveFullyLoaded| S10 ; \u3000\u3000S10 -->|Drop2| S9; \u3000\u3000S10 -->|Drop1| S11; \u627e\u51fa\u4e00\u4e2a\u73af\uff0c\u73af\u4e0a\u7ed3\u70b9\u5408\u5e76\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u81f3\u627e\u4e0d\u5230\u73af\uff0c\u5177\u4f53\u64cd\u4f5c\u8981\u600e\u4e48\u5199\u4ee3\u7801\uff1f \u8bc6\u522b\u201c\u5f3a\u8fde\u901a\u5206\u91cf\u201d\uff0c\u7136\u540e\u7b49\u6548\u66ff\u6362\u5f3a\u8fde\u901a\u5206\u91cf \u5c06\u6709\u5411\u56fe\u5206\u89e3\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\uff1a \u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u5e94\u7528\uff0cSCC\u7b97\u6cd5\uff0cStrongly Y-connected-componentts(G) \u300a\u7b97\u6cd5\u5bfc\u8bba\u300bP357 graph LR; \u3000\u3000S5_6_7_13_14_15 -->|b==1Pick1| S3; \u3000\u3000S5_6_7_13_14_15 -->|b==2Pick2\u6216\u8005Pick1| S2; \u3000\u3000S3 -->|MoveHalfLoaded| S11; \u3000\u3000S11 -->|Drop1| S9; \u3000\u3000S2 -->|MoveFullyLoaded| S10 ; \u3000\u3000S10 -->|Drop2| S9; \u3000\u3000S10 -->|Drop1| S11; \u8fd9\u4e2a\u6709\u5411\u65e0\u73af\u56feDAG\u53ef\u4ee5\u4f7f\u7528ISM\u6280\u672f\uff0c\u6216\u8005\u62d3\u6251\u6392\u5e8f\u8bd5\u8bd5\u770b\u3002 \u8bbe\u8ba1deisgn \u00b6 \u8f93\u5165 \u00b6 \u5b9a\u4e49\u4e00\u4e2a\u6807\u51c6\u6587\u672c\u63cf\u8ff0FVIOGO.qnp\u683c\u5f0f\u6807\u51c6\uff0c\u53ea\u8981\u8bf4\u6e05\u695a \u5373\u53ef\uff0c\u6bd4\u5982\u8fd9\u4e2aBlock world\u95ee\u9898 E,X,D#\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u7b26\u53f7\uff0cF\u8bfb\u53d6\u540e\uff0c\u81ea\u52a8\u91cd\u547d\u540d\u5b58\u6210\u5e03\u5c14\u547d\u9898f1,f2,f3---1\uff1b-f1,-f2,-f3---0 n,m#\u5efa\u8bae\u4f7f\u7528v1,v2,v3,...\u547d\u540d\u3002\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u7b26\u53f7\uff0cV\u8bfb\u53d6\u540e\uff0c\u7a0b\u5e8f\u81ea\u52a8\u91cd\u547d\u540d\u5b58\u6210v1,v2.\u7ea6\u5b9av1>0,v2>0\u53d6\u503c0\uff1bv1=0,v2=0\u53d6\u503c1\uff1b E,-S,-D,n>0,m>0#\u521d\u59cbI\uff0c\u7a0b\u5e8f\u5148\u66ff\u6362\u4e3a10000B=16D,\u53ea\u9700\u8981\u5b58\u4e00\u4e2aInterger\u8868\u793aS_0 E,-S,D,n=0,m>0#\u521d\u59cbG\uff0c\u7a0b\u5e8f\u5148\u66ff\u6362\u4e3a10110B=22D,\u53ea\u9700\u8981\u5b58\u4e00\u4e2aInterger\u8868\u793aS_G a1:#action 1:Pick-above-x\u6361\u8d77\u6765x\u4e0a\u65b9\u79ef\u6728: \u3000\u3000(E,-X,-D,n>0,m>0), (-E,-X,-D,n>0,m>0);#\u4ee3\u7801\u4e2d\u5e94\u8be5\u5b58\u6210\u547d\u540da1\u7684\u4e8c\u7ef4\u77e9\u9635\uff1f\u6216\u8005\u4e00\u7ef4\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\u662f\u5143\u7ec4(S16,S0)\u4e0b\u540c\uff0c\u5199\u6210\u8fd9\u6837 S16(E,-X,-D,n>0,m>0), S2(-E,-X,-D,n=0,m>0) ;#(S,S) \u3000\u3000S17(E,-X,-D,n>0,m=0), S1(-E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S17(E,-X,-D,n>0,m=0), S3(-E,-X,-D,n=0,m=0);#(S,S) a2\uff1a#Pick-above-y\u6361\u8d77\u6765y\u4e0a\u65b9\u79ef\u6728: \u3000\u3000S16(E,-X,-D,n>0,m>0), S0(-E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S18(E,-X,-D,n=0,m>0),S2(-E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S18(E,-X,-D,n=0,m>0) , S3(-E,-X,-D,n=0,m=0);#(S,S) \u3000\u3000S16(E,-X,-D,n>0,m>0) ,S1(-E,-X,-D,n>0,m=0) ;#(S,S) a3\uff1a#put-aside\u79ef\u6728(\u4e0d\u5305\u62ecx\uff0c\u624b\u6301x\u653e\u4e00\u8fb9\u53eb\u505aput-x-aside\u662f\u4e0b\u9762\u8ba8\u8bba\u7684\u4e00\u4e2a\u52a8\u4f5c)\u653e\u4e00\u8fb9\u5230\u684c\u9762Table #\u5305\u62ec\u8fd9\u4e2a Putaside-1 = h\u00acE,\u00acX,\u00acD,n=0;Ei to put aside (not above x or y) the block being held, # \u4e5f\u5305\u62ec\u8fd9\u4e2a Putaside-2 = h\u00acE,\u00acX,\u00acD,n>0,m>0;Ei to put aside (not above x or y) the block being held, \u3000\u3000S0(-E,-X,-D,n>0,m>0) ,S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0),S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) , S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) , S19(E,-X,-D,n=0,m=0);#(S,S) #\u8fd9\u91cc\u9700\u8981\u63d0\u4e00\u70b9\uff1a\u5141\u8bb8_\u7f3a\u7701\u9879 #\u6bd4\u5982\u653e\u4e0b\u77f3\u5934\uff0c\u552f\u4e00\u7684\u76f4\u89c2\u5f62\u5f0f\u5316\u8868\u793a<-E,E>,\u5176\u5b9e\u5bf9\u5e94\u7684\u72b6\u6001\u6709\uff1a S_(-E,_,_,_,_) -->|put-aside| S__(E,_,_,_,_); #\u7136\u540e\u53ef\u4ee5\u8fd0\u7528PC\u5185\u90e8\u7a0b\u5e8f\u9700\u8981\u81ea\u52a8\u5316\u5730\u679a\u4e3e\u904d\u5386\uff1a \u3000\u3000S12(-E,X,D,n>0,m>0) , S28(E,X,D,n>0,m>0);#(S,S) \u3000\u3000S14(-E,X,D,n=0,m>0) ,S30(E,X,D,n=0,m>0);#(S,S) \u3000\u3000S13(-E,X,D,n>0,m=0) ,S29(E,X,D,n>0,m=0);#(S,S) \u3000\u3000S15(-E,X,D,n=0,m=0) ,S31(E,X,D,n=0,m=0);\u3000#(S,S) \u3000\u3000S8(-E,X,-D,n>0,m>0) ,S24(E,X,-D,n>0,m>0);#(S,S) \u3000\u3000S10(-E,X,-D,n=0,m>0) ,S26(E,X,-D,n=0,m>0);#(S,S) \u3000\u3000S9(-E,X,-D,n>0,m=0) ,S25(E,X,-D,n>0,m=0);#(S,S) \u3000\u3000S11(-E,X,-D,n=0,m=0) ,S27(E,X,-D,n=0,m=0);#(S,S) \u3000\u3000S4(-E,-X,D,n>0,m>0) , S20(E,-X,D,n>0,m>0);#(S,S) \u3000\u3000S6(-E,-X,D,n=0,m>0) ,S22(E,-X,D,n=0,m>0);#(S,S) \u3000\u3000S5(-E,-X,D,n>0,m=0) ,S21(E,-X,D,n>0,m=0);#(S,S) \u3000\u3000S7(-E,-X,D,n=0,m=0) ,S23(E,-X,D,n=0,m=0);\u3000#(S,S) \u3000\u3000S0(-E,-X,-D,n>0,m>0),S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0) ,S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) ,S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) ,S19(E,-X,-D,n=0,m=0);#(S,S) #\u591a\u51fa\u6765\u7684\u53ef\u4ee5\u901a\u8fc7ISM\u6280\u672f\u7684\u201c\u533a\u57df\u5212\u5206\u201d\u53bb\u6389\u201c\u65e0S0,SG\u65e0\u5173\u7684\u5b64\u7acb\u56fe\u4eec\u201d\uff0c\u7ed3\u679c\u5c31\u53ea\u5269\u4e0b\u8fd9\u51e0\u4e2a\u771f\u6b63\u4f1a\u7528\u7684\u201c\u53ef\u8fbe\u72b6\u6001\u201d\uff1a \u3000\u3000S0(-E,-X,-D,n>0,m>0) ,S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0) ,S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) ,S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) ,S19(E,-X,-D,n=0,m=0);#(S,S) #\u4f46\u662f\u5982\u679c\u9700\u8981\u9690\u542b\u6761\u4ef6\u63a8\u7406\u7684\u201c\u4e0d\u53ef\u80fd\u72b6\u6001\u201d\u9700\u8981\u4eba\u5de5\u8f93\u5165\u7684\u65f6\u5019\u6392\u9664\uff0c\u56e0\u4e3aPC\u4e0d\u77e5\u9053\u8bed\u4e49\uff0c\u53ea\u77e5\u9053\u8bed\u6cd5\u63a8\u5bfc\u6ca1\u6bdb\u75c5\u5c31\u884c\u3002\u6216\u8005\u9700\u8981\u53e6\u5916\u5b9a\u4e49\u4e00\u884c\u53ef\u9009\u9879\uff0c\u7528\u6765\u8f93\u5165\u4e0d\u53ef\u80fd\u72b6\u6001\uff0c\u5728\u77e9\u9635\u5904\u7406\u524d\u53bb\u6389\u8fd9\u4e2a\u201c\u4e0d\u53ef\u80fd\u72b6\u6001\u7ed3\u70b9\u201d\u3002\u53ef\u9009\u9879\u600e\u4e48\u5f04\u5462\uff1f a4\uff1a#pick-x\uff0c\u62ff\u8d77\u6765x\u77f3\u5934\uff0c**\u5173\u952e\u52a8\u4f5c**\uff0cpre\u4e00\u5bf9\u4e00\u6620\u5c04effect\u7684\u884c\u4e3a\uff0c S19(E,-X,-D,n=0,m=0) , S11(E,-X,-D,n=0,m=0);#(S,S) a5\uff1a#put-x-on-y,\u628a\u624b\u4e2d\u7684x\u653e\u5728y\u4e0a\u65b9\uff1a \u3000\u3000S11(E,-X,-D,n=0,m=0) , S22(E,-X,D,n=0,m>0);#(S,S) a6 #put-x-aside,\u5efa\u8bae\u522b\u5b9a\u4e49\u8fd9\u52a8\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5371\u9669\uff08\u6beb\u65e0\u610f\u4e49\u800c\u4e14\u591a\u4f59\uff09\u7684\u52a8\u4f5c \u3000\u3000S11(E,-X,-D,n=0,m=0) , S19(E,-X,-D,n=0,m=0);#(S,S) \u6ce8\uff1a\u8fd9\u91ccn>0,n=0\u53ef\u4ee5\u770b\u4f5c\u5355\u7eaf\u7684\u6587\u5b57\u547d\u9898\uff0c\u4ee3\u8868\u7684\u610f\u4e49\u662f\u975e\u96f6\u548c\u96f6\uff0c\u540c\u65f6\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5c\u4e0d\u9700\u8981\u4f20\u9012 if(n==1)\u8d70\u54ea\u6761\u8def\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8d70\u90a3\u6761\u8def\u9ed8\u8ba4\u8ba9\u7528\u6237\u6839\u636e\u8f93\u51fa\u6765\u81ea\u884c\u5224\u65ad\uff0c\u751a\u81f3n=n-1\u6267\u884c\u591a\u5c11\u6b21\u6211\u4e5f\u4e0d\u5173\u5fc3. \u56e0\u4e3a\u7ed3\u679c\u51fa\u6765\u7528\u6237\u201c\u81ea\u5df1\u5224\u65ad\u5230\u5e95\u4ec0\u4e48\u65f6\u5019\u5230n=1\u4e34\u754c\u6570\u503c\u6807\u8bc6\u72b6\u6001\u201d\u5f00\u59cb\u8d70\u975e\u5faa\u73af\u7684\u90a3\u6761\u8def\u5f84\uff08\u4e3b\u8981\u662f\u56e0\u4e3a\u201c\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7b49\u6548\u56fe\u5b9e\u73b0\u7684\u8fd9\u4e2a\u529f\u80fd\") \u533a\u5206QNP2SAT\u65b9\u6cd5\u4e2d\u8fde n,n-1,n-2,...,2,1 \u90fd\u8981\u5206\u4e0d\u540c\u72b6\u6001\u6765\u4e00\u4ee5\u533a\u5206\uff0c\u6bcf\u4e2a\u52a8\u4f5c\u524d\u63d0\u8981 S16 \u2192|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u8fd9\u4e2a\u52a8\u4f5c\u4e3a\u4f8b\uff1a {n=1}^S16 --> S2^{n=n-1};#QNP2SAT\u8981\u5199\u6210\u8fd9\u6837\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5f88\u5f31\u667a\u7684\u95ee\u9898\uff0c\u4f46\u662fn\u6bd4\u8f83\u5927\uff0c\u590d\u6742\u5ea6\u589e\u52a0\u4e5f\u4f1a\u5f88\u5927\uff0c\u8fd9\u662f\u56e0\u4e3a\u65b9\u6cd5\u4e0d\u597d\u3002 \"\u5206\u91cf\u56fe\u627e\u5230\u4e00\u6761\u8def\u5f84\u89e3\"\uff0c\u5728**\u8fd8\u539f\u5f3a\u8fde\u901a\u5206\u91cf**\u6210\u4e3a\u201c\u5b8c\u6574\u95ee\u9898\u89e3\u8def\u5f84\u201d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4ee3\u7801\u8fd8\u8981\u5904\u7406\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u539f\u59cb\u56feG\u4e2d\u5206\u91cf\u56fe\u7684\u8f93\u5165\u8f93\u51fa\u8981\u8fd8\u539f\u56de\u6765\uff1a \u4e3e\u4f8b\u5c31\u662fS5_6_7_13_14_15\u91cc\uff0c\u54ea\u4e9b\u662f\u51fa\u5ea6\uff1f\u54ea\u4e9b\u662f\u5165\u5ea6\uff1f \u5206\u522b\u6307\u5411\u8c01\u90fd\u8981**\u8fd8\u539f**\u5230\u5b8c\u6574\u8def\u5f84\u89e3\u4e2d\uff08\u6216\u8005\u8bf4\u5728\u539f\u59cb\u56feG\u4e2d\u8bfb\u51fa\u6765\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5199\u8fdb\u53bb\u5206\u91cf\u56fe\u8865\u5145\u5b8c\u6574\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u662f\u8fd9\u6837\u4e00\u5f20\u56fe=Plan\u89c4\u5212\u65b9\u6848\uff09 \u5176\u5b9e\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c\uff0c\u901a\u8fc7\u89c2\u5bdf\u89c4\u5f8b\uff0c\u6211\u4eec\u53d1\u73b0**\u6700\u540e\u627e\u5230\u5206\u91cf\u56fe\u4e2d\u95f4\u89e3\u8fd8\u539f\u51fa\u6765\u7684\u662f\u539f\u59cb\u56feG\u4e2d\u5b50\u56fe** \uff0c\u4e5f\u5c31\u662f\u8bf4\u539f\u59cb\u56feG\u4e2d\u7684\u77e9\u9635\uff0c\u6211\u4eec\u6311\u51fa\u6765\u201c\u4ec5\u4ec5\u5305\u542b\u5206\u91cf\u56fe\u4e2d\u95f4\u89e3\u201d\u63d0\u53ca\u7684\u6240\u6709\u8282\u70b9\u5750\u6807\uff0c\u586b\u51fa\u6765\u8fd9\u4e2a\u7ed3\u70b9\u96c6\u7684\u6a2a\u7eb5\u5750\u6807\u65b0\u7684\u90bb\u63a5\u77e9\u9635=\u5b50\u56fe\u7684\u77e9\u9635\u3002 \u7c7b\u56fe\u8bbe\u8ba1 \u00b6 \u8fd9\u91cc\u7684\u201c\u6700\u77ed\u8def\u53ea\u662f\u62d3\u6251\u610f\u4e49\u7684\u8def\u5f84\u6700\u77ed\u201d\uff0c\u4e0d\u7b49\u4e8e\u5b9e\u9645\u7684\u6700\u77ed\u8def\uff0c\u56e0\u4e3a\u5f3a\u8fde\u901a\u7684\u5faa\u73af\u6b21\u6570\u88ab\u6211\u4eec\u5408\u5e76\u7f29\u51cf\u6210\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u4e0d\u77e5\u9053\u4e00\u4e2a\u8282\u70b9\u5b9e\u9645\u7684\u591a\u5c11\uff0c\u9664\u975e\u52a0\u6743\uff0c\u6bcf\u6b21\u5faa\u73af(n-1)\u6b21\u6216\u8005(m-1)\u6b21\u7684\u8def\u5f84\u90fd\u8868\u793a\u51fa\u6765\uff0c\u4f46\u662f\u8fd9\u6837\u5b9e\u73b0\u8d77\u6765\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u53ef\u80fd\u5148\u5e8f\u5217\u4e2d\u4e0d\u786e\u5b9a\u5730\u51e0\u6b21\u7136\u540e\u5e8f\u5217\u5230\u5173\u952e\u8282\u70b9\u624d\uff08n-1\uff09\u6b21\uff0c\u6240\u4ee5\u8bf4\uff0c\u7f3a\u70b9\u5c31\u662f\uff0c\u8fd9\u65b9\u6cd5\u5176\u5b9e\u627e\u4e0d\u5230\u7edd\u5bf9\u6570\u503c\u4e0a\u8def\u5f84\u6700\u77ed\u7684Plan\u3002 \u597d\u7684\u662f\uff0c\u6709\u4e9bplan\u53ea\u8981\u80fd\u8d70\u901a\uff0c\u8def\u5f84\u6d88\u8017\u957f\u5ea6\u662f\u4e00\u6837\u7684\u3002 \u6709\u627e\u5230\u4e00\u4e2a\u4f8b\u5b50\uff1a \u8bc1\u660e\u201c\u7a0b\u5e8f\u7ec8\u6b62\u6027\u201d \u00b6 \u6211\u63a5\u8fde\u7528\u5230Tarjan,ISM,dijkstra\u7b49\u6700\u77ed\u8def\u8fd9\u4e9b\u73b0\u6709\u7684\u56fe\u8bba\u7b97\u6cd5\u9700\u8981\u8bc1\u660e\u5417\uff1f\u8fd8\u662f\u8bf4\u53ea\u9700\u8981\u7b97\u6cd5\u8bc1\u660e\uff0c\u4e0d\u662f\u73b0\u6210\u7b97\u6cd5\u7684\u7b97\u6cd5------\u201c\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf(\u73af)\u90fd\u627e\u4e00\u6761\u786e\u5b9a\u6027\u8def\u5f84\u201d\u90a3\u4e2a\u7b97\u6cd5\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u6211\u7684\u60f3\u6cd5\u662f\u4f7f\u7528\u7ed3\u70b9\u5c01\u88c5\u540e\u7684\u201c\u5f3a\u8fde\u901a\u5206\u91cf\u5b50\u56fe\u201d\uff0c\u4ece\u5b50\u56fe\u7684\u5165\u53e3\u7ed3\u70b9S_i\u51fa\u53d1dijkstra/Floyd\u627e\u5230\u4e00\u6761\u62b5\u8fbeS_j\u51fa\u53e3\u7ed3\u70b9\u7684\u8def\u3002\u611f\u89c9\uff0c\u597d\u50cf\u90fd\u662f\u56fe\u8bba\u91cc\u9762\u7684\u65b9\u6cd5......\u65e2\u7136\u6bcf\u4e2a\u7528\u5230\u7684\u73b0\u6709\u56fe\u8bba\u7b97\u6cd5\u90fd\u53ef\u7ec8\u6b62\uff0c\u4e00\u4e2a\u63a5\u7740\u4e00\u4e2a\u7528\uff0c\u662f\u4e0d\u662f\u5c31\u201c\u4e00\u5b9a\u7ec8\u6b62\u201d\uff1f \u8f93\u51fa \u00b6 \u539f\u59cb\u95ee\u9898\u7684\u56feG \u6bd4\u5982\u50cf\u8fd9\u6837\uff1a graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u7f29\u51cf\u4e4b\u540e\u7684\u56feDAG \u6bd4\u5982\u50cf\u8fd9\u6837\uff1a graph LR; \u3000\u3000S0-16 -->|bala| S2-18 ; \u3000\u3000S2-18 -->|bala| S3; \u3000\u3000S0-16 -->|bala| S1-17 ; \u3000\u3000S1-17 -->|bala| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S11-19; \u3000\u3000S11-19 -->|\u628ax\u653e\u5728y\u4e0a| S22;\u3000\u3000 \u8fd9\u91cc\uff0c\u6700\u597d\u4e5f\u81ea\u52a8\u753b\u51fa\u6765ISM\u9012\u9636\u7b49\u7ea7\u7684\u56fe \u4e00\u6761\u7f29\u51cf\u7684\u8def\u5f84\u89e3 \u56fe \u6bd4\u5982\u50cf\u8fd9\u6837\uff1a graph LR; \u3000\u3000S0-16 -->|bala| S2-18 ; \u3000\u3000S2-18 -->|bala| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S11-19; \u3000\u3000S11-19 -->|\u628ax\u653e\u5728y\u4e0a| S22;\u3000\u3000\u3000\u3000 \u4e00\u6761\u6ca1\u6709\u6240\u89c1\u7684\u8def\u5f84\u89e3 \u56fe \u6bd4\u5982\u50cf\u8fd9\u6837\uff1a graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u5173\u952e\u4ee3\u7801\u548c\u5b9e\u73b0demo \u00b6 jupyter notebook demo\u5c01\u88c5Packages \u00b6 python package \u53c2\u80032-SAT\u95ee\u9898\u6c42\u89e3\u7b97\u6cd5 \u00b6 https://wenku.baidu.com/view/0f96c3daa58da0116c1749bc.html https://blog.csdn.net/JarjingX/article/details/8521690","title":"\u56fe\u6cd5QNP"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#qnp","text":"","title":"QNP\u56fe\u89e3"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#_1","text":"\u79ef\u6728\u4e16\u754c","title":"\u4e00\u4e2a\u53d8\u91cf"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#_2","text":"\u79ef\u6728\u4e16\u754c\u63a5\u9f99\u7248 \u6587\u4e2d\u8fd9\u6837\u7684\u89e3\u6cd5\u7684\u56fe\u6211\u611f\u89c9\u662f\u4e0d\u5408\u9002\u7684\uff1a \u611f\u89c9\u4e0d\u4e00\u5b9a\u6e05\u7406\u5b8cX\u4e0a\u7684n\u4e2a\u79ef\u6728\uff0c\u518d\u8bf7\u5f00y\u4e0a\u7684m\u4e2a\u79ef\u6728\uff0c \u4e5f\u53ef\u80fd\u662f\u5148y\u540ex **\u66f4\u53ef\u80fd\u6c42\u89e3\u7684\u56fe**\u5e94\u8be5\u662f\u50cf\u4e0b\u9762\u8fd9\u6837x\uff0cy\u6df7\u5408\u7740\u6765\uff1a","title":"\u4e24\u4e2a\u53d8\u91cf"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#qnp_1","text":"QNP\u95ee\u9898\u5f62\u5f0f\u5316\u4e3a\uff1a \\(Q = < F,V,I,O,G >\\) \\(F = \\{ E\u7a7a\u624b,X\u624b\u6301\u79ef\u6728'x',D \u8fbe\u6210\u76ee\u6807\u79ef\u6728'x'\u653e\u5728\u79ef\u6728'y'\u4e0a\u65b9\\}\\) \\(V = {\u79ef\u6728'x'\u4e0a\u65b9\u6709n\u5757\u79ef\u6728,\u79ef\u6728'y'\u4e0a\u65b9\u6709\u975e\u8d1f\u6574\u6570m\u5757\u79ef\u6728}\\) \u6ce8\uff1a\u6211\u8ba4\u4e3a\u5c31\u7b97\u662f\u5c0f\u6570n,m,\u6bd4\u5982\u6676\u5706\u5806\u53e0\u5236\u9020\uff0c\u53ea\u8981\u662f\u53ef\u5b9a\u4e49\u5355\u4f4d\u6570\u91cf\u79bb\u6563\u4e8b\u4ef6\uff0c\u5c31\u80fd\u591f\u901a\u8fc7GCD(n,m)\uff0c\u7136\u540e\u628an'=n/GCD,m'=m/GCD\u53d8\u6210\u6574\u6570\u5355\u4f4d\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u8003\u8651\u6574\u6570n,m\u3002","title":"QNP\u95ee\u9898\u5f62\u5f0f\u5316"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#states","text":"\\(Init = S_{16}:(E,\\overline{X},\\overline{D},n>0,m>0)\\) \\(Goal = S_{22}(E,\\overline{X},D,n=0,m>0)\\) \u6bcf\u4e2a\u72b6\u6001\u90fd \\(S=F+V=f_1,f_2,...,f_f+v_1,v_2,...,v_v\\) \u7ec4\u6210\uff0c \u65b9\u4fbf\u53ef\u7528\u72b6\u6001\u7684\u679a\u4e3e\u8fc7\u7a0b\u505a\u5230\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u5e76\u4e14\u540e\u7eed\u753b\u56fe\u7b80\u4fbf: \u7ea6\u5b9a\u4e00\u79cd\"\u72b6\u6001s \u2192 interger\u6574\u6570 \\(\\in \\{0,1,2, ... ,2^{f+v}-1\\}\\) \"\u7684\u6620\u5c04\u65b9\u5f0f---\u72b6\u6001\u7801\u3002 \u95ed\u7740\u773c\u775b\u679a\u4e3e\u7684\u8bdd\uff0c\u6709 \\(2^n*2^n\\) \u72b6\u6001\u5173\u7cfb\u53ef\u8fbe\u77e9\u9635M\uff0c\u5176\u4e2d\uff0c\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff1a\u5f53\u72b6\u6001\u7ed3\u70b9 \\(S_i\\) \u7684\u884c\u5217\u90fd\u5168\u4e3a\u96f6\uff0c\u8fd9\u662f\u5b64\u7acb\u8282\u70b9\u6216\u8005\u8bf4\u662f\u56fe\uff0c\u53ef\u4ee5\u5220\u51cf\u6389\u8fd9\u4e9b\u6ca1\u6709\u7528\u7684\u72b6\u6001\u8282\u70b9\u3002 \u7a7a\u624b \u624b\u6301X Goal X\u4e0an Y\u4e0am \u72b6\u6001\u7f16\u7801 E X D n=0 m=0 \\(11111_B = 31_H\\) \\(\\overline{E}\\) \\(\\overline{X}\\) \\(\\overline{D}\\) n>0 m>0 \\(00000_B = 0_H\\)","title":"states"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#actions","text":"Pick-above-x = hE,\u00acX,\u00acD,n>0,m>0;\u00acE,n\u2193i to pick the topmost block that is above x, \\(a_1\\) ,Pick-above-x\u6361\u8d77\u6765x\u4e0a\u65b9\u79ef\u6728: graph LR; \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0(\u00acE,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2(\u00acE,\u00acX,\u00acD,n=0,m>0) ; \u3000\u3000S17(E,\u00acX,\u00acD,n>0,m=0) -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1(\u00acE,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S17(E,\u00acX,\u00acD,n>0,m=0) -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3(\u00acE,\u00acX,\u00acD,n=0,m=0); \\(a_2\\) \uff0cPick-above-y\u6361\u8d77\u6765y\u4e0a\u65b9\u79ef\u6728: Pick-above-y = hE,\u00acX,\u00acD,n=0,m>0;\u00acE,m\u2193i to pick the topmost block that is above x, graph LR; \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0(\u00acE,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S18(E,\u00acX,\u00acD,n=0,m>0) -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2(\u00acE,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S18(E,\u00acX,\u00acD,n=0,m>0) -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3(\u00acE,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1(\u00acE,\u00acX,\u00acD,n>0,m=0) ; \\(a_3\\) \uff0cput-aside\u79ef\u6728(\u4e0d\u5305\u62ecx\uff0c\u624b\u6301x\u653e\u4e00\u8fb9\u53eb\u505aput-x-aside\u662f\u4e0b\u9762\u8ba8\u8bba\u7684\u4e00\u4e2a\u52a8\u4f5c)\u653e\u4e00\u8fb9\u5230\u684c\u9762Table: Putaside-1 = h\u00acE,\u00acX,\u00acD,n=0;Ei to put aside (not above x or y) the block being held, Putaside-2 = h\u00acE,\u00acX,\u00acD,n>0,m>0;Ei to put aside (not above x or y) the block being held, graph LR; \u3000\u3000S0(\u00acE,\u00acX,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S16(E,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S2(\u00acE,\u00acX,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S18(E,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S1(\u00acE,\u00acX,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S17(E,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S3(\u00acE,\u00acX,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S19(E,\u00acX,\u00acD,n=0,m=0); \\(a_4\\) \uff0cpick-x\uff0c\u62ff\u8d77\u6765x\u77f3\u5934\uff0c \u5173\u952e\u52a8\u4f5c \uff0cpre\u4e00\u5bf9\u4e00\u6620\u5c04effect\u7684\u884c\u4e3a\uff0c \u53ef\u4ee5\u5408\u5e76 ** \\(\\bf{g^{...}}\\) \u2192...\u2192g'\u2192G**\u72b6\u6001\u94fe \u8868\u793a\u4e3a \\(g^{...}\\) \u72b6\u6001,\u76ee\u6807\u72b6\u6001G\u7684\u201c\u7b49\u4ef7\u6001s\u201d\uff0c\u51cf\u5c11\u72b6\u6001\u6570\uff0c\u65b9\u4fbf\u4e0d\u5fc5\u8981\u7684\u6392\u5e8f\u3002 Pick-x = hE,\u00acX,\u00acD,n=0,m=0;\u00acE,Xi to pick block x, graph LR; \u3000\u3000S19(E,\u00acX,\u00acD,n=0,m=0) -->|\u62ffx\u79ef\u6728| S11(E,\u00acX,\u00acD,n=0,m=0);","title":"Actions:"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#-","text":"\u7b97\u6cd5\u539f\u7406\uff1a\u77e9\u9635A\u7ed3\u70b9\u884c\u5217\u5404\u53ea\u6709\u4e00\u4e2a\u4e14\u4e0d\u76f8\u7b49\uff0c\u56e0\u4e3a\u63d0\u9ad8\u590d\u6742\u5ea6\u800c\u4e14\u4e0d\u53bb\u6389\u4e5f\u884c\uff0c\u5728\u8fd9\u6700\u540e\u5408\u5e76\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u9012\u5f52\u6df1\u5ea6\uff0c\u6ca1\u5fc5\u8981\u592a\u6df1\u7684\u5c01\u88c5\uff0c\u6700\u65b0\u66f4\u65b0\uff0c\u8fd9\u662f\u591a\u4f59\u7684\u60f3\u6cd5\u3002 \u6700\u540e\u51b3\u5b9a\u820d\u5f03\u8fd9\u4e2a\u7b49\u6548\uff0c\u4e0d\u9002\u7528 \u540c\u7406\uff0c\u4e0d\u4ec5\u6709\u7ec8\u6b62\u7b49\u4ef7\u6001\uff0c\u8fc7\u7a0b\u4e2d,\u4e5f\u628a\u4e00\u5bf9\u4e00\u6620\u5c04\u7684\u5355\u4e00\u72b6\u6001\u94fe\uff0c\u7b49\u4ef7\u6807\u8bc6\u4e3a \\(S_{\u72b6\u6001\u94fe\u4e2d\u6700\u65e9\uff08\u5de6\uff09\u7684\u72b6\u6001}'\\) \u6bd4\u5982\uff1a \\(S_3 -->S_{19} --> S_{11} --> S_{21}\\) graph LR; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u6807\u8bc6\u4e3a \\(S_3'\\) graph LR; \u3000\u3000S3'; \\(a_5\\) \uff0cput-x-on-y,\u628a\u624b\u4e2d\u7684x\u653e\u5728y\u4e0a\u65b9\uff1a Put-x-on-y = h\u00acE,X,\u00acD,n=0,m=0;E,\u00acX,D,m\u2191i to put x on y. graph LR; \u3000\u3000S11(E,\u00acX,\u00acD,n=0,m=0) -->|\u628ax\u653e\u5728y\u4e0a| S22(E,\u00acX,D,n=0,m>0); \\(a_6\\) ,put-x-aside,\u5efa\u8bae\u522b\u5b9a\u4e49\u8fd9\u52a8\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5371\u9669\uff08\u6beb\u65e0\u610f\u4e49\u800c\u4e14\u591a\u4f59\uff09\u7684\u52a8\u4f5c\uff0c\u56e0\u4e3a\u6ca1\u6709\u5b9a\u4e49pick-block-from-table\uff0c\u5982\u679cx\u653e\u684c\u9762\u62ff\u4e0d\u8d77\u6765\u4efb\u52a1\u5931\u8d25\uff0c\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u526a\u679d\u7684\u5931\u8d25\u8def\u5f84\u3002\u4f46\u662f\u5728\u5bf9\u95ee\u9898\u5206\u6790\u4e0d\u591f\u6e05\u695a\u7684\u65f6\u5019\uff0c\u6709\u53ef\u80fd\u4f20\u8fdb\u53bb\u8fd9\u79cd\u9519\u7684\u3002 Put-x-aside = h\u00acE,X,\u00acD,n=0,m>0;E,\u00acXi to put block x aside (not above y), and graph LR; \u3000\u3000S11(E,\u00acX,\u00acD,n=0,m=0) -->|put_x_aside| S19(E,\u00acX,\u00acD,n=0,m=0); \uff081\uff09\u5982\u679c\u4e0d\u5141\u8bb8put-x-aside\u884c\u4e3a\uff1a graph LR; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u6216\u8005\u628apick-x\u4e0d\u7406\u89e3\u4e3a\u201c\u4ecex\u6240\u5728tower\u53d6\u51fa\u6765x\u201d(\u673a\u68b0\u81c2\u5b9a\u70b9\u4e24\u4e2atower\u53d6\u4ef6)\uff0c\u800c\u662f\u7406\u89e3\u4e3a\u201cpick-x\u53ef\u4ee5\u81ea\u52a8\u68c0\u7d22table\u4e2dx\u7684\u4f4d\u7f6e\uff0c\u54ea\u6015x\u5728tower\u4e0a\u4f46\u662fx\u4e0a\u65b9\u6ca1\u6709\u79ef\u6728\uff0c\u7136\u540e\u81ea\u52a8\u6293\u53d6x\u201d\u3002\u5c31\u4f1a\u9677\u5165\u4e00\u79cd \\(a_6\\) \u653ex\u7136\u540e \\(a_4\\) \u6293\u8d77\u6765x\u7684\u65e0\u610f\u4e49\u5faa\u73af\u4e2d\uff0c\u5f53\u7136\u4e0d\u5b9a\u4e49\u8fd9\u6b65\u4e0d\u5c31\u884c\u4e86\u5417\uff08\u5f53\u95ee\u9898\u5206\u6790\u8db3\u591f\u6e05\u695a\uff09\uff1f \u6211\u4eec\u5e0c\u671b\u5f53\u95ee\u9898\u5206\u6790\u4e0d\u6e05\u695a\uff0c\u5047\u5982\u5b9a\u4e49\u4e86\u8fd9\u6b65 \\(a_6\\) \uff0c\u4e5f\u80fd\u6c42\u89e3\u7684\u65f6\u5019\u907f\u5f00 \u901a\u5f80Error\u7684\u5931\u8d25Plan\u3002 \uff082\uff09\u5982\u679c\u5141\u8bb8put-x-aside\u884c\u4e3a\uff1a graph LR; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u53ea\u8981\u5bf9\u95ee\u9898\u601d\u8003\u8db3\u591f\u6e05\u6670\uff0c\u5582\u8fdb\u53bb\u7684\u65f6\u5019\u5c31\u4e0d\u4f1a\u51fa\u73b0\u6709put-x-aside\u8fd9\u4e2a\u60c5\u51b5\uff0c\u95ee\u9898\u662f\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u7684action\u4e0d\u662f \u5168\u5c40\u552f\u4e00\u6807\u8bc6\u72b6\u6001\u7801\u7684precondition-->\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u72b6\u6001\u7801\u7684effect \u8fd9\u4e48\u6e05\u6670\u7684\uff0c\u6240\u4ee5\u6709\u51e0\u4e2a\u95ee\u9898\uff1a \u6709\u53ef\u80fd\u51fa\u73b0\u5197\u4f59\u7684action\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u95ee\u9898\uff0c\u96be\u4ee5\u76f4\u63a5\u4e00\u5f00\u59cb\u8f93\u5165\u5c31\u628a\u95ee\u9898\u63cf\u8ff0\u5f88\u6e05\u6670\uff0c\u786e\u5b9a\u6240\u6709\u6709\u53ef\u80fd\u8fbe\u5230\u7684\u72b6\u6001\u603b\u6570\uff0c\u6bd4\u5982\u653e\u4e0b\u77f3\u5934\uff0c\u552f\u4e00\u7684\u76f4\u89c2\u5f62\u5f0f\u5316\u8868\u793a< \\(\\overline{E},E\\) >,\u5176\u5b9e\u5bf9\u5e94\u7684\u72b6\u6001\u6709\uff1a graph LR; \u3000\u3000S_(\u00acE,_,_,_,_) -->|put-aside| S__(E,_,_,_,_); \u7b80\u5355\u6765\u8bf4\uff0c_\u7f3a\u7701\u503c\u4e5f\u662fQNPSAT\u65b9\u6cd5\u4e2d\uff0c\u628a\u5728r\u6b65\u4ee5\u5185\u201d \\(S_0,S_G,S_1,...,S_{r-2}\\) \u201c\u72b6\u6001\u503c\u7edf\u7edf\u679a\u4e3e\uff0c\u5582\u8fdb\u53bb\u751f\u6210\u201d\u539f\u5b50\u547d\u9898\u201c\u7684\u539f\u56e0\u3002 \u6839\u636e\u8fd9\u4e2a\u8868\u683c\uff0c\u76f4\u63a5\u679a\u4e3e\u7684\u8bdd\uff1a \u7a7a\u624b \u624b\u6301X Goal X\u4e0an Y\u4e0am \u72b6\u6001\u7f16\u7801 E X D n>0 m>0 \\(11111_B = 31_H\\) \\(\\overline{E}\\) \\(\\overline{X}\\) \\(\\overline{D}\\) n=0 m=0 \\(00000_B = 0_H\\) \u95ed\u7740\u773c\u775b\u679a\u4e3e\u7684\u8bdd\uff0c graph LR; \u3000\u3000S12(\u00acE,X,D,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S28(E,X,D,n>0,m>0); \u3000\u3000S14(\u00acE,X,D,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S30(E,X,D,n=0,m>0); \u3000\u3000S13(\u00acE,X,D,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S29(E,X,D,n>0,m=0); \u3000\u3000S15(\u00acE,X,D,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S31(E,X,D,n=0,m=0);\u3000 \u3000\u3000S8(\u00acE,X,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S24(E,X,\u00acD,n>0,m>0); \u3000\u3000S10(\u00acE,X,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S26(E,X,\u00acD,n=0,m>0); \u3000\u3000S9(\u00acE,X,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S25(E,X,\u00acD,n>0,m=0); \u3000\u3000S11(\u00acE,X,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S27(E,X,\u00acD,n=0,m=0); \u3000\u3000S4(\u00acE,\u00acX,D,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S20(E,\u00acX,D,n>0,m>0); \u3000\u3000S6(\u00acE,\u00acX,D,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S22(E,\u00acX,D,n=0,m>0); \u3000\u3000S5(\u00acE,\u00acX,D,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S21(E,\u00acX,D,n>0,m=0); \u3000\u3000S7(\u00acE,\u00acX,D,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S23(E,\u00acX,D,n=0,m=0);\u3000 \u3000\u3000S0(\u00acE,\u00acX,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S16(E,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S2(\u00acE,\u00acX,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S18(E,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S1(\u00acE,\u00acX,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S17(E,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S3(\u00acE,\u00acX,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S19(E,\u00acX,\u00acD,n=0,m=0); \u4f1a\u591a\u51fa\u6765\u51e0\u4e2a\u5b64\u7acb\u7684\u56fe\uff0c\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff1a\u5f53\u72b6\u6001\u7ed3\u70b9 \\(S_i\\) \u7684\u884c\u5217\u90fd\u5168\u4e3a\u96f6\uff0c\u8fd9\u662f\u5b64\u7acb\u8282\u70b9\uff0c\u53ef\u4ee5\u5220\u51cf\u6389\u8fd9\u4e9b\u6ca1\u6709\u7528\u7684\u72b6\u6001\u8282\u70b9\u3002 \u5982\u679c\u8fd9\u4e9b\u5197\u4f59\u4e0d\u53ef\u80fd\u62b5\u8fbe\u7684\u72b6\u6001\u8fd8\u4e0d\u5e78\u5f62\u6210\u53e6\u4e00\u5c0f\u6bb5\u7ed3\u70b9\u6570>1\u7684\u56fe\uff0c\u90a3\u4e48\u5c31\u9700\u8981\uff08\u4e0b\u6587\u7684ISM\u6280\u672f\u540e\u53bb\u6389\u533a\u57df\u65e0\u5173\u7684\u56fe\uff09 graph LR; \u3000\u3000S0(\u00acE,\u00acX,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S16(E,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S2(\u00acE,\u00acX,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S18(E,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S1(\u00acE,\u00acX,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S17(E,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S3(\u00acE,\u00acX,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S19(E,\u00acX,\u00acD,n=0,m=0); \u5b9e\u9645\u4e0a\u771f\u6b63\u6709\u53ef\u80fd\u7684\u53ea\u6709\u8fd9\u56db\u79cd\u60c5\u51b5\uff1a","title":"\u201c\u5355\u4e00\u72b6\u6001\u94fe\u7b49\u6548\u201d---\u5f03"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#solution","text":"\u7136\u540e\u6574\u4e2a\u95ee\u9898\u7684\u56fe\u89e3\u5c31\u662f\u201c\u5728\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e2d\u627e\u5230\u4e00\u6761\u8def\u5f84\u201d\uff1a graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u5176\u4e2d\uff1a graph LR; \u3000\u3000$S16(E,\u00acX,\u00acD,n>0,m>0),S0(\u00acE,\u00acX,\u00acD,n>0,m>0)$ \u3000\u3000$S2(\u00acE,\u00acX,\u00acD,n=0,m>0),S18(E,\u00acX,\u00acD,n=0,m>0)$ \u3000\u3000$S1(\u00acE,\u00acX,\u00acD,n>0,m=0),S17(E,\u00acX,\u00acD,n>0,m=0)$ \u3000\u3000$S3(\u00acE,\u00acX,\u00acD,n=0,m=0),S11(E,\u00acX,\u00acD,n=0,m=0),S19(E,\u00acX,\u00acD,n=0,m=0),S22(E,\u00acX,D,n=0,m>0)$ \u3000\u3000 \u5982\u679c\u6362\u6210\u72b6\u6001\u8be6\u7ec6\u7684\u56fe\u5c31\u662f\uff1a graph LR; \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0(\u00acE,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S0(\u00acE,\u00acX,\u00acD,n>0,m>0) -->|put-aside\u653e\u4e00\u8fb9| S16(E,\u00acX,\u00acD,n>0,m>0); \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2(\u00acE,\u00acX,\u00acD,n=0,m>0) ; \u3000\u3000S2(\u00acE,\u00acX,\u00acD,n=0,m>0) -->|put_aside\u653e\u4e00\u8fb9| S18(E,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S18(E,\u00acX,\u00acD,n=0,m>0) -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2(\u00acE,\u00acX,\u00acD,n=0,m>0); \u3000\u3000S18(E,\u00acX,\u00acD,n=0,m>0) -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3(\u00acE,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S16(E,\u00acX,\u00acD,n>0,m>0) -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1(\u00acE,\u00acX,\u00acD,n>0,m=0) ; \u3000\u3000S1(\u00acE,\u00acX,\u00acD,n>0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S17(E,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S17(E,\u00acX,\u00acD,n>0,m=0) -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1(\u00acE,\u00acX,\u00acD,n>0,m=0); \u3000\u3000S17(E,\u00acX,\u00acD,n>0,m=0) -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3(\u00acE,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S3(\u00acE,\u00acX,\u00acD,n=0,m=0) -->|put_aside\u653e\u4e00\u8fb9| S19(E,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S19(E,\u00acX,\u00acD,n=0,m=0) -->|\u62ffx\u79ef\u6728| S11(E,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S11(E,\u00acX,\u00acD,n=0,m=0) -->|put_x_aside| S19(E,\u00acX,\u00acD,n=0,m=0); \u3000\u3000S11(E,\u00acX,\u00acD,n=0,m=0) -->|\u628ax\u653e\u5728y\u4e0a| S22(E,\u00acX,D,n=0,m>0); \u603b\u8ba1\u4e00\u4e0b\u6c42\u89e3\u7684\u6b65\u9aa4 \u6807\u6ce8\u51fa\u6240\u6709\u72b6\u6001\uff1a\u6839\u636e\u52a8\u4f5c\u5168\u89c2\u5bdf\u63cf\u8ff0\uff0c\u628a\u52a8\u4f5c\u4e2d\uff08precondition+effect\uff09\u4e2d\u6d89\u53caStates\u90fd\u201c\u72b6\u6001\u7f16\u7801\u201d\u7ed3\u70b9node\uff1b \u52a8\u4f5cprint\u95ee\u9898\u63cf\u8ff0\u7684\u7f51\u7edc\u56fe.jpg(\u4e0a\u56fe)\uff1b \u5728DG\u6709\u5411\u8fde\u901a\u56fe\u4e2d\u627e\u5230\u4ece\u201c \\(S_{\u521d\u59cb}\\) \u201d\u5230\" \\(S_{\u76ee\u6807}\\) \"\u7684\u67d0\u4e00\u6761\u8def\u5f84\uff0c\u5c31\u7b49\u4e8e\u89c4\u5212\u6210\u529f\uff01 DG\u6709\u5411\u56fe graph LR; \u3000\u3000DG\u6709\u5411\u56fe -->|\u524d\u5411\u641c\u7d22\u4eceS\u521d\u59cb\u5f00\u59cb| \u89e3\u7b54\u601d\u8def\u4e00; \u3000\u3000DG\u6709\u5411\u56fe -->|\u540e\u5411\u641c\u7d22\u4eceS\u76ee\u6807\u56de\u6eaf| \u89e3\u7b54\u601d\u8def\u4e8c\u80fd\u5f97\u5230\u6240\u6709\u8def\u5f84; \u3000\u3000DG\u6709\u5411\u56fe -->|dijkstra\u7b49\u7b49\u6700\u77ed\u8def\u7b97\u6cd5\u6bcf\u7ecf\u8282\u70b9+1\u6d88\u8017\u6700\u77ed| \u89e3\u7b54\u601d\u8def\u4e09\u6700\u77ed\u8def\u5f84; \u3000\u3000DG\u6709\u5411\u56fe -->|QNP2SAT.md\u6587\u6863| \u89e3\u7b54\u65b9\u6cd5\u56db; \u524d\u5411\u641c\u7d22\u4eceS\u521d\u59cb\u5f00\u59cb\u5305\u62ec\u5404\u79cd\u542f\u53d1\u5f0f\uff0c\u5e7f\u5ea6\u4f18\u5148\uff0c\u6df1\u5ea6\u4f18\u5148\u3002\u679a\u4e3e\u7b28\u65b9\u6cd5 \u540e\u5411\u641c\u7d22\u4eceS\u76ee\u6807\u56de\u6eaf\u591a\u4e2a\u6808\u5b58\u4e0b\u6765\u591a\u4e2aaction\u5e8f\u5217\u7136\u540e\u6bcf\u4e2a\u6808\u5206\u652f\uff0c\u90fd\u540e\u8fdb\u5148\u51fa\u5f97\u5230\u6240\u6709\u65b9\u6848\uff08\u53ef\u8fbe\u77e9\u9635 \\(M=(A+I\uff09^r\\) \uff0c\u6bcf\u6b21\u591a\u8d70\u4e00\u6b65\uff0c\u591a\u51fa\u6765\u7684\u53ef\u4ee5\u901a\u8fc7(A+I) r-(A+I) \u4ece\u81f3\u8868\u77e9\u9635\u4e2d\uff0c\u4e0a\u6b21\u7684\u7ed3\u70b9\u5bf9\u5e94\u7684\u5165\u5ea6\u7684\u201c\u5217\u201d\u4e2d\u6709\u591a\u5c11\u4e2a\u975e\u96f6\u5143\u7d20\u72b6\u6001\uff0c\u5f53\u90a3\u4e2a\u72b6\u6001\u4e0d\u662f \\(S_{\u521d\u59cb}\\) \u5c31mark\u4e0b\u6765\uff0c\u5982\u679c\u662f\uff0c\u5c31\u7ed3\u675f\u8fd9\u6761\u5206\u652f\uff09\uff0c\u5982\u679c\u53ea\u9700\u8981\u627e\u4e00\u6761\u8def\u5f84\uff0c\u5012\u7740\u8d70\u8ff7\u5bab\uff0c\u8fd8\u662f\u5c11\u5f88\u591a\u5c94\u8def\u7684\u3002 \u8ba1\u7b97 \\((A+I)^\\infty=(A+I)^r\\) \u662f\u6700\u957fr\u6b65\u7684\u6709\u5411\u56fe\u4e2d\u53ef\u8fbe\u77e9\u9635 \\(M_r\\) \uff0cS\u521d\u2192S\u76ee\u6807\u5982\u679cM[\u521d\uff0c\u76ee\u6807]==1\u8bf4\u660e\u6709\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u9000\u51fa\u7a0b\u5e8f\u3002 \u56de\u6eaf \\((A+I)^r-(A+I)^{r - 1}=A^r\\) \u7b2cr\u6b65\u65b0\u589e\u53ef\u8fbe\u77e9\u9635\u4e2d\uff0c\u627eS\u76ee\u6807\u72b6\u6001\u7ed3\u70b9\u6240\u5728\u5217\u7684\uff08\u884c \\(\\neq 0\\) \u7684\u6a2a\u5750\u6807\uff09\u5165\u5ea6\u7ed3\u70b9\u4eec\uff0c\u5224\u65ad\u662f\u5426==S_\u521d\uff0c\u5982\u679c\u4e0d\u7b49\u4e8eS\u521d\u7edf\u7edf\u8fdb\u6808\uff0c\u8fd9\u4e9b\u7ed3\u70b9\u96c6\u6807\u8bb0\u4e3aReachableG\u00ae,\u610f\u601d\u662fr\u6b65\u5185\u53ef\u8fbe\uff0c\u5982\u679c\u91cc\u9762\u6709\u67d0\u4e2a\u7ed3\u70b9\u7b49\u4e8eS\u521d\u5c31\u8bf4\u660e\u627e\u5230\u5176\u4e2d\u4e00\u6761\u8def\u5f84\u3002 \u56de\u6eaf \\((A+I)^{r-1}-(A+I)^{r-2}=A^{r-1}\\) \u7b2cr-1\u6b65\u65b0\u589e\u53ef\u8fbe\u77e9\u9635,\u5faa\u73af ......\u56de\u6eaf \\((A+I)^2-(A+I)^{1}=A^2\\) 2\u6b65\u4ee5\u5185\u65b0\u589e\u53ef\u8fbe\u77e9\u9635\u503c\u4e2d\uff0c\u5faa\u73af \u6267\u884c\u5faa\u73af\u76f4\u5230\u56de\u6eaf \\((A+I)^1-(A+I)^{0}=(A+I)^1-I=A\\) ,\u6b63\u5e38\u6765\u8bf4\uff0c\u53ea\u8981\u6bcf\u6b21\u6709S_\u521d\u7684\u8def\u5f84\u90fd\u627e\u51fa\u6765\u6808\u91cc\u5b58\u8d77\u6765\uff0c\u5c31\u80fd\u5f97\u5230\u6240\u6709\u7684\u8def\u5f84\uff01\u5982\u679c\u524d\u9762\u6240\u6709\u5faa\u73af\u4e2d\u4e00\u4e2aS_\u521d\u90fd\u8fd8\u6ca1\u627e\u5230\uff0c\u90a3\u4e00\u5f00\u59cb\u5c31\u4e0d\u53ef\u80fd\u201cM[\u521d\uff0c\u76ee\u6807]==1\u8bf4\u660e\u6709\u89e3\u201d\uff0c\u8bf4\u660e\u8f93\u5165\u9519\u8bef\u6216\u8005\u53d1\u751f\u67d0\u4e9b\u7684\u7a0b\u5e8f\u9519\u8bef\uff0c\u5426\u5219\u7b2c\u4e00\u6b65\u5c31\u5e94\u8be5\u9000\u51fa\u7a0b\u5e8f\u3002","title":"solution\u56fe\u89e3"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#1-1-","text":"\u8fd8\u6709\u4e00\u4e2a\u7b49\u6548\u65b9\u4fbf\u56fe\u7684\u601d\u8003\u6c42\u89e3\u8fc7\u7a0b\u5219\u662f\u201c\u6211\u4eecn>0,n=0\u4f5c\u4e3anon-deterministic\u201d \u7b49\u6548\u4e3a\u4e0b\u56fe\uff1a \u5176\u4e2d\u53ef\u80fd\u5f88\u591a\u6b21\u5faa\u73af\uff0c\u4f46\u662f\u6211\u4eec\u6c42\u89e3\" \\(S_\u521d\u59cb-->S_\u76ee\u6807\\) \"\u95ee\u9898\u4e2d\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u5173\u5fc3\u5faa\u73af\u4e86\u591a\u5c11\u6b21\uff0c\u56e0\u4e3a\u5177\u4f53\u95ee\u9898\u7684n,m\u5177\u4f53\u6570\u503c\u4e0d\u9700\u8981\u4e00\u6837\uff0c\u6211\u4eec\u53ea\u8981\u5f53\u4f5c\u7b49\u6548\u7684 \\(S_{16-0}\\) \u7ed3\u70b9\u5373\u53ef\u3002\u8fd9\u6837\u4e0d\u4f46\u6709\u52a9\u4e8e\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u4e5f\u80fd\u66f4\u597d\u6293\u4f4f\u95ee\u9898\u6c42\u89e3\u7684\u672c\u8d28---\u627e\u4e00\u6761 \\(S_\u521d\u59cb-->S_\u76ee\u6807\\) \u8def\u5f84\u3002 \u4e8e\u662f\u539f\u6765\u7684\u95ee\u9898\u7684\u56fe A\u90bb\u63a5\u77e9\u9635\uff1a \u7f16\u53f7 S16 S0 S2 S18 S1 S17 S3' S16 0 1 0 0 0 0 0 S0 1 0 1 1 0 0 0 S2 0 0 0 0 1 0 0 S18 0 0 0 0 0 1 0 S1 0 0 1 0 0 0 1 S17 0 0 0 1 0 0 1 S3' 0 0 1 0 0 0 0 \u4e00\u6b65\u5185\u8d70\u5b8c\u7684 \\(M^1=(A+I)^1\\) \u7f16\u53f7 S16 S0 S2 S18 S1 S17 S3' S16 1 1 0 0 0 0 0 S0 1 1 1 1 0 0 0 S2 0 0 1 0 1 0 0 S18 0 0 0 1 0 1 0 S1 0 0 1 0 1 0 1 S17 0 0 0 1 0 1 1 S3' 0 0 1 0 0 0 1 \u8fd9\u77e9\u9635\u4e2d\u7684 \\(S_s'\\) \u662f\uff1a\u5bf9 \\(s_{19}\\) \u548c \\(S_{11}\\) \u5e94\u7528\u201c\u5f3a\u8fde\u901a\u7b49\u6548\u201d\u4e4b\u540e\uff0c\u518d\u5e94\u7528\u201c\u5355\u4e00\u72b6\u6001\u94fe\u7b49\u6548\u201d\u5f97\u5230 \\(S_3'\\) \u5982\u56fe\u6240\u793a\uff1a \u6ce8\u610f\u8981\u6570\u636e\u7ed3\u6784\u4e2d\u8981\u4fdd\u5b58\u5230\u5e95\u662f\u8c01\u5728\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u4fdd\u5b58\u6210\u4e00\u4e2a\u4e8c\u7ef4\u8868\u683c\u3002\u6bd4\u5982\"S19-11\u4e2d\uff0cS19\u5165\u5ea6\uff0cS11\u51fa\u5ea6\"\uff0c\u5728\u5408\u5e76\u7684\u65f6\u5019\u8981\u5b58\u4e0b\u6765\u8fd9\u6837\u7684\u4fe1\u606f\uff08\u65b9\u4fbf\u8fd8\u539f\u6c42\u89e3\u8def\u5f84\uff09\uff1a S19 S11 \u5165\u5ea6 1 0 \u51fa\u5ea6 0 1 \u5b9e\u9645\u4e0a\u4e00\u4e2a\u56fe\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u6807\u8bb0\u53d8\u91cfchanged==0/1\uff0c\u5bf9\u4e00\u5f20\u56fe\u53cd\u590d\u5faa\u73af\u5e94\u7528\u4e24\u4e2a\u7b49\u6548\uff1a graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffy\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffy\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; do{ changed=0; if(\u5b58\u5728\u5bf9\u89d2\u5143\u7d201-1) {\"\u5f3a\u8fde\u901a\u7b49\u6548+changed=1}; if(actions\u7684pre-effect\u4e2d\u5b58\u57281-1\u6620\u5c04\u7684\u60c5\u51b5) {\"\u5355\u4e00\u72b6\u6001\u94fe\u7b49\u6548\"+changed=1; } Until (changed==0) \u53d8\u6210\u65b0\u7684\u56fe graph LR; \u3000\u3000S0-16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2-18 ; \u3000\u3000S2-18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S0-16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1-17 ; \u3000\u3000S1-17 -->|\u5f53n==1\u62ffy\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19-11; \u3000\u3000S19-11 -->|\u628ax\u653e\u5728y\u4e0a| S22; A\u90bb\u63a5\u77e9\u9635\uff1a \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 0 1 1 0 S2-18 0 0 0 1 S1-17 0 0 0 1 S3' 0 0 0 0 \u4e00\u6b65\u5185\u8d70\u5b8c\u7684 \\(M^1=(A+I)^1\\) \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 1 1 1 0 S2-18 0 1 0 1 S1-17 0 0 1 1 S3' 0 0 0 1 \u5e03\u5c14\u4ee3\u6570\u6cd5\uff1a 0+0=0\uff0c0+1=1\uff0c1+0=1\uff0c1+1=1 0*0=0\uff0c0*1=0\uff0c1*0=0,1*1=1 \u4e24\u6b65\u5185\u8d70\u5b8c\u53ef\u8fbe\u77e9\u9635 \\(M^2=(A+I)^2=A^2+(A+I)\\) \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 1 1 1 1 S2-18 0 1 0 1 S1-17 0 0 1 1 S3' 0 0 0 1 \\(A^2\\) \u77e9\u9635\uff1a \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 0 1 1 1=0*0+1*1+1*1+0*0 S2-18 0 0 0 1 S1-17 0 0 0 1 S3' 0 0 0 0 \u5176\u4e2d\u591a\u51fa\u6765\u7684\u53ef\u8fbe\u7684\u5730\u65b9\u53ef\u4ee5\u7528 \\(M^2-M^1-A=A^2-A\\) \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 0 0 0 1 S2-18 0 0 0 0 S1-17 0 0 0 0 S3' 0 0 0 0 \u76f4\u63a5\u5f97\u5230. \u7b2c......\u6b65 \u5047\u8bbe\u8fd9\u4e2a\u6709\u5411\u56feDG\u6700\u591ar\u6b65\u4ee5\u5185\u4ece\u521d\u59cb\u70b9\u80fd\u62b5\u8fbe\u76ee\u6807\u5750\u6807\uff0c\u90a3\u4e48\u6211\u4eec\u6709 \\((A+I)^1 \\neq (A+I)^2 \\neq (A+I)^{...} \\neq (A+I)^r =(A+I)^{r+1} = (A+I)^{...} =(A+I)^{\\infty}\\) \u6240\u4ee5\u6700\u540er\u6b65\u5185\u53ef\u8fbe\u7684\u56fe\u5c31\u662f\u53ef\u8fbe\u77e9\u9635M,\u8868\u793a\u7684\u610f\u4e49\u5c31\u662f\u201cr\u6b65\u6216\u8005\u8bf4\u65e0\u7a77\u5185\uff0c\u56fe\u4e2d\u884c\u8282\u70b9i\u8fde\u901a\u5217\u8282\u70b9j\u8fd9\u4ef6\u4e8b\u5982\u679c\u4e3a\u771f\uff0c\u90a3\u4e48\u4ece\u81f3\u8868\uff08\u53ef\u8fbe\u77e9\u9635\uff09\u5bf9\u5e94m[i,j]=0,\u5426\u5219M[i,j]=0.\u201d \u8fd9\u4e2ademo\u7684r=2,\u53cd\u6b63r\u66f4\u5927\u4e5f\u662f\u4e00\u6837\u6ef4\u7b97\uff0c\u6700\u540e\u77e5\u9053r\u6b65\u6216\u8005\u8bf4\u65e0\u7a77\u6b65\u4e4b\u5185\u7684\u53ef\u8fbe\u77e9\u9635\uff1a \u7f16\u53f7 S0-16 S2-18 S1-17 S3' S0-16 1 1 1 1 S2-18 0 1 0 1 S1-17 0 0 1 1 S3' 0 0 0 1 \u5165\u5ea6\u5217\u5168\u4e3a\u96f6,\u8d77\u59cb\u96c6B(S)={s0-16}\uff0c\u53ef\u8fbe\u96c6S0-16\u884c\u5bf9\u5e94\u5217\u4e3a1\u7684{S0-16\uff0cS2-18\uff0cS1-17\uff0cS3' }\uff0c\u5f53B(S)\u4e2d\u6240\u6709\u5143\u7d20\u5404\u81ea\u7684\u53ef\u8fbe\u96c6 \u4ea4\u96c6\u4e3a\u7a7a\uff0c\u8bf4\u660e\u533a\u57df\u53ef\u5206\u3002\u8fd9\u91ccB(s)\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u533a\u57df\u4e0d\u53ef\u5206\u3002 \u51fa\u5ea6\u884c\u5168\u4e3a\u96f6,\u7ec8\u6b62\u96c6E(S)={S3'}\uff0c\u4e5f\u80fd\u770b\u5148\u884c\u96c6\u6709\u6ca1\u6709\u4ea4\u96c6\uff0c\u7565\uff0c\u53cd\u6b63\u4e5f\u80fd\u770b\u51fa\u533a\u57df\u4e0d\u53ef\u5206\u3002","title":"\u77e9\u9635\u5bf9\u89d2\u51431-1\uff0c\u5f3a\u8054\u901a\u5173\u7cfb\u7684\u7b49\u6548\u7ed3\u70b9-\u5f3a\u8fde\u901a\u7b49\u6548"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#ismboolen-matrix","text":"\u6216\u8005\u62d3\u6734\u6392\u5e8f\u627e\u4e2a\u5148\u540e\u6b21\u5e8f\u5e8f\u5217 ISM\u6280\u672f\u662f\u9012\u9636\u7ed3\u6784\u6a21\u578b\u6280\u672f\uff0c\u6700\u5f00\u59cb\u662f\u7f8e\u56fdJ.N.\u6c83\u83f2\u5c14\u5fb7\u6559\u63881973\u5e74\u63d0\u51fa\u7684\u5206\u6790\u793e\u4f1a\u7ecf\u6d4e\u7cfb\u7edf\u7ed3\u6784\u95ee\u9898\u7684\u65b9\u6cd5\u3002 \u533a\u57df\u5212\u5206 \u7ea7\u4f4d\u5212\u5206 \u63d0\u53d6\u9aa8\u67b6\u77e9\u9635 \u7ed8\u5236\u591a\u7ea7\u9012\u9636\u6709\u5411\u56feD(A') graph LR; \u3000\u3000M -->|\u533a\u57df\u5212\u5206| \u5757\u5bf9\u89d2M<P> \u3000\u3000\u5757\u5bf9\u89d2M<P> --> |\u7ea7\u4f4d\u5212\u5206| \u533a\u57df\u5757\u4e09\u89d2M<L> \u3000\u3000\u533a\u57df\u5757\u4e09\u89d2M<L> --> |\u7f29\u51cf\u5f3a\u8fde\u63a5\u8981\u7d20\u5408\u5e76| \u533a\u57df\u5757\u4e09\u89d2M'<L> \u3000\u3000\u533a\u57df\u5757\u4e09\u89d2M'<L> --> |\u5254\u9664\u8d8a\u7ea7\u5173\u7cfb| \u9aa8\u67b6\u77e9\u9635M''<L> \u3000\u3000\u9aa8\u67b6\u77e9\u9635M''<L> --> |\u53bb\u6389\u7ed3\u70b9\u81ea\u8eab\u53ef\u8fbe\u5173\u7cfb| A'; \u3000\u3000A' --> |\u7ed8\u56fe| G<A'> \u6700\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\u8ba1\u7b97\u673a\u80fd\u591f\u201c\u7406\u89e3\u201d\u56fe\u4e2d\u5148\u540e\u6b21\u5e8f\uff0c\u91cd\u8981\u6027\u548c\u7b49\u7ea7\uff0c\u663e\u5f0f\u6253\u5370\u51fa\u8fd9\u4e2a\u95ee\u9898\u5bf9\u5e94\u56fe\u7684\u7b49\u7ea7\uff1a graph LR; \u3000\u3000S0-16 -->|bala| S2-18 ; \u3000\u3000S2-18 -->|bala| S3'; \u3000\u3000S0-16 -->|bala| S1-17 ; \u3000\u3000S1-17 -->|bala| S3'; \u5373 \u8fd9\u4e2a\u95ee\u9898ISM\u7b97\u6cd5\u4f18\u52bf\u4e0d\u592a\u660e\u663e\u662f\u56e0\u4e3a\u8fc7\u5206\u7b80\u5355\uff0c\u5982\u679c\u6709\u5f88\u591a\u7684\u8def\u5f84\uff0c\u4ed6\u80fd\u591f\u544a\u8bc9\u4f60\uff0c\u54ea\u4e9b\u5143\u7d20\u662f\u7b49\u6548\u7684\uff0c\u53ef\u4ee5\u5ffd\u7565\u5408\u5e76\u67d0\u4e9b\u5faa\u73af/1-1\u72b6\u6001\u94fe\uff0c\u6216\u8005\u7b49\u4ef7\u770b\u4f5c\u865a\u62df\u72b6\u6001\u8282\u70b9\u8282\u7701\u8ba1\u7b97\u6210\u672c\u3002 \u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u66f4\u52a0\u5145\u5206\u7684demo \u663e\u793a\u201c\u526a\u679d\u201d\u53bb\u6389\u65e0\u5173\u5b50\u56fe\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u7ed9\u7684\u529f\u80fdaction\u8fc7\u591a\uff0c\u5b9e\u9645\u4e0a\u6709\u4e9bactions\u5bf9\u89e3\u51b3\u201cS_\u521d\u59cb\u2192S_\u76ee\u6807\u201d \u95ee\u9898\u6beb\u65e0\u5173\u7cfb\uff0c\u5728\u524d\u9762\u72b6\u6001\u751f\u6210\u4e2d\uff0c\u5c31\u9700\u8981\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\u7684\u201c\u533a\u57df\u5212\u5206\u201d\u53bb\u6389\u65e0\u5173\u4e0d\u8fde\u901a\u7684\u5176\u4ed6\u56fe\u3002 \u5982\u679c\u6709\u5f88\u591a\u6761\u8def\u53ef\u89e3\u51b3\u201cS_\u521d\u59cb\u2192S_\u76ee\u6807\u201d \u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e2aISM\u65b9\u6cd5\u7684\u7ed3\u679c\u80fd\u591f\u5b9e\u73b0\u5206\u7ea7\uff0c\u5206\u8ddd\u79bb\uff0c\u6700\u6e05\u6670\u7b80\u660e\u7684\u65b9\u6cd5\u627e\u5230\u4e00\u5f20\u590d\u6742\u6709\u5411\u56fe\u7684\u201c\u9aa8\u67b6\u77e9\u9635\u5bf9\u5e94\u6700\u6838\u5fc3\u7b80\u660e\u627c\u8981\u7684\u56fe\u201d\uff01\u8fd9\u6837\u5904\u7406\u540e\uff0c\u4fdd\u5b58\uff0c\u641c\u7d22\u4e00\u6761\u8def\u5f84\u548c\u6c42\u89e3\u90fd\u662f\u6781\u597d\u7684\u3002","title":"ISM\u6cd5boolen-matrix"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#gripper","text":"\u76ee\u6807\u623f\u95f4 \u8981\u88ab\u79fb\u8d70\u7684ball 0<=\u642c\u8fd0\u4e2d\u7684<=2 \u7a7a\u5939\u5b50\u6570 \u72b6\u6001\u7f16\u7801 T b>0 c>0 g>0 \\(1111_B = 15_H\\) \\(\\overline{T}\\) b=0 c>=0 g=0 \\(0000_B = 0_H\\) \u56fe\u7684\u8282\u70b9\u662f\u72b6\u6001\u6570\u91cf\uff0c\u5148\u8981\u786e\u5b9a\u6709\u591a\u5c11\u72b6\u6001\uff1a actions\u4e2d \\(a_i\\) \u51fa\u73b0\u7684\u80fd\u591f\u5b8c\u5168\u8868\u8fbe\u552f\u4e00\u786e\u8ba4\u7684\u72b6\u6001\u5148\u5168\u90e8\u5217\u51fa \u7136\u540e\u5bf9\u4e8e\u6709\u7f3a\u7701\u503c\u7684\uff0c\u6bd4\u5982\u653e\u4e0b\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u653e\u4e0b\u79ef\u6728\u7684< \\(\\overline{E},\\_,\\_,\\_,\\_;E,\\_,\\_,\\_,\\_\\) >\uff0c\u56e0\u4e3a\u95ee\u9898\u4e2d\u7684\u9690\u542b\u7ea6\u675f\u7b49\u9650\u5236\uff0c\u4e5f\u8981\u628a\u72b6\u6001\u8868\u8fbe\u6e05\u6670\uff0c\u786e\u5b9a\u7684pre\u72b6\u6001 \u2192 \u786e\u5b9a\u7684effect\u72b6\u6001\uff0c\u624d\u662f\u201c\u8db3\u591f\u7684\u95ee\u9898\u63cf\u8ff0\u201d \u4e0d\u53ef\u80fd\u53d1\u751f\u7684\u77db\u76fe\u72b6\u6001\uff1a\u9690\u542b\u6761\u4ef6\"c=0\u6ca1\u5728\u5939\u6301\uff0cg=0\u7a7a\u5939\u5b50\u6570\u91cf\u4e3a\u96f6\"\uff0c\u4e0d\u53ef\u80fd\u540c\u65f6\u53d1\u751f\u3002\u8fd9\u4e2a\u9700\u8981\u95ee\u9898\u5f62\u5f0f\u5316\u7684\u6c42\u89e3\u8005\u81ea\u5df1\u60f3\u660e\u767d\uff0c\u5728action\u522b\u8f93\u5165\u8fd9\u79cd\u72b6\u6001\uff0c\u5426\u5219\u8ba1\u7b97\u673a\u81ea\u52a8\u5316\u8fd0\u7b97\u4e5f\u5e2e\u4e0d\u4e86\u4f60\uff0c\u8ba1\u7b97\u673a\u4e0d\u77e5\u9053\u5b9e\u9645\u8bed\u4e49\u662f\u5426\u5141\u8bb8\u8fd9\u51e0\u4e2a\u77db\u76fe\u72b6\u6001\uff0c\u4ed6\u53ea\u7ba1\u8bed\u6cd5\u63a8\u5bfc\u7684\u5408\u7406\u6027\uff01 \\(S_{...}:(\\_,\\_,c=0,g=0)\\) \u5177\u4f53\u5c31\u662f\u8fd9\u56db\u79cd\uff1a \\(S_{0}:(\\overline{T},b=0,c=0,g=0)\\) \\(S_{4}:(\\overline{T},b>0,c=0,g=0)\\) \\(S_{8}:(T,b=0,c=0,g=0)\\) \\(S_{12}:(T,b>0,c=0,g=0)\\) \u8fc7\u7a0b\u4e2d\u4e0d\u5173\u5fc3\u7684\u65e0\u5173\u72b6\u6001\uff1a \\(S_{1}:(\\overline{T},b=0,c=0,g>0)\\)","title":"Gripper"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#-dga","text":"\u72b6\u6001\u7801\u7f16\u7801,\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u5904\u74061-1\u6620\u5c04\u7684\u552f\u4e00\u6807\u8bc6\u7684\u5168\u5c40\u72b6\u6001\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u5b9a\u4e49\uff1a \\(v_i>0\\) \u53d61\uff0c \\(v_i=0\\) \u53d60\u3002\u53ea\u662f\u6807\u8bc6\u65e0\u6240\u8c13\uff0c\u800c\u5199\u6210\u7a0b\u5e8f\u9700\u8981\u7edf\u4e00\u7ea6\u5b9a\u4e00\u4e2a\uff0c\u6bd4\u5982\u6211\u4eec\u7ea6\u5b9a \\(f_i\\) \u4e3a\u771f\u53d61\uff0c \\(\\neg f_i\\) \u4e3a\u771f\u53d60; \\(v_i>0\\) \u53d61\uff0c \\(v_i=0\\) \u53d60\u3002 \u6bd4\u5982\u8fd9\u91cc\u6211\u6545\u610f\u7528\u548cBlock world\u4e0d\u540c\u7684\u7f16\u7801\u7ea6\u5b9a\uff1a \u76ee\u6807\u623f\u95f4 \u5269\u4e0b\u8981\u79fbball carried ball \u7a7agripper\u6570 \u72b6\u6001\u7f16\u7801 T b>0 c>0 g>0 \\(1111_B = 15_H\\) \\(\\overline{T}\\) $b=0 c=0 g=0 \\(0000_B = 0_H\\) graph LR; \u3000\u3000S5 -->|Pick1-2| S7; \u3000\u3000S7 -->|Pick1| S6; \u3000\u3000S7 -->|Pick1| S2;\u3000\u3000 \u3000\u3000S5 -->|Pick1-2| S6; \u3000\u3000S6 -->|MoveFullyLoaded| S14; \u3000\u3000S14 -->|Drop2| S13; \u3000\u3000S14 -->|Drop1| S15; \u3000\u3000S15 -->|Drop1| S13; \u3000\u3000S13 -->|LeaveTargetRoom| S5; \u3000\u3000S5 -->|b==1Pick1| S3; \u3000\u3000S5 -->|b==2Pick2| S2; \u3000\u3000S3 -->|MoveHalfLoaded| S11; \u3000\u3000S11 -->|Drop1| S9; \u3000\u3000S2 -->|MoveFullyLoaded| S10 ; \u3000\u3000S10 -->|Drop2| S9; \u3000\u3000S10 -->|Drop1| S11; \u627e\u51fa\u4e00\u4e2a\u73af\uff0c\u73af\u4e0a\u7ed3\u70b9\u5408\u5e76\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u81f3\u627e\u4e0d\u5230\u73af\uff0c\u5177\u4f53\u64cd\u4f5c\u8981\u600e\u4e48\u5199\u4ee3\u7801\uff1f \u8bc6\u522b\u201c\u5f3a\u8fde\u901a\u5206\u91cf\u201d\uff0c\u7136\u540e\u7b49\u6548\u66ff\u6362\u5f3a\u8fde\u901a\u5206\u91cf \u5c06\u6709\u5411\u56fe\u5206\u89e3\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\uff1a \u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7684\u5e94\u7528\uff0cSCC\u7b97\u6cd5\uff0cStrongly Y-connected-componentts(G) \u300a\u7b97\u6cd5\u5bfc\u8bba\u300bP357 graph LR; \u3000\u3000S5_6_7_13_14_15 -->|b==1Pick1| S3; \u3000\u3000S5_6_7_13_14_15 -->|b==2Pick2\u6216\u8005Pick1| S2; \u3000\u3000S3 -->|MoveHalfLoaded| S11; \u3000\u3000S11 -->|Drop1| S9; \u3000\u3000S2 -->|MoveFullyLoaded| S10 ; \u3000\u3000S10 -->|Drop2| S9; \u3000\u3000S10 -->|Drop1| S11; \u8fd9\u4e2a\u6709\u5411\u65e0\u73af\u56feDAG\u53ef\u4ee5\u4f7f\u7528ISM\u6280\u672f\uff0c\u6216\u8005\u62d3\u6251\u6392\u5e8f\u8bd5\u8bd5\u770b\u3002","title":"**\u91cd\u70b9\u662f\u6709\u73af\u7684\u6709\u5411\u56fe--&gt;DGA**\u7b97\u6cd5\uff1a"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#deisgn","text":"","title":"\u8bbe\u8ba1deisgn"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#_3","text":"\u5b9a\u4e49\u4e00\u4e2a\u6807\u51c6\u6587\u672c\u63cf\u8ff0FVIOGO.qnp\u683c\u5f0f\u6807\u51c6\uff0c\u53ea\u8981\u8bf4\u6e05\u695a \u5373\u53ef\uff0c\u6bd4\u5982\u8fd9\u4e2aBlock world\u95ee\u9898 E,X,D#\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u7b26\u53f7\uff0cF\u8bfb\u53d6\u540e\uff0c\u81ea\u52a8\u91cd\u547d\u540d\u5b58\u6210\u5e03\u5c14\u547d\u9898f1,f2,f3---1\uff1b-f1,-f2,-f3---0 n,m#\u5efa\u8bae\u4f7f\u7528v1,v2,v3,...\u547d\u540d\u3002\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u7b26\u53f7\uff0cV\u8bfb\u53d6\u540e\uff0c\u7a0b\u5e8f\u81ea\u52a8\u91cd\u547d\u540d\u5b58\u6210v1,v2.\u7ea6\u5b9av1>0,v2>0\u53d6\u503c0\uff1bv1=0,v2=0\u53d6\u503c1\uff1b E,-S,-D,n>0,m>0#\u521d\u59cbI\uff0c\u7a0b\u5e8f\u5148\u66ff\u6362\u4e3a10000B=16D,\u53ea\u9700\u8981\u5b58\u4e00\u4e2aInterger\u8868\u793aS_0 E,-S,D,n=0,m>0#\u521d\u59cbG\uff0c\u7a0b\u5e8f\u5148\u66ff\u6362\u4e3a10110B=22D,\u53ea\u9700\u8981\u5b58\u4e00\u4e2aInterger\u8868\u793aS_G a1:#action 1:Pick-above-x\u6361\u8d77\u6765x\u4e0a\u65b9\u79ef\u6728: \u3000\u3000(E,-X,-D,n>0,m>0), (-E,-X,-D,n>0,m>0);#\u4ee3\u7801\u4e2d\u5e94\u8be5\u5b58\u6210\u547d\u540da1\u7684\u4e8c\u7ef4\u77e9\u9635\uff1f\u6216\u8005\u4e00\u7ef4\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\u662f\u5143\u7ec4(S16,S0)\u4e0b\u540c\uff0c\u5199\u6210\u8fd9\u6837 S16(E,-X,-D,n>0,m>0), S2(-E,-X,-D,n=0,m>0) ;#(S,S) \u3000\u3000S17(E,-X,-D,n>0,m=0), S1(-E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S17(E,-X,-D,n>0,m=0), S3(-E,-X,-D,n=0,m=0);#(S,S) a2\uff1a#Pick-above-y\u6361\u8d77\u6765y\u4e0a\u65b9\u79ef\u6728: \u3000\u3000S16(E,-X,-D,n>0,m>0), S0(-E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S18(E,-X,-D,n=0,m>0),S2(-E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S18(E,-X,-D,n=0,m>0) , S3(-E,-X,-D,n=0,m=0);#(S,S) \u3000\u3000S16(E,-X,-D,n>0,m>0) ,S1(-E,-X,-D,n>0,m=0) ;#(S,S) a3\uff1a#put-aside\u79ef\u6728(\u4e0d\u5305\u62ecx\uff0c\u624b\u6301x\u653e\u4e00\u8fb9\u53eb\u505aput-x-aside\u662f\u4e0b\u9762\u8ba8\u8bba\u7684\u4e00\u4e2a\u52a8\u4f5c)\u653e\u4e00\u8fb9\u5230\u684c\u9762Table #\u5305\u62ec\u8fd9\u4e2a Putaside-1 = h\u00acE,\u00acX,\u00acD,n=0;Ei to put aside (not above x or y) the block being held, # \u4e5f\u5305\u62ec\u8fd9\u4e2a Putaside-2 = h\u00acE,\u00acX,\u00acD,n>0,m>0;Ei to put aside (not above x or y) the block being held, \u3000\u3000S0(-E,-X,-D,n>0,m>0) ,S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0),S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) , S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) , S19(E,-X,-D,n=0,m=0);#(S,S) #\u8fd9\u91cc\u9700\u8981\u63d0\u4e00\u70b9\uff1a\u5141\u8bb8_\u7f3a\u7701\u9879 #\u6bd4\u5982\u653e\u4e0b\u77f3\u5934\uff0c\u552f\u4e00\u7684\u76f4\u89c2\u5f62\u5f0f\u5316\u8868\u793a<-E,E>,\u5176\u5b9e\u5bf9\u5e94\u7684\u72b6\u6001\u6709\uff1a S_(-E,_,_,_,_) -->|put-aside| S__(E,_,_,_,_); #\u7136\u540e\u53ef\u4ee5\u8fd0\u7528PC\u5185\u90e8\u7a0b\u5e8f\u9700\u8981\u81ea\u52a8\u5316\u5730\u679a\u4e3e\u904d\u5386\uff1a \u3000\u3000S12(-E,X,D,n>0,m>0) , S28(E,X,D,n>0,m>0);#(S,S) \u3000\u3000S14(-E,X,D,n=0,m>0) ,S30(E,X,D,n=0,m>0);#(S,S) \u3000\u3000S13(-E,X,D,n>0,m=0) ,S29(E,X,D,n>0,m=0);#(S,S) \u3000\u3000S15(-E,X,D,n=0,m=0) ,S31(E,X,D,n=0,m=0);\u3000#(S,S) \u3000\u3000S8(-E,X,-D,n>0,m>0) ,S24(E,X,-D,n>0,m>0);#(S,S) \u3000\u3000S10(-E,X,-D,n=0,m>0) ,S26(E,X,-D,n=0,m>0);#(S,S) \u3000\u3000S9(-E,X,-D,n>0,m=0) ,S25(E,X,-D,n>0,m=0);#(S,S) \u3000\u3000S11(-E,X,-D,n=0,m=0) ,S27(E,X,-D,n=0,m=0);#(S,S) \u3000\u3000S4(-E,-X,D,n>0,m>0) , S20(E,-X,D,n>0,m>0);#(S,S) \u3000\u3000S6(-E,-X,D,n=0,m>0) ,S22(E,-X,D,n=0,m>0);#(S,S) \u3000\u3000S5(-E,-X,D,n>0,m=0) ,S21(E,-X,D,n>0,m=0);#(S,S) \u3000\u3000S7(-E,-X,D,n=0,m=0) ,S23(E,-X,D,n=0,m=0);\u3000#(S,S) \u3000\u3000S0(-E,-X,-D,n>0,m>0),S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0) ,S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) ,S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) ,S19(E,-X,-D,n=0,m=0);#(S,S) #\u591a\u51fa\u6765\u7684\u53ef\u4ee5\u901a\u8fc7ISM\u6280\u672f\u7684\u201c\u533a\u57df\u5212\u5206\u201d\u53bb\u6389\u201c\u65e0S0,SG\u65e0\u5173\u7684\u5b64\u7acb\u56fe\u4eec\u201d\uff0c\u7ed3\u679c\u5c31\u53ea\u5269\u4e0b\u8fd9\u51e0\u4e2a\u771f\u6b63\u4f1a\u7528\u7684\u201c\u53ef\u8fbe\u72b6\u6001\u201d\uff1a \u3000\u3000S0(-E,-X,-D,n>0,m>0) ,S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0) ,S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) ,S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) ,S19(E,-X,-D,n=0,m=0);#(S,S) #\u4f46\u662f\u5982\u679c\u9700\u8981\u9690\u542b\u6761\u4ef6\u63a8\u7406\u7684\u201c\u4e0d\u53ef\u80fd\u72b6\u6001\u201d\u9700\u8981\u4eba\u5de5\u8f93\u5165\u7684\u65f6\u5019\u6392\u9664\uff0c\u56e0\u4e3aPC\u4e0d\u77e5\u9053\u8bed\u4e49\uff0c\u53ea\u77e5\u9053\u8bed\u6cd5\u63a8\u5bfc\u6ca1\u6bdb\u75c5\u5c31\u884c\u3002\u6216\u8005\u9700\u8981\u53e6\u5916\u5b9a\u4e49\u4e00\u884c\u53ef\u9009\u9879\uff0c\u7528\u6765\u8f93\u5165\u4e0d\u53ef\u80fd\u72b6\u6001\uff0c\u5728\u77e9\u9635\u5904\u7406\u524d\u53bb\u6389\u8fd9\u4e2a\u201c\u4e0d\u53ef\u80fd\u72b6\u6001\u7ed3\u70b9\u201d\u3002\u53ef\u9009\u9879\u600e\u4e48\u5f04\u5462\uff1f a4\uff1a#pick-x\uff0c\u62ff\u8d77\u6765x\u77f3\u5934\uff0c**\u5173\u952e\u52a8\u4f5c**\uff0cpre\u4e00\u5bf9\u4e00\u6620\u5c04effect\u7684\u884c\u4e3a\uff0c S19(E,-X,-D,n=0,m=0) , S11(E,-X,-D,n=0,m=0);#(S,S) a5\uff1a#put-x-on-y,\u628a\u624b\u4e2d\u7684x\u653e\u5728y\u4e0a\u65b9\uff1a \u3000\u3000S11(E,-X,-D,n=0,m=0) , S22(E,-X,D,n=0,m>0);#(S,S) a6 #put-x-aside,\u5efa\u8bae\u522b\u5b9a\u4e49\u8fd9\u52a8\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5371\u9669\uff08\u6beb\u65e0\u610f\u4e49\u800c\u4e14\u591a\u4f59\uff09\u7684\u52a8\u4f5c \u3000\u3000S11(E,-X,-D,n=0,m=0) , S19(E,-X,-D,n=0,m=0);#(S,S) \u6ce8\uff1a\u8fd9\u91ccn>0,n=0\u53ef\u4ee5\u770b\u4f5c\u5355\u7eaf\u7684\u6587\u5b57\u547d\u9898\uff0c\u4ee3\u8868\u7684\u610f\u4e49\u662f\u975e\u96f6\u548c\u96f6\uff0c\u540c\u65f6\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5c\u4e0d\u9700\u8981\u4f20\u9012 if(n==1)\u8d70\u54ea\u6761\u8def\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8d70\u90a3\u6761\u8def\u9ed8\u8ba4\u8ba9\u7528\u6237\u6839\u636e\u8f93\u51fa\u6765\u81ea\u884c\u5224\u65ad\uff0c\u751a\u81f3n=n-1\u6267\u884c\u591a\u5c11\u6b21\u6211\u4e5f\u4e0d\u5173\u5fc3. \u56e0\u4e3a\u7ed3\u679c\u51fa\u6765\u7528\u6237\u201c\u81ea\u5df1\u5224\u65ad\u5230\u5e95\u4ec0\u4e48\u65f6\u5019\u5230n=1\u4e34\u754c\u6570\u503c\u6807\u8bc6\u72b6\u6001\u201d\u5f00\u59cb\u8d70\u975e\u5faa\u73af\u7684\u90a3\u6761\u8def\u5f84\uff08\u4e3b\u8981\u662f\u56e0\u4e3a\u201c\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7b49\u6548\u56fe\u5b9e\u73b0\u7684\u8fd9\u4e2a\u529f\u80fd\") \u533a\u5206QNP2SAT\u65b9\u6cd5\u4e2d\u8fde n,n-1,n-2,...,2,1 \u90fd\u8981\u5206\u4e0d\u540c\u72b6\u6001\u6765\u4e00\u4ee5\u533a\u5206\uff0c\u6bcf\u4e2a\u52a8\u4f5c\u524d\u63d0\u8981 S16 \u2192|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u8fd9\u4e2a\u52a8\u4f5c\u4e3a\u4f8b\uff1a {n=1}^S16 --> S2^{n=n-1};#QNP2SAT\u8981\u5199\u6210\u8fd9\u6837\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5f88\u5f31\u667a\u7684\u95ee\u9898\uff0c\u4f46\u662fn\u6bd4\u8f83\u5927\uff0c\u590d\u6742\u5ea6\u589e\u52a0\u4e5f\u4f1a\u5f88\u5927\uff0c\u8fd9\u662f\u56e0\u4e3a\u65b9\u6cd5\u4e0d\u597d\u3002 \"\u5206\u91cf\u56fe\u627e\u5230\u4e00\u6761\u8def\u5f84\u89e3\"\uff0c\u5728**\u8fd8\u539f\u5f3a\u8fde\u901a\u5206\u91cf**\u6210\u4e3a\u201c\u5b8c\u6574\u95ee\u9898\u89e3\u8def\u5f84\u201d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4ee3\u7801\u8fd8\u8981\u5904\u7406\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u539f\u59cb\u56feG\u4e2d\u5206\u91cf\u56fe\u7684\u8f93\u5165\u8f93\u51fa\u8981\u8fd8\u539f\u56de\u6765\uff1a \u4e3e\u4f8b\u5c31\u662fS5_6_7_13_14_15\u91cc\uff0c\u54ea\u4e9b\u662f\u51fa\u5ea6\uff1f\u54ea\u4e9b\u662f\u5165\u5ea6\uff1f \u5206\u522b\u6307\u5411\u8c01\u90fd\u8981**\u8fd8\u539f**\u5230\u5b8c\u6574\u8def\u5f84\u89e3\u4e2d\uff08\u6216\u8005\u8bf4\u5728\u539f\u59cb\u56feG\u4e2d\u8bfb\u51fa\u6765\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5199\u8fdb\u53bb\u5206\u91cf\u56fe\u8865\u5145\u5b8c\u6574\uff0c\u8f93\u51fa\u7ed3\u679c\u5c31\u662f\u8fd9\u6837\u4e00\u5f20\u56fe=Plan\u89c4\u5212\u65b9\u6848\uff09 \u5176\u5b9e\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c\uff0c\u901a\u8fc7\u89c2\u5bdf\u89c4\u5f8b\uff0c\u6211\u4eec\u53d1\u73b0**\u6700\u540e\u627e\u5230\u5206\u91cf\u56fe\u4e2d\u95f4\u89e3\u8fd8\u539f\u51fa\u6765\u7684\u662f\u539f\u59cb\u56feG\u4e2d\u5b50\u56fe** \uff0c\u4e5f\u5c31\u662f\u8bf4\u539f\u59cb\u56feG\u4e2d\u7684\u77e9\u9635\uff0c\u6211\u4eec\u6311\u51fa\u6765\u201c\u4ec5\u4ec5\u5305\u542b\u5206\u91cf\u56fe\u4e2d\u95f4\u89e3\u201d\u63d0\u53ca\u7684\u6240\u6709\u8282\u70b9\u5750\u6807\uff0c\u586b\u51fa\u6765\u8fd9\u4e2a\u7ed3\u70b9\u96c6\u7684\u6a2a\u7eb5\u5750\u6807\u65b0\u7684\u90bb\u63a5\u77e9\u9635=\u5b50\u56fe\u7684\u77e9\u9635\u3002","title":"\u8f93\u5165"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#_4","text":"\u8fd9\u91cc\u7684\u201c\u6700\u77ed\u8def\u53ea\u662f\u62d3\u6251\u610f\u4e49\u7684\u8def\u5f84\u6700\u77ed\u201d\uff0c\u4e0d\u7b49\u4e8e\u5b9e\u9645\u7684\u6700\u77ed\u8def\uff0c\u56e0\u4e3a\u5f3a\u8fde\u901a\u7684\u5faa\u73af\u6b21\u6570\u88ab\u6211\u4eec\u5408\u5e76\u7f29\u51cf\u6210\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u4e0d\u77e5\u9053\u4e00\u4e2a\u8282\u70b9\u5b9e\u9645\u7684\u591a\u5c11\uff0c\u9664\u975e\u52a0\u6743\uff0c\u6bcf\u6b21\u5faa\u73af(n-1)\u6b21\u6216\u8005(m-1)\u6b21\u7684\u8def\u5f84\u90fd\u8868\u793a\u51fa\u6765\uff0c\u4f46\u662f\u8fd9\u6837\u5b9e\u73b0\u8d77\u6765\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u53ef\u80fd\u5148\u5e8f\u5217\u4e2d\u4e0d\u786e\u5b9a\u5730\u51e0\u6b21\u7136\u540e\u5e8f\u5217\u5230\u5173\u952e\u8282\u70b9\u624d\uff08n-1\uff09\u6b21\uff0c\u6240\u4ee5\u8bf4\uff0c\u7f3a\u70b9\u5c31\u662f\uff0c\u8fd9\u65b9\u6cd5\u5176\u5b9e\u627e\u4e0d\u5230\u7edd\u5bf9\u6570\u503c\u4e0a\u8def\u5f84\u6700\u77ed\u7684Plan\u3002 \u597d\u7684\u662f\uff0c\u6709\u4e9bplan\u53ea\u8981\u80fd\u8d70\u901a\uff0c\u8def\u5f84\u6d88\u8017\u957f\u5ea6\u662f\u4e00\u6837\u7684\u3002 \u6709\u627e\u5230\u4e00\u4e2a\u4f8b\u5b50\uff1a","title":"\u7c7b\u56fe\u8bbe\u8ba1"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#_5","text":"\u6211\u63a5\u8fde\u7528\u5230Tarjan,ISM,dijkstra\u7b49\u6700\u77ed\u8def\u8fd9\u4e9b\u73b0\u6709\u7684\u56fe\u8bba\u7b97\u6cd5\u9700\u8981\u8bc1\u660e\u5417\uff1f\u8fd8\u662f\u8bf4\u53ea\u9700\u8981\u7b97\u6cd5\u8bc1\u660e\uff0c\u4e0d\u662f\u73b0\u6210\u7b97\u6cd5\u7684\u7b97\u6cd5------\u201c\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf(\u73af)\u90fd\u627e\u4e00\u6761\u786e\u5b9a\u6027\u8def\u5f84\u201d\u90a3\u4e2a\u7b97\u6cd5\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u6211\u7684\u60f3\u6cd5\u662f\u4f7f\u7528\u7ed3\u70b9\u5c01\u88c5\u540e\u7684\u201c\u5f3a\u8fde\u901a\u5206\u91cf\u5b50\u56fe\u201d\uff0c\u4ece\u5b50\u56fe\u7684\u5165\u53e3\u7ed3\u70b9S_i\u51fa\u53d1dijkstra/Floyd\u627e\u5230\u4e00\u6761\u62b5\u8fbeS_j\u51fa\u53e3\u7ed3\u70b9\u7684\u8def\u3002\u611f\u89c9\uff0c\u597d\u50cf\u90fd\u662f\u56fe\u8bba\u91cc\u9762\u7684\u65b9\u6cd5......\u65e2\u7136\u6bcf\u4e2a\u7528\u5230\u7684\u73b0\u6709\u56fe\u8bba\u7b97\u6cd5\u90fd\u53ef\u7ec8\u6b62\uff0c\u4e00\u4e2a\u63a5\u7740\u4e00\u4e2a\u7528\uff0c\u662f\u4e0d\u662f\u5c31\u201c\u4e00\u5b9a\u7ec8\u6b62\u201d\uff1f","title":"\u8bc1\u660e\u201c\u7a0b\u5e8f\u7ec8\u6b62\u6027\u201d"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#_6","text":"\u539f\u59cb\u95ee\u9898\u7684\u56feG \u6bd4\u5982\u50cf\u8fd9\u6837\uff1a graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; \u7f29\u51cf\u4e4b\u540e\u7684\u56feDAG \u6bd4\u5982\u50cf\u8fd9\u6837\uff1a graph LR; \u3000\u3000S0-16 -->|bala| S2-18 ; \u3000\u3000S2-18 -->|bala| S3; \u3000\u3000S0-16 -->|bala| S1-17 ; \u3000\u3000S1-17 -->|bala| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S11-19; \u3000\u3000S11-19 -->|\u628ax\u653e\u5728y\u4e0a| S22;\u3000\u3000 \u8fd9\u91cc\uff0c\u6700\u597d\u4e5f\u81ea\u52a8\u753b\u51fa\u6765ISM\u9012\u9636\u7b49\u7ea7\u7684\u56fe \u4e00\u6761\u7f29\u51cf\u7684\u8def\u5f84\u89e3 \u56fe \u6bd4\u5982\u50cf\u8fd9\u6837\uff1a graph LR; \u3000\u3000S0-16 -->|bala| S2-18 ; \u3000\u3000S2-18 -->|bala| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S11-19; \u3000\u3000S11-19 -->|\u628ax\u653e\u5728y\u4e0a| S22;\u3000\u3000\u3000\u3000 \u4e00\u6761\u6ca1\u6709\u6240\u89c1\u7684\u8def\u5f84\u89e3 \u56fe \u6bd4\u5982\u50cf\u8fd9\u6837\uff1a graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S16 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S1 ; \u3000\u3000S1 -->|put_aside\u653e\u4e00\u8fb9| S17; \u3000\u3000S17 -->|\u5f53n>1\u62ffx\u4e0a\u77f3n&darr| S1; \u3000\u3000S17 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22; graph LR; \u3000\u3000S16 -->|\u62ffx\u4e0a\u77f3n&darr\u6216\u62ffy\u4e0a\u77f3m&darr| S0; \u3000\u3000S0 -->|put-aside\u653e\u4e00\u8fb9| S16; \u3000\u3000S16 -->|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u3000\u3000S2 -->|put_aside\u653e\u4e00\u8fb9| S18; \u3000\u3000S18 -->|\u5f53m>1\u62ffy\u4e0a\u77f3m&darr| S2; \u3000\u3000S18 -->|\u5f53m==1\u62ffy\u4e0a\u77f3m&darr| S3; \u3000\u3000S3 -->|put_aside\u653e\u4e00\u8fb9| S19; \u3000\u3000S19 -->|\u62ffx\u79ef\u6728| S11; \u3000\u3000S11 -->|put_x_aside| S19; \u3000\u3000S11 -->|\u628ax\u653e\u5728y\u4e0a| S22;","title":"\u8f93\u51fa"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#demo","text":"jupyter notebook","title":"\u5173\u952e\u4ee3\u7801\u548c\u5b9e\u73b0demo"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#demopackages","text":"python package","title":"demo\u5c01\u88c5Packages"},{"location":"SolversBaseOnPDDL/GP_Numerical/%E5%9B%BE%E6%B3%95QNP/#2-sat","text":"https://wenku.baidu.com/view/0f96c3daa58da0116c1749bc.html https://blog.csdn.net/JarjingX/article/details/8521690","title":"\u53c2\u80032-SAT\u95ee\u9898\u6c42\u89e3\u7b97\u6cd5"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/","text":"CNF_py L3 CNF cnf.py cnf\u6e90\u7801\u52a0\u89e3\u6790\u5404\u81ea\u7684\u7c7b GENERAl\u901a\u7528\u529f\u80fd\u6027\u51fd\u6570 parseOutput\u8f93\u51fa\u89e3\u51b3policy generate_clauses\u6838\u5fc3\u5165\u53e3\u7c7b generate_clauses\u8c03\u7528\u7684\u751f\u6210\u5b50\u53e5\u7684\u7c7b CNF_py \u00b6 L3 \u00b6 domain.pddl (define (problem line-0) (:domain line) (:objects L1 - location L2 - location L3 - location ) (:init (person-at L1) (road L1 L2) (road L2 L1) (road L3 L2) (road L2 L3) ) (:goal (person-at L3)) ) problem 3 grid move right ; Stupid Examples for me to understand this programe (define (domain line) (:requirements :typing) (:types location) (:predicates (person-at ?loc - location) (road ?from - location ?to - location) ) (:action move-right :parameters (?from - location ?to - location) :precondition (and (person-at ?from) (road ?from ?to)) :effect (and (person-at ?to) (not (person-at ?from))) ) ) /src$ python main.py ../mystupidroad/domain.pddl ../mystupidroad/stupid.pddl -strong 1 -policy 1 \u89c2\u5bdf\u4f20\u5165my_task\u7684\u6570\u636e\u7ed3\u6784\u90fd\u6709\u4ec0\u4e48\u8f93\u5165\uff1a p.generate_task(name_sas_file) #\u8bfb\u53d6sas\u6587\u4ef6\uff0c\u4fdd\u5b58\u6570\u636e >>> my_task = p.translate_to_atomic() #\u5b58\u8fdbmy_task\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61my_task\u4e2d\uff0c\u81ea\u52a8\u8f93\u51fa\u754c\u9762\u7684\u5185\u5bb9 Setting atoms # Atoms: 3 Setting initial Setting goal Setting actions # Actions: 4 Setting other actions (0, '/', 4) Setting action card Setting mutexes Setting relevant actions Setting splitting Setting compatible actions (0, '/', 4) 0.00387597084045 \u67e5\u770bmy_task\u7c7b\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf class MyTask(): def __init__(self): self.atoms = None # Set self.initial = None # Set of atoms self.goal = None # Set of atoms self.actions = None # Dictionary, name --> [precs, adds, dels] self.action_nondet = {} # name --> list other actions self.action_cardinality = {} # name --> number self.mutex_groups = None # list of list; each sub-list has atoms belonging to the same mutex group self.compatible_actions = {} # action name --> set of compatible actions self.mutex_groups_set = [] # list of sets of mutex groups self.relevant_actions_atom = {} # dictionary: atom --> relevant actions self.relevant_actions_atom_aname = {} # dictionary: (atom, a_name) --> relevant actions self.action_names = None # set self.other_actions_name = {} # Dictionary name --> list of other actions self.action_name_to_actions = {} # action_name --> list of actions ...... def is_fair(self): for a in self.actions: if '_unfair_' in a: return False return True ...... \u5728Parser\u7c7b\u7684\u65b9\u6cd5\u4e2d\u7ffb\u8bd1\u6210\uff0c\u4fdd\u5b58\u6210mytask\u7c7b\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u6839\u636emyTask.py\u5b9a\u4e49\u7684\u65b9\u6cd5 def print_task(self): print('ATOMS ================================================') for a in self.atoms: print(a) print('INITIAL ==============================================') for a in self.initial: print(a) print('GOAL =================================================') for a in self.goal: print(a) print('ACTIONS ==============================================') for a in self.actions: print(a, self.get_other_actions(a)) print(a, self.actions[a]) \u6253\u5370\u51fa\u6765\u770b >>> my_task.print_task() ATOMS ================================================ (var0=1) (var0=2) (var0=0) INITIAL ============================================== (var0=0) GOAL ================================================= (var0=2) ACTIONS ============================================== ('move-right(l2,l3)', []) ('move-right(l2,l3)', [['(var0=1)'], ['(var0=2)'], ['(var0=1)']]) ('move-right(l2,l1)', []) ('move-right(l2,l1)', [['(var0=1)'], ['(var0=0)'], ['(var0=1)']]) ('move-right(l1,l2)', []) ('move-right(l1,l2)', [['(var0=0)'], ['(var0=1)'], ['(var0=0)']]) ('move-right(l3,l2)', []) ('move-right(l3,l2)', [['(var0=2)'], ['(var0=1)'], ['(var0=2)']]) >>> print(my_task.action_nondet) {'move-right(l1,l2)': [], 'move-right(l3,l2)': [], 'move-right(l2,l3)': [], 'move-right(l2,l1)': []} >>> print(my_task.action_cardinality) {'move-right(l1,l2)': 1, 'move-right(l3,l2)': 1, 'move-right': 1, 'move-right(l2,l3)': 1, 'move-right(l2,l1)': 1} >>> print(my_task.mutex_groups) [['(var0=0)', '(var0=1)', '(var0=2)']] >>> print(my_task.compatible_actions) {'move-right(l1,l2)': set([]), 'move-right(l3,l2)': set([]), 'move-right(l2,l3)': set(['move-right(l2,l1)']), 'move-right(l2,l1)': set(['move-right(l2,l3)'])} >>> print(my_task.mutex_groups_set) [set(['(var0=1)', '(var0=2)', '(var0=0)'])] >>> print(my_task.relevant_actions_atom) {'(var0=1)': set(['move-right(l1,l2)', 'move-right(l3,l2)', 'move-right(l2,l3)', 'move-right(l2,l1)']), '(var0=2)': set(['move-right(l2,l3)', 'move-right(l3,l2)']), '(var0=0)': set(['move-right(l1,l2)', 'move-right(l2,l1)'])} >>> print(my_task.relevant_actions_atom_aname) {} >>> print(my_task.action_names) set(['move-right']) >>> print(my_task.other_actions_name) {'move-right': []} >>> print(my_task.action_name_to_actions) {'move-right': ['move-right(l2,l3)', 'move-right(l2,l1)', 'move-right(l1,l2)', 'move-right(l3,l2)']} parser.py\u4e2dp.translate_to_atomic\u51fd\u6570\u5c31\u662f\u751f\u6210\u4e0a\u8ff0my_task\u6570\u636e\u7ed3\u6784\u5bf9\u8c61\u7684\u5143\u51f6 task = MyTask() debug = False#\u8fd9\u4e2a\u5e94\u8be5\u662f\u5f00\u53d1\u7684\u65f6\u5019\u65b9\u4fbf\u8c03\u8bd5\u53ef\u4ee5\u8bbe\u7f6eTrue print('Setting atoms')#\u539f\u5b50\u547d\u9898 task.set_atoms(self.get_atoms(), debug) print('Setting initial')#\u521d\u6001 task.set_initial(self.get_initial_atomic(), debug) print('Setting goal')#\u7ec8\u6001 task.set_goal(self.get_goal_atomic(), debug) print('Setting actions')#\u8bbe\u5b9a\u52a8\u4f5c task.set_actions_atomic(self.get_actions_atomic(), debug) print('Setting mutexes')#\u8bbe\u5b9a\u4e92\u65a5\u91cf\uff1f task.set_mutex_groups(self.get_mutex_groups_atomic(), debug) print('Setting relevant actions')#\u8bbe\u7f6e\u76f8\u5173\u52a8\u4f5c task.set_relevant_actions(debug) print('Setting splitting')#\u5206\u88c2 task.initialize_splitting(debug) start = timer() print('Setting compatible actions')#\u8bbe\u7f6e\u76f8\u5bb9\u53ef\u4ee5\u5e76\u5b58\u7684\u52a8\u4f5c task.create_compatible_actions(debug) print(timer() - start) return task \u7136\u540e\u5c31\u662fmain.py\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u7559\u610f\u91cd\u70b9\uff1a solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! \u4f20\u5165\u5b57\u7b26'n0', \u7ec8\u6001'ng' >>> print(controllerStates) ['n0', 'n1', 'ng']\u8fd9\u4e2a\u662f3\u683c\u7684\u60c5\u51b5\uff0c2\u683c\u7684\u65f6\u5019\u662f['n0','ng'] >>> len(controllerStates) 3 >>> print(show_gen_info) False\u61d2\u5f97\u663e\u793a\u8fd9\u90e8\u5206\uff0c\u56e0\u4e3a\u548c\u6211\u8981\u5173\u5fc3\u7684\u91cd\u70b9\u6ca1\u5173\u7cfb \u8fd9\u91cc\u7684p\u662fParser\u5b9e\u4f8b\uff0c\u53ef\u80fd\u7528\u91cc\u9762\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u57fa\u672c\u770b\u7740\u90fd\u662f\u79c1\u6709\u53d8\u91cf ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... CNF \u00b6 \u91cd\u8981\u7684\u662f\u518d\u6765\u4e00\u904d\uff0cmain.py\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u7559\u610f\u91cd\u70b9\uff1a solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() #\u552f\u4e00\u91cd\u70b9\uff0c\u4e00\u884c\u4ee3\u7801 cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) #\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... \u8fd0\u884c\u7ed3\u679c\u662f >>> print(result) True \u7136\u540e\u662fcnf\u5bf9\u8c61\u7684\u6570\u636e\u7ed3\u6784\u548c\u53d8\u91cf\uff0c\u51fd\u6570\uff0c\u7c7b\u548c\u65b9\u6cd5 class CNF: type1 = 'Atom-Controller' type2 = 'Action-Controller' type3 = 'Triplet' type4 = 'Reachable-I' type5 = 'Reachable-G' type6 = 'Replacement-Goal' type7 = 'Controller-Controller' type8 = 'Replacement-Equality' type9 = 'Inequality-CSCS' type10 = 'Replacement-Goal' num_types = 18#\u8fd9\u4e9b\u9759\u6001\u53d8\u91cf\u5b9a\u4e49\u5b8c\u4e86 print_types = [1, 2, 3, 7]#\uff1f\u4ee3\u8868\u53c2\u6570\u9009\u9879\uff0c\u60f3\u6253\u5370\u51fa\u6765\u4ec0\u4e48\u7ed3\u679c\u5417 def __init__(self, n_file, n_file_extra, fair, strong): self.disjunctions = [] # list of disjunctions self.maxKey = 1 self.mapVariableNumber = {} self.mapNumberVariable = {} self.mapVariableType = {} self.clauseSizeCounter = {} self.name_file_formula = n_file self.name_file_formula_extra = n_file_extra self.file_formula = open(n_file, 'w') self.file_formula_extra = open(n_file_extra, 'w') self.file_formula.close() self.file_formula_extra.close() self.number_clauses = 0 self.fair = fair self.strong = strong def reset(self): self.disjunctions = [] # list of disjunctions self.maxKey = 1 self.mapVariableNumber = {} self.mapNumberVariable = {} self.mapVariableType = {} self.clauseSizeCounter = {} self.file_formula = open(self.name_file_formula, 'w') self.file_formula.write('p cnf 1 1\\n') self.file_formula_extra = open(self.name_file_formula_extra, 'a') # File formula extra is not used, can be ignored self.number_clauses = 0 ...... \u7136\u540e\u770b\u770b\u8fd0\u884c\u5b8c\u7ed3\u679c\uff0c\u5176\u5b9e\u52a0\u65ad\u70b9\u53ef\u4ee5\u770b\u7b2c\u4e00\u6b21\u5faa\u73af\u7684\u7ed3\u679c\uff0c \u7ed3\u679c\u5c31\u662f\u7b2c\u4e8c\u904d\u5faa\u73af\u4e4b\u540e\u7684\u8fd9\u4e9b\u91cf\u662f\u591a\u5c11\uff1a >>> print(cnf.disjunctions) [] >>> print(cnf.maxKey) 67 >>> print(cnf.mapVariableNumber) {'reachableG(ng,0)': 49, '(var0=2)(ng)': 3, 'YR1-n1-ng-1': 66, '(n1,move-right(l1,l2))': 12, 'reachableG(ng,1)': 50, '(ng,move-right,n0)': 31, '(n1,move-right,ng)': 30, '(ng,move-right(l1,l2))': 19, 'YR1-n0-n0-0': 55, '(n1,move-right,n1)': 29, '(ng,ng)': 42, 'reachableG(n1,1)': 54, '(n0,move-right)': 22, '(n0,move-right(l2,l3))': 4, '(var0=1)(n1)': 10, '(ng,move-right(l2,l1))': 18, 'YR1-n0-n0-1': 61, '(ng,move-right(l2,l3))': 16, '(n1,move-right,n0)': 28, 'YR1-n1-n0-0': 58, '(n0,move-right,n1)': 26, '(n1,move-right(l3,l2))': 14, 'reachableI(ng)': 45, '(n1,n1)': 38, '(n1,ng)': 39, '(var0=0)(n1)': 13, '(ng,move-right(l3,l2))': 21, 'YR1-n1-n1-1': 65, 'reachableI(n0)': 43, '(var0=2)(n1)': 15, '(var0=0)(n0)': 7, '(ng,move-right)': 24, '(n0,n0)': 34, '(n0,move-right,ng)': 27, 'YR1-n1-n0-1': 64, 'YR1-n0-ng-0': 57, 'reachableG(n1,0)': 52, 'YR1-n1-n1-0': 59, '(n1,n0)': 37, '(var0=0)(ng)': 20, 'YR1-n0-ng-1': 63, '(ng,move-right,n1)': 32, 'reachableI(n1)': 44, '(ng,n1)': 41, 'reachableG(n1,2)': 47, 'YR1-n0-n1-1': 62, '(var0=1)(n0)': 1, '(n0,move-right(l2,l1))': 5, '(n1,move-right(l2,l1))': 11, '(n0,ng)': 36, '(n0,move-right,n0)': 25, '(ng,n0)': 40, 'YR1-n1-ng-0': 60, 'reachableG(n0,0)': 51, '(var0=1)(ng)': 17, '(n0,move-right(l1,l2))': 6, '(n1,move-right)': 23, 'reachableG(n0,2)': 46, '(n0,move-right(l3,l2))': 8, 'reachableG(n0,1)': 53, 'YR1-n0-n1-0': 56, '(n1,move-right(l2,l3))': 9, '(ng,move-right,ng)': 33, 'reachableG(ng,2)': 48, '(var0=2)(n0)': 2, '(n0,n1)': 35} >>> print(cnf.mapNumberVariable) {1: '(var0=1)(n0)', 2: '(var0=2)(n0)', 3: '(var0=2)(ng)', 4: '(n0,move-right(l2,l3))', 5: '(n0,move-right(l2,l1))', 6: '(n0,move-right(l1,l2))', 7: '(var0=0)(n0)', 8: '(n0,move-right(l3,l2))', 9: '(n1,move-right(l2,l3))', 10: '(var0=1)(n1)', 11: '(n1,move-right(l2,l1))', 12: '(n1,move-right(l1,l2))', 13: '(var0=0)(n1)', 14: '(n1,move-right(l3,l2))', 15: '(var0=2)(n1)', 16: '(ng,move-right(l2,l3))', 17: '(var0=1)(ng)', 18: '(ng,move-right(l2,l1))', 19: '(ng,move-right(l1,l2))', 20: '(var0=0)(ng)', 21: '(ng,move-right(l3,l2))', 22: '(n0,move-right)', 23: '(n1,move-right)', 24: '(ng,move-right)', 25: '(n0,move-right,n0)', 26: '(n0,move-right,n1)', 27: '(n0,move-right,ng)', 28: '(n1,move-right,n0)', 29: '(n1,move-right,n1)', 30: '(n1,move-right,ng)', 31: '(ng,move-right,n0)', 32: '(ng,move-right,n1)', 33: '(ng,move-right,ng)', 34: '(n0,n0)', 35: '(n0,n1)', 36: '(n0,ng)', 37: '(n1,n0)', 38: '(n1,n1)', 39: '(n1,ng)', 40: '(ng,n0)', 41: '(ng,n1)', 42: '(ng,ng)', 43: 'reachableI(n0)', 44: 'reachableI(n1)', 45: 'reachableI(ng)', 46: 'reachableG(n0,2)', 47: 'reachableG(n1,2)', 48: 'reachableG(ng,2)', 49: 'reachableG(ng,0)', 50: 'reachableG(ng,1)', 51: 'reachableG(n0,0)', 52: 'reachableG(n1,0)', 53: 'reachableG(n0,1)', 54: 'reachableG(n1,1)', 55: 'YR1-n0-n0-0', 56: 'YR1-n0-n1-0', 57: 'YR1-n0-ng-0', 58: 'YR1-n1-n0-0', 59: 'YR1-n1-n1-0', 60: 'YR1-n1-ng-0', 61: 'YR1-n0-n0-1', 62: 'YR1-n0-n1-1', 63: 'YR1-n0-ng-1', 64: 'YR1-n1-n0-1', 65: 'YR1-n1-n1-1', 66: 'YR1-n1-ng-1'} >>> print(cnf.mapVariableType) {'reachableG(ng,0)': 5, '(var0=2)(ng)': 1, 'YR1-n1-ng-1': 6, '(n1,move-right(l1,l2))': 2, 'reachableG(ng,1)': 5, '(ng,move-right,n0)': 3, '(n1,move-right,ng)': 3, '(ng,move-right(l1,l2))': 2, 'YR1-n0-n0-0': 6, '(n1,move-right,n1)': 3, '(ng,ng)': 7, 'reachableG(n1,1)': 5, '(n0,move-right)': 2, '(n0,move-right(l2,l3))': 2, '(var0=1)(n1)': 1, '(ng,move-right(l2,l1))': 2, 'YR1-n0-n0-1': 6, '(ng,move-right(l2,l3))': 2, '(n1,move-right,n0)': 3, 'YR1-n1-n0-0': 6, '(n0,move-right,n1)': 3, '(n1,move-right(l3,l2))': 2, 'reachableI(ng)': 4, '(n1,n1)': 7, '(n1,ng)': 7, '(var0=0)(n1)': 1, '(ng,move-right(l3,l2))': 2, 'YR1-n1-n1-1': 6, 'reachableI(n0)': 4, '(var0=2)(n1)': 1, '(var0=0)(n0)': 1, '(ng,move-right)': 2, '(n0,n0)': 7, '(n0,move-right,ng)': 3, 'YR1-n1-n0-1': 6, 'YR1-n0-ng-0': 6, 'reachableG(n1,0)': 5, 'YR1-n1-n1-0': 6, '(n1,n0)': 7, '(var0=0)(ng)': 1, 'YR1-n0-ng-1': 6, '(ng,move-right,n1)': 3, 'reachableI(n1)': 4, '(ng,n1)': 7, 'reachableG(n1,2)': 5, 'YR1-n0-n1-1': 6, '(var0=1)(n0)': 1, '(n0,move-right(l2,l1))': 2, '(n1,move-right(l2,l1))': 2, '(n0,ng)': 7, '(n0,move-right,n0)': 3, '(ng,n0)': 7, 'YR1-n1-ng-0': 6, 'reachableG(n0,0)': 5, '(var0=1)(ng)': 1, '(n0,move-right(l1,l2))': 2, '(n1,move-right)': 2, 'reachableG(n0,2)': 5, '(n0,move-right(l3,l2))': 2, 'reachableG(n0,1)': 5, 'YR1-n0-n1-0': 6, '(n1,move-right(l2,l3))': 2, '(ng,move-right,ng)': 3, 'reachableG(ng,2)': 5, '(var0=2)(n0)': 1, '(n0,n1)': 7} >>> print(cnf.clauseSizeCounter) {} >>> print(cnf.name_file_formula) formula-temp.txt >>> print(cnf.name_file_formula_extra) formula-extra-temp.txt >>> print(cnf.number_clauses) 234 >>> print(cnf.fair) True >>> print(cnf.strong) True \u4e0a\u9762\u8fd9\u4e2a\u6570\u636e\u6574\u7406\u4e00\u4e0b\u683c\u5f0f\uff1a >>> print(cnf.mapVariableNumber) {'reachableG(ng,0)': 49, '(var0=2)(ng)': 3, 'YR1-n1-ng-1': 66, '(n1,move-right(l1,l2))': 12, 'reachableG(ng,1)': 50, '(ng,move-right,n0)': 31, '(n1,move-right,ng)': 30, '(ng,move-right(l1,l2))': 19, 'YR1-n0-n0-0': 55, '(n1,move-right,n1)': 29, '(ng,ng)': 42, 'reachableG(n1,1)': 54, '(n0,move-right)': 22, '(n0,move-right(l2,l3))': 4, '(var0=1)(n1)': 10, '(ng,move-right(l2,l1))': 18, 'YR1-n0-n0-1': 61, '(ng,move-right(l2,l3))': 16, '(n1,move-right,n0)': 28, 'YR1-n1-n0-0': 58, '(n0,move-right,n1)': 26, '(n1,move-right(l3,l2))': 14, 'reachableI(ng)': 45, '(n1,n1)': 38, '(n1,ng)': 39, '(var0=0)(n1)': 13, '(ng,move-right(l3,l2))': 21, 'YR1-n1-n1-1': 65, 'reachableI(n0)': 43, '(var0=2)(n1)': 15, '(var0=0)(n0)': 7, '(ng,move-right)': 24, '(n0,n0)': 34, '(n0,move-right,ng)': 27, 'YR1-n1-n0-1': 64, 'YR1-n0-ng-0': 57, 'reachableG(n1,0)': 52, 'YR1-n1-n1-0': 59, '(n1,n0)': 37, '(var0=0)(ng)': 20, 'YR1-n0-ng-1': 63, '(ng,move-right,n1)': 32, 'reachableI(n1)': 44, '(ng,n1)': 41, 'reachableG(n1,2)': 47, 'YR1-n0-n1-1': 62, '(var0=1)(n0)': 1, '(n0,move-right(l2,l1))': 5, '(n1,move-right(l2,l1))': 11, '(n0,ng)': 36, '(n0,move-right,n0)': 25, '(ng,n0)': 40, 'YR1-n1-ng-0': 60, 'reachableG(n0,0)': 51, '(var0=1)(ng)': 17, '(n0,move-right(l1,l2))': 6, '(n1,move-right)': 23, 'reachableG(n0,2)': 46, '(n0,move-right(l3,l2))': 8, 'reachableG(n0,1)': 53, 'YR1-n0-n1-0': 56, '(n1,move-right(l2,l3))': 9, '(ng,move-right,ng)': 33, 'reachableG(ng,2)': 48, '(var0=2)(n0)': 2, '(n0,n1)': 35} >>> print(cnf.mapNumberVariable) { 1: '(var0=1)(n0)', 2: '(var0=2)(n0)', 3: '(var0=2)(ng)', 4: '(n0,move-right(l2,l3))', 5: '(n0,move-right(l2,l1))', 6: '(n0,move-right(l1,l2))', 7: '(var0=0)(n0)', 8: '(n0,move-right(l3,l2))', 9: '(n1,move-right(l2,l3))', 10: '(var0=1)(n1)', 11: '(n1,move-right(l2,l1))', 12: '(n1,move-right(l1,l2))', 13: '(var0=0)(n1)', 14: '(n1,move-right(l3,l2))', 15: '(var0=2)(n1)', 16: '(ng,move-right(l2,l3))', 17: '(var0=1)(ng)', 18: '(ng,move-right(l2,l1))', 19: '(ng,move-right(l1,l2))', 20: '(var0=0)(ng)', 21: '(ng,move-right(l3,l2))', 22: '(n0,move-right)', 23: '(n1,move-right)', 24: '(ng,move-right)', 25: '(n0,move-right,n0)', 26: '(n0,move-right,n1)', 27: '(n0,move-right,ng)', 28: '(n1,move-right,n0)', 29: '(n1,move-right,n1)', 30: '(n1,move-right,ng)', 31: '(ng,move-right,n0)', 32: '(ng,move-right,n1)', 33: '(ng,move-right,ng)', 34: '(n0,n0)', 35: '(n0,n1)', 36: '(n0,ng)', 37: '(n1,n0)', 38: '(n1,n1)', 39: '(n1,ng)', 40: '(ng,n0)', 41: '(ng,n1)', 42: '(ng,ng)', 43: 'reachableI(n0)', 44: 'reachableI(n1)', 45: 'reachableI(ng)', 46: 'reachableG(n0,2)', 47: 'reachableG(n1,2)', 48: 'reachableG(ng,2)', 49: 'reachableG(ng,0)', 50: 'reachableG(ng,1)', 51: 'reachableG(n0,0)', 52: 'reachableG(n1,0)', 53: 'reachableG(n0,1)', 54: 'reachableG(n1,1)', 55: 'YR1-n0-n0-0', 56: 'YR1-n0-n1-0', 57: 'YR1-n0-ng-0', 58: 'YR1-n1-n0-0', 59: 'YR1-n1-n1-0', 60: 'YR1-n1-ng-0', 61: 'YR1-n0-n0-1', 62: 'YR1-n0-n1-1', 63: 'YR1-n0-ng-1', 64: 'YR1-n1-n0-1', 65: 'YR1-n1-n1-1', 66: 'YR1-n1-ng-1'} >>> print(cnf.mapVariableType) {'reachableG(ng,0)': 5, '(var0=2)(ng)': 1, 'YR1-n1-ng-1': 6, '(n1,move-right(l1,l2))': 2, 'reachableG(ng,1)': 5, '(ng,move-right,n0)': 3, '(n1,move-right,ng)': 3, '(ng,move-right(l1,l2))': 2, 'YR1-n0-n0-0': 6, '(n1,move-right,n1)': 3, '(ng,ng)': 7, 'reachableG(n1,1)': 5, '(n0,move-right)': 2, '(n0,move-right(l2,l3))': 2, '(var0=1)(n1)': 1, '(ng,move-right(l2,l1))': 2, 'YR1-n0-n0-1': 6, '(ng,move-right(l2,l3))': 2, '(n1,move-right,n0)': 3, 'YR1-n1-n0-0': 6, '(n0,move-right,n1)': 3, '(n1,move-right(l3,l2))': 2, 'reachableI(ng)': 4, '(n1,n1)': 7, '(n1,ng)': 7, '(var0=0)(n1)': 1, '(ng,move-right(l3,l2))': 2, 'YR1-n1-n1-1': 6, 'reachableI(n0)': 4, '(var0=2)(n1)': 1, '(var0=0)(n0)': 1, '(ng,move-right)': 2, '(n0,n0)': 7, '(n0,move-right,ng)': 3, 'YR1-n1-n0-1': 6, 'YR1-n0-ng-0': 6, 'reachableG(n1,0)': 5, 'YR1-n1-n1-0': 6, '(n1,n0)': 7, '(var0=0)(ng)': 1, 'YR1-n0-ng-1': 6, '(ng,move-right,n1)': 3, 'reachableI(n1)': 4, '(ng,n1)': 7, 'reachableG(n1,2)': 5, 'YR1-n0-n1-1': 6, '(var0=1)(n0)': 1, '(n0,move-right(l2,l1))': 2, '(n1,move-right(l2,l1))': 2, '(n0,ng)': 7, '(n0,move-right,n0)': 3, '(ng,n0)': 7, 'YR1-n1-ng-0': 6, 'reachableG(n0,0)': 5, '(var0=1)(ng)': 1, '(n0,move-right(l1,l2))': 2, '(n1,move-right)': 2, 'reachableG(n0,2)': 5, '(n0,move-right(l3,l2))': 2, 'reachableG(n0,1)': 5, 'YR1-n0-n1-0': 6, '(n1,move-right(l2,l3))': 2, '(ng,move-right,ng)': 3, 'reachableG(ng,2)': 5, '(var0=2)(n0)': 1, '(n0,n1)': 7} \u6700\u7ec8\u627e\u5230\u7684SAT\u89e3\u7b54 SAT SAT -1 -2 3 4 5 -6 -7 -8 -9 -10 -11 12 13 -14 -15 -16 -17 -18 -19 -20 -21 22 23 -24 -25 26 -27 -28 -29 30 -31 -32 -33 -34 35 -36 -37 -38 39 -40 -41 -42 43 44 45 46 47 48 49 50 -51 -52 -53 54 55 -56 57 58 59 60 61 62 63 64 65 66 0 \u5bf9\u5e94\u7684\u547d\u9898\uff1a >>> print(cnf.mapNumberVariable) { 3: '(var0=2)(ng)', 4: '(n0,move-right(l2,l3))', 5: '(n0,move-right(l2,l1))', 12: '(n1,move-right(l1,l2))', 13: '(var0=0)(n1)', 22: '(n0,move-right)', 23: '(n1,move-right)', 26: '(n0,move-right,n1)', 30: '(n1,move-right,ng)', 35: '(n0,n1)', 39: '(n1,ng)', 43: 'reachableI(n0)', 44: 'reachableI(n1)', 45: 'reachableI(ng)', 46: 'reachableG(n0,2)', 47: 'reachableG(n1,2)', 48: 'reachableG(ng,2)', 49: 'reachableG(ng,0)', 50: 'reachableG(ng,1)', 54: 'reachableG(n1,1)', 55: 'YR1-n0-n0-0', 57: 'YR1-n0-ng-0', 58: 'YR1-n1-n0-0', 59: 'YR1-n1-n1-0', 60: 'YR1-n1-ng-0', 61: 'YR1-n0-n0-1', 62: 'YR1-n0-n1-1', 63: 'YR1-n0-ng-1', 64: 'YR1-n1-n0-1', 65: 'YR1-n1-n1-1', 66: 'YR1-n1-ng-1'} cnf.py \u00b6 class CNF ( builtins.object ) CNF (n_file, n_file_extra, fair, strong) Methods defined here: __init__ (self, n_file, n_file_extra, fair, strong) Initialize self. See help(type(self)) for accurate signature. addClause (self, clause) addClauseExtra (self, clause) alreadyUsed (self, var) assignKey (self, var, typeVar=-1) generateAfterG (self, n) generateAtLeastOneAction (self, task, controllerStates, debug) generateAtomControllerState (self, atom, controllerState) generateCompletionReachabilityG (self, task, controllerStates, k, debug=False) generateConn (self, CStates) generateFirstG (self, n) generateGeneralizeConnection (self, task, controllerStates, debug=False) generateGoal (self, task, goalCState, debug=False) generateInequalityN (self, n1, n2) generateInitial (self, task, initialCState, debug=False) generateInputSat (self, nameFile) generateLowerPredecessor (self, n1, n2) generateMutexGroupsClauses (self, task, controllerStates, debug=False) generateNegativeForwardPropagation (self, task, controllerStates, debug) generateOneSuccessor (self, task, controllerStates, debug=False) generatePairActionControllerState (self, action, controllerState) generatePairCSCS (self, n1, n2) generatePairFairCS (self, n) generatePairUnfairCS (self, n) generatePossibleNonDet (self, task, controllerStates, debug=False) generatePreconditions (self, task, controllerStates, debug=False) generatePropagationIG (self, task, controllerStates, k, debug=False) generatePropagationReachableGCyclic (self, task, controllerStates, k, debug=False) generatePropagationReachableGStrong (self, task, controllerStates, k, debug=False) generatePropagationReachableGUnfair (self, task, controllerStates, k, debug=False) generatePropagationReachableI (self, task, controllerStates, debug=False) generateReachableG (self, controllerState, j) generateReachableGClauses (self, task, controllerStates, goalCState, k, debug=False) generateReachableGInitial (self, task, goalCState, controllerStates, numberControllerStates, debug=False) generateReachableI (self, controllerState) generateReachableI2 (self, controllerState, j) generateReachableIClauses (self, task, initialCState, controllerStates, k, debug=False) generateReachableIinitial (self, initialCState, debug=False) generateReplacementEquality (self, n1, n2, atom) generateReplacementGoalPropagation (self, controllerState1, controllerState2, i) generateReplacementGoalPropagation3 (self, controllerState1, controllerState2, i) generateReplacementIPropagation (self, controllerState1, controllerState2, i) generateSymmetryBreaking (self, task, controllerStates, initialCState, goalCState, debug=False) generateTripletCSACS (self, initialState, action, finalState) generateTripletForcesBin (self, task, controllerStates, debug=False) generate_clauses (self, task, initialCState, goalCState, controllerStates, k, parser=None, debug=False) getNumberClauses (self) getNumberVariables (self) get_num_cl_vars (self) parseOutput (self, nameFile, controllerStates, parser, print_policy=False) printClausesSizes (self, n) printMapVarNumber (self) printVariables (self) reset (self) setFairUnfairActions (self, task, controllerStates) writeDisjunctions (self, file) Data descriptors defined here: __dict__ dictionary for instance variables (if defined) __weakref__ list of weak references to the object (if defined) Data and other attributes defined here: num_types = 18 print_types = [1, 2, 3, 7] type1 = 'Atom-Controller' type10 = 'Replacement-Goal' type2 = 'Action-Controller' type3 = 'Triplet' type4 = 'Reachable-I' type5 = 'Reachable-G' type6 = 'Replacement-Goal' type7 = 'Controller-Controller' type8 = 'Replacement-Equality' type9 = 'Inequality-CSCS' \u5165\u53e3\u51fd\u6570 #\u552f\u4e00\u91cd\u70b9\uff0c\u4e00\u884c\u4ee3\u7801 cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) #\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! \u67e5\u770b\u5b9a\u4e49\uff1a def generate_clauses(self, task, initialCState, goalCState, controllerStates, k, parser = None, debug = False): self.generateInitial(task, initialCState, debug) self.generateGoal(task, goalCState, debug) self.generatePreconditions(task, controllerStates, debug) self.generatePossibleNonDet(task, controllerStates, debug) self.generateOneSuccessor(task, controllerStates, debug) self.generateTripletForcesBin(task, controllerStates, debug) self.generateAtLeastOneAction(task, controllerStates, debug) self.generateNegativeForwardPropagation(task, controllerStates, debug) self.generateGeneralizeConnection(task, controllerStates, debug) self.generateReachableIClauses(task, initialCState, controllerStates, k, debug) self.generateReachableGClauses(task, controllerStates, goalCState, k, debug) self.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) self.generateMutexGroupsClauses(task, controllerStates, debug) cnf\u6e90\u7801\u52a0\u89e3\u6790\u5404\u81ea\u7684\u7c7b \u00b6 import sys from myTask import MyTask from timeit import default_timer as timer import os class MyCNFError(Exception): def __init__(self, value): self.value = value def __str__(self): return repr(self.value) class CNF: type1 = 'Atom-Controller' type2 = 'Action-Controller' type3 = 'Triplet' type4 = 'Reachable-I' type5 = 'Reachable-G' type6 = 'Replacement-Goal' type7 = 'Controller-Controller' type8 = 'Replacement-Equality' type9 = 'Inequality-CSCS' type10 = 'Replacement-Goal' num_types = 18 print_types = [1, 2, 3, 7] def __init__(self, n_file, n_file_extra, fair, strong): self.disjunctions = [] # list of disjunctions self.maxKey = 1 self.mapVariableNumber = {} self.mapNumberVariable = {} self.mapVariableType = {} self.clauseSizeCounter = {} self.name_file_formula = n_file self.name_file_formula_extra = n_file_extra self.file_formula = open(n_file, 'w') self.file_formula_extra = open(n_file_extra, 'w') self.file_formula.close() self.file_formula_extra.close() self.number_clauses = 0 self.fair = fair self.strong = strong def reset(self): self.disjunctions = [] # list of disjunctions self.maxKey = 1 self.mapVariableNumber = {} self.mapNumberVariable = {} self.mapVariableType = {} self.clauseSizeCounter = {} self.file_formula = open(self.name_file_formula, 'w') self.file_formula.write('p cnf 1 1\\n') self.file_formula_extra = open(self.name_file_formula_extra, 'a') # File formula extra is not used, can be ignored self.number_clauses = 0 \u4ee3\u7801\u63a5\u4e0a\uff0c\u6807\u8bb0\u65b9\u4fbf\u8df3\u8f6c\u67e5\u770b GENERAl\u901a\u7528\u529f\u80fd\u6027\u51fd\u6570 \u00b6 ########################################### ################# GENERAL ################# ########################################### def generateAtomControllerState(self, atom, controllerState): var = atom + '(' + controllerState + ')' self.assignKey(var, 1) return var def generatePairActionControllerState(self, action, controllerState): var = '(' + controllerState + ',' + action + ')' self.assignKey(var, 2) return var def generateTripletCSACS(self, initialState, action, finalState): var = '(' + initialState + ',' + action + ',' + finalState + ')' self.assignKey(var, 3) return var def generateReachableI(self, controllerState): var = 'reachableI(' + controllerState + ')' self.assignKey(var, 4) return var def generateReachableI2(self, controllerState, j): var = 'reachableI(' + controllerState + ',' + str(j) + ')' self.assignKey(var, 4) return var def generateReachableG(self, controllerState, j): var = 'reachableG(' + controllerState + ',' + str(j) + ')' self.assignKey(var, 5) return var def generateReplacementGoalPropagation(self, controllerState1, controllerState2, i): var = 'YR1-' + controllerState1 + '-' + controllerState2 + '-' + str(i) self.assignKey(var, 6) return var def generateReplacementGoalPropagation3(self, controllerState1, controllerState2, i): var = 'YR1-FAIR-' + controllerState1 + '-' + controllerState2 + '-' + str(i) self.assignKey(var, 6) return var def generatePairCSCS(self, n1, n2): var = '(' + n1 + ',' + n2 + ')' self.assignKey(var, 7) return var def generateReplacementEquality(self, n1, n2, atom): var = 'YR2-' + n1 + '-' + n2 + '-' + atom self.assignKey(var, 8) return var def generateInequalityN(self, n1, n2): # n1 < n2 var = n1 + '<' + n2 self.assignKey(var, 9) return var def generateReplacementIPropagation(self, controllerState1, controllerState2, i): var = 'YR3-' + controllerState1 + '-' + controllerState2 + '-' + str(i) self.assignKey(var, 10) return var def generateFirstG(self, n): var = 'FirstG(' + str(n) + ')' self.assignKey(var, 13) return var def generateAfterG(self, n): var = 'AfterG(' + str(n) + ')' self.assignKey(var, 14) return var def generateConn(self, CStates): var = 'conn(' for n in CStates: var += str(n) + ',' var += ')' self.assignKey(var, 15) return var def generatePairFairCS(self, n): var = 'F(' + n + ',fair)' self.assignKey(var, 16) return var def generatePairUnfairCS(self, n): var = 'U(' + n + ',unfair)' self.assignKey(var, 17) return var def generateLowerPredecessor(self, n1, n2): var = 'Lower(' + n1 + ', ' + n2 + ')' self.assignKey(var, 18) return var def generateInputSat(self, nameFile): self.file_formula.close() with open(nameFile, 'r') as formula: name_final = nameFile + 'header' with open(name_final, 'w') as final_formula: final_formula.write('p cnf %i %i\\n' % (len(self.mapNumberVariable), self.number_clauses)) first_line = True for line in formula: if first_line: first_line = False continue final_formula.write(line) # name_final is the name of the file that contains the formula with header and everything return name_final def writeDisjunctions(self, file): for i in self.disjunctions: for j in i: if j[0] == '-': file.write('-' + str(self.mapVariableNumber[j[1:]]) + '\\t') else: file.write(str(self.mapVariableNumber[j]) + '\\t') file.write('0\\n') # def printDisjunctions(self): # for i in self.disjunctions: # for j in i: # print j + ' ', # print '\\n', # def printDisjunctionsNumbers(self, printExpanded): # for i in self.disjunctions: # if printExpanded: # for j in i: # print j + '\\t', # print '' # for j in i: # if j[0] == '-': # print '-' + str(self.mapVariableNumber[j[1:]]), '\\t', # else: # print self.mapVariableNumber[j], '\\t', # print ' 0' def printVariables(self): for i in self.mapVariableNumber: print(i) parseOutput\u8f93\u51fa\u89e3\u51b3policy \u00b6 def parseOutput(self, nameFile, controllerStates, parser, print_policy = False): sets = [set([]) for i in range(self.num_types)] fres = open(nameFile, 'r') res = fres.readlines() if 'UNSAT' in res[0]: return False if 'INDET' in res[0]: return None if not print_policy: return True res = res[1] res = res.split(' ') for r in res: if '\\n' in res: continue var = int(r) if var > 0: varName = self.mapNumberVariable[var] t = self.mapVariableType[varName] sets[t - 1].add(varName) print('===================\\n===================') print('Controller -- CS = Controller State') for i in range(len(sets)): if i + 1 in self.print_types: s = sets[i] if i == 0: # pair atom controller print('===================\\n===================') print('Atom (CS)') print('___________________') for n in controllerStates: print('----------') for j in s: ind = '(' + n + ')' if ind in j: print('%s %s' % (str(parser.get_var_string(j.split(ind)[0])), str(ind))) elif i == 1: # pair cs action print('===================\\n===================') print('(CS, Action with arguments)') print('___________________') for n in controllerStates: for j in s: if '(' + n + ',' in j: print(j) elif i == 2: # Triplet print('===================\\n===================') print('(CS, Action name, CS)') print('___________________') for n in controllerStates: for j in s: if '(' + n + ',' in j: print(j) else: print('===================') print('(CS, CS)') print('___________________') for j in s: print(j) print('===================') print('Solved with %i states' % len(controllerStates)) return True def getNumberVariables(self): return len(self.mapVariableNumber) def getNumberClauses(self): return self.number_clauses def printMapVarNumber(self): for i in self.mapVariableNumber: print(i, '-->', self.mapVariableNumber[i]) def alreadyUsed(self, var): if var in self.mapVariableNumber: return True return False def assignKey(self, var, typeVar = -1): if not self.alreadyUsed(var): self.mapVariableNumber[var] = self.maxKey self.mapNumberVariable[self.maxKey] = var self.mapVariableType[var] = typeVar self.maxKey += 1 def get_num_cl_vars(self): return self.getNumberClauses(), self.getNumberVariables() def addClause(self, clause): self.number_clauses += 1 for j in clause: negated = (j[0] == '-') if negated: var = j[1:] else: var = j if negated: self.file_formula.write('-' + str(self.mapVariableNumber[var]) + '\\t') else: self.file_formula.write(str(self.mapVariableNumber[var]) + '\\t') self.file_formula.write('0\\n') def addClauseExtra(self, clause): for j in clause: self.file_formula_extra.write(j + '|') self.file_formula_extra.write('\\n') # j1|j2|...|jn|\\n def printClausesSizes(self, n): print(self.clauseSizeCounter) sum_all = 0 sum_greater = 0 for i in self.clauseSizeCounter: sum_all += self.clauseSizeCounter[i] if i >= n: sum_greater += self.clauseSizeCounter[i] else: print(i, ':', self.clauseSizeCounter[i]) print('>=', i, ':', sum_greater) \u4ee3\u7801\u63a5\u4e0a\uff0c\u6807\u8bb0\u65b9\u4fbf\u8df3\u8f6c\u67e5\u770b generate_clauses\u6838\u5fc3\u5165\u53e3\u7c7b \u00b6 main.py \u9ad8\u6f6e\u90e8\u5206\uff1a\u6ce8\u610f\u7559\u610f\u91cd\u70b9\uff1a solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... cnf.py ########################################### ############## GENERATION ################# ########################################### def generate_clauses(self, task, initialCState, goalCState, controllerStates, k, parser = None, debug = False): self.generateInitial(task, initialCState, debug) self.generateGoal(task, goalCState, debug) self.generatePreconditions(task, controllerStates, debug) self.generatePossibleNonDet(task, controllerStates, debug) self.generateOneSuccessor(task, controllerStates, debug) self.generateTripletForcesBin(task, controllerStates, debug) self.generateAtLeastOneAction(task, controllerStates, debug) self.generateNegativeForwardPropagation(task, controllerStates, debug) self.generateGeneralizeConnection(task, controllerStates, debug) self.generateReachableIClauses(task, initialCState, controllerStates, k, debug) self.generateReachableGClauses(task, controllerStates, goalCState, k, debug) self.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) self.generateMutexGroupsClauses(task, controllerStates, debug) \u4ee3\u7801\u63a5\u4e0a\uff0c\u6807\u8bb0\u65b9\u4fbf\u8df3\u8f6c\u67e5\u770b generate_clauses\u8c03\u7528\u7684\u751f\u6210\u5b50\u53e5\u7684\u7c7b \u00b6 ########################################### ################ INITIAL ################## ########################################### def generateInitial(self, task, initialCState, debug = False): # -p(n0) for all p not in initial state c1, v1 = self.get_num_cl_vars() start = timer() initial = task.get_initial() atoms = task.get_atoms() for a in atoms: if a not in initial: variable = self.generateAtomControllerState(a, initialCState) self.addClause(['-' + variable]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Initial\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## GOAL ####################### ########################################### def generateGoal(self, task, goalCState, debug = False): # p(ng) for all p in goal state c1, v1 = self.get_num_cl_vars() start = timer() goal = task.get_goal() atoms = task.get_atoms() for a in atoms: if a in goal: variable = self.generateAtomControllerState(a, goalCState) self.addClause([variable]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Goal\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## PRECONDITIONS ############## ########################################### def generatePreconditions(self, task, controllerStates, debug = False): # (n, b) --> p(n) // if p \\in prec(b) c1, v1 = self.get_num_cl_vars() start = timer() atoms = task.get_atoms() actions = task.get_actions() for n in controllerStates: for a in actions: pre = task.get_preconditions(a) var = self.generatePairActionControllerState(a, n) for p in pre: varPre = self.generateAtomControllerState(p, n) self.addClause(['-' + var, varPre]) # print clause + [varPre] # DEBUG c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Precs\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## NON-DET #################### ########################################### def generatePossibleNonDet(self, task, controllerStates, debug = False): # 1. (n, act) --> (n, act') // act, act' are non det act of equal det action (action names) # 2. (n, act) --> -(n, act'') // # 3. (n, b) --> (n, b') // b, b' are siblings # 4. (n, b) --> -(n, b'') // b, b'' belong to same act c1, v1 = self.get_num_cl_vars() start = timer() acts = task.get_action_names() for n in controllerStates: for act in acts: var_pair = self.generatePairActionControllerState(act, n) other_acts = task.get_other_actions_name(act) for act2 in acts: if act2 == act: continue var_pair2 = self.generatePairActionControllerState(act2, n) if act2 in other_acts: self.addClause(['-' + var_pair, var_pair2]) # 1 else: self.addClause(['-' + var_pair, '-' + var_pair2]) # 2 for a1 in task.get_actions_with_name(act): var1 = self.generatePairActionControllerState(a1, n) for a2 in task.get_actions_with_name(act): if a2 == a1: continue if task.actions_are_compatible(a1, a2): # IMPORTANT!! ie. prec not mutex var2 = self.generatePairActionControllerState(a2, n) self.addClause(['-' + var1, '-' + var2]) # 4 for a in task.get_actions(): var1 = self.generatePairActionControllerState(a, n) other_actions = task.get_other_actions(a) for other in other_actions: if other == a: continue var2 = self.generatePairActionControllerState(other, n) self.addClause(['-' + var1, var2]) # 3 c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Non Det\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## ONE SUCC ################### ########################################### def generateOneSuccessor(self, task, controllerStates, debug = False): # 1. (n, act) --> \\OR_{b} (n, b) // for b with name act # 2. (n, act) --> \\OR_{n'} (n, act, n') # 3. -(n, act, n') \\lor -(n, act, n'') # 4. (n, b) --> (n, act) c1, v1 = self.get_num_cl_vars() start = timer() acts = task.get_action_names() for n1 in controllerStates: for a_name in acts: for n2 in controllerStates: for n3 in controllerStates: if n3 == n2: continue var1 = self.generateTripletCSACS(n1, a_name, n2) var2 = self.generateTripletCSACS(n1, a_name, n3) self.addClause(['-' + var1, '-' + var2]) # 3 for a in task.get_actions_with_name(a_name): pair1 = self.generatePairActionControllerState(a, n1) pair2 = self.generatePairActionControllerState(a_name, n1) self.addClause(['-' + pair1, pair2]) # 4 var1 = self.generatePairActionControllerState(a_name, n1) var_triplets = [] for n2 in controllerStates: var_triplets.append(self.generateTripletCSACS(n1, a_name, n2)) self.addClause(['-' + var1] + var_triplets) # 2 var1 = self.generatePairActionControllerState(a_name, n1) var_bin = [] for a in task.get_actions_with_name(a_name): var_bin.append(self.generatePairActionControllerState(a, n1)) self.addClause(['-' + var1] + var_bin) # 1 c2, v2 = self.get_num_cl_vars() if debug: print('Generation: One succ\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## TRIPLET-BIN ################ ########################################### def generateTripletForcesBin(self, task, controllerStates, debug = False): # (n, act, n') --> (n, act) c1, v1 = self.get_num_cl_vars() start = timer() actions = task.get_action_names() for n1 in controllerStates: for a in actions: for n2 in controllerStates: var1 = self.generateTripletCSACS(n1, a, n2) var2 = self.generatePairActionControllerState(a, n1) # print ['-' + var1, var2] # DEBUG self.addClause(['-' + var1, var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Trip bin\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## ONE ACTION ################# ########################################### def generateAtLeastOneAction(self, task, controllerStates, debug): # \\OR_{act_name} (n, act) for all n except goal, ng c1, v1 = self.get_num_cl_vars() start = timer() actions = task.get_action_names() for n in controllerStates: if n == 'ng': continue disj = [] for a in actions: pair = self.generatePairActionControllerState(a, n) disj.append(pair) self.addClause(disj) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: One act\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## NEG-FORWARD PROP ########### ########################################### def __sibling_action_adds_atom(self, task, action, atom): siblings = task.get_other_actions(action) for a in siblings: add_list = task.get_add_list(a) if atom in add_list: return True return False def generateNegativeForwardPropagation(self, task, controllerStates, debug): # 1. (n, act, n') \\land (n, b) --> -p(n') // if p in delete list # 2. (n, n') \\land -p(n) --> -p(n') \\lor \\OR_{b: p \\in add(b)} (n, b) # 3. (n, act, n') \\land (n, b) \\land -p(n) --> -p(n') // if p \\not \\in add(b) # and some sibling of b adds p c1, v1 = self.get_num_cl_vars() start = timer() atoms = task.get_atoms() actions = task.get_actions() #for a in actions: # print(a, task.get_del_list(a)) # print(a, task.get_add_list(a)) for n1 in controllerStates: for n2 in controllerStates: for p in atoms: var_atom_n1 = self.generateAtomControllerState(p, n1) var_pair_n1n2 = self.generatePairCSCS(n1, n2) var_atom_n2 = self.generateAtomControllerState(p, n2) disj_add_clause = ['-' + var_pair_n1n2, var_atom_n1, '-' + var_atom_n2] for a in task.get_relevant_actions(p): a_name = task.get_action_name(a) del_list = task.get_del_list(a) add_list = task.get_add_list(a) var_triplet = self.generateTripletCSACS(n1, a_name, n2) var_bin = self.generatePairActionControllerState(a, n1) if p in del_list: self.addClause(['-' + var_triplet, '-' + var_bin,'-' + var_atom_n2]) # 1 if p in add_list: disj_add_clause.append(var_bin) if p not in add_list and self.__sibling_action_adds_atom(task, a, p): self.addClause(['-' + var_triplet, '-' + var_bin, var_atom_n1, '-' + var_atom_n2]) # 3 self.addClause(disj_add_clause) # 2 c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Neg Prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## GEN-CONNS ################## ########################################### def generateGeneralizeConnection(self, task, controllerStates, debug = False): # (n, n') <--> \\OR_{act} (n, act, n') c1, v1 = self.get_num_cl_vars() start = timer() actions = task.get_action_names() for n1 in controllerStates: for n2 in controllerStates: varBin = self.generatePairCSCS(n1, n2) triplets = ['-' + varBin] for a in actions: triplet = self.generateTripletCSACS(n1, a, n2) self.addClause(['-' + triplet, varBin]) # print ['-' + triplet, varBin] # DEBUG triplets.append(triplet) # print triplets # DEBUG self.addClause(triplets) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Gen conn\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## REACH-I #################### ########################################### def generateReachableIClauses(self, task, initialCState, controllerStates, k, debug = False): self.generateReachableIinitial(initialCState, debug) self.generatePropagationReachableI(task, controllerStates, debug) self.generatePropagationIG(task, controllerStates, k - 1, debug) def generateReachableIinitial(self, initialCState, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() self.addClause([self.generateReachableI(initialCState)]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RI init\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generatePropagationReachableI(self, task, controllerStates, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() for n1 in controllerStates: for n2 in controllerStates: var1 = self.generateReachableI(n1) var2 = self.generateReachableI(n2) var3 = self.generatePairCSCS(n1, n2) self.addClause(['-' + var3, '-' + var1, var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RI prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generatePropagationIG(self, task, controllerStates, k, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() for n in controllerStates: var1 = self.generateReachableI(n) var2 = self.generateReachableG(n, k) self.addClause(['-' + var1, var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: IG prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## REACH-G #################### ########################################### def generateReachableGClauses(self, task, controllerStates, goalCState, k, debug = False): self.generateReachableGInitial(task, goalCState, controllerStates, k - 1, debug) self.generateCompletionReachabilityG(task, controllerStates, k - 1, debug) if self.strong: self.generatePropagationReachableGStrong(task, controllerStates, k - 1, debug) else: if not self.fair: self.generatePropagationReachableGUnfair(task, controllerStates, k - 1, debug) else: self.generatePropagationReachableGCyclic(task, controllerStates, k - 1, debug) def generateReachableGInitial(self, task, goalCState, controllerStates, numberControllerStates, debug = False): # ReachG(ng,0), ReachG(ng,1), ... # -ReachG(n, 0) for n != ng c1, v1 = self.get_num_cl_vars() start = timer() # set the initial values for goal state for i in range(numberControllerStates + 1): self.addClause([self.generateReachableG(goalCState, i)]) # set the negation for non goal states for n in controllerStates: if n == goalCState: continue self.addClause(['-' + self.generateReachableG(n, 0)]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG init\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generateCompletionReachabilityG(self, task, controllerStates, k, debug = False): # ReachG(n,j) --> ReachG(n, j+1) c1, v1 = self.get_num_cl_vars() start = timer() for n in controllerStates: for i in range(k): var1 = self.generateReachableG(n, i) var2 = self.generateReachableG(n, i + 1) self.addClause(['-' + var1, var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG compl\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def setFairUnfairActions(self, task, controllerStates): # 1: (n, unfair) <-> \\OR_{b: unf} (n,b) # 2: (n, fair) <-> \\OR_{b: unf} (n,b) # 3: -(n, fair) \\lor -(n, unfair) actions = task.get_action_names() for n in controllerStates: varPairUnf = self.generatePairUnfairCS(n) disj = ['-' + varPairUnf] for a in actions: if '_unfair_' in a: varPair = self.generatePairActionControllerState(a, n) self.addClause(['-' + varPair, varPairUnf]) # 1 # print(['-' + varPair, varPairUnf]) disj.append(varPair) self.addClause(disj) # 1 # print(disj) for n in controllerStates: varPairF = self.generatePairFairCS(n) disj = ['-' + varPairF] for a in actions: if '_unfair_' not in a: varPair = self.generatePairActionControllerState(a, n) self.addClause(['-' + varPair, varPairF]) # 2 # print(['-' + varPair, varPairF]) disj.append(varPair) self.addClause(disj) # 2 # print(disj) for n in controllerStates: varF = self.generatePairFairCS(n) varU = self.generatePairUnfairCS(n) self.addClause(['-' + varF, '-' + varU]) # 3 # print(['-' + varF, '-' + varU]) def generatePropagationReachableGUnfair(self, task, controllerStates, k, debug = False): # ReachG(n, j+1) <--> [1] # [1] = [2] \\lor [3] # [2] = (n, unfair) \\land \\AND_{n'} [(n,n') --> RG(n',j)] # [3] = \\OR_{n'} [(n, fair) \\land (n,n') \\land RG(n',j)] c1, v1 = self.get_num_cl_vars() start = timer() # Set variables (n, fair) and (n, unfair) self.setFairUnfairActions(task, controllerStates) # Force the equivalences for [2] # [(n,n') --> RG(n',j)] <-> Repl(n,n',j) for i in range(k): for n1 in controllerStates: if n1 == 'ng': continue for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation(n1, n2, i) varPair = self.generatePairCSCS(n1, n2) varRG = self.generateReachableG(n2, i) self.addClause(['-' + varRepl, '-' + varPair, varRG]) self.addClause(['-' + varRG, varRepl]) self.addClause([varPair, varRepl]) # Force the equivalences for [3] # [(n, fair) \\land (n,n') \\land RG(n',j)] <-> Repl3(n,n',j) for i in range(k): for n1 in controllerStates: if n1 == 'ng': continue for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation3(n1, n2, i) varPair = self.generatePairCSCS(n1, n2) varFair = self.generatePairFairCS(n1) varRG = self.generateReachableG(n2, i) self.addClause(['-' + varRepl, varPair]) self.addClause(['-' + varRepl, varFair]) self.addClause(['-' + varRepl, varRG]) self.addClause([varRepl, '-' + varPair, '-' + varFair, '-' + varRG]) # Right arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): varRG = self.generateReachableG(n1, i + 1) listStrong = [self.generatePairUnfairCS(n1)] listCyclic = [] for n in controllerStates: listStrong.append(self.generateReplacementGoalPropagation(n1, n, i)) listCyclic.append(self.generateReplacementGoalPropagation3(n1, n, i)) clause = ['-' + varRG] + listCyclic for e in listStrong: self.addClause(clause + [e]) # print(clause + [e]) # Left arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): varRG = self.generateReachableG(n1, i + 1) listStrong = [self.generatePairUnfairCS(n1)] listCyclic = [] for n in controllerStates: listStrong.append(self.generateReplacementGoalPropagation(n1, n, i)) listCyclic.append(self.generateReplacementGoalPropagation3(n1, n, i)) self.addClause([varRG] + ['-' + e for e in listStrong]) # print([varRG] + ['-' + e for e in listStrong]) for e in listCyclic: self.addClause([varRG, '-' + e]) # print([varRG, '-' + e]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generatePropagationReachableGCyclic(self, task, controllerStates, k, debug = False): # ReachG(n, j+1) <--> \\OR_{n'} [(n,n') \\land ReachG(n', j)] c1, v1 = self.get_num_cl_vars() start = timer() # Force the equivalences for i in range(k): for n1 in controllerStates: if n1 == 'ng': continue for n2 in controllerStates: var1 = self.generateReplacementGoalPropagation(n1, n2, i) var2 = self.generatePairCSCS(n1, n2) var3 = self.generateReachableG(n2, i) self.addClause(['-' + var1, var2]) self.addClause(['-' + var1, var3]) self.addClause([var1, '-' + var2, '-' + var3]) # Right arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): var1 = self.generateReachableG(n1, i + 1) var2 = ['-' + var1] for n2 in controllerStates: var3 = self.generateReplacementGoalPropagation(n1, n2, i) var2.append(var3) self.addClause(var2) # Left arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): var1 = self.generateReachableG(n1, i + 1) for n2 in controllerStates: var2 = self.generateReplacementGoalPropagation(n1, n2, i) self.addClause([var1, '-' + var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generatePropagationReachableGStrong(self, task, controllerStates, k, debug = False): # ReachG(n, j+1) <--> \\AND_{n'} [(n,n') --> ReachG(n', j)] c1, v1 = self.get_num_cl_vars() start = timer() # Force the equivalences for i in range(k): for n1 in controllerStates: if n1 == 'ng': continue for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation(n1, n2, i) varPair = self.generatePairCSCS(n1, n2) varRG = self.generateReachableG(n2, i) self.addClause(['-' + varRepl, '-' + varPair, varRG]) self.addClause(['-' + varRG, varRepl]) self.addClause([varPair, varRepl]) # Right arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): varRG = self.generateReachableG(n1, i + 1) for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation(n1, n2, i) self.addClause(['-' + varRG, varRepl]) # Left arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): disj = [self.generateReachableG(n1, i + 1)] for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation(n1, n2, i) disj.append('-' + varRepl) self.addClause(disj) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## SYMM-BREAKING ############## ########################################### def generateSymmetryBreaking(self, task, controllerStates, initialCState, goalCState, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() if len(controllerStates) >= 4: # (na, nb) --> \\OR_{i<=a} (n_i, n_{b-1}) for ia, na in enumerate(controllerStates[:-1]): for ib, nb in enumerate(controllerStates[:-1]): if ib in [0, 1]: continue nb_1 = controllerStates[ib - 1] var_pair_ab = self.generatePairCSCS(na, nb) disj = ['-' + var_pair_ab] for i in range(ia + 1): ni = controllerStates[i] disj.append(self.generatePairCSCS(ni, nb_1)) self.addClause(disj) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Sym brk\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## MUTEX GROUPS ############### ########################################### def generateMutexGroupsClauses(self, task, controllerStates, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() mutex_groups = task.get_mutex_groups() for mg in mutex_groups: pairs = self.__get_all_pairs(mg) for (a1, a2) in pairs: for n in controllerStates: var1 = self.generateAtomControllerState(a1, n) var2 = self.generateAtomControllerState(a2, n) self.addClause(['-' + var1, '-' + var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Mutex\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def __get_all_pairs(self, els): return [(e1, e2) for (i1, e1) in enumerate(els) for (i2, e2) in enumerate(els) if i2 > i1]","title":"CNF_py"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#cnf_py","text":"","title":"CNF_py"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#l3","text":"domain.pddl (define (problem line-0) (:domain line) (:objects L1 - location L2 - location L3 - location ) (:init (person-at L1) (road L1 L2) (road L2 L1) (road L3 L2) (road L2 L3) ) (:goal (person-at L3)) ) problem 3 grid move right ; Stupid Examples for me to understand this programe (define (domain line) (:requirements :typing) (:types location) (:predicates (person-at ?loc - location) (road ?from - location ?to - location) ) (:action move-right :parameters (?from - location ?to - location) :precondition (and (person-at ?from) (road ?from ?to)) :effect (and (person-at ?to) (not (person-at ?from))) ) ) /src$ python main.py ../mystupidroad/domain.pddl ../mystupidroad/stupid.pddl -strong 1 -policy 1 \u89c2\u5bdf\u4f20\u5165my_task\u7684\u6570\u636e\u7ed3\u6784\u90fd\u6709\u4ec0\u4e48\u8f93\u5165\uff1a p.generate_task(name_sas_file) #\u8bfb\u53d6sas\u6587\u4ef6\uff0c\u4fdd\u5b58\u6570\u636e >>> my_task = p.translate_to_atomic() #\u5b58\u8fdbmy_task\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61my_task\u4e2d\uff0c\u81ea\u52a8\u8f93\u51fa\u754c\u9762\u7684\u5185\u5bb9 Setting atoms # Atoms: 3 Setting initial Setting goal Setting actions # Actions: 4 Setting other actions (0, '/', 4) Setting action card Setting mutexes Setting relevant actions Setting splitting Setting compatible actions (0, '/', 4) 0.00387597084045 \u67e5\u770bmy_task\u7c7b\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf class MyTask(): def __init__(self): self.atoms = None # Set self.initial = None # Set of atoms self.goal = None # Set of atoms self.actions = None # Dictionary, name --> [precs, adds, dels] self.action_nondet = {} # name --> list other actions self.action_cardinality = {} # name --> number self.mutex_groups = None # list of list; each sub-list has atoms belonging to the same mutex group self.compatible_actions = {} # action name --> set of compatible actions self.mutex_groups_set = [] # list of sets of mutex groups self.relevant_actions_atom = {} # dictionary: atom --> relevant actions self.relevant_actions_atom_aname = {} # dictionary: (atom, a_name) --> relevant actions self.action_names = None # set self.other_actions_name = {} # Dictionary name --> list of other actions self.action_name_to_actions = {} # action_name --> list of actions ...... def is_fair(self): for a in self.actions: if '_unfair_' in a: return False return True ...... \u5728Parser\u7c7b\u7684\u65b9\u6cd5\u4e2d\u7ffb\u8bd1\u6210\uff0c\u4fdd\u5b58\u6210mytask\u7c7b\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u6839\u636emyTask.py\u5b9a\u4e49\u7684\u65b9\u6cd5 def print_task(self): print('ATOMS ================================================') for a in self.atoms: print(a) print('INITIAL ==============================================') for a in self.initial: print(a) print('GOAL =================================================') for a in self.goal: print(a) print('ACTIONS ==============================================') for a in self.actions: print(a, self.get_other_actions(a)) print(a, self.actions[a]) \u6253\u5370\u51fa\u6765\u770b >>> my_task.print_task() ATOMS ================================================ (var0=1) (var0=2) (var0=0) INITIAL ============================================== (var0=0) GOAL ================================================= (var0=2) ACTIONS ============================================== ('move-right(l2,l3)', []) ('move-right(l2,l3)', [['(var0=1)'], ['(var0=2)'], ['(var0=1)']]) ('move-right(l2,l1)', []) ('move-right(l2,l1)', [['(var0=1)'], ['(var0=0)'], ['(var0=1)']]) ('move-right(l1,l2)', []) ('move-right(l1,l2)', [['(var0=0)'], ['(var0=1)'], ['(var0=0)']]) ('move-right(l3,l2)', []) ('move-right(l3,l2)', [['(var0=2)'], ['(var0=1)'], ['(var0=2)']]) >>> print(my_task.action_nondet) {'move-right(l1,l2)': [], 'move-right(l3,l2)': [], 'move-right(l2,l3)': [], 'move-right(l2,l1)': []} >>> print(my_task.action_cardinality) {'move-right(l1,l2)': 1, 'move-right(l3,l2)': 1, 'move-right': 1, 'move-right(l2,l3)': 1, 'move-right(l2,l1)': 1} >>> print(my_task.mutex_groups) [['(var0=0)', '(var0=1)', '(var0=2)']] >>> print(my_task.compatible_actions) {'move-right(l1,l2)': set([]), 'move-right(l3,l2)': set([]), 'move-right(l2,l3)': set(['move-right(l2,l1)']), 'move-right(l2,l1)': set(['move-right(l2,l3)'])} >>> print(my_task.mutex_groups_set) [set(['(var0=1)', '(var0=2)', '(var0=0)'])] >>> print(my_task.relevant_actions_atom) {'(var0=1)': set(['move-right(l1,l2)', 'move-right(l3,l2)', 'move-right(l2,l3)', 'move-right(l2,l1)']), '(var0=2)': set(['move-right(l2,l3)', 'move-right(l3,l2)']), '(var0=0)': set(['move-right(l1,l2)', 'move-right(l2,l1)'])} >>> print(my_task.relevant_actions_atom_aname) {} >>> print(my_task.action_names) set(['move-right']) >>> print(my_task.other_actions_name) {'move-right': []} >>> print(my_task.action_name_to_actions) {'move-right': ['move-right(l2,l3)', 'move-right(l2,l1)', 'move-right(l1,l2)', 'move-right(l3,l2)']} parser.py\u4e2dp.translate_to_atomic\u51fd\u6570\u5c31\u662f\u751f\u6210\u4e0a\u8ff0my_task\u6570\u636e\u7ed3\u6784\u5bf9\u8c61\u7684\u5143\u51f6 task = MyTask() debug = False#\u8fd9\u4e2a\u5e94\u8be5\u662f\u5f00\u53d1\u7684\u65f6\u5019\u65b9\u4fbf\u8c03\u8bd5\u53ef\u4ee5\u8bbe\u7f6eTrue print('Setting atoms')#\u539f\u5b50\u547d\u9898 task.set_atoms(self.get_atoms(), debug) print('Setting initial')#\u521d\u6001 task.set_initial(self.get_initial_atomic(), debug) print('Setting goal')#\u7ec8\u6001 task.set_goal(self.get_goal_atomic(), debug) print('Setting actions')#\u8bbe\u5b9a\u52a8\u4f5c task.set_actions_atomic(self.get_actions_atomic(), debug) print('Setting mutexes')#\u8bbe\u5b9a\u4e92\u65a5\u91cf\uff1f task.set_mutex_groups(self.get_mutex_groups_atomic(), debug) print('Setting relevant actions')#\u8bbe\u7f6e\u76f8\u5173\u52a8\u4f5c task.set_relevant_actions(debug) print('Setting splitting')#\u5206\u88c2 task.initialize_splitting(debug) start = timer() print('Setting compatible actions')#\u8bbe\u7f6e\u76f8\u5bb9\u53ef\u4ee5\u5e76\u5b58\u7684\u52a8\u4f5c task.create_compatible_actions(debug) print(timer() - start) return task \u7136\u540e\u5c31\u662fmain.py\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u7559\u610f\u91cd\u70b9\uff1a solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! \u4f20\u5165\u5b57\u7b26'n0', \u7ec8\u6001'ng' >>> print(controllerStates) ['n0', 'n1', 'ng']\u8fd9\u4e2a\u662f3\u683c\u7684\u60c5\u51b5\uff0c2\u683c\u7684\u65f6\u5019\u662f['n0','ng'] >>> len(controllerStates) 3 >>> print(show_gen_info) False\u61d2\u5f97\u663e\u793a\u8fd9\u90e8\u5206\uff0c\u56e0\u4e3a\u548c\u6211\u8981\u5173\u5fc3\u7684\u91cd\u70b9\u6ca1\u5173\u7cfb \u8fd9\u91cc\u7684p\u662fParser\u5b9e\u4f8b\uff0c\u53ef\u80fd\u7528\u91cc\u9762\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u57fa\u672c\u770b\u7740\u90fd\u662f\u79c1\u6709\u53d8\u91cf ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ......","title":"L3"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#cnf","text":"\u91cd\u8981\u7684\u662f\u518d\u6765\u4e00\u904d\uff0cmain.py\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u7559\u610f\u91cd\u70b9\uff1a solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() #\u552f\u4e00\u91cd\u70b9\uff0c\u4e00\u884c\u4ee3\u7801 cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) #\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... \u8fd0\u884c\u7ed3\u679c\u662f >>> print(result) True \u7136\u540e\u662fcnf\u5bf9\u8c61\u7684\u6570\u636e\u7ed3\u6784\u548c\u53d8\u91cf\uff0c\u51fd\u6570\uff0c\u7c7b\u548c\u65b9\u6cd5 class CNF: type1 = 'Atom-Controller' type2 = 'Action-Controller' type3 = 'Triplet' type4 = 'Reachable-I' type5 = 'Reachable-G' type6 = 'Replacement-Goal' type7 = 'Controller-Controller' type8 = 'Replacement-Equality' type9 = 'Inequality-CSCS' type10 = 'Replacement-Goal' num_types = 18#\u8fd9\u4e9b\u9759\u6001\u53d8\u91cf\u5b9a\u4e49\u5b8c\u4e86 print_types = [1, 2, 3, 7]#\uff1f\u4ee3\u8868\u53c2\u6570\u9009\u9879\uff0c\u60f3\u6253\u5370\u51fa\u6765\u4ec0\u4e48\u7ed3\u679c\u5417 def __init__(self, n_file, n_file_extra, fair, strong): self.disjunctions = [] # list of disjunctions self.maxKey = 1 self.mapVariableNumber = {} self.mapNumberVariable = {} self.mapVariableType = {} self.clauseSizeCounter = {} self.name_file_formula = n_file self.name_file_formula_extra = n_file_extra self.file_formula = open(n_file, 'w') self.file_formula_extra = open(n_file_extra, 'w') self.file_formula.close() self.file_formula_extra.close() self.number_clauses = 0 self.fair = fair self.strong = strong def reset(self): self.disjunctions = [] # list of disjunctions self.maxKey = 1 self.mapVariableNumber = {} self.mapNumberVariable = {} self.mapVariableType = {} self.clauseSizeCounter = {} self.file_formula = open(self.name_file_formula, 'w') self.file_formula.write('p cnf 1 1\\n') self.file_formula_extra = open(self.name_file_formula_extra, 'a') # File formula extra is not used, can be ignored self.number_clauses = 0 ...... \u7136\u540e\u770b\u770b\u8fd0\u884c\u5b8c\u7ed3\u679c\uff0c\u5176\u5b9e\u52a0\u65ad\u70b9\u53ef\u4ee5\u770b\u7b2c\u4e00\u6b21\u5faa\u73af\u7684\u7ed3\u679c\uff0c \u7ed3\u679c\u5c31\u662f\u7b2c\u4e8c\u904d\u5faa\u73af\u4e4b\u540e\u7684\u8fd9\u4e9b\u91cf\u662f\u591a\u5c11\uff1a >>> print(cnf.disjunctions) [] >>> print(cnf.maxKey) 67 >>> print(cnf.mapVariableNumber) {'reachableG(ng,0)': 49, '(var0=2)(ng)': 3, 'YR1-n1-ng-1': 66, '(n1,move-right(l1,l2))': 12, 'reachableG(ng,1)': 50, '(ng,move-right,n0)': 31, '(n1,move-right,ng)': 30, '(ng,move-right(l1,l2))': 19, 'YR1-n0-n0-0': 55, '(n1,move-right,n1)': 29, '(ng,ng)': 42, 'reachableG(n1,1)': 54, '(n0,move-right)': 22, '(n0,move-right(l2,l3))': 4, '(var0=1)(n1)': 10, '(ng,move-right(l2,l1))': 18, 'YR1-n0-n0-1': 61, '(ng,move-right(l2,l3))': 16, '(n1,move-right,n0)': 28, 'YR1-n1-n0-0': 58, '(n0,move-right,n1)': 26, '(n1,move-right(l3,l2))': 14, 'reachableI(ng)': 45, '(n1,n1)': 38, '(n1,ng)': 39, '(var0=0)(n1)': 13, '(ng,move-right(l3,l2))': 21, 'YR1-n1-n1-1': 65, 'reachableI(n0)': 43, '(var0=2)(n1)': 15, '(var0=0)(n0)': 7, '(ng,move-right)': 24, '(n0,n0)': 34, '(n0,move-right,ng)': 27, 'YR1-n1-n0-1': 64, 'YR1-n0-ng-0': 57, 'reachableG(n1,0)': 52, 'YR1-n1-n1-0': 59, '(n1,n0)': 37, '(var0=0)(ng)': 20, 'YR1-n0-ng-1': 63, '(ng,move-right,n1)': 32, 'reachableI(n1)': 44, '(ng,n1)': 41, 'reachableG(n1,2)': 47, 'YR1-n0-n1-1': 62, '(var0=1)(n0)': 1, '(n0,move-right(l2,l1))': 5, '(n1,move-right(l2,l1))': 11, '(n0,ng)': 36, '(n0,move-right,n0)': 25, '(ng,n0)': 40, 'YR1-n1-ng-0': 60, 'reachableG(n0,0)': 51, '(var0=1)(ng)': 17, '(n0,move-right(l1,l2))': 6, '(n1,move-right)': 23, 'reachableG(n0,2)': 46, '(n0,move-right(l3,l2))': 8, 'reachableG(n0,1)': 53, 'YR1-n0-n1-0': 56, '(n1,move-right(l2,l3))': 9, '(ng,move-right,ng)': 33, 'reachableG(ng,2)': 48, '(var0=2)(n0)': 2, '(n0,n1)': 35} >>> print(cnf.mapNumberVariable) {1: '(var0=1)(n0)', 2: '(var0=2)(n0)', 3: '(var0=2)(ng)', 4: '(n0,move-right(l2,l3))', 5: '(n0,move-right(l2,l1))', 6: '(n0,move-right(l1,l2))', 7: '(var0=0)(n0)', 8: '(n0,move-right(l3,l2))', 9: '(n1,move-right(l2,l3))', 10: '(var0=1)(n1)', 11: '(n1,move-right(l2,l1))', 12: '(n1,move-right(l1,l2))', 13: '(var0=0)(n1)', 14: '(n1,move-right(l3,l2))', 15: '(var0=2)(n1)', 16: '(ng,move-right(l2,l3))', 17: '(var0=1)(ng)', 18: '(ng,move-right(l2,l1))', 19: '(ng,move-right(l1,l2))', 20: '(var0=0)(ng)', 21: '(ng,move-right(l3,l2))', 22: '(n0,move-right)', 23: '(n1,move-right)', 24: '(ng,move-right)', 25: '(n0,move-right,n0)', 26: '(n0,move-right,n1)', 27: '(n0,move-right,ng)', 28: '(n1,move-right,n0)', 29: '(n1,move-right,n1)', 30: '(n1,move-right,ng)', 31: '(ng,move-right,n0)', 32: '(ng,move-right,n1)', 33: '(ng,move-right,ng)', 34: '(n0,n0)', 35: '(n0,n1)', 36: '(n0,ng)', 37: '(n1,n0)', 38: '(n1,n1)', 39: '(n1,ng)', 40: '(ng,n0)', 41: '(ng,n1)', 42: '(ng,ng)', 43: 'reachableI(n0)', 44: 'reachableI(n1)', 45: 'reachableI(ng)', 46: 'reachableG(n0,2)', 47: 'reachableG(n1,2)', 48: 'reachableG(ng,2)', 49: 'reachableG(ng,0)', 50: 'reachableG(ng,1)', 51: 'reachableG(n0,0)', 52: 'reachableG(n1,0)', 53: 'reachableG(n0,1)', 54: 'reachableG(n1,1)', 55: 'YR1-n0-n0-0', 56: 'YR1-n0-n1-0', 57: 'YR1-n0-ng-0', 58: 'YR1-n1-n0-0', 59: 'YR1-n1-n1-0', 60: 'YR1-n1-ng-0', 61: 'YR1-n0-n0-1', 62: 'YR1-n0-n1-1', 63: 'YR1-n0-ng-1', 64: 'YR1-n1-n0-1', 65: 'YR1-n1-n1-1', 66: 'YR1-n1-ng-1'} >>> print(cnf.mapVariableType) {'reachableG(ng,0)': 5, '(var0=2)(ng)': 1, 'YR1-n1-ng-1': 6, '(n1,move-right(l1,l2))': 2, 'reachableG(ng,1)': 5, '(ng,move-right,n0)': 3, '(n1,move-right,ng)': 3, '(ng,move-right(l1,l2))': 2, 'YR1-n0-n0-0': 6, '(n1,move-right,n1)': 3, '(ng,ng)': 7, 'reachableG(n1,1)': 5, '(n0,move-right)': 2, '(n0,move-right(l2,l3))': 2, '(var0=1)(n1)': 1, '(ng,move-right(l2,l1))': 2, 'YR1-n0-n0-1': 6, '(ng,move-right(l2,l3))': 2, '(n1,move-right,n0)': 3, 'YR1-n1-n0-0': 6, '(n0,move-right,n1)': 3, '(n1,move-right(l3,l2))': 2, 'reachableI(ng)': 4, '(n1,n1)': 7, '(n1,ng)': 7, '(var0=0)(n1)': 1, '(ng,move-right(l3,l2))': 2, 'YR1-n1-n1-1': 6, 'reachableI(n0)': 4, '(var0=2)(n1)': 1, '(var0=0)(n0)': 1, '(ng,move-right)': 2, '(n0,n0)': 7, '(n0,move-right,ng)': 3, 'YR1-n1-n0-1': 6, 'YR1-n0-ng-0': 6, 'reachableG(n1,0)': 5, 'YR1-n1-n1-0': 6, '(n1,n0)': 7, '(var0=0)(ng)': 1, 'YR1-n0-ng-1': 6, '(ng,move-right,n1)': 3, 'reachableI(n1)': 4, '(ng,n1)': 7, 'reachableG(n1,2)': 5, 'YR1-n0-n1-1': 6, '(var0=1)(n0)': 1, '(n0,move-right(l2,l1))': 2, '(n1,move-right(l2,l1))': 2, '(n0,ng)': 7, '(n0,move-right,n0)': 3, '(ng,n0)': 7, 'YR1-n1-ng-0': 6, 'reachableG(n0,0)': 5, '(var0=1)(ng)': 1, '(n0,move-right(l1,l2))': 2, '(n1,move-right)': 2, 'reachableG(n0,2)': 5, '(n0,move-right(l3,l2))': 2, 'reachableG(n0,1)': 5, 'YR1-n0-n1-0': 6, '(n1,move-right(l2,l3))': 2, '(ng,move-right,ng)': 3, 'reachableG(ng,2)': 5, '(var0=2)(n0)': 1, '(n0,n1)': 7} >>> print(cnf.clauseSizeCounter) {} >>> print(cnf.name_file_formula) formula-temp.txt >>> print(cnf.name_file_formula_extra) formula-extra-temp.txt >>> print(cnf.number_clauses) 234 >>> print(cnf.fair) True >>> print(cnf.strong) True \u4e0a\u9762\u8fd9\u4e2a\u6570\u636e\u6574\u7406\u4e00\u4e0b\u683c\u5f0f\uff1a >>> print(cnf.mapVariableNumber) {'reachableG(ng,0)': 49, '(var0=2)(ng)': 3, 'YR1-n1-ng-1': 66, '(n1,move-right(l1,l2))': 12, 'reachableG(ng,1)': 50, '(ng,move-right,n0)': 31, '(n1,move-right,ng)': 30, '(ng,move-right(l1,l2))': 19, 'YR1-n0-n0-0': 55, '(n1,move-right,n1)': 29, '(ng,ng)': 42, 'reachableG(n1,1)': 54, '(n0,move-right)': 22, '(n0,move-right(l2,l3))': 4, '(var0=1)(n1)': 10, '(ng,move-right(l2,l1))': 18, 'YR1-n0-n0-1': 61, '(ng,move-right(l2,l3))': 16, '(n1,move-right,n0)': 28, 'YR1-n1-n0-0': 58, '(n0,move-right,n1)': 26, '(n1,move-right(l3,l2))': 14, 'reachableI(ng)': 45, '(n1,n1)': 38, '(n1,ng)': 39, '(var0=0)(n1)': 13, '(ng,move-right(l3,l2))': 21, 'YR1-n1-n1-1': 65, 'reachableI(n0)': 43, '(var0=2)(n1)': 15, '(var0=0)(n0)': 7, '(ng,move-right)': 24, '(n0,n0)': 34, '(n0,move-right,ng)': 27, 'YR1-n1-n0-1': 64, 'YR1-n0-ng-0': 57, 'reachableG(n1,0)': 52, 'YR1-n1-n1-0': 59, '(n1,n0)': 37, '(var0=0)(ng)': 20, 'YR1-n0-ng-1': 63, '(ng,move-right,n1)': 32, 'reachableI(n1)': 44, '(ng,n1)': 41, 'reachableG(n1,2)': 47, 'YR1-n0-n1-1': 62, '(var0=1)(n0)': 1, '(n0,move-right(l2,l1))': 5, '(n1,move-right(l2,l1))': 11, '(n0,ng)': 36, '(n0,move-right,n0)': 25, '(ng,n0)': 40, 'YR1-n1-ng-0': 60, 'reachableG(n0,0)': 51, '(var0=1)(ng)': 17, '(n0,move-right(l1,l2))': 6, '(n1,move-right)': 23, 'reachableG(n0,2)': 46, '(n0,move-right(l3,l2))': 8, 'reachableG(n0,1)': 53, 'YR1-n0-n1-0': 56, '(n1,move-right(l2,l3))': 9, '(ng,move-right,ng)': 33, 'reachableG(ng,2)': 48, '(var0=2)(n0)': 2, '(n0,n1)': 35} >>> print(cnf.mapNumberVariable) { 1: '(var0=1)(n0)', 2: '(var0=2)(n0)', 3: '(var0=2)(ng)', 4: '(n0,move-right(l2,l3))', 5: '(n0,move-right(l2,l1))', 6: '(n0,move-right(l1,l2))', 7: '(var0=0)(n0)', 8: '(n0,move-right(l3,l2))', 9: '(n1,move-right(l2,l3))', 10: '(var0=1)(n1)', 11: '(n1,move-right(l2,l1))', 12: '(n1,move-right(l1,l2))', 13: '(var0=0)(n1)', 14: '(n1,move-right(l3,l2))', 15: '(var0=2)(n1)', 16: '(ng,move-right(l2,l3))', 17: '(var0=1)(ng)', 18: '(ng,move-right(l2,l1))', 19: '(ng,move-right(l1,l2))', 20: '(var0=0)(ng)', 21: '(ng,move-right(l3,l2))', 22: '(n0,move-right)', 23: '(n1,move-right)', 24: '(ng,move-right)', 25: '(n0,move-right,n0)', 26: '(n0,move-right,n1)', 27: '(n0,move-right,ng)', 28: '(n1,move-right,n0)', 29: '(n1,move-right,n1)', 30: '(n1,move-right,ng)', 31: '(ng,move-right,n0)', 32: '(ng,move-right,n1)', 33: '(ng,move-right,ng)', 34: '(n0,n0)', 35: '(n0,n1)', 36: '(n0,ng)', 37: '(n1,n0)', 38: '(n1,n1)', 39: '(n1,ng)', 40: '(ng,n0)', 41: '(ng,n1)', 42: '(ng,ng)', 43: 'reachableI(n0)', 44: 'reachableI(n1)', 45: 'reachableI(ng)', 46: 'reachableG(n0,2)', 47: 'reachableG(n1,2)', 48: 'reachableG(ng,2)', 49: 'reachableG(ng,0)', 50: 'reachableG(ng,1)', 51: 'reachableG(n0,0)', 52: 'reachableG(n1,0)', 53: 'reachableG(n0,1)', 54: 'reachableG(n1,1)', 55: 'YR1-n0-n0-0', 56: 'YR1-n0-n1-0', 57: 'YR1-n0-ng-0', 58: 'YR1-n1-n0-0', 59: 'YR1-n1-n1-0', 60: 'YR1-n1-ng-0', 61: 'YR1-n0-n0-1', 62: 'YR1-n0-n1-1', 63: 'YR1-n0-ng-1', 64: 'YR1-n1-n0-1', 65: 'YR1-n1-n1-1', 66: 'YR1-n1-ng-1'} >>> print(cnf.mapVariableType) {'reachableG(ng,0)': 5, '(var0=2)(ng)': 1, 'YR1-n1-ng-1': 6, '(n1,move-right(l1,l2))': 2, 'reachableG(ng,1)': 5, '(ng,move-right,n0)': 3, '(n1,move-right,ng)': 3, '(ng,move-right(l1,l2))': 2, 'YR1-n0-n0-0': 6, '(n1,move-right,n1)': 3, '(ng,ng)': 7, 'reachableG(n1,1)': 5, '(n0,move-right)': 2, '(n0,move-right(l2,l3))': 2, '(var0=1)(n1)': 1, '(ng,move-right(l2,l1))': 2, 'YR1-n0-n0-1': 6, '(ng,move-right(l2,l3))': 2, '(n1,move-right,n0)': 3, 'YR1-n1-n0-0': 6, '(n0,move-right,n1)': 3, '(n1,move-right(l3,l2))': 2, 'reachableI(ng)': 4, '(n1,n1)': 7, '(n1,ng)': 7, '(var0=0)(n1)': 1, '(ng,move-right(l3,l2))': 2, 'YR1-n1-n1-1': 6, 'reachableI(n0)': 4, '(var0=2)(n1)': 1, '(var0=0)(n0)': 1, '(ng,move-right)': 2, '(n0,n0)': 7, '(n0,move-right,ng)': 3, 'YR1-n1-n0-1': 6, 'YR1-n0-ng-0': 6, 'reachableG(n1,0)': 5, 'YR1-n1-n1-0': 6, '(n1,n0)': 7, '(var0=0)(ng)': 1, 'YR1-n0-ng-1': 6, '(ng,move-right,n1)': 3, 'reachableI(n1)': 4, '(ng,n1)': 7, 'reachableG(n1,2)': 5, 'YR1-n0-n1-1': 6, '(var0=1)(n0)': 1, '(n0,move-right(l2,l1))': 2, '(n1,move-right(l2,l1))': 2, '(n0,ng)': 7, '(n0,move-right,n0)': 3, '(ng,n0)': 7, 'YR1-n1-ng-0': 6, 'reachableG(n0,0)': 5, '(var0=1)(ng)': 1, '(n0,move-right(l1,l2))': 2, '(n1,move-right)': 2, 'reachableG(n0,2)': 5, '(n0,move-right(l3,l2))': 2, 'reachableG(n0,1)': 5, 'YR1-n0-n1-0': 6, '(n1,move-right(l2,l3))': 2, '(ng,move-right,ng)': 3, 'reachableG(ng,2)': 5, '(var0=2)(n0)': 1, '(n0,n1)': 7} \u6700\u7ec8\u627e\u5230\u7684SAT\u89e3\u7b54 SAT SAT -1 -2 3 4 5 -6 -7 -8 -9 -10 -11 12 13 -14 -15 -16 -17 -18 -19 -20 -21 22 23 -24 -25 26 -27 -28 -29 30 -31 -32 -33 -34 35 -36 -37 -38 39 -40 -41 -42 43 44 45 46 47 48 49 50 -51 -52 -53 54 55 -56 57 58 59 60 61 62 63 64 65 66 0 \u5bf9\u5e94\u7684\u547d\u9898\uff1a >>> print(cnf.mapNumberVariable) { 3: '(var0=2)(ng)', 4: '(n0,move-right(l2,l3))', 5: '(n0,move-right(l2,l1))', 12: '(n1,move-right(l1,l2))', 13: '(var0=0)(n1)', 22: '(n0,move-right)', 23: '(n1,move-right)', 26: '(n0,move-right,n1)', 30: '(n1,move-right,ng)', 35: '(n0,n1)', 39: '(n1,ng)', 43: 'reachableI(n0)', 44: 'reachableI(n1)', 45: 'reachableI(ng)', 46: 'reachableG(n0,2)', 47: 'reachableG(n1,2)', 48: 'reachableG(ng,2)', 49: 'reachableG(ng,0)', 50: 'reachableG(ng,1)', 54: 'reachableG(n1,1)', 55: 'YR1-n0-n0-0', 57: 'YR1-n0-ng-0', 58: 'YR1-n1-n0-0', 59: 'YR1-n1-n1-0', 60: 'YR1-n1-ng-0', 61: 'YR1-n0-n0-1', 62: 'YR1-n0-n1-1', 63: 'YR1-n0-ng-1', 64: 'YR1-n1-n0-1', 65: 'YR1-n1-n1-1', 66: 'YR1-n1-ng-1'}","title":"CNF"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#cnfpy","text":"class CNF ( builtins.object ) CNF (n_file, n_file_extra, fair, strong) Methods defined here: __init__ (self, n_file, n_file_extra, fair, strong) Initialize self. See help(type(self)) for accurate signature. addClause (self, clause) addClauseExtra (self, clause) alreadyUsed (self, var) assignKey (self, var, typeVar=-1) generateAfterG (self, n) generateAtLeastOneAction (self, task, controllerStates, debug) generateAtomControllerState (self, atom, controllerState) generateCompletionReachabilityG (self, task, controllerStates, k, debug=False) generateConn (self, CStates) generateFirstG (self, n) generateGeneralizeConnection (self, task, controllerStates, debug=False) generateGoal (self, task, goalCState, debug=False) generateInequalityN (self, n1, n2) generateInitial (self, task, initialCState, debug=False) generateInputSat (self, nameFile) generateLowerPredecessor (self, n1, n2) generateMutexGroupsClauses (self, task, controllerStates, debug=False) generateNegativeForwardPropagation (self, task, controllerStates, debug) generateOneSuccessor (self, task, controllerStates, debug=False) generatePairActionControllerState (self, action, controllerState) generatePairCSCS (self, n1, n2) generatePairFairCS (self, n) generatePairUnfairCS (self, n) generatePossibleNonDet (self, task, controllerStates, debug=False) generatePreconditions (self, task, controllerStates, debug=False) generatePropagationIG (self, task, controllerStates, k, debug=False) generatePropagationReachableGCyclic (self, task, controllerStates, k, debug=False) generatePropagationReachableGStrong (self, task, controllerStates, k, debug=False) generatePropagationReachableGUnfair (self, task, controllerStates, k, debug=False) generatePropagationReachableI (self, task, controllerStates, debug=False) generateReachableG (self, controllerState, j) generateReachableGClauses (self, task, controllerStates, goalCState, k, debug=False) generateReachableGInitial (self, task, goalCState, controllerStates, numberControllerStates, debug=False) generateReachableI (self, controllerState) generateReachableI2 (self, controllerState, j) generateReachableIClauses (self, task, initialCState, controllerStates, k, debug=False) generateReachableIinitial (self, initialCState, debug=False) generateReplacementEquality (self, n1, n2, atom) generateReplacementGoalPropagation (self, controllerState1, controllerState2, i) generateReplacementGoalPropagation3 (self, controllerState1, controllerState2, i) generateReplacementIPropagation (self, controllerState1, controllerState2, i) generateSymmetryBreaking (self, task, controllerStates, initialCState, goalCState, debug=False) generateTripletCSACS (self, initialState, action, finalState) generateTripletForcesBin (self, task, controllerStates, debug=False) generate_clauses (self, task, initialCState, goalCState, controllerStates, k, parser=None, debug=False) getNumberClauses (self) getNumberVariables (self) get_num_cl_vars (self) parseOutput (self, nameFile, controllerStates, parser, print_policy=False) printClausesSizes (self, n) printMapVarNumber (self) printVariables (self) reset (self) setFairUnfairActions (self, task, controllerStates) writeDisjunctions (self, file) Data descriptors defined here: __dict__ dictionary for instance variables (if defined) __weakref__ list of weak references to the object (if defined) Data and other attributes defined here: num_types = 18 print_types = [1, 2, 3, 7] type1 = 'Atom-Controller' type10 = 'Replacement-Goal' type2 = 'Action-Controller' type3 = 'Triplet' type4 = 'Reachable-I' type5 = 'Reachable-G' type6 = 'Replacement-Goal' type7 = 'Controller-Controller' type8 = 'Replacement-Equality' type9 = 'Inequality-CSCS' \u5165\u53e3\u51fd\u6570 #\u552f\u4e00\u91cd\u70b9\uff0c\u4e00\u884c\u4ee3\u7801 cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) #\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! \u67e5\u770b\u5b9a\u4e49\uff1a def generate_clauses(self, task, initialCState, goalCState, controllerStates, k, parser = None, debug = False): self.generateInitial(task, initialCState, debug) self.generateGoal(task, goalCState, debug) self.generatePreconditions(task, controllerStates, debug) self.generatePossibleNonDet(task, controllerStates, debug) self.generateOneSuccessor(task, controllerStates, debug) self.generateTripletForcesBin(task, controllerStates, debug) self.generateAtLeastOneAction(task, controllerStates, debug) self.generateNegativeForwardPropagation(task, controllerStates, debug) self.generateGeneralizeConnection(task, controllerStates, debug) self.generateReachableIClauses(task, initialCState, controllerStates, k, debug) self.generateReachableGClauses(task, controllerStates, goalCState, k, debug) self.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) self.generateMutexGroupsClauses(task, controllerStates, debug)","title":"cnf.py"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#cnf_1","text":"import sys from myTask import MyTask from timeit import default_timer as timer import os class MyCNFError(Exception): def __init__(self, value): self.value = value def __str__(self): return repr(self.value) class CNF: type1 = 'Atom-Controller' type2 = 'Action-Controller' type3 = 'Triplet' type4 = 'Reachable-I' type5 = 'Reachable-G' type6 = 'Replacement-Goal' type7 = 'Controller-Controller' type8 = 'Replacement-Equality' type9 = 'Inequality-CSCS' type10 = 'Replacement-Goal' num_types = 18 print_types = [1, 2, 3, 7] def __init__(self, n_file, n_file_extra, fair, strong): self.disjunctions = [] # list of disjunctions self.maxKey = 1 self.mapVariableNumber = {} self.mapNumberVariable = {} self.mapVariableType = {} self.clauseSizeCounter = {} self.name_file_formula = n_file self.name_file_formula_extra = n_file_extra self.file_formula = open(n_file, 'w') self.file_formula_extra = open(n_file_extra, 'w') self.file_formula.close() self.file_formula_extra.close() self.number_clauses = 0 self.fair = fair self.strong = strong def reset(self): self.disjunctions = [] # list of disjunctions self.maxKey = 1 self.mapVariableNumber = {} self.mapNumberVariable = {} self.mapVariableType = {} self.clauseSizeCounter = {} self.file_formula = open(self.name_file_formula, 'w') self.file_formula.write('p cnf 1 1\\n') self.file_formula_extra = open(self.name_file_formula_extra, 'a') # File formula extra is not used, can be ignored self.number_clauses = 0 \u4ee3\u7801\u63a5\u4e0a\uff0c\u6807\u8bb0\u65b9\u4fbf\u8df3\u8f6c\u67e5\u770b","title":"cnf\u6e90\u7801\u52a0\u89e3\u6790\u5404\u81ea\u7684\u7c7b"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#general","text":"########################################### ################# GENERAL ################# ########################################### def generateAtomControllerState(self, atom, controllerState): var = atom + '(' + controllerState + ')' self.assignKey(var, 1) return var def generatePairActionControllerState(self, action, controllerState): var = '(' + controllerState + ',' + action + ')' self.assignKey(var, 2) return var def generateTripletCSACS(self, initialState, action, finalState): var = '(' + initialState + ',' + action + ',' + finalState + ')' self.assignKey(var, 3) return var def generateReachableI(self, controllerState): var = 'reachableI(' + controllerState + ')' self.assignKey(var, 4) return var def generateReachableI2(self, controllerState, j): var = 'reachableI(' + controllerState + ',' + str(j) + ')' self.assignKey(var, 4) return var def generateReachableG(self, controllerState, j): var = 'reachableG(' + controllerState + ',' + str(j) + ')' self.assignKey(var, 5) return var def generateReplacementGoalPropagation(self, controllerState1, controllerState2, i): var = 'YR1-' + controllerState1 + '-' + controllerState2 + '-' + str(i) self.assignKey(var, 6) return var def generateReplacementGoalPropagation3(self, controllerState1, controllerState2, i): var = 'YR1-FAIR-' + controllerState1 + '-' + controllerState2 + '-' + str(i) self.assignKey(var, 6) return var def generatePairCSCS(self, n1, n2): var = '(' + n1 + ',' + n2 + ')' self.assignKey(var, 7) return var def generateReplacementEquality(self, n1, n2, atom): var = 'YR2-' + n1 + '-' + n2 + '-' + atom self.assignKey(var, 8) return var def generateInequalityN(self, n1, n2): # n1 < n2 var = n1 + '<' + n2 self.assignKey(var, 9) return var def generateReplacementIPropagation(self, controllerState1, controllerState2, i): var = 'YR3-' + controllerState1 + '-' + controllerState2 + '-' + str(i) self.assignKey(var, 10) return var def generateFirstG(self, n): var = 'FirstG(' + str(n) + ')' self.assignKey(var, 13) return var def generateAfterG(self, n): var = 'AfterG(' + str(n) + ')' self.assignKey(var, 14) return var def generateConn(self, CStates): var = 'conn(' for n in CStates: var += str(n) + ',' var += ')' self.assignKey(var, 15) return var def generatePairFairCS(self, n): var = 'F(' + n + ',fair)' self.assignKey(var, 16) return var def generatePairUnfairCS(self, n): var = 'U(' + n + ',unfair)' self.assignKey(var, 17) return var def generateLowerPredecessor(self, n1, n2): var = 'Lower(' + n1 + ', ' + n2 + ')' self.assignKey(var, 18) return var def generateInputSat(self, nameFile): self.file_formula.close() with open(nameFile, 'r') as formula: name_final = nameFile + 'header' with open(name_final, 'w') as final_formula: final_formula.write('p cnf %i %i\\n' % (len(self.mapNumberVariable), self.number_clauses)) first_line = True for line in formula: if first_line: first_line = False continue final_formula.write(line) # name_final is the name of the file that contains the formula with header and everything return name_final def writeDisjunctions(self, file): for i in self.disjunctions: for j in i: if j[0] == '-': file.write('-' + str(self.mapVariableNumber[j[1:]]) + '\\t') else: file.write(str(self.mapVariableNumber[j]) + '\\t') file.write('0\\n') # def printDisjunctions(self): # for i in self.disjunctions: # for j in i: # print j + ' ', # print '\\n', # def printDisjunctionsNumbers(self, printExpanded): # for i in self.disjunctions: # if printExpanded: # for j in i: # print j + '\\t', # print '' # for j in i: # if j[0] == '-': # print '-' + str(self.mapVariableNumber[j[1:]]), '\\t', # else: # print self.mapVariableNumber[j], '\\t', # print ' 0' def printVariables(self): for i in self.mapVariableNumber: print(i)","title":"GENERAl\u901a\u7528\u529f\u80fd\u6027\u51fd\u6570"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#parseoutputpolicy","text":"def parseOutput(self, nameFile, controllerStates, parser, print_policy = False): sets = [set([]) for i in range(self.num_types)] fres = open(nameFile, 'r') res = fres.readlines() if 'UNSAT' in res[0]: return False if 'INDET' in res[0]: return None if not print_policy: return True res = res[1] res = res.split(' ') for r in res: if '\\n' in res: continue var = int(r) if var > 0: varName = self.mapNumberVariable[var] t = self.mapVariableType[varName] sets[t - 1].add(varName) print('===================\\n===================') print('Controller -- CS = Controller State') for i in range(len(sets)): if i + 1 in self.print_types: s = sets[i] if i == 0: # pair atom controller print('===================\\n===================') print('Atom (CS)') print('___________________') for n in controllerStates: print('----------') for j in s: ind = '(' + n + ')' if ind in j: print('%s %s' % (str(parser.get_var_string(j.split(ind)[0])), str(ind))) elif i == 1: # pair cs action print('===================\\n===================') print('(CS, Action with arguments)') print('___________________') for n in controllerStates: for j in s: if '(' + n + ',' in j: print(j) elif i == 2: # Triplet print('===================\\n===================') print('(CS, Action name, CS)') print('___________________') for n in controllerStates: for j in s: if '(' + n + ',' in j: print(j) else: print('===================') print('(CS, CS)') print('___________________') for j in s: print(j) print('===================') print('Solved with %i states' % len(controllerStates)) return True def getNumberVariables(self): return len(self.mapVariableNumber) def getNumberClauses(self): return self.number_clauses def printMapVarNumber(self): for i in self.mapVariableNumber: print(i, '-->', self.mapVariableNumber[i]) def alreadyUsed(self, var): if var in self.mapVariableNumber: return True return False def assignKey(self, var, typeVar = -1): if not self.alreadyUsed(var): self.mapVariableNumber[var] = self.maxKey self.mapNumberVariable[self.maxKey] = var self.mapVariableType[var] = typeVar self.maxKey += 1 def get_num_cl_vars(self): return self.getNumberClauses(), self.getNumberVariables() def addClause(self, clause): self.number_clauses += 1 for j in clause: negated = (j[0] == '-') if negated: var = j[1:] else: var = j if negated: self.file_formula.write('-' + str(self.mapVariableNumber[var]) + '\\t') else: self.file_formula.write(str(self.mapVariableNumber[var]) + '\\t') self.file_formula.write('0\\n') def addClauseExtra(self, clause): for j in clause: self.file_formula_extra.write(j + '|') self.file_formula_extra.write('\\n') # j1|j2|...|jn|\\n def printClausesSizes(self, n): print(self.clauseSizeCounter) sum_all = 0 sum_greater = 0 for i in self.clauseSizeCounter: sum_all += self.clauseSizeCounter[i] if i >= n: sum_greater += self.clauseSizeCounter[i] else: print(i, ':', self.clauseSizeCounter[i]) print('>=', i, ':', sum_greater) \u4ee3\u7801\u63a5\u4e0a\uff0c\u6807\u8bb0\u65b9\u4fbf\u8df3\u8f6c\u67e5\u770b","title":"parseOutput\u8f93\u51fa\u89e3\u51b3policy"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#generate_clauses","text":"main.py \u9ad8\u6f6e\u90e8\u5206\uff1a\u6ce8\u610f\u7559\u610f\u91cd\u70b9\uff1a solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... cnf.py ########################################### ############## GENERATION ################# ########################################### def generate_clauses(self, task, initialCState, goalCState, controllerStates, k, parser = None, debug = False): self.generateInitial(task, initialCState, debug) self.generateGoal(task, goalCState, debug) self.generatePreconditions(task, controllerStates, debug) self.generatePossibleNonDet(task, controllerStates, debug) self.generateOneSuccessor(task, controllerStates, debug) self.generateTripletForcesBin(task, controllerStates, debug) self.generateAtLeastOneAction(task, controllerStates, debug) self.generateNegativeForwardPropagation(task, controllerStates, debug) self.generateGeneralizeConnection(task, controllerStates, debug) self.generateReachableIClauses(task, initialCState, controllerStates, k, debug) self.generateReachableGClauses(task, controllerStates, goalCState, k, debug) self.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) self.generateMutexGroupsClauses(task, controllerStates, debug) \u4ee3\u7801\u63a5\u4e0a\uff0c\u6807\u8bb0\u65b9\u4fbf\u8df3\u8f6c\u67e5\u770b","title":"generate_clauses\u6838\u5fc3\u5165\u53e3\u7c7b"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/CNF_py/#generate_clauses_1","text":"########################################### ################ INITIAL ################## ########################################### def generateInitial(self, task, initialCState, debug = False): # -p(n0) for all p not in initial state c1, v1 = self.get_num_cl_vars() start = timer() initial = task.get_initial() atoms = task.get_atoms() for a in atoms: if a not in initial: variable = self.generateAtomControllerState(a, initialCState) self.addClause(['-' + variable]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Initial\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## GOAL ####################### ########################################### def generateGoal(self, task, goalCState, debug = False): # p(ng) for all p in goal state c1, v1 = self.get_num_cl_vars() start = timer() goal = task.get_goal() atoms = task.get_atoms() for a in atoms: if a in goal: variable = self.generateAtomControllerState(a, goalCState) self.addClause([variable]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Goal\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## PRECONDITIONS ############## ########################################### def generatePreconditions(self, task, controllerStates, debug = False): # (n, b) --> p(n) // if p \\in prec(b) c1, v1 = self.get_num_cl_vars() start = timer() atoms = task.get_atoms() actions = task.get_actions() for n in controllerStates: for a in actions: pre = task.get_preconditions(a) var = self.generatePairActionControllerState(a, n) for p in pre: varPre = self.generateAtomControllerState(p, n) self.addClause(['-' + var, varPre]) # print clause + [varPre] # DEBUG c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Precs\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## NON-DET #################### ########################################### def generatePossibleNonDet(self, task, controllerStates, debug = False): # 1. (n, act) --> (n, act') // act, act' are non det act of equal det action (action names) # 2. (n, act) --> -(n, act'') // # 3. (n, b) --> (n, b') // b, b' are siblings # 4. (n, b) --> -(n, b'') // b, b'' belong to same act c1, v1 = self.get_num_cl_vars() start = timer() acts = task.get_action_names() for n in controllerStates: for act in acts: var_pair = self.generatePairActionControllerState(act, n) other_acts = task.get_other_actions_name(act) for act2 in acts: if act2 == act: continue var_pair2 = self.generatePairActionControllerState(act2, n) if act2 in other_acts: self.addClause(['-' + var_pair, var_pair2]) # 1 else: self.addClause(['-' + var_pair, '-' + var_pair2]) # 2 for a1 in task.get_actions_with_name(act): var1 = self.generatePairActionControllerState(a1, n) for a2 in task.get_actions_with_name(act): if a2 == a1: continue if task.actions_are_compatible(a1, a2): # IMPORTANT!! ie. prec not mutex var2 = self.generatePairActionControllerState(a2, n) self.addClause(['-' + var1, '-' + var2]) # 4 for a in task.get_actions(): var1 = self.generatePairActionControllerState(a, n) other_actions = task.get_other_actions(a) for other in other_actions: if other == a: continue var2 = self.generatePairActionControllerState(other, n) self.addClause(['-' + var1, var2]) # 3 c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Non Det\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## ONE SUCC ################### ########################################### def generateOneSuccessor(self, task, controllerStates, debug = False): # 1. (n, act) --> \\OR_{b} (n, b) // for b with name act # 2. (n, act) --> \\OR_{n'} (n, act, n') # 3. -(n, act, n') \\lor -(n, act, n'') # 4. (n, b) --> (n, act) c1, v1 = self.get_num_cl_vars() start = timer() acts = task.get_action_names() for n1 in controllerStates: for a_name in acts: for n2 in controllerStates: for n3 in controllerStates: if n3 == n2: continue var1 = self.generateTripletCSACS(n1, a_name, n2) var2 = self.generateTripletCSACS(n1, a_name, n3) self.addClause(['-' + var1, '-' + var2]) # 3 for a in task.get_actions_with_name(a_name): pair1 = self.generatePairActionControllerState(a, n1) pair2 = self.generatePairActionControllerState(a_name, n1) self.addClause(['-' + pair1, pair2]) # 4 var1 = self.generatePairActionControllerState(a_name, n1) var_triplets = [] for n2 in controllerStates: var_triplets.append(self.generateTripletCSACS(n1, a_name, n2)) self.addClause(['-' + var1] + var_triplets) # 2 var1 = self.generatePairActionControllerState(a_name, n1) var_bin = [] for a in task.get_actions_with_name(a_name): var_bin.append(self.generatePairActionControllerState(a, n1)) self.addClause(['-' + var1] + var_bin) # 1 c2, v2 = self.get_num_cl_vars() if debug: print('Generation: One succ\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## TRIPLET-BIN ################ ########################################### def generateTripletForcesBin(self, task, controllerStates, debug = False): # (n, act, n') --> (n, act) c1, v1 = self.get_num_cl_vars() start = timer() actions = task.get_action_names() for n1 in controllerStates: for a in actions: for n2 in controllerStates: var1 = self.generateTripletCSACS(n1, a, n2) var2 = self.generatePairActionControllerState(a, n1) # print ['-' + var1, var2] # DEBUG self.addClause(['-' + var1, var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Trip bin\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## ONE ACTION ################# ########################################### def generateAtLeastOneAction(self, task, controllerStates, debug): # \\OR_{act_name} (n, act) for all n except goal, ng c1, v1 = self.get_num_cl_vars() start = timer() actions = task.get_action_names() for n in controllerStates: if n == 'ng': continue disj = [] for a in actions: pair = self.generatePairActionControllerState(a, n) disj.append(pair) self.addClause(disj) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: One act\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## NEG-FORWARD PROP ########### ########################################### def __sibling_action_adds_atom(self, task, action, atom): siblings = task.get_other_actions(action) for a in siblings: add_list = task.get_add_list(a) if atom in add_list: return True return False def generateNegativeForwardPropagation(self, task, controllerStates, debug): # 1. (n, act, n') \\land (n, b) --> -p(n') // if p in delete list # 2. (n, n') \\land -p(n) --> -p(n') \\lor \\OR_{b: p \\in add(b)} (n, b) # 3. (n, act, n') \\land (n, b) \\land -p(n) --> -p(n') // if p \\not \\in add(b) # and some sibling of b adds p c1, v1 = self.get_num_cl_vars() start = timer() atoms = task.get_atoms() actions = task.get_actions() #for a in actions: # print(a, task.get_del_list(a)) # print(a, task.get_add_list(a)) for n1 in controllerStates: for n2 in controllerStates: for p in atoms: var_atom_n1 = self.generateAtomControllerState(p, n1) var_pair_n1n2 = self.generatePairCSCS(n1, n2) var_atom_n2 = self.generateAtomControllerState(p, n2) disj_add_clause = ['-' + var_pair_n1n2, var_atom_n1, '-' + var_atom_n2] for a in task.get_relevant_actions(p): a_name = task.get_action_name(a) del_list = task.get_del_list(a) add_list = task.get_add_list(a) var_triplet = self.generateTripletCSACS(n1, a_name, n2) var_bin = self.generatePairActionControllerState(a, n1) if p in del_list: self.addClause(['-' + var_triplet, '-' + var_bin,'-' + var_atom_n2]) # 1 if p in add_list: disj_add_clause.append(var_bin) if p not in add_list and self.__sibling_action_adds_atom(task, a, p): self.addClause(['-' + var_triplet, '-' + var_bin, var_atom_n1, '-' + var_atom_n2]) # 3 self.addClause(disj_add_clause) # 2 c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Neg Prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## GEN-CONNS ################## ########################################### def generateGeneralizeConnection(self, task, controllerStates, debug = False): # (n, n') <--> \\OR_{act} (n, act, n') c1, v1 = self.get_num_cl_vars() start = timer() actions = task.get_action_names() for n1 in controllerStates: for n2 in controllerStates: varBin = self.generatePairCSCS(n1, n2) triplets = ['-' + varBin] for a in actions: triplet = self.generateTripletCSACS(n1, a, n2) self.addClause(['-' + triplet, varBin]) # print ['-' + triplet, varBin] # DEBUG triplets.append(triplet) # print triplets # DEBUG self.addClause(triplets) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Gen conn\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## REACH-I #################### ########################################### def generateReachableIClauses(self, task, initialCState, controllerStates, k, debug = False): self.generateReachableIinitial(initialCState, debug) self.generatePropagationReachableI(task, controllerStates, debug) self.generatePropagationIG(task, controllerStates, k - 1, debug) def generateReachableIinitial(self, initialCState, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() self.addClause([self.generateReachableI(initialCState)]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RI init\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generatePropagationReachableI(self, task, controllerStates, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() for n1 in controllerStates: for n2 in controllerStates: var1 = self.generateReachableI(n1) var2 = self.generateReachableI(n2) var3 = self.generatePairCSCS(n1, n2) self.addClause(['-' + var3, '-' + var1, var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RI prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generatePropagationIG(self, task, controllerStates, k, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() for n in controllerStates: var1 = self.generateReachableI(n) var2 = self.generateReachableG(n, k) self.addClause(['-' + var1, var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: IG prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## REACH-G #################### ########################################### def generateReachableGClauses(self, task, controllerStates, goalCState, k, debug = False): self.generateReachableGInitial(task, goalCState, controllerStates, k - 1, debug) self.generateCompletionReachabilityG(task, controllerStates, k - 1, debug) if self.strong: self.generatePropagationReachableGStrong(task, controllerStates, k - 1, debug) else: if not self.fair: self.generatePropagationReachableGUnfair(task, controllerStates, k - 1, debug) else: self.generatePropagationReachableGCyclic(task, controllerStates, k - 1, debug) def generateReachableGInitial(self, task, goalCState, controllerStates, numberControllerStates, debug = False): # ReachG(ng,0), ReachG(ng,1), ... # -ReachG(n, 0) for n != ng c1, v1 = self.get_num_cl_vars() start = timer() # set the initial values for goal state for i in range(numberControllerStates + 1): self.addClause([self.generateReachableG(goalCState, i)]) # set the negation for non goal states for n in controllerStates: if n == goalCState: continue self.addClause(['-' + self.generateReachableG(n, 0)]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG init\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generateCompletionReachabilityG(self, task, controllerStates, k, debug = False): # ReachG(n,j) --> ReachG(n, j+1) c1, v1 = self.get_num_cl_vars() start = timer() for n in controllerStates: for i in range(k): var1 = self.generateReachableG(n, i) var2 = self.generateReachableG(n, i + 1) self.addClause(['-' + var1, var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG compl\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def setFairUnfairActions(self, task, controllerStates): # 1: (n, unfair) <-> \\OR_{b: unf} (n,b) # 2: (n, fair) <-> \\OR_{b: unf} (n,b) # 3: -(n, fair) \\lor -(n, unfair) actions = task.get_action_names() for n in controllerStates: varPairUnf = self.generatePairUnfairCS(n) disj = ['-' + varPairUnf] for a in actions: if '_unfair_' in a: varPair = self.generatePairActionControllerState(a, n) self.addClause(['-' + varPair, varPairUnf]) # 1 # print(['-' + varPair, varPairUnf]) disj.append(varPair) self.addClause(disj) # 1 # print(disj) for n in controllerStates: varPairF = self.generatePairFairCS(n) disj = ['-' + varPairF] for a in actions: if '_unfair_' not in a: varPair = self.generatePairActionControllerState(a, n) self.addClause(['-' + varPair, varPairF]) # 2 # print(['-' + varPair, varPairF]) disj.append(varPair) self.addClause(disj) # 2 # print(disj) for n in controllerStates: varF = self.generatePairFairCS(n) varU = self.generatePairUnfairCS(n) self.addClause(['-' + varF, '-' + varU]) # 3 # print(['-' + varF, '-' + varU]) def generatePropagationReachableGUnfair(self, task, controllerStates, k, debug = False): # ReachG(n, j+1) <--> [1] # [1] = [2] \\lor [3] # [2] = (n, unfair) \\land \\AND_{n'} [(n,n') --> RG(n',j)] # [3] = \\OR_{n'} [(n, fair) \\land (n,n') \\land RG(n',j)] c1, v1 = self.get_num_cl_vars() start = timer() # Set variables (n, fair) and (n, unfair) self.setFairUnfairActions(task, controllerStates) # Force the equivalences for [2] # [(n,n') --> RG(n',j)] <-> Repl(n,n',j) for i in range(k): for n1 in controllerStates: if n1 == 'ng': continue for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation(n1, n2, i) varPair = self.generatePairCSCS(n1, n2) varRG = self.generateReachableG(n2, i) self.addClause(['-' + varRepl, '-' + varPair, varRG]) self.addClause(['-' + varRG, varRepl]) self.addClause([varPair, varRepl]) # Force the equivalences for [3] # [(n, fair) \\land (n,n') \\land RG(n',j)] <-> Repl3(n,n',j) for i in range(k): for n1 in controllerStates: if n1 == 'ng': continue for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation3(n1, n2, i) varPair = self.generatePairCSCS(n1, n2) varFair = self.generatePairFairCS(n1) varRG = self.generateReachableG(n2, i) self.addClause(['-' + varRepl, varPair]) self.addClause(['-' + varRepl, varFair]) self.addClause(['-' + varRepl, varRG]) self.addClause([varRepl, '-' + varPair, '-' + varFair, '-' + varRG]) # Right arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): varRG = self.generateReachableG(n1, i + 1) listStrong = [self.generatePairUnfairCS(n1)] listCyclic = [] for n in controllerStates: listStrong.append(self.generateReplacementGoalPropagation(n1, n, i)) listCyclic.append(self.generateReplacementGoalPropagation3(n1, n, i)) clause = ['-' + varRG] + listCyclic for e in listStrong: self.addClause(clause + [e]) # print(clause + [e]) # Left arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): varRG = self.generateReachableG(n1, i + 1) listStrong = [self.generatePairUnfairCS(n1)] listCyclic = [] for n in controllerStates: listStrong.append(self.generateReplacementGoalPropagation(n1, n, i)) listCyclic.append(self.generateReplacementGoalPropagation3(n1, n, i)) self.addClause([varRG] + ['-' + e for e in listStrong]) # print([varRG] + ['-' + e for e in listStrong]) for e in listCyclic: self.addClause([varRG, '-' + e]) # print([varRG, '-' + e]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generatePropagationReachableGCyclic(self, task, controllerStates, k, debug = False): # ReachG(n, j+1) <--> \\OR_{n'} [(n,n') \\land ReachG(n', j)] c1, v1 = self.get_num_cl_vars() start = timer() # Force the equivalences for i in range(k): for n1 in controllerStates: if n1 == 'ng': continue for n2 in controllerStates: var1 = self.generateReplacementGoalPropagation(n1, n2, i) var2 = self.generatePairCSCS(n1, n2) var3 = self.generateReachableG(n2, i) self.addClause(['-' + var1, var2]) self.addClause(['-' + var1, var3]) self.addClause([var1, '-' + var2, '-' + var3]) # Right arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): var1 = self.generateReachableG(n1, i + 1) var2 = ['-' + var1] for n2 in controllerStates: var3 = self.generateReplacementGoalPropagation(n1, n2, i) var2.append(var3) self.addClause(var2) # Left arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): var1 = self.generateReachableG(n1, i + 1) for n2 in controllerStates: var2 = self.generateReplacementGoalPropagation(n1, n2, i) self.addClause([var1, '-' + var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def generatePropagationReachableGStrong(self, task, controllerStates, k, debug = False): # ReachG(n, j+1) <--> \\AND_{n'} [(n,n') --> ReachG(n', j)] c1, v1 = self.get_num_cl_vars() start = timer() # Force the equivalences for i in range(k): for n1 in controllerStates: if n1 == 'ng': continue for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation(n1, n2, i) varPair = self.generatePairCSCS(n1, n2) varRG = self.generateReachableG(n2, i) self.addClause(['-' + varRepl, '-' + varPair, varRG]) self.addClause(['-' + varRG, varRepl]) self.addClause([varPair, varRepl]) # Right arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): varRG = self.generateReachableG(n1, i + 1) for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation(n1, n2, i) self.addClause(['-' + varRG, varRepl]) # Left arrow for n1 in controllerStates: if n1 == 'ng': continue for i in range(k): disj = [self.generateReachableG(n1, i + 1)] for n2 in controllerStates: varRepl = self.generateReplacementGoalPropagation(n1, n2, i) disj.append('-' + varRepl) self.addClause(disj) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: RG prop\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## SYMM-BREAKING ############## ########################################### def generateSymmetryBreaking(self, task, controllerStates, initialCState, goalCState, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() if len(controllerStates) >= 4: # (na, nb) --> \\OR_{i<=a} (n_i, n_{b-1}) for ia, na in enumerate(controllerStates[:-1]): for ib, nb in enumerate(controllerStates[:-1]): if ib in [0, 1]: continue nb_1 = controllerStates[ib - 1] var_pair_ab = self.generatePairCSCS(na, nb) disj = ['-' + var_pair_ab] for i in range(ia + 1): ni = controllerStates[i] disj.append(self.generatePairCSCS(ni, nb_1)) self.addClause(disj) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Sym brk\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) ########################################### ############## MUTEX GROUPS ############### ########################################### def generateMutexGroupsClauses(self, task, controllerStates, debug = False): c1, v1 = self.get_num_cl_vars() start = timer() mutex_groups = task.get_mutex_groups() for mg in mutex_groups: pairs = self.__get_all_pairs(mg) for (a1, a2) in pairs: for n in controllerStates: var1 = self.generateAtomControllerState(a1, n) var2 = self.generateAtomControllerState(a2, n) self.addClause(['-' + var1, '-' + var2]) c2, v2 = self.get_num_cl_vars() if debug: print('Generation: Mutex\\t\\t v %i \\t\\t c : %i \\t\\t %f' % (v2 - v1, c2 - c1, timer() - start)) def __get_all_pairs(self, els): return [(e1, e2) for (i1, e1) in enumerate(els) for (i2, e2) in enumerate(els) if i2 > i1]","title":"generate_clauses\u8c03\u7528\u7684\u751f\u6210\u5b50\u53e5\u7684\u7c7b"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/","text":"begin FOND QNP FOND\u6c42\u89e3 Classical Replanning for FOND Planning \u786e\u4fddstrong cyclic policy\u7684\u6761\u4ef6 \u89e3\u51b3\u8fc7\u7a0b\u4e2dPRP\u5178\u578b\u4f8b\u5b50 Challenges in FOND \u672c\u6587\u65b9\u6cd5\uff1aSAT Approach to FOND Planning \u57fa\u7840\u7f16\u7801 \u7b56\u7565 \u6027\u8d28 Optimizations \u5b9e\u9a8c dual FOND planning \u5168\u6587\u7ed3\u8bba begin \u00b6 paperswithcode\u4ee3\u7801 \u5728\u7ebf\u7248\u672c \u5b8c\u5168\u53ef\u89c2\u6d4b\u7684\u975e\u786e\u5b9a\u6027\uff08FOND\uff09\u8ba1\u5212\u4f5c\u4e3a\u4e00\u79cd\u8ba1\u7b97\u6982\u7387\u6027\u8ba1\u5212\uff0cLTL\u8ba1\u5212\u4e2d\u7684\u6269\u5c55\u65f6\u95f4\u8ba1\u5212\u548c\u603b\u4f53\u8ba1\u5212\u901a\u7528\u5316\u8ba1\u5212\u4e2d\u7684\u9002\u5f53\u7b56\u7565\u7684\u65b9\u6cd5\uff0c\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002 \u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u5f15\u5165\u4e86\u7528\u4e8eFOND\u89c4\u5212\u7684SAT\u7f16\u7801\uff0c\u8be5\u7f16\u7801\u7d27\u51d1\u5e76\u4e14\u53ef\u4ee5\u4ea7\u751f\u7d27\u51d1\u7684Strong Cyclic Policy\u3002\u8fd8\u5f15\u5165\u4e86\u7f16\u7801\u7684\u7b80\u5355\u53d8\u5316\uff0c\u4ee5\u7528\u4e8eStrong Plan\u4ee5\u53ca\u6240\u8c13\u7684dual FOND Plan\uff0c\u5728\u8fd9\u79cd\u8ba1\u5212\u4e2d\uff0c\u67d0\u4e9b\u4e0d\u786e\u5b9a\u6027\u884c\u4e3a\u88ab\u8ba4\u4e3a\u662ffair\uff08\u4f8b\u5982\uff0c\u6982\u7387\u6027\u7684\uff09\uff0c\u800c\u5176\u4ed6\u4e0d\u786e\u5b9a\u6027\u7684\u884c\u4e3a\u88ab\u8ba4\u4e3a\u662funfair\uff08\u4f8b\u5982\uff0c\u5bf9\u6297\u6027\u7684\uff09\u3002\u7ed3\u679c\uff0cFOND-SAT solver\u4e0e\u73b0\u6709solvers\u8fdb\u884c\u6bd4\u8f83,\u4ee5\u66f4\u5168\u9762\u5730\u4e86\u89e3\u5f53\u524dFOND\u89c4\u5212\u4eba\u5458\u548c\u62df\u8bae\u7684SAT\u65b9\u6cd5\u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u3002 \u901a\u7528\u89c4\u5212\u95ee\u9898\uff1a\u521d\u59cb\u72b6\u6001\u5f85\u5b9a\u4e0d\u786e\u5b9a\uff0c\u5bfb\u627e\u5230\u8fbe\u76ee\u6807\u7684\u52a8\u4f5c\u5e8f\u5217 ->\u91cf\u5316\u89c4\u5212\u95ee\u9898 ->\u5b9a\u6027\u6570\u503c\u89c4\u5212\u95ee\u9898QNP\uff08\u53ef\u5224\u5b9a\u95ee\u9898\uff09 \u4f8b\u5b50\uff1a int\u683c\u70b9\u722c\u884c \\(\\epsilon\\) \u589e\u91cf\u722c\u884c \u626b\u96ea\u7b97\u6cd5 QNP \\(\\Leftrightarrow\\) FOND 1Qualitative Numeric Planning Reductions and Complexity FOND \u00b6 \u5b9a\u4e49\uff1a Q= F\uff1aset of propositional variables. F\u662f\u547d\u9898\u53d8\u91cf\u96c6\u5408 I\uff1a set of F-literals representing the initial situation\u4ee3\u8868\u521d\u6001\u7684F-\u6587\u5b57 \u96c6\u5408 O\uff1aa set of actions\u52a8\u4f5c \u03b1 with preconditions\u524d\u63d0\u6761\u4ef6/\u72b6\u6001 Pre(\u03b1) and non-deterministic effects\u975e\u786e\u5b9a\u6027\u5f71\u54cd\uff08\u7528F\u6587\u5b57\u8868\u51fa\uff09 Eff1(\u03b1) | \u00b7 \u00b7 \u00b7 | Effn(\u03b1) given by sets of F-literals. G \uff1aa set of F-literals representing the goal situation.\u76ee\u6807\u72b6\u6001 \u547d\u9898\u53d8\u91cf\u548c\u5176\u5426\u5b9a\u79f0\u6587\u5b57 FOND Model\u5b9a\u4e49\uff1a Q= \\(S_0\\) , \\(S_G\\) ,Act,A,F> S,\u72b6\u6001\u96c6state \\(S_0\\) ,\u521d\u6001\u72b6\u6001 \\(S_G\\) ,\u76ee\u6807\u72b6\u6001 Act,\u52a8\u4f5caction\u96c6\u5408 A,A(s)\u662fs\u72b6\u6001\u4e0b\u9002\u7528\u7684\u52a8\u4f5c\u96c6\u5408\uff0c \\(A(s)\\subseteqq Act\\) F,\u5176\u4e2dF(a,s)\u662f\u72b6\u6001s\u5728a\u52a8\u4f5c\u4e4b\u540e\u975e\u7a7a\u540e\u7eed\u72b6\u6001\u96c6 FOND Problem P P= At,\u539f\u5b50\u547d\u9898\u96c6\u5408set of atoms \\(I\\subseteqq At\\) ,the set of atoms true in the initial state s Act, a set of actions with atomic preconditions and effects G, the set of goal atoms strong cyclic solution A policy \\(\\pi\\) is a strong solution for P if the complete state trajectories induced by \\(\\pi\\) are all goal reaching, and it is a strong cyclic solution for P if the complete state trajectories induced by \\(\\pi\\) that are fair are all goal reaching. Strong and strong cyclic solutions are also called strong and strong cyclic policies for P respectively. QNP \u00b6 models S(Q): S(Q)= \\(S_o\\) \u521d\u6001 ,Act\u52a8\u4f5c ,A,F, \\(S_G\\) \u76ee\u6807\u6001> A(s)\u6307pre(a)\u5728S\u72b6\u6001\u4e2d\u4e3a\u771f\uff0c\u5728\u72b6\u6001s\u65f6\u53ef\u5e94\u7528\u52a8\u4f5cA\u96c6 \u8f6c\u79fb\u51fd\u6570F,\u5176\u4e2dF(a,s)\u662f\u72b6\u6001s\u5728a\u52a8\u4f5c\u4e4b\u540e\u975e\u7a7a\u540e\u7eed\u72b6\u6001\u96c6 Q = \u27e8F, V, I, O, G\u27e9 where \u22c4 F is a set of propositional variables. \u22c4 V is a set of non-negative numerical variables. \u22c4 I is a set of F-literals and V-literals representing the initial situation. \u22c4 G is a set of F-literals and V-literals representing the goal situation. \u22c4 O is a set of actions \u03b1 with preconditions Pre(\u03b1), propositional effects Eff(\u03b1) and numerical effects N(\u03b1). \u22c4 Pre(\u03b1) is a set of F-literals and V-literals; Eff(\u03b1) is a set of F-literals; N(\u03b1) only contains special atoms of Inc(x) and Dec(x) for x \u2208 V. Q =\u27e8F\uff0cV\uff0cI\uff0cO\uff0cG\u27e9\u5176\u4e2d\u27e9F\u662f\u4e00\u7ec4\u547d\u9898\u53d8\u91cf\u3002 \u22c4V\u662f\u4e00\u7ec4\u975e\u8d1f\u6570\u503c\u53d8\u91cf\u3002 \u22c4I\u662f\u4ee3\u8868\u521d\u59cb\u60c5\u51b5\u7684F\u6587\u5b57\u548cV\u6587\u5b57\u7684\u96c6\u5408\u3002 \u22c4G\u662f\u4ee3\u8868\u76ee\u6807\u60c5\u51b5\u7684F\u6587\u5b57\u548cV\u6587\u5b57\u7684\u96c6\u5408\u3002 \u22c4O\u662f\u5177\u6709\u524d\u63d0\u6761\u4ef6Pre\uff08\u03b1\uff09\uff0c\u547d\u9898\u6548\u5e94Eff\uff08\u03b1\uff09\u548c\u6570\u503c\u6548\u5e94N\uff08\u03b1\uff09\u7684\u4e00\u7ec4\u52a8\u4f5c\u03b1\u3002 \u22c4Pre\uff08\u03b1\uff09\u662fF\u5b57\u548cV\u5b57\u7684\u96c6\u5408\uff1b Eff\uff08\u03b1\uff09\u662f\u4e00\u7ec4F\u7d20\u4f53\uff1b \u5bf9\u4e8ex\u2208V\uff0cN\uff08\u03b1\uff09\u4ec5\u5305\u542bInc\uff08x\uff09\u548cDec\uff08x\uff09\u7684\u7279\u6b8a\u539f\u5b50\u3002 FOND\u6c42\u89e3 \u00b6 \u5b9a\u4e49\uff1a Q= F\uff1aset of propositional variables. F\u662f\u547d\u9898\u53d8\u91cf\u96c6\u5408 I\uff1a set of F-literals representing the initial situation\u4ee3\u8868\u521d\u6001\u7684F-\u6587\u5b57 \u96c6\u5408 O\uff1aa set of actions\u52a8\u4f5c \u03b1 with preconditions\u524d\u63d0\u6761\u4ef6/\u72b6\u6001 Pre(\u03b1) and non-deterministic effects\u975e\u786e\u5b9a\u6027\u5f71\u54cd Eff1(\u03b1) | \u00b7 \u00b7 \u00b7 | Effn(\u03b1) given by sets of F-literals. G \uff1aa set of F-literals representing the goal situation.\u76ee\u6807\u72b6\u6001 FOND\u6c42\u89e3\u65b9\u6cd5 The methods for computing strong and strong cyclic solutions to FOND problems have been mostly based on:: OBDDs (Cimatti et al. 2003; Kissmann and Edelkamp 2009), explicit forms of AND/OR search (Mattmuller et al. 2010; Ramirez and Sardina 2014), and classical planners (Kuter et al. 2008; Fu et al. 2011; Muise, Mcllraith, and Beck 2012). Some of the planners compute compact policies in the sense that the size of the policies, measured by their representation, can be exponentially smaller than the number of states reachable with the policy. This is crucial in some benchmark domains where the number of states reachable in the solution is exponential in the problem size. FOND\u6c42\u89e3\u5668There are some good FOND planners available, including \uff1a PRP (Muise, Mcllraith, & Beck, 2012), based on classical planners, MyND (Bercher & Mattmiiller, 2009), based on heuristic AND/OR search, FOND-SAT (Geffner & Geffner, 2018), based on a reduction to SAT. FOND \u89c4\u7ea6 \\(\\rightarrow\\) SAT(miniSAT,Z3 Solver) O\uff1aa set of actions\u52a8\u4f5c \u03b1 with preconditions\u524d\u63d0\u6761\u4ef6/\u72b6\u6001 Pre(\u03b1) and non-deterministic effects\u975e\u786e\u5b9a\u6027\u5f71\u54cd Eff1(\u03b1) | \u00b7 \u00b7 \u00b7 | Effn(\u03b1) given by sets of F-literals. \u57fa\u4e8e\u4e00\u79cd\u7b49\u6548\u8f6c\u6362\uff1a a non-deterministic action a with effect oneof(E1,...,En) can be regarded as a set of deterministic actions b1, ..., bn with effects E1, ..., En respectively, written as a = {b1,...,bn}, all sharing the same preconditions of a. The application of a results in the application of one of the actions bi chosen non- deterministically. \u8fdb\u800c\u5148\u89e3\u91cadeterministic relaxation: The (all-outcome) deterministic relaxation of a FOND problem P is obtained by replacing each non-deterministic action a = {b1,...,bn} by the set of deterministic actions bi \u2208 a. \u7b49\u6548\u7684\uff1aAny strong cyclic plan for P can be expressed as a partial mapping of states into plans for the relaxation. Classical Replanning for FOND Planning \u00b6 For a given FOND problem P,complete classical replanners yield strong cyclic policies that solve P by computing a partial function p mapping non-goal states s into classical plans p(s) for the deterministic relaxation of P with initial state s. \u7ed9\u5b9a FOND problem P, \u89e3\u51b3P\u7684 \u201c\u5b8c\u6574\u7684\u7ecf\u5178\u5f3a\u89c4\u5212\u7b56\u7565 \u201d\u662f\u901a\u8fc7\u8ba1\u7b97:\u95ee\u9898P\u7684\u786e\u5b9a\u6027\u677e\u5f1b\u95ee\u9898\u7684\u521d\u6001s\u6761\u4ef6\u4e0b\uff0c\u975e\u76ee\u6807\u72b6\u6001s \\(\\mapsto\\) \u7ecf\u5178\u89c4\u5212p(s) partial function p We write p(s) = b,p to denote a plan for s in the relaxation that starts with the action b followed by the action sequence p.\u7528p(s) = b,p \u8868\u793a\u677e\u5f1b\u95ee\u9898\u4e0b\uff0c\u72b6\u6001s\u65bd\u52a0\u52a8\u4f5cb\u7684\u540e\u7eed\u52a8\u4f5c\u5e8f\u5217P \u7684\u4e00\u4e2aplan \u786e\u4fddstrong cyclic policy\u7684\u6761\u4ef6 \u00b6 The following conditions ensure that the partial function \u03c1 encodes a strong cyclic policy for P (Geffner and Bonet 2013): Init: \u03c1(s0) \u0007= \u22a5, Consistency: If \u03c1(s)= b, \u03c1 and s = f(b, s), \u03c1(s)= \u03c1, Closure: If \u03c1(s)= b, \u03c1, \u2200 s \u2208 F(b, s), \u03c1(s) \u0007= \u22a5. In these conditions, f(b, s) denotes the single next state for actions b in the relaxation, while F(b, s) denotes the set of possible successor states for actions in the original prob- lem P, with F(b, s) thus set to F(a, s) when b \u2208 a.\u5c0ff\u8868\u793a\u5355\u4e00\u786e\u5b9a\u540e\u7eed\u72b6\u6001\uff0c\u5927F\u8868\u793a\u53ef\u80fd\u540e\u7eed\u72b6\u6001\u96c6 A policy is closed if it returns an action for every non-goal state a policy reaches and a state s is said to be reachable by a policy if there is a chance that following the policy leads the agent to s. When the agent executes an action the effect is randomly chosen, so a closed policy must handle every possible outcome of an action it returns. There are three types of plans for a FOND problem (Daniele, Traverso, and Vardi 2000): weak, strong, and strong cyclic. \u5982\u679c\u7b56\u7565\u4e3a\u6bcf\u4e2a\u5230\u8fbe\u7b56\u7565\u7684\u975e\u76ee\u6807\u72b6\u6001\u8fd4\u56de\u4e00\u4e2a\u52a8\u4f5c\uff0c\u5e76\u4e14\u5982\u679c\u6709\u53ef\u80fd\u9075\u5faa\u8be5\u7b56\u7565\u5c06\u4ee3\u7406\u5f15\u5bfc\u81f3s\uff0c\u5219\u72b6\u6001s\u88ab\u7b56\u7565\u53ef\u5230\u8fbe\uff0c\u5219\u8be5\u7b56\u7565\u5c06\u88ab\u5173\u95ed\u3002 \u5f53\u4ee3\u7406\u6267\u884c\u52a8\u4f5c\u65f6\uff0c\u6548\u679c\u662f\u968f\u673a\u9009\u62e9\u7684\uff0c\u56e0\u6b64\u5c01\u95ed\u7b56\u7565\u5fc5\u987b\u5904\u7406\u5176\u8fd4\u56de\u7684\u52a8\u4f5c\u7684\u6240\u6709\u53ef\u80fd\u7ed3\u679c\u3002 FOND\u95ee\u9898\u6709\u4e09\u79cd\u8ba1\u5212\uff08Daniele\uff0cTraverso\u548cVardi 2000\uff09\uff1a\u5f31\u5faa\u73af\uff0c\u5f3a\u5faa\u73af\u548c\u5f3a\u5faa\u73af\u3002 De\ufb01nition 1 (Weak Plan). A weak plan is a policy that achieves the goal with non-zero probability. A weak plan may be as simple as a sequence of actions that achieves the goal with assumed non-deterministic action outcomes. The policy for a weak plan need not be closed. \u5f31\u8ba1\u5212\u662f\u4e00\u79cd\u4ee5\u975e\u96f6\u6982\u7387\u5b9e\u73b0\u76ee\u6807\u7684\u7b56\u7565\u3002\u8584\u5f31\u7684\u8ba1\u5212\u53ef\u80fd\u4e0e\u4e00\u7cfb\u5217\u884c\u52a8\u4e00\u6837\u7b80\u5355\uff0c\u8fd9\u4e9b\u884c\u52a8\u4ee5\u5047\u5b9a\u7684\u4e0d\u786e\u5b9a\u6027\u884c\u52a8\u7ed3\u679c\u6765\u5b9e\u73b0\u76ee\u6807\u3002\u8ba1\u5212\u8584\u5f31\u7684\u653f\u7b56\u4e0d\u5fc5\u5173\u95ed\u3002 De\ufb01nition 2 (Strong Plan). A strong plan is a closed policy that achieves the goal and never visits the same state twice. A strong plan provides a guarantee on the maximum number of steps to achieve the goal but is often too restrictive. \u5f3a\u6709\u529b\u7684\u8ba1\u5212\u662f\u4e00\u9879\u5c01\u95ed\u7684\u653f\u7b56\uff0c\u53ef\u4ee5\u5b9e\u73b0\u76ee\u6807\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u4e24\u6b21\u8bbf\u95ee\u540c\u4e00\u5dde\u3002\u5f3a\u6709\u529b\u7684\u8ba1\u5212\u53ef\u4ee5\u4fdd\u8bc1\u8fbe\u5230\u76ee\u6807\u7684\u6700\u5927\u6b65\u9aa4\u6570\uff0c\u4f46\u5f80\u5f80\u8fc7\u4e8e\u4e25\u683c\u3002 De\ufb01nition 3 (Strong Cyclic Plan). A strong cyclic plan is a closed policy that achieves the goal and every reachable state can reach the goal using the policy. A strong cyclic plan guarantees that the agent eventually reaches the goal, but does not guarantee the agent can do so in a \ufb01xed number of steps. \u5f3a\u5927\u7684\u5faa\u73af\u8ba1\u5212\u662f\u4e00\u79cd\u5c01\u95ed\u7684\u7b56\u7565\uff0c\u53ef\u4ee5\u5b9e\u73b0\u76ee\u6807\uff0c\u5e76\u4e14\u6bcf\u4e2a\u53ef\u8fbe\u5230\u7684\u72b6\u6001\u90fd\u53ef\u4ee5\u4f7f\u7528\u8be5\u7b56\u7565\u8fbe\u5230\u76ee\u6807\u3002\u5f3a\u6709\u529b\u7684\u5468\u671f\u6027\u8ba1\u5212\u53ef\u4ee5\u786e\u4fdd\u4ee3\u7406\u6700\u7ec8\u8fbe\u5230\u76ee\u6807\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u4ee3\u7406\u53ef\u4ee5\u6309\u7167\u56fa\u5b9a\u7684\u6b65\u9aa4\u8fdb\u884c\u64cd\u4f5c\u3002 \u89e3\u51b3\u8fc7\u7a0b\u4e2dPRP\u5178\u578b\u4f8b\u5b50 \u00b6 \u6ca1deadend \u72b6\u6001\u65f6\uff0c\u8fc7\u7a0b\u5355\u8c03\u7ed3\u675f\u6216\u8005\u6839\u636e\u8fed\u4ee3\u6570\u503c\u8fb9\u754c\u7ec8\u6b62 \u7b56\u7565 In a problem with no deadend states, the process finishes monotonically in a number of iterations and classical planner calls that is bounded by the number of states that are reachable with the policy. PRP uses regression to reduce this number, resulting in policies that map partial states into actions and may have an exponentially smaller size. \u8fd9\u91ccregression\u56de\u5f52 \u65b9\u6cd5\u4e0d\u592a\u61c2\u5177\u4f53\u6307\u4ec0\u4e48\uff0cPRP,\u5bfc\u81f4samller size\u3002\u540c\u65f6PRP\u8fd8\u4f7f\u7528inferring and generalizing\u5728\u4e00\u89c2\u5bdf\u540e\u5c31\u6392\u9664\u7279\u5b9acases\u4e2d\u4e00\u4e9bweak plan \u6709deadend\u65f6\uff0c\u7c7b\u4f3c\u56de\u6eaf\uff0c\u641c\u7d22\u8fdb\u7a0brestart\u5339\u914d\u66f4\u591a\u201c\u52a8\u4f5c-\u72b6\u6001\u5bf9\u201d\uff0c\u6392\u9664\u4e4b\u524d\u6bcf\u6b21\u5931\u8d25\u7684p(\u89c9\u5f97\u662f\u5173\u95ed\u90a3\u4e2a\u5931\u8d25\u7684\u6620\u5c04\u65b9\u5f0f\uff0c\u6bd4\u5982bi) In the presence of deadends, the computation in PRP is similar but the process is restarted from scratch with more action-state pairs excluded each time that the classical planner fails to find a plan and close the function \u03c1. Challenges in FOND \u00b6 Problem Size. The size of the state space M (P) for a FOND problem P is exponential in the number of problem atoms. Policy Size. Many FOND problems have solutions of exponential size. Robust Non-Determinism. There is indeed no need to take non-determinism into account when reasoning about the \u201cfuture\u201d in complete replanners when the failure to do so translates into a small number ofbacktracks \u4e0d\u9700\u8981\u8003\u8651\u4e0d\u786e\u5b9a\u6027,\u56e0\u4e3a\u53ea\u4f1a\u5bfc\u81f4\u5c11\u91cf\u56de\u6eaf\u3002 \u5b9e\u9645\u4e0a\u65f6\u95f4\u82b1\u9500\u6700\u5927\u7684\u662f\u201c\u56de\u6eaf\u7684\u6b21\u6570\u592a\u591a\u201d \u5ffd\u7565\u540e\u65f6\u95f4\u82b1\u9500\u6709\u754c\uff0cThe computational cost of reasoning about the future while ignoring non-determinism can be bounded. let \\(L_\u03c0(P)\\) refer to the length of the shortest possible execution that reaches the goal of P from its initial state following a policy \u03c0 that solves P, \u53ef\u884c\u89e3\uff0c\u8fd9\u91ccshortest\u4e0d\u662f\u6307\u6700\u4f18\u89e3\uff0c\u6307\u7684\u662fcyclic\u662f\u4e0d\u8f6c\u5708\u7684\u6700\u77ed\u503c and let \\(L_m(P)\\) be the mini-mum \\(L_\u03c0(P)\\) over all such policies \u03c0.\u6700\u4f18\u89e3 \\(L_m(P)\\) \u5176\u5b9e\u5c31\u662f\u4e0b\u754c \u4efb\u4f55\u6bd4 \\(L_m(P)\\) \u8fd8\u8981\u5c0f\u7684\u8def\u5f84\u90fd\u8981\u68c0\u7d22\u540e\u629b\u5f03\uff0c\u8fd9\u79cd\u79f0\u4e3a\u201cmisleading plans\u201d\u8bef\u5bfc\u6027\u89c4\u5212 \u5bf9\u6bd4\u201cnon-classical approches\u201d\u201cflat method\u201d\u6765\u8bf4 classical replanners will tend to break on problems that have an exponential number of misleading plans \u7ecf\u5178\u65b9\u6cd5\u56de\u6eaf\u5fc5\u5907\u82b1\u9500\u5c31\u5728\u8fd9\u4e9b\u8bef\u5bfc\u6027\u89c4\u5212 \u6211\u4eec\u5c06\u5904\u7406\u6307\u6570\u7ea7\u8bef\u5bfc\u6027\u89c4\u5212\u7684\u95ee\u9898\u7684\u80fd\u529b\u79f0\u4e3arobust nondeterminism\u3002 \u9274\u4e8ePRP\u8fd9\u6837\u7684\u7ecf\u5178\u91cd\u65b0\u89c4\u5212\u8005\u5177\u6709\u4f20\u64ad\u548c\u6cdb\u5316\u6b7b\u80e1\u540c\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u5b83\u4eec\u5e76\u4e0d\u4e00\u5b9a\u8981\u9010\u4e00\u751f\u6210\u548c\u4e22\u5f03\u6bcf\u4e2a\u8bef\u5bfc\u6027\u8f83\u5f31\u7684\u89c4\u5212\u3002 \u4f46\u662f\uff0c\u5c31PRP\u800c\u8a00\uff0c\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\u8fd8\u4e0d\u591f\u8be6\u7ec6(\u4f30\u8ba1\u662f\u4f5c\u8005\u6ca1\u5f7b\u5e95\u641e\u5b9aPRP\u6e90\u7801\u4ec0\u4e48\u7684)\uff0c\u5e76\u4e14\u4ece\u89c2\u5bdf\u5230\u7684\u884c\u4e3a\uff08\u8bf7\u53c2\u89c1\u4e0b\u6587\uff09\u4e2d\uff0c\u8fd9\u5f88\u53ef\u80fd\u662f\u4e00\u79cd\u542f\u53d1\u5f0f\u4e14\u6709\u9650\u7684\u65b9\u5f0f\u3002 \u4e0d\u4f9d\u8d56\u4e8e\u7ecf\u5178\u89c4\u5212\u5668\uff0c\u800c\u662f\u5229\u7528\u4ece\u786e\u5b9a\u6027\u677e\u5f1b\u4e2d\u83b7\u5f97\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u9762\u4e34\u7c7b\u4f3c\u7684\u5c40\u9650\u6027\u3002 \u672c\u6587\u65b9\u6cd5\uff1aSAT Approach to FOND Planning \u00b6 We provide a SAT approach to FOND planning that is based on CNF encodings that are polynomial in the number of atoms and actions. It borrows elements from both the SAT approach to classical planning (Kautz and Selman 1996) and previous SAT approaches to FOND and Goal POMDPs (Baral, Eiter, and Zhao 2005; Chatterjee, Chmelik, and Davies 2016) that have CNF encodings that are polynomial in the number of states and hence exponential in the number of atoms. Our approach, on the other hand, relies on compact, polynomial encodings, and may result in compact policies too, i.e., policy representations that are polynomial while reaching an exponential number of states. While the SAT approach to classical planning relies on atoms and actions that are indexed by time,\u5bf9\u6bd4\u7ecf\u5178\u89c4\u5212\u4e2dSAT\u65b9\u6cd5\u4f9d\u8d56\u201c\u65f6\u95f4\u7d22\u5f15\u7684\u539f\u5b50\u547d\u9898\u548c\u52a8\u4f5c\u201d bounded by a given horizon\u7ed9\u5b9a\u8303\u56f4\u4e3a\u754c, the proposed SAT approach to FOND planning relies on atoms and actions indexed by controller states or nodes n, \u672c\u6587\u63d0\u51fa\u7684\u201cSAT approach to FOND planning \u201d\u4f9d\u8d56\u4e8e\u201c\u63a7\u5236\u8282\u70b9\u7d22\u5f15\u7684\u539f\u5b50\u547d\u9898\u548c\u52a8\u4f5c\u201dwhose number is bounded by a given parameter k that is increased until a solution is found.\u5176\u4e2d\u63a7\u5236\u8282\u70b9\u7684\u6570\u5b57\u53d7\u5230\u7ed9\u5b9a\u53c2\u6570k\u9650\u5236\uff0ck\u88ab\u589e\u52a0\u77e5\u9053\u627e\u5230\u95ee\u9898\u89e3\u3002 Each controller node n stands for a partial state,\u6bcf\u4e2a\u63a7\u5236\u8282\u70b9n\u4ee3\u8868\u90e8\u5206\u72b6\u6001 and there are two special nodes: the initial node n0 where executions start, and the goal node nG where executions end.\u521d\u6001\u548c\u7ec8\u6001\u7279\u6b8a The encoding only features deterministic actions b\u56e0\u4e3a\u4ec5\u652f\u6301\u786e\u5b9a\u6027\u7f16\u7801, so that non-deterministic actions a ={b1,...,bn} are encoded through the determinis-tic siblings bi.\u8f6c\u6362\u4e3a\u540c\u7ea7\u7ed3\u70b9 The atoms (n, b) express that b is one of the (deterministic) actions to be applied in the controller node n, \u539f\u5b50\u547d\u9898\uff08n,b\uff09\u8868\u793ab\u662fa={b1,b2,...,bn}\u4e2d\u4e00\u4e2a\u786e\u5b9a\u6027\u52a8\u4f5c\u5e94\u7528\u5230\u7ed3\u70b9n and constraints (n, b) \u2192 (n, b') and (n, b) \u2192\u00ac(n, b'') express that all and only siblings b' of b apply in n when b applies. \u7ea6\u675f (n, b) \u2192 (n, b') and (n, b) \u2192\u00ac(n, b'') \u8868\u793a\uff1a\u5f53b\u5e94\u7528\u65f6\uff0c\u6240\u6709\u4e14\u4ec5\u6709b\u7684\u540c\u7ea7\u7ed3\u70b9b'\u5e94\u7528\u5230\u63a7\u5236\u8282\u70b9n\u4e0a\u3002 If b is a deterministic action in the problem, it has no siblings. \u5f53b\u672c\u8eab\u786e\u5b9a\u6027\u52a8\u4f5c\uff0c\u6ca1\u6709\u540c\u7ea7\u7ed3\u70b9\u3002 The atoms (n, b, n') express that b is applied in node n and the control passes to node n'. \u539f\u5b50\u547d\u9898(n, b, n')\u8868\u793ab\u5e94\u7528\u5230\u63a7\u5236\u7ed3\u70b9n\u5e76\u4e14 \u63a7\u5236\u6743 \u79fb\u4ea4\u63a7\u5236\u8282\u70b9n' Below we will see how to get a strong cyclic policy from these atoms. For obtaining compact policies in this STRIPS nondeterministic setting where goals and action precondition are positive atoms (no negation), we propagate negative information forward and positive information backwards. \u4e3a\u4e86\u5728\u76ee\u6807\u548c\u884c\u52a8\u524d\u63d0\u662f\u6b63\u539f\u5b50\uff08\u65e0\u5426\u5b9a\uff09\u7684\u8fd9\u79cdSTRIPS\u7f16\u7a0b\u8bed\u8a00\u975e\u786e\u5b9a\u6027\u73af\u5883\u4e2d\u83b7\u5f97\u7d27\u51d1\u578b\u7b56\u7565\uff0c\u6211\u4eec\u524d\u5411\u4f20\u64ad\u8d1f\u4fe1\u606f\u540e\u5411\u4f20\u64ad\u6b63\u4fe1\u606f So, for example, the encoding doesn\u2019t force p to be true in n' when p is added by action b and (n, b, n') is true. \u5f53p\u901a\u8fc7\u52a8\u4f5cb\u548c\uff08n,b,b'\uff09\u8d4b\u503c\u771f\u7684\u65f6\u5019\uff0c\u7f16\u7801\u4e0d\u628an'\u4e2dp\u5f3a\u5236\u8d4b\u503c\u4e3a\u771f Yet if there are executions from n' where p is relevant and required, p will be forced to be true in n'. \u5f53\u6267\u884cp\u76f8\u5173\u4e14required\u7684n'\u88ab\u6267\u884c\u65f6\uff0cn'\u4e2d\u7684p\u5f3a\u5236\u8d4b\u503c\u4e3a\u771f On the other hand, if q is false in n and not added by b, q(n') is forced to be false. \u82e5n\u4e2dq\u4e3a\u5047\u4e14\u6ca1\u88ab\u52a8\u4f5cb\u52a0\u5165\uff0cq(n')\u8d4b\u503c\u4e3a\u5047\u3002 \u57fa\u7840\u7f16\u7801 \u00b6 \u628a\u201cFOND \u95ee\u9898P\u7684\u539f\u5b50\u547d\u9898\u53ca\u5176\u5b50\u53e5\u201d\u548c\u6b63\u6574\u6570\u53c2\u6570k\uff0c\u5199\u6210\uff1aC(P,k)\u3002k\u63d0\u4f9b\u9664 \\(n_0\\) and \\(n_G\\) \u5916\u63a7\u5236\u8282\u70b9\u7684\u6570\u5b57\u8fb9\u754c\u3002 We present first the atoms and clauses of the \u5408\u53d6\u8303\u5f0f CNF formula C(P, k) for a FOND problem P and a positive integer parameter k that provides the bound on the number of controller nodes (different than n0 and nG). Non-deterministic actions a = {b1,...,bn} in P are encoded through the siblings bi. \u975e\u786e\u5b9a\u6027\u52a8\u4f5c a = {b1,...,bn} \u7f16\u7801\u4e3a\u540c\u7ea7\u7ed3\u70b9\u786e\u5b9a\u6027\u52a8\u4f5c \\(b_i\\) , For deterministic actions a in P, a = {b1}. The atoms in C(P, k) are:\u5408\u53d6\u8303\u5f0f\u4e2d\u7684\u539f\u5b50\u547d\u9898\u5305\u62ec\uff1b p(n): atom p true in controller state n, (n, b): deterministic action b applied in controller state n, (n, b, n'): n' is next after applying b in n, ReachI(n): there is path from \\(n_0\\) to n in policy, ReachG(n, j): \u2203 path from n to \\(n_G\\) with at most j steps. The number of atoms is quadratic in the number of controller states\u539f\u5b50\u547d\u9898\u6570\u662f\u63a7\u5236\u72b6\u6001\u6570\u7684\u5e73\u65b9; this is different than the number of atoms in the SAT encoding of classical planning that is linear in the horizon. \u4e0d\u540c\u4e8e\u7ecf\u5178\u89c4\u5212\u4e2dSAT\u7f16\u7801\u7684\u7ebf\u6027\u6c34\u5e73 The clauses in C(P, k) are given by the following formulas\u4ee5\u4e0b\u516c\u5f0f\u662f\u751f\u6210\u5b50\u53e5\u7684\u516c\u5f0f\uff1a \u5176\u4e2d\u901a\u8fc7\u8fd9\u4e9b\u4e1c\u897f\u6765\u9650\u5b9a\u5f53\u524d\u8981\u89e3\u51b3\u7684\u95ee\u9898P\uff1a\u539f\u5b50\u547d\u9898\u96c6\u5408\uff0cs0\u521d\u6001\u771f\u503c\u7684\u539f\u5b50\u547d\u9898\uff0c\u524d\u63d0\u72b6\u6001+\u975e\u786e\u5b9a\u6027\u5f71\u54cd \\(\\mapsto\\) \u52a8\u4f5c\u96c6\u5408\u3001\u76ee\u6807\u96c6where P is given by a set of atoms, the set of atoms true in the initial state s0, a set of actions with preconditions and non-deterministic effects, and the set of goals G: \u00acp(n0) if p \\(\\notin\\) s0 ; negative info in s0 p(nG) if p \u2208 G ; goal (n, b) \u2192 p(n) if p \u2208 prec(b); preconditions (n, b) \u2192 (n, b') if b and b' are siblings (n, b) \u2192\u00ac(n, b') if b and b' not siblings (n, b) \u21d0\u21d2 \\(\\bigvee_{n'}\\) (n, b, n'); some next controller state (n, b, n') \u2227\u00acp(n) \u2192\u00acp(n') if p \\(\\notin\\) add(b); fwd prop. (n, b, n') \u2192\u00acp(n') if p\u2208del(b); fwd prop. neg. info \\(ReachI(n_0)\\) ; reachability from \\(n_0\\) (n, b, n') \u2227 \\(ReachI(n)\\) \u2192 \\(ReachI(n')\\) ReachG(nG,j), j =0,...,k, reach \\(n_G\\) in \u2264 j steps \u00acReachG(n, 0) for all \\(n \\neq n_G\\) ReachG(n, j+1) \u21d0\u21d2 \\(\\bigvee_{b,n'}\\) b,n' [(n, b, n')\u2227ReachG(n',j)] ReachG(n, j) \u2192 ReachG(n, j+1) ReachI(n) \u2192 ReachG(n, k):if \\(n_0\\) reaches n, n reaches \\(n_G\\) . The control nodes n form a labeled graph where the labels are the deterministic actions b, b \u2208 a, for a in P. \u63a7\u5236\u8282\u70b9n\u5f62\u6210\u5e26\u6807\u7b7e\u7684\u56fe\uff0c\u5176\u4e2d\u6807\u7b7e\u662fP\u4e2da\u7684\u786e\u5b9a\u6027\u52a8\u4f5cb\uff0cb\u2208a\u3002 A control node n represents a partial state comprised of the true atoms p(n).\u63a7\u5236\u8282\u70b9n\u8868\u793a\u7531\u771f\u5b9e\u539f\u5b50p\uff08n\uff09\u7ec4\u6210\u7684\u90e8\u5206\u72b6\u6001\u3002 Goals are true in \\(n_G\\) and preconditions of actions applied in n are true in n. \u76ee\u6807\u5728nG\u4e2d\u662f\u6b63\u786e\u7684\uff0c\u5728n\u4e2d\u5e94\u7528\u52a8\u4f5c\u7684\u524d\u63d0\u5728n\u4e2d\u662f\u6b63\u786e\u7684\u3002 Negative information flows forward along the edges, while positive information flows backward, so that multiple system states will be associated with the same controller node in an execution.\u8d1f\u4fe1\u606f\u6cbf\u8fb9\u7f18\u5411\u524d\u6d41\u52a8\uff0c\u800c\u6b63\u4fe1\u606f\u5411\u540e\u6d41\u52a8\uff0c\u56e0\u6b64\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u591a\u4e2a\u7cfb\u7edf\u72b6\u6001\u5c06\u4e0e\u540c\u4e00\u63a7\u5236\u5668\u8282\u70b9\u5173\u8054\u3002 The ReachI clauses capture reachability from n0, while ReachG clauses capture reachability to \\(n_G\\) in a bounded number of steps. ReachI\u5b50\u53e5\u4ecen0\u6355\u83b7\u53ef\u8fbe\u6027\uff0c\u800cReachG\u5b50\u53e5\u4ee5\u6709\u9650\u7684\u6b65\u6570\u6355\u83b7\u5230nG\u7684\u53ef\u8fbe\u6027\u3002 The last clause states that any controller state n reachable from n0, must reach the goal node \\(n_G\\) . \u6700\u540e\u4e00\u4e2a\u5b50\u53e5\u6307\u51fa\uff0c\u4ecen0\u53ef\u5230\u8fbe\u7684\u4efb\u4f55\u63a7\u5236\u5668\u72b6\u6001n\u5fc5\u987b\u5230\u8fbe\u76ee\u6807\u8282\u70b9nG\u3002 Formula 13 is key for strong cyclic planning : it says that the goal is reachable from n in at most j +1 steps iff the goal is reachable in at most j steps from one of its successors n'. \u516c\u5f0f13\u662f\u8fdb\u884c\u5f3a\u6709\u529b\u7684\u5468\u671f\u6027\u89c4\u5212\u7684\u5173\u952e\uff1a\u5b83\u8bf4\uff0c\u5982\u679c\u76ee\u6807\u53ef\u4ee5\u4ece\u5176\u7ee7\u4efb\u8005n\u7684\u6700\u591aj\u6b65\u4e4b\u5185\u8fbe\u5230\uff0c\u5219\u76ee\u6807\u6700\u591a\u53ef\u4ee5\u5728j +1\u6b65\u4e4b\u5185\u8fbe\u5230\u3002 For strong planning, we will change this formula so that the goal is reachable from n in at most j +1 steps iff the goal is reachable in at most j steps from all successors n'. \u6211\u4eec\u5c06\u66f4\u6539\u6b64\u516c\u5f0f\uff0c\u4ee5\u4f7f\u76ee\u6807\u6700\u591a\u53ef\u4ee5\u5728n\u4e2aj +1\u6b65\u4e4b\u5185\u4ecen\u8fbe\u5230\uff0c\u524d\u63d0\u662f\u8be5\u76ee\u6807\u53ef\u4ee5\u4ece\u6240\u6709\u540e\u7ee7n'\u8fdb\u884c\u7684\u6700\u5927j\u6b65\u4e4b\u5185\u53ef\u4ee5\u5b9e\u73b0\u3002 For computing policies for a FOND problem P,a SAT-solver is called over C(P, k) where k stands for the number of controller nodes n. Starting with k =1 this bound is increased by 1 until the formula is satisfiable. \u53c2\u6570k\u521d\u503c1\u6b65\u957f1\u589e\u52a0 A solution policy can then be obtained from the satisfying truth assignment as indicated below. \u4eceSAT\u95ee\u9898\u4e2d\u6ee1\u8db3\u8d4b\u503c\u65b9\u5f0f\u4e2d\u627e\u5230\u5f3a\u5faa\u73af\u89e3\u51b3\u65b9\u6cd5 If the formula C(P, k) is unsatisfiable for k = |S|, then P has no strong cyclic solution.\u5408\u53d6\u516c\u5f0fC(P,K)\u5982\u679c\u5bf9\u4e8e\u201c k = |S|\u201d\u662f\u4e0d\u53ef\u6ee1\u8db3\u7684,\u90a3\u4e48FOND\u95ee\u9898\u6ca1\u6709\u5f3a\u5faa\u73af\u89e3 \u7b56\u7565 \u00b6 A satisfying assignment \u03c3 of the formula C(P, k) defines a policy \u03c0\u03c3 that is a function from controller states n into actions of P. \u516c\u5f0fC\uff08P\uff0ck\uff09\u7684\u53ef\u6ee1\u8db3\u7684\u8d4b\u503c\u03c3\u5b9a\u4e49\u4e86\u7b56\u7565 \\(\u03c0_\u03c3\\) \uff0c\u5b83\u662f\u4ece\u63a7\u5236\u5668\u72b6\u6001n\u6620\u5c04\u5230P\u7684\u52a8\u4f5c\u7684\u51fd\u6570\u3002 If the atom (n, b, n') is true in \u03c3, \\(\u03c0_\u03c3\\) (n)= b if b is a deterministic action in P and \\(\u03c0_\u03c3\\) (n)= a if b \u2208 a for a non-deterministic action a in P. \u5982\u679c\u539f\u5b50\u547d\u9898\uff08n\uff0cb\uff0cn'\uff09\u5728\u03c3\u4e2d\u4e3a\u771f\uff0c\u5219\u5982\u679cb\u662fP\u4e2d\u7684\u786e\u5b9a\u6027\u884c\u4e3a\uff0c\u5219 \\(\u03c0_\u03c3\\) \uff08n\uff09= b\uff0c\u5982\u679cb\u2208a\u662fP\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5ca\uff0c\u5219 \\(\u03c0_\u03c3\\) \uff08n\uff09= a For applying the compact policy \u03c0\u03c3, however, it is necessary to keep track of the controller state.\u8bb0\u5f55\u63a7\u5236\u5668\u72b6\u6001\u7684\u8f68\u8ff9 For this, it is convenient to consider a second policy \u03c0'\u03c3 determined by \u03c3,this one being a standard mapping of states into actions over an extended FOND \\(P_\u03c3\\) that denotes a FOND model M\u03c3.\u8003\u8651\u03c3\u786e\u5b9a\u7684\u7b2c\u4e8c\u79cd\u7b56\u7565\u03c0'\u03c3, \u8fd9\u7b56\u7565\u5728\u6269\u5c55FOND \\(P_\u03c3\\) \u6807\u51c6\u72b6\u6001\u6620\u5c04\u4e3a\u52a8\u4f5c. In this (cross-product) model, the states are pairs of controller and system states, the initial state is , the goal states are \\(n_G\\) ,s for s \u2208 S, and the set \\(A_\u03c3\\) ( ) of actions applicable in is restricted to the singleton set containing the action a = \\(\u03c0_\u03c3\\) (n) for the compact policy \\(\u03c0_\u03c3\\) above. \u5728\u6b64\uff08\u53c9\u79ef\uff09\u6a21\u578b\u4e2d\uff0c\u72b6\u6001\u4e3a\u63a7\u5236\u5668\u72b6\u6001\u548c\u7cfb\u7edf\u72b6\u6001\u5bf9\uff0c\u521d\u59cb\u72b6\u6001\u4e3a\uff0c\u76ee\u6807\u72b6\u6001\u4e3a$ n_G \\(\uff0cs\u2208S\uff0c\u5e76\u4e14 \u5bf9\u4e8e\u4e0a\u8ff0\u7d27\u7f29\u7b56\u7565\\) \u03c0_\u03c3 \\(\uff0c\u9002\u7528\u4e8e\u7684\u52a8\u4f5c\u7684\u96c6\u5408\\) A_\u03c3$\uff08\uff09\u9650\u4e8e\u5305\u542b\u52a8\u4f5ca = \\(\u03c0_\u03c3\\) \uff08n\uff09\u7684\u5355\u4f8b\u96c6\u3002 The transition function F\u03c3(a, ) results in the pairs where s\u2208 F(a, s) and n' is the unique controller state for which a) the atom (n, a, n') is true in \u03c3 when a is deterministic, or b) the atom (n, b, n') is true in \u03c3 for b \u2208 a with s' being the unique successor of b in s otherwise. In the extended FOND P\u03c3 there is a just one policy, denoted as \\(\u03c0'_\u03c3\\) that over the reachable pairs selects the noted as \u03c0only applicable action \\(\u03c0_\u03c3\\) (n) We say that the compact policy \\(\u03c0_\u03c3\\) is a strong cyclic (resp. strong) policy for P iff \u03c0 is a strong cyclic (resp. strong) policy for \\(P_\u03c3\\) . \u6211\u4eec\u8bf4\u7d27\u51d1\u7b56\u7565 \\(\u03c0_\u03c3\\) \u662f\u5bf9P\u7684\u5f3a\u5faa\u73af\uff08\u76f8\u5bf9\u5f3a\uff09\u7b56\u7565\uff0c\u5f53\u4e14\u4ec5\u5f53,\u03c0\u5bf9\u4e8e \\(P_\u03c3\\) \u662f\u5bf9\u5faa\u73af\u7684\u5f3a\uff08\u76f8\u5bf9\u5f3a\uff09\u7b56\u7565\u3002 \u6027\u8d28 \u00b6 \u6587\u4e2d\u5206\u522b\u8bc1\u660e \u5065\u58ee\u53ef\u9760\u6027sound\u3002If \u03c3 is a satisfying assignment for C(P, k), the compact policy \u03c0 \u03c3 is a strongly cyclic solution for P.\u5982\u679c\u03c3\u662fC\uff08P\uff0ck\uff09\u7684\u6ee1\u610f\u5206\u914d\uff0c\u7d27\u81f4\u7b56\u7565 \\(\u03c0_\u03c3\\) \u662fP\u7684\u5f3a\u5faa\u73af\u89e3 \u5b8c\u5168\u6027completeness\u3002Let \u03c0 be a strong cyclic policy for P and let \\(N_\u03c0(P)\\) represent the number of different \u03c0 reduced states. Then if k \u2265 \\(N_\u03c0(P)\\) , there is an assignment \u03c3 that satisfies C(P, k) and \\(\u03c0_\u03c3\\) is a compact strong cyclic policy for P.\u4ee4\u03c0\u4e3aP\u7684\u5f3a\u5faa\u73af\u7b56\u7565\uff0c\u4ee4 \\(N_\u03c0\uff08P\uff09\\) \u8868\u793a\u4e0d\u540c\u7684\u03c0\u89c4\u7ea6\u7684\u72b6\u6001\u7684\u6570\u91cf\u3002 \u7136\u540e\uff0c\u5982\u679ck\u2265 \\(N_\u03c0\uff08P\uff09\\) \uff0c\u5219\u5b58\u5728\u4e00\u4e2a\u6ee1\u8db3C\uff08P\uff0ck\uff09\u7684\u8d4b\u503c\u03c3\uff0c\u800c \\(\u03c0_\u03c3\\) \u662fP\u7684\u7d27\u51d1\u578b\u5f3a\u5faa\u73af\u7b56\u7565\u3002 \u7d27\u6027(Compactness).The size of the policy \\(\u03c0_\u03c3\\) for a truth assignment \u03c3 satisfying C(P, k) can be exponentially smaller than the number of states reachable by \\(\u03c0_\u03c3\\) . \u6ee1\u8db3C\uff08P\uff0ck\uff09\u7684\u771f\u503c\u5206\u914d\u03c3\u7684\u7b56\u7565 \\(\u03c0_\u03c3\\) \u7684\u5927\u5c0f\u53ef\u6307\u6570\u7ea7\u5c0f\u4e8e \\(\u03c0_\u03c3\\) \u53ef\u8fbe\u7684\u72b6\u6001\u6570\u3002 Optimizations \u00b6 We introduced simple extensions and modifications to the SAT encoding to make it more efficient and scalable while maintaining its formal properties.\u6211\u4eec\u5bf9SAT\u7f16\u7801\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u6269\u5c55\u548c\u4fee\u6539\uff0c\u4ee5\u4f7f\u5176\u5728\u4fdd\u6301\u5176\u6b63\u5f0f\u5c5e\u6027\u7684\u540c\u65f6\u66f4\u52a0\u6709\u6548\u548c\u53ef\u6269\u5c55\u3002 The actual encodings used in the experiments feature extra variables (n, n') that are true iff (n, b, n') is true for some action b. \u5b9e\u9645\u4e0a\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u5b9e\u9645\u7f16\u7801\u7684\u7279\u5f81\u662f\uff1a\u989d\u5916\u53d8\u91cf\uff08n\uff0cn'\uff09\u4e3a\u771f\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0c\uff08n\uff0cb\uff0cn'\uff09\u5bf9\u4e8e\u67d0\u4e9b\u52a8\u4f5cb\u4e3a\u771f\u3002 Also, since the number of variables (n, b, n') grows quadratically with the number of control nodes, we substitute them by variables (n,B, n') where B is the action name for action b without the arguments. \u540c\u6837\uff0c\u7531\u4e8e\u53d8\u91cf\uff08n\uff0cb\uff0cn'\uff09\u7684\u6570\u91cf\u4e0e\u63a7\u5236\u8282\u70b9\u7684\u6570\u91cf\u6210\u5e73\u65b9\u589e\u957f\uff0c\u56e0\u6b64\u6211\u4eec\u7528\u53d8\u91cf\uff08n\uff0cB\uff0cn'\uff09\u4ee3\u66ff\u5b83\u4eec\uff0c\u5176\u4e2dB\u662f\u4e0d\u5e26\u53c2\u6570\u7684\u52a8\u4f5cb\u7684\u52a8\u4f5c\u540d\u79f0\u3002 It is assumed that siblings b and b' of non-deterministic actions a get different action names by the parser. \u5047\u5b9a\u975e\u786e\u5b9a\u6027\u52a8\u4f5ca\u7684\u540c\u7ea7\u7ed3\u70b9b\u548cb'\u901a\u8fc7\u89e3\u6790\u5668\u83b7\u5f97\u4e0d\u540c\u7684\u52a8\u4f5c\u540d\u79f0\u3002 As a result, the conjunction (n,B, n')\u2227(n, b) can be used in substitution of (n, b, n'). \u7ed3\u679c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5408\u53d6\u5f0f\uff08n\uff0cB\uff0cn'\uff09\u2227\uff08n\uff0cb\uff09\u4ee3\u66ff\uff08n\uff0cb\uff0cn'\uff09\u3002 Similarly, add lists of actions tend to be short, resulting in a huge number of clauses of type 7 for capturing forward propagation of negative information. \u7c7b\u4f3c\u5730\uff0c\u52a8\u4f5c\u7684\u6dfb\u52a0\u5217\u8868\u5f80\u5f80\u5f88\u77ed\uff0c\u5bfc\u81f4\u5927\u91cf\u7c7b\u578b\u4e3a7\u7684\u5b50\u53e5\u7528\u4e8e\u6355\u83b7\u8d1f\u4fe1\u606f\u7684\u6b63\u5411\u4f20\u64ad\u3002 \u8fd9\u4e9b\u5b50\u53e5\u88ab\u66ff\u6362\u4e3aThese clauses are replaced by\u8fd9\u4e9b\u5b50\u53e5\u88ab\u66ff\u6362\uff1a 7\u2019. (n, n') \u2227\u00acp(n) \u2192\u00acp(n') \u2228 \\(\\bigvee\\) b:p\u2208add(b)(n, b) 7\u201d. (n,B, n') \u2227 (n, b) \u2227\u00acp(n) \u2192\u00acp(n'), the last clause only for actions b that do not add p but have siblings that do. \u6700\u540e\u4e00\u4e2a\u5b50\u53e5\u4ec5\u9002\u7528\u4e8e\u4e0d\u52a0p\u4f46\u5177\u6709\u540c\u7ea7\u7684b\u7684\u52a8\u4f5cb\u3002 Finally, extra formulas are added for breaking symmetries that result from exchanges in the names (numbers) associated with different control nodes, other than n0 and nG, that result in equivalent controllers.\u6700\u540e\uff0c\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u516c\u5f0f\u6765\u6253\u7834\u5bf9\u79f0\u6027\uff0c\u8fd9\u79cd\u5bf9\u79f0\u6027\u662f\u7531\u4e0e\u4e0d\u540c\u63a7\u5236\u8282\u70b9\uff08n0\u548cnG\u9664\u5916\uff09\u76f8\u5173\u8054\u7684\u540d\u79f0\uff08\u6570\u5b57\uff09\u7684\u4ea4\u6362\u6240\u5bfc\u81f4\u7684\uff0c\u4ece\u800c\u5bfc\u81f4\u7b49\u6548\u7684\u63a7\u5236\u5668\u3002 \u5b9e\u9a8c \u00b6 \u8f6f\u4ef6\u83b7\u53d6\u5730\u5740\uff1a The version of PRP is from 8/2017, from https://bitbucket.org/haz/deadend-and-strengthening . MyND was obtained from https://bitbucket.org/robertmattmueller/mynd , while we obtained Gamer from the authors of MyND. \u5c06\u57fa\u4e8eSAT\u7684FOND\u6c42\u89e3\u5668\u4e0e\u73b0\u6709\u7684\u4e00\u4e9b\u6700\u4f73\u89c4\u5212\u5668\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u5373PRP\uff0cMyND\u548cGamer\u3002\u4f7f\u7528\u7684SAT\u6c42\u89e3\u5668\u662fMiniSAT\uff08Een\u548cSorensson 2004\uff09\u3002\u4f7f\u7528\u4e86\u4ee5\u524d\u51fa\u7248\u7269\u4e2d\u63d0\u4f9b\u7684FOND\u57df\u548c\u5b9e\u4f8b\uff0c\u5e76\u6dfb\u52a0\u4e86\u81ea\u5df1\u7684\u65b0Domain\u3002\u6211\u4eec\u5728\u4e0b\u9762\u7b80\u8981\u89e3\u91ca\u5b83\u4eec\u3002 Tireword Spiky: A modification of triangle tireworld. Tireworld Truck: A modification ofTireworld Spiky where there are a few spiky segments. Islands. Two grid-like islands of size n \u00d7 n each are connected by a bridge. Doors: Arow of n rooms one after the other connected through doors. Miner. An agent has to retrieve a number of items that can be found in two regions. ... \u88681.Results for strong cyclic planning.\u5c06\u6d89\u53ca\u5927\u5c0f\u5dee\u5f02\u5f88\u5927\u7684\u8bb8\u591a\u5b9e\u4f8b\u7684\u57df\u5212\u5206\u4e3a\u591a\u884c\uff0c\u5e76\u4ee5\u767e\u5206\u6bd4\u8868\u793a\u8986\u76d6\u7387\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u884c\u6d89\u53ca\u4e0d\u540c\u6570\u91cf\u7684\u5b9e\u4f8b\u3002\u6bcf\u884c\u7684\u6700\u4f73\u8986\u76d6\u8303\u56f4\u4ee5\u7c97\u4f53\u663e\u793a\u3002 \u603b\u4f53\u800c\u8a00\uff0cPRP\u505a\u5f97\u6700\u597d\uff0c\u4f46\u662f\uff0c\u4e3a\u4e86\u4e86\u89e3\u5404\u79cd\u89c4\u5212\u8005\u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\uff0c\u8003\u8651\u95ee\u9898\u7684\u5927\u5c0f\uff0c\u7b56\u7565\u7684\u5927\u5c0f\u548c\u4e0d\u786e\u5b9a\u6027\u7684\u7c7b\u578b\u4ee5\u53ca\u95ee\u9898\u662f\u65b0\u7684\u8fd8\u662f\u65e7\u7684\u90fd\u662f\u6709\u7528\u7684\u3002 \u5b9e\u9645\u4e0a\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0cPRP\u5728\u73b0\u6709domain\u4e2d\u662f\u6700\u597d\u7684\uff0c\u5176\u4e2d\u5927\u591a\u6570\u4f8b\u5b50\u65e9\u4e8ePR\u51fa\u73b0P\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5bf9\u4e8e\u65b0\u5199\u7684domain\uff0cSAT\u65b9\u6cd5\u662f\u6700\u597d\u7684\u3002 \u5b9e\u9645\u4e0a\uff0cPRP\u53ef\u4ee5\u5904\u7406\u975e\u5e38\u5927\u7684\u95ee\u9898\uff08\u4ee5\u539f\u5b50\u548c\u52a8\u4f5c\u7684\u6570\u91cf\u6765\u8861\u91cf\uff09\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u751f\u4ea7\u5177\u6709\u6570\u767e\u751a\u81f3\u6570\u5343\u4e2a\u90e8\u5206\u6216\u5b8c\u6574\u72b6\u6001\u7684\u5927\u578b\u63a7\u5236\u5668\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0cMyND\u5bf9\u95ee\u9898\u548c\u63a7\u5236\u5668\u7684\u5927\u5c0f\u589e\u91cf\u7684\u6311\u6218\u6765\u8bf4\uff0crobust\u6027\u5f3a\uff0c\u4f46\u4e0d\u80fd\u5b9e\u73b0\u6bcf\u6b21\u6c42\u89e3\u90fd\u662f\u76f8\u540c\u7684\u7ed3\u679c\u3002 \u53e6\u4e00\u65b9\u9762\uff0cSAT\u65b9\u6cd5\u5f88\u96be\u6269\u5c55\u5230\u9700\u8981\u89e3\u51b3\u5177\u6709\u591a\u4e8e30\u591a\u4e2a\u72b6\u6001\u7684\u63a7\u5236\u5668\u7684\u95ee\u9898\uff0c\u7279\u522b\u662f\u5982\u679c\u95ee\u9898\u89c4\u6a21\u4e5f\u5f88\u5927\u65f6\u3002\u5728\u7ecf\u5178\u89c4\u5212\u4e2d\uff0cSAT\u65b9\u6cd5\u5bf9\u4e8e\u957f\u5e8f\u5217\u89c4\u5212\u5177\u6709\u7c7b\u4f3c\u7684\u5c40\u9650\u6027\u3002\u5728\u6211\u4eec\u9488\u5bf9FOND\u7684SAT\u65b9\u6cd5\u4e2d\uff0c\u7531\u4e8eCNF\u7f16\u7801\u5728\u63a7\u5236\u5668\u72b6\u6001\u7684\u6570\u91cf\u4e0a\u662f\u4e8c\u6b21\u65b9\u7684\uff0c\u8fd9\u4e00\u9650\u5236\u66f4\u52a0\u590d\u6742\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u8be5\u8868\u663e\u793a\uff0c\u5bf9\u4e8e\u8bb8\u591amisleading plan\u7684\u95ee\u9898\uff0cSAT\u65b9\u6cd5\u662f\u6700\u5065\u58ee\u7684\uff0c\u4f8b\u5982\u5728\u51e0\u4e2a\u65b0\u5199\u7684domain\u4e2d\uff0c\u5728\u5bf9\u672a\u6765\u8fdb\u884c\u63a8\u7406\u65f6\uff0c\u672a\u8003\u8651\u4e0d\u786e\u5b9a\u6027\u4f1a\u4f7f\u201coptimistic\u201d\u4e50\u5929\u6d3e\u7684\u641c\u7d22\u89c4\u5212\u5728\u8ba1\u7b97\u4e0a\u4e0d\u53ef\u884c\u3002 \u88682.Results for strong planning over domains with strong solutions in Table \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u73b0\u6709\u57df\u4e2d\u7684\u7ed3\u679c\u662f\u6df7\u5408\u7684\uff0c\u5176\u4e2dSAT\u65b9\u6cd5\u5728\u5176\u4e2d\u4e00\u4e2a\u57df\u4e2d\u8868\u73b0\u6700\u4f73\uff0c\u800cMyND\u548cGamer\u5728\u5176\u4ed6\u4e24\u4e2a\u57df\u4e2d\u8868\u73b0\u6700\u4f73\u3002SAT\u65b9\u6cd5\u662f\u65b0\u7684domain\u6700\u597d\u7684\u65b9\u6cd5\uff0c\u53ea\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u9664\u4e86Doors\u95ee\u9898\u4e2dGamer\u505a\u5f97\u66f4\u597d\u7684\u3002 dual FOND planning \u00b6 \u5c55\u671b\u8fdb\u4e00\u6b65\u7814\u7a76\u65b9\u5411\uff0c\u6539\u8fdb\u65b9\u6cd5 A feature of the SAT approach that is not shared by either classical replanners, OBDD-planners, or explicit AND/OR search approaches like MyND and Grendel, is that in SAT, it is very simple to reason with a combination of actions that can be assumed to be fair, with actions that cannot, leading to a form of planning that is neither strong nor strong cyclic. We call this Dual FOND planning. \u4f20\u7edf\u7684\u91cd\u65b0\u89c4\u5212\u8005\uff0cOBDD-\u89c4\u5212\u8005\u6216\u8bf8\u5982MyND\u548cGrendel\u4e4b\u7c7b\u7684\u663e\u5f0fAND / OR\u641c\u7d22\u65b9\u6cd5\u6240\u4e0d\u5177\u6709\u7684SAT\u65b9\u6cd5\u7684\u4e00\u4e2a\u7279\u5f81\u662f\uff0c\u5728SAT\u4e2d\uff0c\u5f88\u5bb9\u6613\u901a\u8fc7\u7ec4\u5408\u53ef\u4ee5\u5047\u5b9a\u662f\u516c\u5e73\u7684\uff0c\u91c7\u53d6\u4e86\u65e0\u6cd5\u91c7\u53d6\u7684\u884c\u52a8\uff0c\u4ece\u800c\u5bfc\u81f4\u89c4\u5212\u7684\u5f62\u5f0f\u65e2\u4e0d\u5f3a\u4e5f\u4e0d\u5f3a\u3002\u6211\u4eec\u79f0\u6b64\u4e3a\u5bf9\u5076FOND\u89c4\u5212\u3002 Dual FOND planing is planning with a FOND problem P where some of the actions are tagged as fair, and the others unfair. For example, consider a problem featuring a planning agent and an adversary, one in front of the other in the middle row of a 3 \u00d7 2 grid (two columns): the agent on the left, the adversary on the right, and the agent must reach a position on the right. The agent can move up and down non-deterministically, moving 0, 1, or 2 cells, without ever leaving the grid, he can also wait, or he can move to the opposing cell on the right if that position is empty. Every turn however, the adversary moves 0 or 1 cells, up or down. The solution to the problem is for the agent to keep moving up and down until he is at vertical distance of 2 to the opponent, then moving right. This strategy is not a strong or a strong cyclic policy, but a dual policy. \u53cc\u91cdFOND\u89c4\u5212\u6b63\u5728\u9488\u5bf9FOND\u95ee\u9898P\u8fdb\u884c\u89c4\u5212\uff0c\u5176\u4e2d\u67d0\u4e9b\u52a8\u4f5c\u88ab\u6807\u8bb0\u4e3a\u516c\u5e73\uff0c\u800c\u5176\u4ed6\u52a8\u4f5c\u5219\u88ab\u6807\u8bb0\u4e3a\u4e0d\u516c\u5e73\u3002 \u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u5177\u6709\u89c4\u5212\u4ee3\u7406\u4eba\u548c\u5bf9\u624b\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u95ee\u9898\u4f4d\u4e8e\u4e00\u4e2a3\u00d72\u7f51\u683c\uff08\u4e24\u5217\uff09\u7684\u4e2d\u95f4\u884c\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5728\u524d\u9762\uff1a\u5de6\u8fb9\u7684\u4ee3\u7406\u4eba\uff0c\u53f3\u8fb9\u7684\u5bf9\u624b\uff0c\u4ee5\u53ca\u4ee3\u7406\u4eba\u5fc5\u987b\u5230\u8fbe\u53f3\u8fb9\u7684\u4f4d\u7f6e\u3002 \u4ee3\u7406\u53ef\u4ee5\u4e0d\u786e\u5b9a\u5730\u4e0a\u4e0b\u79fb\u52a8\uff0c\u79fb\u52a80\u30011\u62162\u4e2a\u50cf\u5143\uff0c\u800c\u4e0d\u5fc5\u79bb\u5f00\u7f51\u683c\uff0c\u4ed6\u4e5f\u53ef\u4ee5\u7b49\u5f85\uff0c\u6216\u8005\u5982\u679c\u8be5\u4f4d\u7f6e\u4e3a\u7a7a\uff0c\u5219\u53ef\u4ee5\u79fb\u52a8\u5230\u53f3\u4fa7\u7684\u76f8\u5bf9\u50cf\u5143\u3002 \u4f46\u662f\uff0c\u5bf9\u624b\u6bcf\u56de\u5408\u90fd\u4f1a\u5411\u4e0a\u6216\u5411\u4e0b\u79fb\u52a80\u62161\u4e2a\u50cf\u5143\u3002 \u89e3\u51b3\u8be5\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u4f7f\u4ee3\u7406\u7ee7\u7eed\u4e0a\u4e0b\u79fb\u52a8\uff0c\u76f4\u5230\u4ed6\u4e0e\u5bf9\u624b\u7684\u5782\u76f4\u8ddd\u79bb\u4e3a2\uff0c\u7136\u540e\u518d\u5411\u53f3\u79fb\u52a8\u3002 \u6b64\u7b56\u7565\u4e0d\u662f\u5f3a\u529b\u6216\u5f3a\u529b\u7684\u5468\u671f\u6027\u7b56\u7565\uff0c\u800c\u662f\u53cc\u91cd\u7b56\u7565\u3002 A state trajectory \u03c4 is fair for a Dual FOND problem P and a policy \u03c0 when infinite occurrences of a state s in \u03c4, where a = \u03c0(s) is a fair action, implies infinite occurrences of transitions s, s in \u03c4 for each successor s \u2208 F(a, s). A solution to a Dual FOND problem P is a policy \u03c0 such that all the fair trajectories induced by \u03c0 are goal reaching. Strong cyclic and strong planning are special cases of Dual FOND planning when all or none of the actions are fair. A sound and complete SAT formulation of Dual FOND planning is obtained by introducing the atoms (n, fair) that are true if the action chosen in n is fair,\u5f53\u03c4\u4e2d\u72b6\u6001s\u7684\u65e0\u9650\u51fa\u73b0\u65f6\uff0c\u5176\u4e2da =\u03c0\uff08s\uff09\u662f\u4e00\u4e2a\u516c\u5e73\u52a8\u4f5c\uff0c\u5219\u72b6\u6001\u8f68\u8ff9\u03c4\u5bf9\u5076FOND\u95ee\u9898P\u548c\u7b56\u7565\u03c0\u662f\u516c\u5e73\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u6bcf\u4e2a\u540e\u7ee7\u8005s\u2208F\uff08a\uff0cs\uff09\u3002\u5bf9\u5076FOND\u95ee\u9898P\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7b56\u7565\u03c0\uff0c\u4f7f\u5f97\u03c0\u5f15\u8d77\u7684\u6240\u6709\u516c\u5e73\u8f68\u9053\u90fd\u8fbe\u5230\u76ee\u6807\u3002 \u5f53\u6240\u6709\u52a8\u4f5c\u6216\u6240\u6709\u52a8\u4f5c\u90fd\u4e0d\u516c\u5e73\u65f6\uff0c\u5f3a\u6709\u529b\u7684\u5468\u671f\u6027\u89c4\u5212\u548c\u5f3a\u6709\u529b\u7684\u89c4\u5212\u662fDual FOND\u89c4\u5212\u7684\u7279\u4f8b\u3002 \u5982\u679c\u5728n\u4e2d\u9009\u62e9\u7684\u52a8\u4f5c\u662f\u516c\u5e73\u7684\uff0c\u5219\u901a\u8fc7\u5f15\u5165\u6b63\u786e\u7684\u539f\u5b50\uff08n\uff0c\u516c\u5e73\uff09\uff0c\u53ef\u4ee5\u83b7\u5f97\u5bf9\u53cc\u91cdFOND\u89c4\u5212\u7684\u5408\u7406\u5b8c\u6574\u7684SAT\u516c\u5f0f\uff0c 16.(n, fair) \u21d0\u21d2 \\(\\bigvee_b\\) (n, b), b among fair action \u00ac(n, fair) \u21d0\u21d2 \\(\\bigvee_b\\) (n, b), b among unfair actions and replacing 13 and 13\u2019 by: 13\u201d. [(n, fair) \u2192 13] \u2227 [\u00ac(n, fair) \u2192 13\u2019] where 13 and 13\u2019 are the formulas above for strong cylic and strong planning. The above encoding captures dual FOND planning in the same way that the first encoding captures strong cyclic planning. \u4e0a\u9762\u7684\u7f16\u7801\u6355\u83b7\u53cc\u91cdFOND\u89c4\u5212\u7684\u65b9\u5f0f\u4e0e\u7b2c\u4e00\u79cd\u7f16\u7801\u6355\u83b7\u5f3a\u5faa\u73af\u89c4\u5212\u7684\u65b9\u5f0f\u76f8\u540c\u3002 We have run some experiments for dual planning, using the example above where the two agents move over a n \u00d7 2 grid. We tried values of n up to 10, and the resulting dual policy is the one mentioned above, where the agent keeps moving up and down until leaving the adversary behind. Notice that strong, strong cyclic, and dual FOND planning result from simple changes in the clauses. This flexibility is a strength of the SAT approach that is not available in other approaches that require different algorithms in each case.\u6211\u4eec\u4f7f\u7528\u4e0a\u9762\u7684\u793a\u4f8b\u8fd0\u884c\u4e86\u4e00\u4e9b\u53cc\u91cd\u89c4\u5212\u5b9e\u9a8c\uff0c\u5176\u4e2d\u4e24\u4e2a\u4ee3\u7406\u5728n\u00d72\u7f51\u683c\u4e0a\u79fb\u52a8\u3002 \u6211\u4eec\u5c1d\u8bd5\u5c06n\u7684\u503c\u63d0\u9ad8\u523010\uff0c\u7ed3\u679c\u662f\u53cc\u91cd\u7b56\u7565\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u7b56\u7565\uff0c\u5728\u8be5\u7b56\u7565\u4e2d\uff0c\u4ee3\u7406\u4e0d\u65ad\u4e0a\u4e0b\u79fb\u52a8\uff0c\u76f4\u5230\u5c06\u5bf9\u624b\u629b\u5728\u540e\u9762\u3002 \u6ce8\u610f\uff0c\u5f3a\uff0c\u5f3a\u5faa\u73af\u548c\u53cc\u91cdFOND\u89c4\u5212\u662f\u7531\u5b50\u53e5\u4e2d\u7684\u7b80\u5355\u66f4\u6539\u5bfc\u81f4\u7684\u3002 \u8fd9\u79cd\u7075\u6d3b\u6027\u662fSAT\u65b9\u6cd5\u7684\u4f18\u52bf\uff0c\u800c\u5728\u5176\u4ed6\u65b9\u6cd5\u4e0b\uff0c\u6bcf\u79cd\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7b97\u6cd5\u7684\u65b9\u6cd5\u4e2d\uff0cSAT\u65b9\u6cd5\u4e0d\u9700\u8981\u3002 \u5168\u6587\u7ed3\u8bba \u00b6 We have introduced the first SAT formulation for FOND planning that is compact and can produce compact policies. Small changes in the formulation account for strong, strong cyclic, and a combined form of strong and strong cyclic planning, that we call dual FOND planning, where some actions are assumed fair and the others unfair. From a computational point of view, the SAT approach performs well in problems that are not too large and that do not require large controllers, where it is not affected by the presence of a large number of misleading plans. Classical replanners like PRP and explicit AND/OR search planners like MyND can scale up to larger problems or problems with larger controllers respectively, but do not appear to be as robust to non-determinism. \u6211\u4eec\u4e3aFOND\u89c4\u5212\u5f15\u5165\u4e86\u7b2c\u4e00\u4e2aSAT\u516c\u5f0f\uff0c\u8be5\u516c\u5f0f\u7d27\u51d1\u5e76\u4e14\u53ef\u4ee5\u4ea7\u751f\u7d27\u51d1\u7684\u7b56\u7565\u3002 \u516c\u5f0f\u7684\u5fae\u5c0f\u53d8\u5316\u8bf4\u660e\u4e86\u5f3a\u6709\u529b\u7684\u5faa\u73af\u89c4\u5212\u4ee5\u53ca\u5f3a\u6709\u529b\u7684\u5faa\u73af\u89c4\u5212\u7684\u7ec4\u5408\u5f62\u5f0f\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3aDual FOND\u89c4\u5212\uff0c\u5176\u4e2d\u67d0\u4e9b\u884c\u52a8\u88ab\u8ba4\u4e3a\u662ffair\uff0c\u800c\u5176\u4ed6\u884c\u52a8\u5219\u88ab\u8ba4\u4e3a\u662funfair\u3002 \u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6\u6765\u770b\uff0cSAT\u65b9\u6cd5\u5728\u4e0d\u592a\u5927\u4e14\u4e0d\u9700\u8981\u5927\u578b\u63a7\u5236\u5668\u7684\u95ee\u9898\u4e2d\u8868\u73b0\u826f\u597d\uff0c\u5e76\u4e14\u4e0d\u53d7\u5927\u91cf\u8bef\u5bfc\u6027\u89c4\u5212\u7684\u5f71\u54cd\u3002 \u8bf8\u5982PRP\u4e4b\u7c7b\u7684\u7ecf\u5178\u91cd\u65b0\u89c4\u5212\u5668\u548c\u8bf8\u5982MyND\u4e4b\u7c7b\u7684\u663e\u5f0fAND / OR\u641c\u7d22\u89c4\u5212\u5668\u53ef\u4ee5\u5206\u522b\u6269\u5c55\u5230\u66f4\u5927\u7684\u95ee\u9898\u6216\u66f4\u5927\u7684\u63a7\u5236\u5668\u7684\u95ee\u9898\uff0c\u4f46\u4f3c\u4e4e\u5bf9\u4e0d\u786e\u5b9a\u6027\u4e0d\u90a3\u4e48\u7a33\u5065\u3002","title":"FOND"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#begin","text":"paperswithcode\u4ee3\u7801 \u5728\u7ebf\u7248\u672c \u5b8c\u5168\u53ef\u89c2\u6d4b\u7684\u975e\u786e\u5b9a\u6027\uff08FOND\uff09\u8ba1\u5212\u4f5c\u4e3a\u4e00\u79cd\u8ba1\u7b97\u6982\u7387\u6027\u8ba1\u5212\uff0cLTL\u8ba1\u5212\u4e2d\u7684\u6269\u5c55\u65f6\u95f4\u8ba1\u5212\u548c\u603b\u4f53\u8ba1\u5212\u901a\u7528\u5316\u8ba1\u5212\u4e2d\u7684\u9002\u5f53\u7b56\u7565\u7684\u65b9\u6cd5\uff0c\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002 \u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u5f15\u5165\u4e86\u7528\u4e8eFOND\u89c4\u5212\u7684SAT\u7f16\u7801\uff0c\u8be5\u7f16\u7801\u7d27\u51d1\u5e76\u4e14\u53ef\u4ee5\u4ea7\u751f\u7d27\u51d1\u7684Strong Cyclic Policy\u3002\u8fd8\u5f15\u5165\u4e86\u7f16\u7801\u7684\u7b80\u5355\u53d8\u5316\uff0c\u4ee5\u7528\u4e8eStrong Plan\u4ee5\u53ca\u6240\u8c13\u7684dual FOND Plan\uff0c\u5728\u8fd9\u79cd\u8ba1\u5212\u4e2d\uff0c\u67d0\u4e9b\u4e0d\u786e\u5b9a\u6027\u884c\u4e3a\u88ab\u8ba4\u4e3a\u662ffair\uff08\u4f8b\u5982\uff0c\u6982\u7387\u6027\u7684\uff09\uff0c\u800c\u5176\u4ed6\u4e0d\u786e\u5b9a\u6027\u7684\u884c\u4e3a\u88ab\u8ba4\u4e3a\u662funfair\uff08\u4f8b\u5982\uff0c\u5bf9\u6297\u6027\u7684\uff09\u3002\u7ed3\u679c\uff0cFOND-SAT solver\u4e0e\u73b0\u6709solvers\u8fdb\u884c\u6bd4\u8f83,\u4ee5\u66f4\u5168\u9762\u5730\u4e86\u89e3\u5f53\u524dFOND\u89c4\u5212\u4eba\u5458\u548c\u62df\u8bae\u7684SAT\u65b9\u6cd5\u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u3002 \u901a\u7528\u89c4\u5212\u95ee\u9898\uff1a\u521d\u59cb\u72b6\u6001\u5f85\u5b9a\u4e0d\u786e\u5b9a\uff0c\u5bfb\u627e\u5230\u8fbe\u76ee\u6807\u7684\u52a8\u4f5c\u5e8f\u5217 ->\u91cf\u5316\u89c4\u5212\u95ee\u9898 ->\u5b9a\u6027\u6570\u503c\u89c4\u5212\u95ee\u9898QNP\uff08\u53ef\u5224\u5b9a\u95ee\u9898\uff09 \u4f8b\u5b50\uff1a int\u683c\u70b9\u722c\u884c \\(\\epsilon\\) \u589e\u91cf\u722c\u884c \u626b\u96ea\u7b97\u6cd5 QNP \\(\\Leftrightarrow\\) FOND 1Qualitative Numeric Planning Reductions and Complexity","title":"begin"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#fond","text":"\u5b9a\u4e49\uff1a Q= F\uff1aset of propositional variables. F\u662f\u547d\u9898\u53d8\u91cf\u96c6\u5408 I\uff1a set of F-literals representing the initial situation\u4ee3\u8868\u521d\u6001\u7684F-\u6587\u5b57 \u96c6\u5408 O\uff1aa set of actions\u52a8\u4f5c \u03b1 with preconditions\u524d\u63d0\u6761\u4ef6/\u72b6\u6001 Pre(\u03b1) and non-deterministic effects\u975e\u786e\u5b9a\u6027\u5f71\u54cd\uff08\u7528F\u6587\u5b57\u8868\u51fa\uff09 Eff1(\u03b1) | \u00b7 \u00b7 \u00b7 | Effn(\u03b1) given by sets of F-literals. G \uff1aa set of F-literals representing the goal situation.\u76ee\u6807\u72b6\u6001 \u547d\u9898\u53d8\u91cf\u548c\u5176\u5426\u5b9a\u79f0\u6587\u5b57 FOND Model\u5b9a\u4e49\uff1a Q= \\(S_0\\) , \\(S_G\\) ,Act,A,F> S,\u72b6\u6001\u96c6state \\(S_0\\) ,\u521d\u6001\u72b6\u6001 \\(S_G\\) ,\u76ee\u6807\u72b6\u6001 Act,\u52a8\u4f5caction\u96c6\u5408 A,A(s)\u662fs\u72b6\u6001\u4e0b\u9002\u7528\u7684\u52a8\u4f5c\u96c6\u5408\uff0c \\(A(s)\\subseteqq Act\\) F,\u5176\u4e2dF(a,s)\u662f\u72b6\u6001s\u5728a\u52a8\u4f5c\u4e4b\u540e\u975e\u7a7a\u540e\u7eed\u72b6\u6001\u96c6 FOND Problem P P= At,\u539f\u5b50\u547d\u9898\u96c6\u5408set of atoms \\(I\\subseteqq At\\) ,the set of atoms true in the initial state s Act, a set of actions with atomic preconditions and effects G, the set of goal atoms strong cyclic solution A policy \\(\\pi\\) is a strong solution for P if the complete state trajectories induced by \\(\\pi\\) are all goal reaching, and it is a strong cyclic solution for P if the complete state trajectories induced by \\(\\pi\\) that are fair are all goal reaching. Strong and strong cyclic solutions are also called strong and strong cyclic policies for P respectively.","title":"FOND"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#qnp","text":"models S(Q): S(Q)= \\(S_o\\) \u521d\u6001 ,Act\u52a8\u4f5c ,A,F, \\(S_G\\) \u76ee\u6807\u6001> A(s)\u6307pre(a)\u5728S\u72b6\u6001\u4e2d\u4e3a\u771f\uff0c\u5728\u72b6\u6001s\u65f6\u53ef\u5e94\u7528\u52a8\u4f5cA\u96c6 \u8f6c\u79fb\u51fd\u6570F,\u5176\u4e2dF(a,s)\u662f\u72b6\u6001s\u5728a\u52a8\u4f5c\u4e4b\u540e\u975e\u7a7a\u540e\u7eed\u72b6\u6001\u96c6 Q = \u27e8F, V, I, O, G\u27e9 where \u22c4 F is a set of propositional variables. \u22c4 V is a set of non-negative numerical variables. \u22c4 I is a set of F-literals and V-literals representing the initial situation. \u22c4 G is a set of F-literals and V-literals representing the goal situation. \u22c4 O is a set of actions \u03b1 with preconditions Pre(\u03b1), propositional effects Eff(\u03b1) and numerical effects N(\u03b1). \u22c4 Pre(\u03b1) is a set of F-literals and V-literals; Eff(\u03b1) is a set of F-literals; N(\u03b1) only contains special atoms of Inc(x) and Dec(x) for x \u2208 V. Q =\u27e8F\uff0cV\uff0cI\uff0cO\uff0cG\u27e9\u5176\u4e2d\u27e9F\u662f\u4e00\u7ec4\u547d\u9898\u53d8\u91cf\u3002 \u22c4V\u662f\u4e00\u7ec4\u975e\u8d1f\u6570\u503c\u53d8\u91cf\u3002 \u22c4I\u662f\u4ee3\u8868\u521d\u59cb\u60c5\u51b5\u7684F\u6587\u5b57\u548cV\u6587\u5b57\u7684\u96c6\u5408\u3002 \u22c4G\u662f\u4ee3\u8868\u76ee\u6807\u60c5\u51b5\u7684F\u6587\u5b57\u548cV\u6587\u5b57\u7684\u96c6\u5408\u3002 \u22c4O\u662f\u5177\u6709\u524d\u63d0\u6761\u4ef6Pre\uff08\u03b1\uff09\uff0c\u547d\u9898\u6548\u5e94Eff\uff08\u03b1\uff09\u548c\u6570\u503c\u6548\u5e94N\uff08\u03b1\uff09\u7684\u4e00\u7ec4\u52a8\u4f5c\u03b1\u3002 \u22c4Pre\uff08\u03b1\uff09\u662fF\u5b57\u548cV\u5b57\u7684\u96c6\u5408\uff1b Eff\uff08\u03b1\uff09\u662f\u4e00\u7ec4F\u7d20\u4f53\uff1b \u5bf9\u4e8ex\u2208V\uff0cN\uff08\u03b1\uff09\u4ec5\u5305\u542bInc\uff08x\uff09\u548cDec\uff08x\uff09\u7684\u7279\u6b8a\u539f\u5b50\u3002","title":"QNP"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#fond_1","text":"\u5b9a\u4e49\uff1a Q= F\uff1aset of propositional variables. F\u662f\u547d\u9898\u53d8\u91cf\u96c6\u5408 I\uff1a set of F-literals representing the initial situation\u4ee3\u8868\u521d\u6001\u7684F-\u6587\u5b57 \u96c6\u5408 O\uff1aa set of actions\u52a8\u4f5c \u03b1 with preconditions\u524d\u63d0\u6761\u4ef6/\u72b6\u6001 Pre(\u03b1) and non-deterministic effects\u975e\u786e\u5b9a\u6027\u5f71\u54cd Eff1(\u03b1) | \u00b7 \u00b7 \u00b7 | Effn(\u03b1) given by sets of F-literals. G \uff1aa set of F-literals representing the goal situation.\u76ee\u6807\u72b6\u6001 FOND\u6c42\u89e3\u65b9\u6cd5 The methods for computing strong and strong cyclic solutions to FOND problems have been mostly based on:: OBDDs (Cimatti et al. 2003; Kissmann and Edelkamp 2009), explicit forms of AND/OR search (Mattmuller et al. 2010; Ramirez and Sardina 2014), and classical planners (Kuter et al. 2008; Fu et al. 2011; Muise, Mcllraith, and Beck 2012). Some of the planners compute compact policies in the sense that the size of the policies, measured by their representation, can be exponentially smaller than the number of states reachable with the policy. This is crucial in some benchmark domains where the number of states reachable in the solution is exponential in the problem size. FOND\u6c42\u89e3\u5668There are some good FOND planners available, including \uff1a PRP (Muise, Mcllraith, & Beck, 2012), based on classical planners, MyND (Bercher & Mattmiiller, 2009), based on heuristic AND/OR search, FOND-SAT (Geffner & Geffner, 2018), based on a reduction to SAT. FOND \u89c4\u7ea6 \\(\\rightarrow\\) SAT(miniSAT,Z3 Solver) O\uff1aa set of actions\u52a8\u4f5c \u03b1 with preconditions\u524d\u63d0\u6761\u4ef6/\u72b6\u6001 Pre(\u03b1) and non-deterministic effects\u975e\u786e\u5b9a\u6027\u5f71\u54cd Eff1(\u03b1) | \u00b7 \u00b7 \u00b7 | Effn(\u03b1) given by sets of F-literals. \u57fa\u4e8e\u4e00\u79cd\u7b49\u6548\u8f6c\u6362\uff1a a non-deterministic action a with effect oneof(E1,...,En) can be regarded as a set of deterministic actions b1, ..., bn with effects E1, ..., En respectively, written as a = {b1,...,bn}, all sharing the same preconditions of a. The application of a results in the application of one of the actions bi chosen non- deterministically. \u8fdb\u800c\u5148\u89e3\u91cadeterministic relaxation: The (all-outcome) deterministic relaxation of a FOND problem P is obtained by replacing each non-deterministic action a = {b1,...,bn} by the set of deterministic actions bi \u2208 a. \u7b49\u6548\u7684\uff1aAny strong cyclic plan for P can be expressed as a partial mapping of states into plans for the relaxation.","title":"FOND\u6c42\u89e3"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#classical-replanning-for-fond-planning","text":"For a given FOND problem P,complete classical replanners yield strong cyclic policies that solve P by computing a partial function p mapping non-goal states s into classical plans p(s) for the deterministic relaxation of P with initial state s. \u7ed9\u5b9a FOND problem P, \u89e3\u51b3P\u7684 \u201c\u5b8c\u6574\u7684\u7ecf\u5178\u5f3a\u89c4\u5212\u7b56\u7565 \u201d\u662f\u901a\u8fc7\u8ba1\u7b97:\u95ee\u9898P\u7684\u786e\u5b9a\u6027\u677e\u5f1b\u95ee\u9898\u7684\u521d\u6001s\u6761\u4ef6\u4e0b\uff0c\u975e\u76ee\u6807\u72b6\u6001s \\(\\mapsto\\) \u7ecf\u5178\u89c4\u5212p(s) partial function p We write p(s) = b,p to denote a plan for s in the relaxation that starts with the action b followed by the action sequence p.\u7528p(s) = b,p \u8868\u793a\u677e\u5f1b\u95ee\u9898\u4e0b\uff0c\u72b6\u6001s\u65bd\u52a0\u52a8\u4f5cb\u7684\u540e\u7eed\u52a8\u4f5c\u5e8f\u5217P \u7684\u4e00\u4e2aplan","title":"Classical Replanning for FOND Planning"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#strong-cyclic-policy","text":"The following conditions ensure that the partial function \u03c1 encodes a strong cyclic policy for P (Geffner and Bonet 2013): Init: \u03c1(s0) \u0007= \u22a5, Consistency: If \u03c1(s)= b, \u03c1 and s = f(b, s), \u03c1(s)= \u03c1, Closure: If \u03c1(s)= b, \u03c1, \u2200 s \u2208 F(b, s), \u03c1(s) \u0007= \u22a5. In these conditions, f(b, s) denotes the single next state for actions b in the relaxation, while F(b, s) denotes the set of possible successor states for actions in the original prob- lem P, with F(b, s) thus set to F(a, s) when b \u2208 a.\u5c0ff\u8868\u793a\u5355\u4e00\u786e\u5b9a\u540e\u7eed\u72b6\u6001\uff0c\u5927F\u8868\u793a\u53ef\u80fd\u540e\u7eed\u72b6\u6001\u96c6 A policy is closed if it returns an action for every non-goal state a policy reaches and a state s is said to be reachable by a policy if there is a chance that following the policy leads the agent to s. When the agent executes an action the effect is randomly chosen, so a closed policy must handle every possible outcome of an action it returns. There are three types of plans for a FOND problem (Daniele, Traverso, and Vardi 2000): weak, strong, and strong cyclic. \u5982\u679c\u7b56\u7565\u4e3a\u6bcf\u4e2a\u5230\u8fbe\u7b56\u7565\u7684\u975e\u76ee\u6807\u72b6\u6001\u8fd4\u56de\u4e00\u4e2a\u52a8\u4f5c\uff0c\u5e76\u4e14\u5982\u679c\u6709\u53ef\u80fd\u9075\u5faa\u8be5\u7b56\u7565\u5c06\u4ee3\u7406\u5f15\u5bfc\u81f3s\uff0c\u5219\u72b6\u6001s\u88ab\u7b56\u7565\u53ef\u5230\u8fbe\uff0c\u5219\u8be5\u7b56\u7565\u5c06\u88ab\u5173\u95ed\u3002 \u5f53\u4ee3\u7406\u6267\u884c\u52a8\u4f5c\u65f6\uff0c\u6548\u679c\u662f\u968f\u673a\u9009\u62e9\u7684\uff0c\u56e0\u6b64\u5c01\u95ed\u7b56\u7565\u5fc5\u987b\u5904\u7406\u5176\u8fd4\u56de\u7684\u52a8\u4f5c\u7684\u6240\u6709\u53ef\u80fd\u7ed3\u679c\u3002 FOND\u95ee\u9898\u6709\u4e09\u79cd\u8ba1\u5212\uff08Daniele\uff0cTraverso\u548cVardi 2000\uff09\uff1a\u5f31\u5faa\u73af\uff0c\u5f3a\u5faa\u73af\u548c\u5f3a\u5faa\u73af\u3002 De\ufb01nition 1 (Weak Plan). A weak plan is a policy that achieves the goal with non-zero probability. A weak plan may be as simple as a sequence of actions that achieves the goal with assumed non-deterministic action outcomes. The policy for a weak plan need not be closed. \u5f31\u8ba1\u5212\u662f\u4e00\u79cd\u4ee5\u975e\u96f6\u6982\u7387\u5b9e\u73b0\u76ee\u6807\u7684\u7b56\u7565\u3002\u8584\u5f31\u7684\u8ba1\u5212\u53ef\u80fd\u4e0e\u4e00\u7cfb\u5217\u884c\u52a8\u4e00\u6837\u7b80\u5355\uff0c\u8fd9\u4e9b\u884c\u52a8\u4ee5\u5047\u5b9a\u7684\u4e0d\u786e\u5b9a\u6027\u884c\u52a8\u7ed3\u679c\u6765\u5b9e\u73b0\u76ee\u6807\u3002\u8ba1\u5212\u8584\u5f31\u7684\u653f\u7b56\u4e0d\u5fc5\u5173\u95ed\u3002 De\ufb01nition 2 (Strong Plan). A strong plan is a closed policy that achieves the goal and never visits the same state twice. A strong plan provides a guarantee on the maximum number of steps to achieve the goal but is often too restrictive. \u5f3a\u6709\u529b\u7684\u8ba1\u5212\u662f\u4e00\u9879\u5c01\u95ed\u7684\u653f\u7b56\uff0c\u53ef\u4ee5\u5b9e\u73b0\u76ee\u6807\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u4e24\u6b21\u8bbf\u95ee\u540c\u4e00\u5dde\u3002\u5f3a\u6709\u529b\u7684\u8ba1\u5212\u53ef\u4ee5\u4fdd\u8bc1\u8fbe\u5230\u76ee\u6807\u7684\u6700\u5927\u6b65\u9aa4\u6570\uff0c\u4f46\u5f80\u5f80\u8fc7\u4e8e\u4e25\u683c\u3002 De\ufb01nition 3 (Strong Cyclic Plan). A strong cyclic plan is a closed policy that achieves the goal and every reachable state can reach the goal using the policy. A strong cyclic plan guarantees that the agent eventually reaches the goal, but does not guarantee the agent can do so in a \ufb01xed number of steps. \u5f3a\u5927\u7684\u5faa\u73af\u8ba1\u5212\u662f\u4e00\u79cd\u5c01\u95ed\u7684\u7b56\u7565\uff0c\u53ef\u4ee5\u5b9e\u73b0\u76ee\u6807\uff0c\u5e76\u4e14\u6bcf\u4e2a\u53ef\u8fbe\u5230\u7684\u72b6\u6001\u90fd\u53ef\u4ee5\u4f7f\u7528\u8be5\u7b56\u7565\u8fbe\u5230\u76ee\u6807\u3002\u5f3a\u6709\u529b\u7684\u5468\u671f\u6027\u8ba1\u5212\u53ef\u4ee5\u786e\u4fdd\u4ee3\u7406\u6700\u7ec8\u8fbe\u5230\u76ee\u6807\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u4ee3\u7406\u53ef\u4ee5\u6309\u7167\u56fa\u5b9a\u7684\u6b65\u9aa4\u8fdb\u884c\u64cd\u4f5c\u3002","title":"\u786e\u4fddstrong cyclic policy\u7684\u6761\u4ef6"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#prp","text":"\u6ca1deadend \u72b6\u6001\u65f6\uff0c\u8fc7\u7a0b\u5355\u8c03\u7ed3\u675f\u6216\u8005\u6839\u636e\u8fed\u4ee3\u6570\u503c\u8fb9\u754c\u7ec8\u6b62 \u7b56\u7565 In a problem with no deadend states, the process finishes monotonically in a number of iterations and classical planner calls that is bounded by the number of states that are reachable with the policy. PRP uses regression to reduce this number, resulting in policies that map partial states into actions and may have an exponentially smaller size. \u8fd9\u91ccregression\u56de\u5f52 \u65b9\u6cd5\u4e0d\u592a\u61c2\u5177\u4f53\u6307\u4ec0\u4e48\uff0cPRP,\u5bfc\u81f4samller size\u3002\u540c\u65f6PRP\u8fd8\u4f7f\u7528inferring and generalizing\u5728\u4e00\u89c2\u5bdf\u540e\u5c31\u6392\u9664\u7279\u5b9acases\u4e2d\u4e00\u4e9bweak plan \u6709deadend\u65f6\uff0c\u7c7b\u4f3c\u56de\u6eaf\uff0c\u641c\u7d22\u8fdb\u7a0brestart\u5339\u914d\u66f4\u591a\u201c\u52a8\u4f5c-\u72b6\u6001\u5bf9\u201d\uff0c\u6392\u9664\u4e4b\u524d\u6bcf\u6b21\u5931\u8d25\u7684p(\u89c9\u5f97\u662f\u5173\u95ed\u90a3\u4e2a\u5931\u8d25\u7684\u6620\u5c04\u65b9\u5f0f\uff0c\u6bd4\u5982bi) In the presence of deadends, the computation in PRP is similar but the process is restarted from scratch with more action-state pairs excluded each time that the classical planner fails to find a plan and close the function \u03c1.","title":"\u89e3\u51b3\u8fc7\u7a0b\u4e2dPRP\u5178\u578b\u4f8b\u5b50"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#challenges-in-fond","text":"Problem Size. The size of the state space M (P) for a FOND problem P is exponential in the number of problem atoms. Policy Size. Many FOND problems have solutions of exponential size. Robust Non-Determinism. There is indeed no need to take non-determinism into account when reasoning about the \u201cfuture\u201d in complete replanners when the failure to do so translates into a small number ofbacktracks \u4e0d\u9700\u8981\u8003\u8651\u4e0d\u786e\u5b9a\u6027,\u56e0\u4e3a\u53ea\u4f1a\u5bfc\u81f4\u5c11\u91cf\u56de\u6eaf\u3002 \u5b9e\u9645\u4e0a\u65f6\u95f4\u82b1\u9500\u6700\u5927\u7684\u662f\u201c\u56de\u6eaf\u7684\u6b21\u6570\u592a\u591a\u201d \u5ffd\u7565\u540e\u65f6\u95f4\u82b1\u9500\u6709\u754c\uff0cThe computational cost of reasoning about the future while ignoring non-determinism can be bounded. let \\(L_\u03c0(P)\\) refer to the length of the shortest possible execution that reaches the goal of P from its initial state following a policy \u03c0 that solves P, \u53ef\u884c\u89e3\uff0c\u8fd9\u91ccshortest\u4e0d\u662f\u6307\u6700\u4f18\u89e3\uff0c\u6307\u7684\u662fcyclic\u662f\u4e0d\u8f6c\u5708\u7684\u6700\u77ed\u503c and let \\(L_m(P)\\) be the mini-mum \\(L_\u03c0(P)\\) over all such policies \u03c0.\u6700\u4f18\u89e3 \\(L_m(P)\\) \u5176\u5b9e\u5c31\u662f\u4e0b\u754c \u4efb\u4f55\u6bd4 \\(L_m(P)\\) \u8fd8\u8981\u5c0f\u7684\u8def\u5f84\u90fd\u8981\u68c0\u7d22\u540e\u629b\u5f03\uff0c\u8fd9\u79cd\u79f0\u4e3a\u201cmisleading plans\u201d\u8bef\u5bfc\u6027\u89c4\u5212 \u5bf9\u6bd4\u201cnon-classical approches\u201d\u201cflat method\u201d\u6765\u8bf4 classical replanners will tend to break on problems that have an exponential number of misleading plans \u7ecf\u5178\u65b9\u6cd5\u56de\u6eaf\u5fc5\u5907\u82b1\u9500\u5c31\u5728\u8fd9\u4e9b\u8bef\u5bfc\u6027\u89c4\u5212 \u6211\u4eec\u5c06\u5904\u7406\u6307\u6570\u7ea7\u8bef\u5bfc\u6027\u89c4\u5212\u7684\u95ee\u9898\u7684\u80fd\u529b\u79f0\u4e3arobust nondeterminism\u3002 \u9274\u4e8ePRP\u8fd9\u6837\u7684\u7ecf\u5178\u91cd\u65b0\u89c4\u5212\u8005\u5177\u6709\u4f20\u64ad\u548c\u6cdb\u5316\u6b7b\u80e1\u540c\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u5b83\u4eec\u5e76\u4e0d\u4e00\u5b9a\u8981\u9010\u4e00\u751f\u6210\u548c\u4e22\u5f03\u6bcf\u4e2a\u8bef\u5bfc\u6027\u8f83\u5f31\u7684\u89c4\u5212\u3002 \u4f46\u662f\uff0c\u5c31PRP\u800c\u8a00\uff0c\u6b64\u7ec4\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\u8fd8\u4e0d\u591f\u8be6\u7ec6(\u4f30\u8ba1\u662f\u4f5c\u8005\u6ca1\u5f7b\u5e95\u641e\u5b9aPRP\u6e90\u7801\u4ec0\u4e48\u7684)\uff0c\u5e76\u4e14\u4ece\u89c2\u5bdf\u5230\u7684\u884c\u4e3a\uff08\u8bf7\u53c2\u89c1\u4e0b\u6587\uff09\u4e2d\uff0c\u8fd9\u5f88\u53ef\u80fd\u662f\u4e00\u79cd\u542f\u53d1\u5f0f\u4e14\u6709\u9650\u7684\u65b9\u5f0f\u3002 \u4e0d\u4f9d\u8d56\u4e8e\u7ecf\u5178\u89c4\u5212\u5668\uff0c\u800c\u662f\u5229\u7528\u4ece\u786e\u5b9a\u6027\u677e\u5f1b\u4e2d\u83b7\u5f97\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u9762\u4e34\u7c7b\u4f3c\u7684\u5c40\u9650\u6027\u3002","title":"Challenges in FOND"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#sat-approach-to-fond-planning","text":"We provide a SAT approach to FOND planning that is based on CNF encodings that are polynomial in the number of atoms and actions. It borrows elements from both the SAT approach to classical planning (Kautz and Selman 1996) and previous SAT approaches to FOND and Goal POMDPs (Baral, Eiter, and Zhao 2005; Chatterjee, Chmelik, and Davies 2016) that have CNF encodings that are polynomial in the number of states and hence exponential in the number of atoms. Our approach, on the other hand, relies on compact, polynomial encodings, and may result in compact policies too, i.e., policy representations that are polynomial while reaching an exponential number of states. While the SAT approach to classical planning relies on atoms and actions that are indexed by time,\u5bf9\u6bd4\u7ecf\u5178\u89c4\u5212\u4e2dSAT\u65b9\u6cd5\u4f9d\u8d56\u201c\u65f6\u95f4\u7d22\u5f15\u7684\u539f\u5b50\u547d\u9898\u548c\u52a8\u4f5c\u201d bounded by a given horizon\u7ed9\u5b9a\u8303\u56f4\u4e3a\u754c, the proposed SAT approach to FOND planning relies on atoms and actions indexed by controller states or nodes n, \u672c\u6587\u63d0\u51fa\u7684\u201cSAT approach to FOND planning \u201d\u4f9d\u8d56\u4e8e\u201c\u63a7\u5236\u8282\u70b9\u7d22\u5f15\u7684\u539f\u5b50\u547d\u9898\u548c\u52a8\u4f5c\u201dwhose number is bounded by a given parameter k that is increased until a solution is found.\u5176\u4e2d\u63a7\u5236\u8282\u70b9\u7684\u6570\u5b57\u53d7\u5230\u7ed9\u5b9a\u53c2\u6570k\u9650\u5236\uff0ck\u88ab\u589e\u52a0\u77e5\u9053\u627e\u5230\u95ee\u9898\u89e3\u3002 Each controller node n stands for a partial state,\u6bcf\u4e2a\u63a7\u5236\u8282\u70b9n\u4ee3\u8868\u90e8\u5206\u72b6\u6001 and there are two special nodes: the initial node n0 where executions start, and the goal node nG where executions end.\u521d\u6001\u548c\u7ec8\u6001\u7279\u6b8a The encoding only features deterministic actions b\u56e0\u4e3a\u4ec5\u652f\u6301\u786e\u5b9a\u6027\u7f16\u7801, so that non-deterministic actions a ={b1,...,bn} are encoded through the determinis-tic siblings bi.\u8f6c\u6362\u4e3a\u540c\u7ea7\u7ed3\u70b9 The atoms (n, b) express that b is one of the (deterministic) actions to be applied in the controller node n, \u539f\u5b50\u547d\u9898\uff08n,b\uff09\u8868\u793ab\u662fa={b1,b2,...,bn}\u4e2d\u4e00\u4e2a\u786e\u5b9a\u6027\u52a8\u4f5c\u5e94\u7528\u5230\u7ed3\u70b9n and constraints (n, b) \u2192 (n, b') and (n, b) \u2192\u00ac(n, b'') express that all and only siblings b' of b apply in n when b applies. \u7ea6\u675f (n, b) \u2192 (n, b') and (n, b) \u2192\u00ac(n, b'') \u8868\u793a\uff1a\u5f53b\u5e94\u7528\u65f6\uff0c\u6240\u6709\u4e14\u4ec5\u6709b\u7684\u540c\u7ea7\u7ed3\u70b9b'\u5e94\u7528\u5230\u63a7\u5236\u8282\u70b9n\u4e0a\u3002 If b is a deterministic action in the problem, it has no siblings. \u5f53b\u672c\u8eab\u786e\u5b9a\u6027\u52a8\u4f5c\uff0c\u6ca1\u6709\u540c\u7ea7\u7ed3\u70b9\u3002 The atoms (n, b, n') express that b is applied in node n and the control passes to node n'. \u539f\u5b50\u547d\u9898(n, b, n')\u8868\u793ab\u5e94\u7528\u5230\u63a7\u5236\u7ed3\u70b9n\u5e76\u4e14 \u63a7\u5236\u6743 \u79fb\u4ea4\u63a7\u5236\u8282\u70b9n' Below we will see how to get a strong cyclic policy from these atoms. For obtaining compact policies in this STRIPS nondeterministic setting where goals and action precondition are positive atoms (no negation), we propagate negative information forward and positive information backwards. \u4e3a\u4e86\u5728\u76ee\u6807\u548c\u884c\u52a8\u524d\u63d0\u662f\u6b63\u539f\u5b50\uff08\u65e0\u5426\u5b9a\uff09\u7684\u8fd9\u79cdSTRIPS\u7f16\u7a0b\u8bed\u8a00\u975e\u786e\u5b9a\u6027\u73af\u5883\u4e2d\u83b7\u5f97\u7d27\u51d1\u578b\u7b56\u7565\uff0c\u6211\u4eec\u524d\u5411\u4f20\u64ad\u8d1f\u4fe1\u606f\u540e\u5411\u4f20\u64ad\u6b63\u4fe1\u606f So, for example, the encoding doesn\u2019t force p to be true in n' when p is added by action b and (n, b, n') is true. \u5f53p\u901a\u8fc7\u52a8\u4f5cb\u548c\uff08n,b,b'\uff09\u8d4b\u503c\u771f\u7684\u65f6\u5019\uff0c\u7f16\u7801\u4e0d\u628an'\u4e2dp\u5f3a\u5236\u8d4b\u503c\u4e3a\u771f Yet if there are executions from n' where p is relevant and required, p will be forced to be true in n'. \u5f53\u6267\u884cp\u76f8\u5173\u4e14required\u7684n'\u88ab\u6267\u884c\u65f6\uff0cn'\u4e2d\u7684p\u5f3a\u5236\u8d4b\u503c\u4e3a\u771f On the other hand, if q is false in n and not added by b, q(n') is forced to be false. \u82e5n\u4e2dq\u4e3a\u5047\u4e14\u6ca1\u88ab\u52a8\u4f5cb\u52a0\u5165\uff0cq(n')\u8d4b\u503c\u4e3a\u5047\u3002","title":"\u672c\u6587\u65b9\u6cd5\uff1aSAT Approach to FOND Planning"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#_1","text":"\u628a\u201cFOND \u95ee\u9898P\u7684\u539f\u5b50\u547d\u9898\u53ca\u5176\u5b50\u53e5\u201d\u548c\u6b63\u6574\u6570\u53c2\u6570k\uff0c\u5199\u6210\uff1aC(P,k)\u3002k\u63d0\u4f9b\u9664 \\(n_0\\) and \\(n_G\\) \u5916\u63a7\u5236\u8282\u70b9\u7684\u6570\u5b57\u8fb9\u754c\u3002 We present first the atoms and clauses of the \u5408\u53d6\u8303\u5f0f CNF formula C(P, k) for a FOND problem P and a positive integer parameter k that provides the bound on the number of controller nodes (different than n0 and nG). Non-deterministic actions a = {b1,...,bn} in P are encoded through the siblings bi. \u975e\u786e\u5b9a\u6027\u52a8\u4f5c a = {b1,...,bn} \u7f16\u7801\u4e3a\u540c\u7ea7\u7ed3\u70b9\u786e\u5b9a\u6027\u52a8\u4f5c \\(b_i\\) , For deterministic actions a in P, a = {b1}. The atoms in C(P, k) are:\u5408\u53d6\u8303\u5f0f\u4e2d\u7684\u539f\u5b50\u547d\u9898\u5305\u62ec\uff1b p(n): atom p true in controller state n, (n, b): deterministic action b applied in controller state n, (n, b, n'): n' is next after applying b in n, ReachI(n): there is path from \\(n_0\\) to n in policy, ReachG(n, j): \u2203 path from n to \\(n_G\\) with at most j steps. The number of atoms is quadratic in the number of controller states\u539f\u5b50\u547d\u9898\u6570\u662f\u63a7\u5236\u72b6\u6001\u6570\u7684\u5e73\u65b9; this is different than the number of atoms in the SAT encoding of classical planning that is linear in the horizon. \u4e0d\u540c\u4e8e\u7ecf\u5178\u89c4\u5212\u4e2dSAT\u7f16\u7801\u7684\u7ebf\u6027\u6c34\u5e73 The clauses in C(P, k) are given by the following formulas\u4ee5\u4e0b\u516c\u5f0f\u662f\u751f\u6210\u5b50\u53e5\u7684\u516c\u5f0f\uff1a \u5176\u4e2d\u901a\u8fc7\u8fd9\u4e9b\u4e1c\u897f\u6765\u9650\u5b9a\u5f53\u524d\u8981\u89e3\u51b3\u7684\u95ee\u9898P\uff1a\u539f\u5b50\u547d\u9898\u96c6\u5408\uff0cs0\u521d\u6001\u771f\u503c\u7684\u539f\u5b50\u547d\u9898\uff0c\u524d\u63d0\u72b6\u6001+\u975e\u786e\u5b9a\u6027\u5f71\u54cd \\(\\mapsto\\) \u52a8\u4f5c\u96c6\u5408\u3001\u76ee\u6807\u96c6where P is given by a set of atoms, the set of atoms true in the initial state s0, a set of actions with preconditions and non-deterministic effects, and the set of goals G: \u00acp(n0) if p \\(\\notin\\) s0 ; negative info in s0 p(nG) if p \u2208 G ; goal (n, b) \u2192 p(n) if p \u2208 prec(b); preconditions (n, b) \u2192 (n, b') if b and b' are siblings (n, b) \u2192\u00ac(n, b') if b and b' not siblings (n, b) \u21d0\u21d2 \\(\\bigvee_{n'}\\) (n, b, n'); some next controller state (n, b, n') \u2227\u00acp(n) \u2192\u00acp(n') if p \\(\\notin\\) add(b); fwd prop. (n, b, n') \u2192\u00acp(n') if p\u2208del(b); fwd prop. neg. info \\(ReachI(n_0)\\) ; reachability from \\(n_0\\) (n, b, n') \u2227 \\(ReachI(n)\\) \u2192 \\(ReachI(n')\\) ReachG(nG,j), j =0,...,k, reach \\(n_G\\) in \u2264 j steps \u00acReachG(n, 0) for all \\(n \\neq n_G\\) ReachG(n, j+1) \u21d0\u21d2 \\(\\bigvee_{b,n'}\\) b,n' [(n, b, n')\u2227ReachG(n',j)] ReachG(n, j) \u2192 ReachG(n, j+1) ReachI(n) \u2192 ReachG(n, k):if \\(n_0\\) reaches n, n reaches \\(n_G\\) . The control nodes n form a labeled graph where the labels are the deterministic actions b, b \u2208 a, for a in P. \u63a7\u5236\u8282\u70b9n\u5f62\u6210\u5e26\u6807\u7b7e\u7684\u56fe\uff0c\u5176\u4e2d\u6807\u7b7e\u662fP\u4e2da\u7684\u786e\u5b9a\u6027\u52a8\u4f5cb\uff0cb\u2208a\u3002 A control node n represents a partial state comprised of the true atoms p(n).\u63a7\u5236\u8282\u70b9n\u8868\u793a\u7531\u771f\u5b9e\u539f\u5b50p\uff08n\uff09\u7ec4\u6210\u7684\u90e8\u5206\u72b6\u6001\u3002 Goals are true in \\(n_G\\) and preconditions of actions applied in n are true in n. \u76ee\u6807\u5728nG\u4e2d\u662f\u6b63\u786e\u7684\uff0c\u5728n\u4e2d\u5e94\u7528\u52a8\u4f5c\u7684\u524d\u63d0\u5728n\u4e2d\u662f\u6b63\u786e\u7684\u3002 Negative information flows forward along the edges, while positive information flows backward, so that multiple system states will be associated with the same controller node in an execution.\u8d1f\u4fe1\u606f\u6cbf\u8fb9\u7f18\u5411\u524d\u6d41\u52a8\uff0c\u800c\u6b63\u4fe1\u606f\u5411\u540e\u6d41\u52a8\uff0c\u56e0\u6b64\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u591a\u4e2a\u7cfb\u7edf\u72b6\u6001\u5c06\u4e0e\u540c\u4e00\u63a7\u5236\u5668\u8282\u70b9\u5173\u8054\u3002 The ReachI clauses capture reachability from n0, while ReachG clauses capture reachability to \\(n_G\\) in a bounded number of steps. ReachI\u5b50\u53e5\u4ecen0\u6355\u83b7\u53ef\u8fbe\u6027\uff0c\u800cReachG\u5b50\u53e5\u4ee5\u6709\u9650\u7684\u6b65\u6570\u6355\u83b7\u5230nG\u7684\u53ef\u8fbe\u6027\u3002 The last clause states that any controller state n reachable from n0, must reach the goal node \\(n_G\\) . \u6700\u540e\u4e00\u4e2a\u5b50\u53e5\u6307\u51fa\uff0c\u4ecen0\u53ef\u5230\u8fbe\u7684\u4efb\u4f55\u63a7\u5236\u5668\u72b6\u6001n\u5fc5\u987b\u5230\u8fbe\u76ee\u6807\u8282\u70b9nG\u3002 Formula 13 is key for strong cyclic planning : it says that the goal is reachable from n in at most j +1 steps iff the goal is reachable in at most j steps from one of its successors n'. \u516c\u5f0f13\u662f\u8fdb\u884c\u5f3a\u6709\u529b\u7684\u5468\u671f\u6027\u89c4\u5212\u7684\u5173\u952e\uff1a\u5b83\u8bf4\uff0c\u5982\u679c\u76ee\u6807\u53ef\u4ee5\u4ece\u5176\u7ee7\u4efb\u8005n\u7684\u6700\u591aj\u6b65\u4e4b\u5185\u8fbe\u5230\uff0c\u5219\u76ee\u6807\u6700\u591a\u53ef\u4ee5\u5728j +1\u6b65\u4e4b\u5185\u8fbe\u5230\u3002 For strong planning, we will change this formula so that the goal is reachable from n in at most j +1 steps iff the goal is reachable in at most j steps from all successors n'. \u6211\u4eec\u5c06\u66f4\u6539\u6b64\u516c\u5f0f\uff0c\u4ee5\u4f7f\u76ee\u6807\u6700\u591a\u53ef\u4ee5\u5728n\u4e2aj +1\u6b65\u4e4b\u5185\u4ecen\u8fbe\u5230\uff0c\u524d\u63d0\u662f\u8be5\u76ee\u6807\u53ef\u4ee5\u4ece\u6240\u6709\u540e\u7ee7n'\u8fdb\u884c\u7684\u6700\u5927j\u6b65\u4e4b\u5185\u53ef\u4ee5\u5b9e\u73b0\u3002 For computing policies for a FOND problem P,a SAT-solver is called over C(P, k) where k stands for the number of controller nodes n. Starting with k =1 this bound is increased by 1 until the formula is satisfiable. \u53c2\u6570k\u521d\u503c1\u6b65\u957f1\u589e\u52a0 A solution policy can then be obtained from the satisfying truth assignment as indicated below. \u4eceSAT\u95ee\u9898\u4e2d\u6ee1\u8db3\u8d4b\u503c\u65b9\u5f0f\u4e2d\u627e\u5230\u5f3a\u5faa\u73af\u89e3\u51b3\u65b9\u6cd5 If the formula C(P, k) is unsatisfiable for k = |S|, then P has no strong cyclic solution.\u5408\u53d6\u516c\u5f0fC(P,K)\u5982\u679c\u5bf9\u4e8e\u201c k = |S|\u201d\u662f\u4e0d\u53ef\u6ee1\u8db3\u7684,\u90a3\u4e48FOND\u95ee\u9898\u6ca1\u6709\u5f3a\u5faa\u73af\u89e3","title":"\u57fa\u7840\u7f16\u7801"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#_2","text":"A satisfying assignment \u03c3 of the formula C(P, k) defines a policy \u03c0\u03c3 that is a function from controller states n into actions of P. \u516c\u5f0fC\uff08P\uff0ck\uff09\u7684\u53ef\u6ee1\u8db3\u7684\u8d4b\u503c\u03c3\u5b9a\u4e49\u4e86\u7b56\u7565 \\(\u03c0_\u03c3\\) \uff0c\u5b83\u662f\u4ece\u63a7\u5236\u5668\u72b6\u6001n\u6620\u5c04\u5230P\u7684\u52a8\u4f5c\u7684\u51fd\u6570\u3002 If the atom (n, b, n') is true in \u03c3, \\(\u03c0_\u03c3\\) (n)= b if b is a deterministic action in P and \\(\u03c0_\u03c3\\) (n)= a if b \u2208 a for a non-deterministic action a in P. \u5982\u679c\u539f\u5b50\u547d\u9898\uff08n\uff0cb\uff0cn'\uff09\u5728\u03c3\u4e2d\u4e3a\u771f\uff0c\u5219\u5982\u679cb\u662fP\u4e2d\u7684\u786e\u5b9a\u6027\u884c\u4e3a\uff0c\u5219 \\(\u03c0_\u03c3\\) \uff08n\uff09= b\uff0c\u5982\u679cb\u2208a\u662fP\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5ca\uff0c\u5219 \\(\u03c0_\u03c3\\) \uff08n\uff09= a For applying the compact policy \u03c0\u03c3, however, it is necessary to keep track of the controller state.\u8bb0\u5f55\u63a7\u5236\u5668\u72b6\u6001\u7684\u8f68\u8ff9 For this, it is convenient to consider a second policy \u03c0'\u03c3 determined by \u03c3,this one being a standard mapping of states into actions over an extended FOND \\(P_\u03c3\\) that denotes a FOND model M\u03c3.\u8003\u8651\u03c3\u786e\u5b9a\u7684\u7b2c\u4e8c\u79cd\u7b56\u7565\u03c0'\u03c3, \u8fd9\u7b56\u7565\u5728\u6269\u5c55FOND \\(P_\u03c3\\) \u6807\u51c6\u72b6\u6001\u6620\u5c04\u4e3a\u52a8\u4f5c. In this (cross-product) model, the states are pairs of controller and system states, the initial state is , the goal states are \\(n_G\\) ,s for s \u2208 S, and the set \\(A_\u03c3\\) ( ) of actions applicable in is restricted to the singleton set containing the action a = \\(\u03c0_\u03c3\\) (n) for the compact policy \\(\u03c0_\u03c3\\) above. \u5728\u6b64\uff08\u53c9\u79ef\uff09\u6a21\u578b\u4e2d\uff0c\u72b6\u6001\u4e3a\u63a7\u5236\u5668\u72b6\u6001\u548c\u7cfb\u7edf\u72b6\u6001\u5bf9\uff0c\u521d\u59cb\u72b6\u6001\u4e3a\uff0c\u76ee\u6807\u72b6\u6001\u4e3a$ n_G \\(\uff0cs\u2208S\uff0c\u5e76\u4e14 \u5bf9\u4e8e\u4e0a\u8ff0\u7d27\u7f29\u7b56\u7565\\) \u03c0_\u03c3 \\(\uff0c\u9002\u7528\u4e8e\u7684\u52a8\u4f5c\u7684\u96c6\u5408\\) A_\u03c3$\uff08\uff09\u9650\u4e8e\u5305\u542b\u52a8\u4f5ca = \\(\u03c0_\u03c3\\) \uff08n\uff09\u7684\u5355\u4f8b\u96c6\u3002 The transition function F\u03c3(a, ) results in the pairs where s\u2208 F(a, s) and n' is the unique controller state for which a) the atom (n, a, n') is true in \u03c3 when a is deterministic, or b) the atom (n, b, n') is true in \u03c3 for b \u2208 a with s' being the unique successor of b in s otherwise. In the extended FOND P\u03c3 there is a just one policy, denoted as \\(\u03c0'_\u03c3\\) that over the reachable pairs selects the noted as \u03c0only applicable action \\(\u03c0_\u03c3\\) (n) We say that the compact policy \\(\u03c0_\u03c3\\) is a strong cyclic (resp. strong) policy for P iff \u03c0 is a strong cyclic (resp. strong) policy for \\(P_\u03c3\\) . \u6211\u4eec\u8bf4\u7d27\u51d1\u7b56\u7565 \\(\u03c0_\u03c3\\) \u662f\u5bf9P\u7684\u5f3a\u5faa\u73af\uff08\u76f8\u5bf9\u5f3a\uff09\u7b56\u7565\uff0c\u5f53\u4e14\u4ec5\u5f53,\u03c0\u5bf9\u4e8e \\(P_\u03c3\\) \u662f\u5bf9\u5faa\u73af\u7684\u5f3a\uff08\u76f8\u5bf9\u5f3a\uff09\u7b56\u7565\u3002","title":"\u7b56\u7565"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#_3","text":"\u6587\u4e2d\u5206\u522b\u8bc1\u660e \u5065\u58ee\u53ef\u9760\u6027sound\u3002If \u03c3 is a satisfying assignment for C(P, k), the compact policy \u03c0 \u03c3 is a strongly cyclic solution for P.\u5982\u679c\u03c3\u662fC\uff08P\uff0ck\uff09\u7684\u6ee1\u610f\u5206\u914d\uff0c\u7d27\u81f4\u7b56\u7565 \\(\u03c0_\u03c3\\) \u662fP\u7684\u5f3a\u5faa\u73af\u89e3 \u5b8c\u5168\u6027completeness\u3002Let \u03c0 be a strong cyclic policy for P and let \\(N_\u03c0(P)\\) represent the number of different \u03c0 reduced states. Then if k \u2265 \\(N_\u03c0(P)\\) , there is an assignment \u03c3 that satisfies C(P, k) and \\(\u03c0_\u03c3\\) is a compact strong cyclic policy for P.\u4ee4\u03c0\u4e3aP\u7684\u5f3a\u5faa\u73af\u7b56\u7565\uff0c\u4ee4 \\(N_\u03c0\uff08P\uff09\\) \u8868\u793a\u4e0d\u540c\u7684\u03c0\u89c4\u7ea6\u7684\u72b6\u6001\u7684\u6570\u91cf\u3002 \u7136\u540e\uff0c\u5982\u679ck\u2265 \\(N_\u03c0\uff08P\uff09\\) \uff0c\u5219\u5b58\u5728\u4e00\u4e2a\u6ee1\u8db3C\uff08P\uff0ck\uff09\u7684\u8d4b\u503c\u03c3\uff0c\u800c \\(\u03c0_\u03c3\\) \u662fP\u7684\u7d27\u51d1\u578b\u5f3a\u5faa\u73af\u7b56\u7565\u3002 \u7d27\u6027(Compactness).The size of the policy \\(\u03c0_\u03c3\\) for a truth assignment \u03c3 satisfying C(P, k) can be exponentially smaller than the number of states reachable by \\(\u03c0_\u03c3\\) . \u6ee1\u8db3C\uff08P\uff0ck\uff09\u7684\u771f\u503c\u5206\u914d\u03c3\u7684\u7b56\u7565 \\(\u03c0_\u03c3\\) \u7684\u5927\u5c0f\u53ef\u6307\u6570\u7ea7\u5c0f\u4e8e \\(\u03c0_\u03c3\\) \u53ef\u8fbe\u7684\u72b6\u6001\u6570\u3002","title":"\u6027\u8d28"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#optimizations","text":"We introduced simple extensions and modifications to the SAT encoding to make it more efficient and scalable while maintaining its formal properties.\u6211\u4eec\u5bf9SAT\u7f16\u7801\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u6269\u5c55\u548c\u4fee\u6539\uff0c\u4ee5\u4f7f\u5176\u5728\u4fdd\u6301\u5176\u6b63\u5f0f\u5c5e\u6027\u7684\u540c\u65f6\u66f4\u52a0\u6709\u6548\u548c\u53ef\u6269\u5c55\u3002 The actual encodings used in the experiments feature extra variables (n, n') that are true iff (n, b, n') is true for some action b. \u5b9e\u9645\u4e0a\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u5b9e\u9645\u7f16\u7801\u7684\u7279\u5f81\u662f\uff1a\u989d\u5916\u53d8\u91cf\uff08n\uff0cn'\uff09\u4e3a\u771f\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0c\uff08n\uff0cb\uff0cn'\uff09\u5bf9\u4e8e\u67d0\u4e9b\u52a8\u4f5cb\u4e3a\u771f\u3002 Also, since the number of variables (n, b, n') grows quadratically with the number of control nodes, we substitute them by variables (n,B, n') where B is the action name for action b without the arguments. \u540c\u6837\uff0c\u7531\u4e8e\u53d8\u91cf\uff08n\uff0cb\uff0cn'\uff09\u7684\u6570\u91cf\u4e0e\u63a7\u5236\u8282\u70b9\u7684\u6570\u91cf\u6210\u5e73\u65b9\u589e\u957f\uff0c\u56e0\u6b64\u6211\u4eec\u7528\u53d8\u91cf\uff08n\uff0cB\uff0cn'\uff09\u4ee3\u66ff\u5b83\u4eec\uff0c\u5176\u4e2dB\u662f\u4e0d\u5e26\u53c2\u6570\u7684\u52a8\u4f5cb\u7684\u52a8\u4f5c\u540d\u79f0\u3002 It is assumed that siblings b and b' of non-deterministic actions a get different action names by the parser. \u5047\u5b9a\u975e\u786e\u5b9a\u6027\u52a8\u4f5ca\u7684\u540c\u7ea7\u7ed3\u70b9b\u548cb'\u901a\u8fc7\u89e3\u6790\u5668\u83b7\u5f97\u4e0d\u540c\u7684\u52a8\u4f5c\u540d\u79f0\u3002 As a result, the conjunction (n,B, n')\u2227(n, b) can be used in substitution of (n, b, n'). \u7ed3\u679c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5408\u53d6\u5f0f\uff08n\uff0cB\uff0cn'\uff09\u2227\uff08n\uff0cb\uff09\u4ee3\u66ff\uff08n\uff0cb\uff0cn'\uff09\u3002 Similarly, add lists of actions tend to be short, resulting in a huge number of clauses of type 7 for capturing forward propagation of negative information. \u7c7b\u4f3c\u5730\uff0c\u52a8\u4f5c\u7684\u6dfb\u52a0\u5217\u8868\u5f80\u5f80\u5f88\u77ed\uff0c\u5bfc\u81f4\u5927\u91cf\u7c7b\u578b\u4e3a7\u7684\u5b50\u53e5\u7528\u4e8e\u6355\u83b7\u8d1f\u4fe1\u606f\u7684\u6b63\u5411\u4f20\u64ad\u3002 \u8fd9\u4e9b\u5b50\u53e5\u88ab\u66ff\u6362\u4e3aThese clauses are replaced by\u8fd9\u4e9b\u5b50\u53e5\u88ab\u66ff\u6362\uff1a 7\u2019. (n, n') \u2227\u00acp(n) \u2192\u00acp(n') \u2228 \\(\\bigvee\\) b:p\u2208add(b)(n, b) 7\u201d. (n,B, n') \u2227 (n, b) \u2227\u00acp(n) \u2192\u00acp(n'), the last clause only for actions b that do not add p but have siblings that do. \u6700\u540e\u4e00\u4e2a\u5b50\u53e5\u4ec5\u9002\u7528\u4e8e\u4e0d\u52a0p\u4f46\u5177\u6709\u540c\u7ea7\u7684b\u7684\u52a8\u4f5cb\u3002 Finally, extra formulas are added for breaking symmetries that result from exchanges in the names (numbers) associated with different control nodes, other than n0 and nG, that result in equivalent controllers.\u6700\u540e\uff0c\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u516c\u5f0f\u6765\u6253\u7834\u5bf9\u79f0\u6027\uff0c\u8fd9\u79cd\u5bf9\u79f0\u6027\u662f\u7531\u4e0e\u4e0d\u540c\u63a7\u5236\u8282\u70b9\uff08n0\u548cnG\u9664\u5916\uff09\u76f8\u5173\u8054\u7684\u540d\u79f0\uff08\u6570\u5b57\uff09\u7684\u4ea4\u6362\u6240\u5bfc\u81f4\u7684\uff0c\u4ece\u800c\u5bfc\u81f4\u7b49\u6548\u7684\u63a7\u5236\u5668\u3002","title":"Optimizations"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#_4","text":"\u8f6f\u4ef6\u83b7\u53d6\u5730\u5740\uff1a The version of PRP is from 8/2017, from https://bitbucket.org/haz/deadend-and-strengthening . MyND was obtained from https://bitbucket.org/robertmattmueller/mynd , while we obtained Gamer from the authors of MyND. \u5c06\u57fa\u4e8eSAT\u7684FOND\u6c42\u89e3\u5668\u4e0e\u73b0\u6709\u7684\u4e00\u4e9b\u6700\u4f73\u89c4\u5212\u5668\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u5373PRP\uff0cMyND\u548cGamer\u3002\u4f7f\u7528\u7684SAT\u6c42\u89e3\u5668\u662fMiniSAT\uff08Een\u548cSorensson 2004\uff09\u3002\u4f7f\u7528\u4e86\u4ee5\u524d\u51fa\u7248\u7269\u4e2d\u63d0\u4f9b\u7684FOND\u57df\u548c\u5b9e\u4f8b\uff0c\u5e76\u6dfb\u52a0\u4e86\u81ea\u5df1\u7684\u65b0Domain\u3002\u6211\u4eec\u5728\u4e0b\u9762\u7b80\u8981\u89e3\u91ca\u5b83\u4eec\u3002 Tireword Spiky: A modification of triangle tireworld. Tireworld Truck: A modification ofTireworld Spiky where there are a few spiky segments. Islands. Two grid-like islands of size n \u00d7 n each are connected by a bridge. Doors: Arow of n rooms one after the other connected through doors. Miner. An agent has to retrieve a number of items that can be found in two regions. ... \u88681.Results for strong cyclic planning.\u5c06\u6d89\u53ca\u5927\u5c0f\u5dee\u5f02\u5f88\u5927\u7684\u8bb8\u591a\u5b9e\u4f8b\u7684\u57df\u5212\u5206\u4e3a\u591a\u884c\uff0c\u5e76\u4ee5\u767e\u5206\u6bd4\u8868\u793a\u8986\u76d6\u7387\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u884c\u6d89\u53ca\u4e0d\u540c\u6570\u91cf\u7684\u5b9e\u4f8b\u3002\u6bcf\u884c\u7684\u6700\u4f73\u8986\u76d6\u8303\u56f4\u4ee5\u7c97\u4f53\u663e\u793a\u3002 \u603b\u4f53\u800c\u8a00\uff0cPRP\u505a\u5f97\u6700\u597d\uff0c\u4f46\u662f\uff0c\u4e3a\u4e86\u4e86\u89e3\u5404\u79cd\u89c4\u5212\u8005\u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\uff0c\u8003\u8651\u95ee\u9898\u7684\u5927\u5c0f\uff0c\u7b56\u7565\u7684\u5927\u5c0f\u548c\u4e0d\u786e\u5b9a\u6027\u7684\u7c7b\u578b\u4ee5\u53ca\u95ee\u9898\u662f\u65b0\u7684\u8fd8\u662f\u65e7\u7684\u90fd\u662f\u6709\u7528\u7684\u3002 \u5b9e\u9645\u4e0a\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0cPRP\u5728\u73b0\u6709domain\u4e2d\u662f\u6700\u597d\u7684\uff0c\u5176\u4e2d\u5927\u591a\u6570\u4f8b\u5b50\u65e9\u4e8ePR\u51fa\u73b0P\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5bf9\u4e8e\u65b0\u5199\u7684domain\uff0cSAT\u65b9\u6cd5\u662f\u6700\u597d\u7684\u3002 \u5b9e\u9645\u4e0a\uff0cPRP\u53ef\u4ee5\u5904\u7406\u975e\u5e38\u5927\u7684\u95ee\u9898\uff08\u4ee5\u539f\u5b50\u548c\u52a8\u4f5c\u7684\u6570\u91cf\u6765\u8861\u91cf\uff09\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u751f\u4ea7\u5177\u6709\u6570\u767e\u751a\u81f3\u6570\u5343\u4e2a\u90e8\u5206\u6216\u5b8c\u6574\u72b6\u6001\u7684\u5927\u578b\u63a7\u5236\u5668\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0cMyND\u5bf9\u95ee\u9898\u548c\u63a7\u5236\u5668\u7684\u5927\u5c0f\u589e\u91cf\u7684\u6311\u6218\u6765\u8bf4\uff0crobust\u6027\u5f3a\uff0c\u4f46\u4e0d\u80fd\u5b9e\u73b0\u6bcf\u6b21\u6c42\u89e3\u90fd\u662f\u76f8\u540c\u7684\u7ed3\u679c\u3002 \u53e6\u4e00\u65b9\u9762\uff0cSAT\u65b9\u6cd5\u5f88\u96be\u6269\u5c55\u5230\u9700\u8981\u89e3\u51b3\u5177\u6709\u591a\u4e8e30\u591a\u4e2a\u72b6\u6001\u7684\u63a7\u5236\u5668\u7684\u95ee\u9898\uff0c\u7279\u522b\u662f\u5982\u679c\u95ee\u9898\u89c4\u6a21\u4e5f\u5f88\u5927\u65f6\u3002\u5728\u7ecf\u5178\u89c4\u5212\u4e2d\uff0cSAT\u65b9\u6cd5\u5bf9\u4e8e\u957f\u5e8f\u5217\u89c4\u5212\u5177\u6709\u7c7b\u4f3c\u7684\u5c40\u9650\u6027\u3002\u5728\u6211\u4eec\u9488\u5bf9FOND\u7684SAT\u65b9\u6cd5\u4e2d\uff0c\u7531\u4e8eCNF\u7f16\u7801\u5728\u63a7\u5236\u5668\u72b6\u6001\u7684\u6570\u91cf\u4e0a\u662f\u4e8c\u6b21\u65b9\u7684\uff0c\u8fd9\u4e00\u9650\u5236\u66f4\u52a0\u590d\u6742\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u8be5\u8868\u663e\u793a\uff0c\u5bf9\u4e8e\u8bb8\u591amisleading plan\u7684\u95ee\u9898\uff0cSAT\u65b9\u6cd5\u662f\u6700\u5065\u58ee\u7684\uff0c\u4f8b\u5982\u5728\u51e0\u4e2a\u65b0\u5199\u7684domain\u4e2d\uff0c\u5728\u5bf9\u672a\u6765\u8fdb\u884c\u63a8\u7406\u65f6\uff0c\u672a\u8003\u8651\u4e0d\u786e\u5b9a\u6027\u4f1a\u4f7f\u201coptimistic\u201d\u4e50\u5929\u6d3e\u7684\u641c\u7d22\u89c4\u5212\u5728\u8ba1\u7b97\u4e0a\u4e0d\u53ef\u884c\u3002 \u88682.Results for strong planning over domains with strong solutions in Table \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u73b0\u6709\u57df\u4e2d\u7684\u7ed3\u679c\u662f\u6df7\u5408\u7684\uff0c\u5176\u4e2dSAT\u65b9\u6cd5\u5728\u5176\u4e2d\u4e00\u4e2a\u57df\u4e2d\u8868\u73b0\u6700\u4f73\uff0c\u800cMyND\u548cGamer\u5728\u5176\u4ed6\u4e24\u4e2a\u57df\u4e2d\u8868\u73b0\u6700\u4f73\u3002SAT\u65b9\u6cd5\u662f\u65b0\u7684domain\u6700\u597d\u7684\u65b9\u6cd5\uff0c\u53ea\u6709\u4e00\u4e2a\u4f8b\u5916\uff0c\u9664\u4e86Doors\u95ee\u9898\u4e2dGamer\u505a\u5f97\u66f4\u597d\u7684\u3002","title":"\u5b9e\u9a8c"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#dual-fond-planning","text":"\u5c55\u671b\u8fdb\u4e00\u6b65\u7814\u7a76\u65b9\u5411\uff0c\u6539\u8fdb\u65b9\u6cd5 A feature of the SAT approach that is not shared by either classical replanners, OBDD-planners, or explicit AND/OR search approaches like MyND and Grendel, is that in SAT, it is very simple to reason with a combination of actions that can be assumed to be fair, with actions that cannot, leading to a form of planning that is neither strong nor strong cyclic. We call this Dual FOND planning. \u4f20\u7edf\u7684\u91cd\u65b0\u89c4\u5212\u8005\uff0cOBDD-\u89c4\u5212\u8005\u6216\u8bf8\u5982MyND\u548cGrendel\u4e4b\u7c7b\u7684\u663e\u5f0fAND / OR\u641c\u7d22\u65b9\u6cd5\u6240\u4e0d\u5177\u6709\u7684SAT\u65b9\u6cd5\u7684\u4e00\u4e2a\u7279\u5f81\u662f\uff0c\u5728SAT\u4e2d\uff0c\u5f88\u5bb9\u6613\u901a\u8fc7\u7ec4\u5408\u53ef\u4ee5\u5047\u5b9a\u662f\u516c\u5e73\u7684\uff0c\u91c7\u53d6\u4e86\u65e0\u6cd5\u91c7\u53d6\u7684\u884c\u52a8\uff0c\u4ece\u800c\u5bfc\u81f4\u89c4\u5212\u7684\u5f62\u5f0f\u65e2\u4e0d\u5f3a\u4e5f\u4e0d\u5f3a\u3002\u6211\u4eec\u79f0\u6b64\u4e3a\u5bf9\u5076FOND\u89c4\u5212\u3002 Dual FOND planing is planning with a FOND problem P where some of the actions are tagged as fair, and the others unfair. For example, consider a problem featuring a planning agent and an adversary, one in front of the other in the middle row of a 3 \u00d7 2 grid (two columns): the agent on the left, the adversary on the right, and the agent must reach a position on the right. The agent can move up and down non-deterministically, moving 0, 1, or 2 cells, without ever leaving the grid, he can also wait, or he can move to the opposing cell on the right if that position is empty. Every turn however, the adversary moves 0 or 1 cells, up or down. The solution to the problem is for the agent to keep moving up and down until he is at vertical distance of 2 to the opponent, then moving right. This strategy is not a strong or a strong cyclic policy, but a dual policy. \u53cc\u91cdFOND\u89c4\u5212\u6b63\u5728\u9488\u5bf9FOND\u95ee\u9898P\u8fdb\u884c\u89c4\u5212\uff0c\u5176\u4e2d\u67d0\u4e9b\u52a8\u4f5c\u88ab\u6807\u8bb0\u4e3a\u516c\u5e73\uff0c\u800c\u5176\u4ed6\u52a8\u4f5c\u5219\u88ab\u6807\u8bb0\u4e3a\u4e0d\u516c\u5e73\u3002 \u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u5177\u6709\u89c4\u5212\u4ee3\u7406\u4eba\u548c\u5bf9\u624b\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u95ee\u9898\u4f4d\u4e8e\u4e00\u4e2a3\u00d72\u7f51\u683c\uff08\u4e24\u5217\uff09\u7684\u4e2d\u95f4\u884c\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5728\u524d\u9762\uff1a\u5de6\u8fb9\u7684\u4ee3\u7406\u4eba\uff0c\u53f3\u8fb9\u7684\u5bf9\u624b\uff0c\u4ee5\u53ca\u4ee3\u7406\u4eba\u5fc5\u987b\u5230\u8fbe\u53f3\u8fb9\u7684\u4f4d\u7f6e\u3002 \u4ee3\u7406\u53ef\u4ee5\u4e0d\u786e\u5b9a\u5730\u4e0a\u4e0b\u79fb\u52a8\uff0c\u79fb\u52a80\u30011\u62162\u4e2a\u50cf\u5143\uff0c\u800c\u4e0d\u5fc5\u79bb\u5f00\u7f51\u683c\uff0c\u4ed6\u4e5f\u53ef\u4ee5\u7b49\u5f85\uff0c\u6216\u8005\u5982\u679c\u8be5\u4f4d\u7f6e\u4e3a\u7a7a\uff0c\u5219\u53ef\u4ee5\u79fb\u52a8\u5230\u53f3\u4fa7\u7684\u76f8\u5bf9\u50cf\u5143\u3002 \u4f46\u662f\uff0c\u5bf9\u624b\u6bcf\u56de\u5408\u90fd\u4f1a\u5411\u4e0a\u6216\u5411\u4e0b\u79fb\u52a80\u62161\u4e2a\u50cf\u5143\u3002 \u89e3\u51b3\u8be5\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u4f7f\u4ee3\u7406\u7ee7\u7eed\u4e0a\u4e0b\u79fb\u52a8\uff0c\u76f4\u5230\u4ed6\u4e0e\u5bf9\u624b\u7684\u5782\u76f4\u8ddd\u79bb\u4e3a2\uff0c\u7136\u540e\u518d\u5411\u53f3\u79fb\u52a8\u3002 \u6b64\u7b56\u7565\u4e0d\u662f\u5f3a\u529b\u6216\u5f3a\u529b\u7684\u5468\u671f\u6027\u7b56\u7565\uff0c\u800c\u662f\u53cc\u91cd\u7b56\u7565\u3002 A state trajectory \u03c4 is fair for a Dual FOND problem P and a policy \u03c0 when infinite occurrences of a state s in \u03c4, where a = \u03c0(s) is a fair action, implies infinite occurrences of transitions s, s in \u03c4 for each successor s \u2208 F(a, s). A solution to a Dual FOND problem P is a policy \u03c0 such that all the fair trajectories induced by \u03c0 are goal reaching. Strong cyclic and strong planning are special cases of Dual FOND planning when all or none of the actions are fair. A sound and complete SAT formulation of Dual FOND planning is obtained by introducing the atoms (n, fair) that are true if the action chosen in n is fair,\u5f53\u03c4\u4e2d\u72b6\u6001s\u7684\u65e0\u9650\u51fa\u73b0\u65f6\uff0c\u5176\u4e2da =\u03c0\uff08s\uff09\u662f\u4e00\u4e2a\u516c\u5e73\u52a8\u4f5c\uff0c\u5219\u72b6\u6001\u8f68\u8ff9\u03c4\u5bf9\u5076FOND\u95ee\u9898P\u548c\u7b56\u7565\u03c0\u662f\u516c\u5e73\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u6bcf\u4e2a\u540e\u7ee7\u8005s\u2208F\uff08a\uff0cs\uff09\u3002\u5bf9\u5076FOND\u95ee\u9898P\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7b56\u7565\u03c0\uff0c\u4f7f\u5f97\u03c0\u5f15\u8d77\u7684\u6240\u6709\u516c\u5e73\u8f68\u9053\u90fd\u8fbe\u5230\u76ee\u6807\u3002 \u5f53\u6240\u6709\u52a8\u4f5c\u6216\u6240\u6709\u52a8\u4f5c\u90fd\u4e0d\u516c\u5e73\u65f6\uff0c\u5f3a\u6709\u529b\u7684\u5468\u671f\u6027\u89c4\u5212\u548c\u5f3a\u6709\u529b\u7684\u89c4\u5212\u662fDual FOND\u89c4\u5212\u7684\u7279\u4f8b\u3002 \u5982\u679c\u5728n\u4e2d\u9009\u62e9\u7684\u52a8\u4f5c\u662f\u516c\u5e73\u7684\uff0c\u5219\u901a\u8fc7\u5f15\u5165\u6b63\u786e\u7684\u539f\u5b50\uff08n\uff0c\u516c\u5e73\uff09\uff0c\u53ef\u4ee5\u83b7\u5f97\u5bf9\u53cc\u91cdFOND\u89c4\u5212\u7684\u5408\u7406\u5b8c\u6574\u7684SAT\u516c\u5f0f\uff0c 16.(n, fair) \u21d0\u21d2 \\(\\bigvee_b\\) (n, b), b among fair action \u00ac(n, fair) \u21d0\u21d2 \\(\\bigvee_b\\) (n, b), b among unfair actions and replacing 13 and 13\u2019 by: 13\u201d. [(n, fair) \u2192 13] \u2227 [\u00ac(n, fair) \u2192 13\u2019] where 13 and 13\u2019 are the formulas above for strong cylic and strong planning. The above encoding captures dual FOND planning in the same way that the first encoding captures strong cyclic planning. \u4e0a\u9762\u7684\u7f16\u7801\u6355\u83b7\u53cc\u91cdFOND\u89c4\u5212\u7684\u65b9\u5f0f\u4e0e\u7b2c\u4e00\u79cd\u7f16\u7801\u6355\u83b7\u5f3a\u5faa\u73af\u89c4\u5212\u7684\u65b9\u5f0f\u76f8\u540c\u3002 We have run some experiments for dual planning, using the example above where the two agents move over a n \u00d7 2 grid. We tried values of n up to 10, and the resulting dual policy is the one mentioned above, where the agent keeps moving up and down until leaving the adversary behind. Notice that strong, strong cyclic, and dual FOND planning result from simple changes in the clauses. This flexibility is a strength of the SAT approach that is not available in other approaches that require different algorithms in each case.\u6211\u4eec\u4f7f\u7528\u4e0a\u9762\u7684\u793a\u4f8b\u8fd0\u884c\u4e86\u4e00\u4e9b\u53cc\u91cd\u89c4\u5212\u5b9e\u9a8c\uff0c\u5176\u4e2d\u4e24\u4e2a\u4ee3\u7406\u5728n\u00d72\u7f51\u683c\u4e0a\u79fb\u52a8\u3002 \u6211\u4eec\u5c1d\u8bd5\u5c06n\u7684\u503c\u63d0\u9ad8\u523010\uff0c\u7ed3\u679c\u662f\u53cc\u91cd\u7b56\u7565\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u7b56\u7565\uff0c\u5728\u8be5\u7b56\u7565\u4e2d\uff0c\u4ee3\u7406\u4e0d\u65ad\u4e0a\u4e0b\u79fb\u52a8\uff0c\u76f4\u5230\u5c06\u5bf9\u624b\u629b\u5728\u540e\u9762\u3002 \u6ce8\u610f\uff0c\u5f3a\uff0c\u5f3a\u5faa\u73af\u548c\u53cc\u91cdFOND\u89c4\u5212\u662f\u7531\u5b50\u53e5\u4e2d\u7684\u7b80\u5355\u66f4\u6539\u5bfc\u81f4\u7684\u3002 \u8fd9\u79cd\u7075\u6d3b\u6027\u662fSAT\u65b9\u6cd5\u7684\u4f18\u52bf\uff0c\u800c\u5728\u5176\u4ed6\u65b9\u6cd5\u4e0b\uff0c\u6bcf\u79cd\u60c5\u51b5\u4e0b\u90fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7b97\u6cd5\u7684\u65b9\u6cd5\u4e2d\uff0cSAT\u65b9\u6cd5\u4e0d\u9700\u8981\u3002","title":"dual FOND planning"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/FOND/#_5","text":"We have introduced the first SAT formulation for FOND planning that is compact and can produce compact policies. Small changes in the formulation account for strong, strong cyclic, and a combined form of strong and strong cyclic planning, that we call dual FOND planning, where some actions are assumed fair and the others unfair. From a computational point of view, the SAT approach performs well in problems that are not too large and that do not require large controllers, where it is not affected by the presence of a large number of misleading plans. Classical replanners like PRP and explicit AND/OR search planners like MyND can scale up to larger problems or problems with larger controllers respectively, but do not appear to be as robust to non-determinism. \u6211\u4eec\u4e3aFOND\u89c4\u5212\u5f15\u5165\u4e86\u7b2c\u4e00\u4e2aSAT\u516c\u5f0f\uff0c\u8be5\u516c\u5f0f\u7d27\u51d1\u5e76\u4e14\u53ef\u4ee5\u4ea7\u751f\u7d27\u51d1\u7684\u7b56\u7565\u3002 \u516c\u5f0f\u7684\u5fae\u5c0f\u53d8\u5316\u8bf4\u660e\u4e86\u5f3a\u6709\u529b\u7684\u5faa\u73af\u89c4\u5212\u4ee5\u53ca\u5f3a\u6709\u529b\u7684\u5faa\u73af\u89c4\u5212\u7684\u7ec4\u5408\u5f62\u5f0f\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3aDual FOND\u89c4\u5212\uff0c\u5176\u4e2d\u67d0\u4e9b\u884c\u52a8\u88ab\u8ba4\u4e3a\u662ffair\uff0c\u800c\u5176\u4ed6\u884c\u52a8\u5219\u88ab\u8ba4\u4e3a\u662funfair\u3002 \u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6\u6765\u770b\uff0cSAT\u65b9\u6cd5\u5728\u4e0d\u592a\u5927\u4e14\u4e0d\u9700\u8981\u5927\u578b\u63a7\u5236\u5668\u7684\u95ee\u9898\u4e2d\u8868\u73b0\u826f\u597d\uff0c\u5e76\u4e14\u4e0d\u53d7\u5927\u91cf\u8bef\u5bfc\u6027\u89c4\u5212\u7684\u5f71\u54cd\u3002 \u8bf8\u5982PRP\u4e4b\u7c7b\u7684\u7ecf\u5178\u91cd\u65b0\u89c4\u5212\u5668\u548c\u8bf8\u5982MyND\u4e4b\u7c7b\u7684\u663e\u5f0fAND / OR\u641c\u7d22\u89c4\u5212\u5668\u53ef\u4ee5\u5206\u522b\u6269\u5c55\u5230\u66f4\u5927\u7684\u95ee\u9898\u6216\u66f4\u5927\u7684\u63a7\u5236\u5668\u7684\u95ee\u9898\uff0c\u4f46\u4f3c\u4e4e\u5bf9\u4e0d\u786e\u5b9a\u6027\u4e0d\u90a3\u4e48\u7a33\u5065\u3002","title":"\u5168\u6587\u7ed3\u8bba"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QA_FOND/","text":"Q&A minisat FOND-SAT bugs bug2 debug from parser import Parser Q&A \u00b6 \u7fa4\u53cb\u95ee\uff1a \u5982\u4f55\u7406\u89e3\u8bed\u4e49\u548c\u8bed\u6cd5\u5462 \u8bed\u4e49\u662f\u8bed\u8a00\u7684\u7279\u6027\u5417 zz \u56de\u7b54\uff1a \u4e00\u4e2a\u8bed\u8a00\u53ea\u6709\u8bed\u4e49\u800c\u6ca1\u6709\u8bed\u6cd5\uff0c\u4f60\u5c31\u65e0\u6cd5\u8fdb\u884c\u8bc1\u660e\uff0c\u800c\u4e00\u4e2a\u8bed\u8a00\u53ea\u6709\u8bed\u6cd5\u800c\u6ca1\u6709\u8bed\u4e49\uff0c\u4f60\u5c31\u65e0\u6cd5\u5224\u65ad\u5bf9\u9519\u3002 \u4ece\u8bed\u6cd5\u7684\u53ef\u63a8\u51fa\uff0c\u5230\u8bed\u4e49\u7684\u6709\u6548\uff0c\u662f\u8c13\u53ef\u9760\u6027\u3002\u4ece\u8bed\u4e49\u7684\u6709\u6548\u5230\u5230\u8bed\u6cd5\u7684\u53ef\u63a8\u51fa\uff0c\u662f\u8c13\u5b8c\u5168\u6027\u4e5f\u3002 \u7b2c\u4e00\u4e2astrong cyclic planning, \u6311\u51fa\u6765\u4e00\u4e9b\u7b97strong planning. \u55ef\u5450\uff0c\u8fd9\u4e2ak\u597d\u50cf\u662f\u6b65\u957f\u4e3a1\uff0c\u4ece1\u5f00\u59cb\uff0c\u524d\u5411\u4e3a\u8d1f\uff08\u56de\u6eaf\u6b65\u957f-1\uff09\uff0c\u540e\u5411\u4e3a\u6b63 k =|S| CNF\u4e0d\u662fa1 \u039b a2 \u039b ...... \u039b an\u8fd9\u79cd\u683c\u5f0f\u5417\uff0c\u5b83\u7684\u7b97\u6cd5\u4e0d\u662f\u8981\u4eceS\u91cc\u9762\u9009\u82e5\u5e72\u4e2a\u72b6\u6001\u53bb\u586b\u5145\u8fd9\u4e2aCNF\u8868\u8fbe\u5f0f\uff0c\u7136\u540e\u8c03\u7528minisat\u53bb\u770b\u662f\u4e0d\u662fsatisfiable\u5417\uff1f\u5bf9\u4e8e\u4e00\u4e2aFOND\u95ee\u9898\uff0c\u5b83\u7684\u72b6\u6001\u6700\u591a\u53ea\u6709|S|\u4e2a\uff0c\u6240\u4ee5\u5f53C(P\uff0ck)\u91cc\u9762\u7684k\u7b49\u4e8e|S|+1\u7684\u65f6\u5019\uff0c\u610f\u5473\u7740\u8be5\u95ee\u9898\u4e0d\u80fd\u89e3 how each high-level fluent can be translated into a low-level formula\uff0c\u8bba\u6587\u4e2d\u4e5f\u51fa\u73b0\u8fc7\u51e0\u6b21fluent\u662f\u5565\u610f\u601d\uff1f Let Q = be a QNP. The number of boolean states for Q is exponential in the number of fluents and variables \u300aknowledge in action\u300b\u4f5c\u8005Raymond Reiter \uff0c\u4e66\u91cc\u5e94\u8be5\u6709\u8fd9\u4e2a\u6982\u5ff5 \u8bb0\u8d77\u6765\u4e86\uff0cfluent\u4f60\u5c31\u5f53\u6210\u662f\u5bf9\u4e00\u4e2a\u539f\u5b50\u53d8\u91cf\u7684\u8d4b\u503c\u3002 \u5728\u72b6\u6001s\u4e0b\uff0c\u53d8\u91cfF\u4e3a\u771f\uff0c\u90a3\u4f60\u5c31\u8ba4\u4e3aF\u662f\u4e00\u4e2afluent\u53ed \u77f3\u5934\u4e16\u754c\uff1a \\(Q_{clear} =\\) < F ,V,I,O,G> F,{H} V,{n(x)} I,{ \\(\\neg H\\) ,n(x)>0} O,{a,b}, a=< \\(\\neg H\\) ,n(x)>0;H,n(x) \\(\\downarrow\\) >, b= \\(\\neg H\\) > G={n(x)=0} minisat \u00b6 USAGE: ./minisat <input-file> <result-output-file> where the input may be either in plain/gzipped DIMACS format or in BCNF. FOND-SAT \u00b6 \u6838\u5fc3\u4ee3\u7801 \uff1a cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong) ...... cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver) ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) ...... \u8fd9\u4e2acnf\u7c7b\uff0c\u8f93\u5165\u201c formula-temp.txt\u5199\u6709cnf\u7684\u6587\u4ef6 \u3001 formula-extra-temp.txt\u7a7a\u53ef\u80fd\u8981\u6709\u6253\u5f00\u6761\u4ef6 \uff0c fair, strong\u201d\u53ef\u4ee5\u5b9e\u73b0\u8f6c\u6362\u6210\u4e3a CNF cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong) solver_time = [] for i in range(1000): if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') controllerStates = generateControllerStates(i * params['inc']) print('=================================================') print('Trying with %i states' % len(controllerStates)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) print('# Atoms: %i' % len(my_task.get_atoms())) print('# Actions: %i' % len(my_task.get_actions())) cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) print('SAT formula generation time = %f' % (timer() - start_g)) print('# Clauses = %i' % cnf.getNumberClauses()) print('# Variables = %i' % cnf.getNumberVariables()) if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') print('Creating formula...') name_final = cnf.generateInputSat(name_formula_file) print('Done creating formula. Calling solver...') start_solv = timer() time_for_sat = int(time_limit - (timer() - time_start)) if time_for_sat < time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') \u7136\u540e\u5c31\u662f\u8c03\u7528\u6c42\u89e3\u4e86\u3002 python main.py ../F-domains/islands/domain.pddl ../F-domains/islands/p03.pddl -policy 1 \u53c2\u6570\u5b57\u5178\uff1a # params\u5b57\u5178 {'time_limit': 3600, 'inc': 1, 'path_domain': '../F-domains/islands/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../F-domains/islands/p03.pddl', 'name_temp': 'temp' } \u6240\u4ee5\u53d6\u4ee3\u547d\u4ee4\u884c\u53bb\u53c2\u6570\u7684\u8fd0\u884c\u65b9\u6cd5\u662f\uff1a params={'time_limit': 3600, 'inc': 1, 'path_domain': '../F-domains/islands/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../F-domains/islands/p03.pddl', 'name_temp': 'temp'} python main.py ../F-domains/islands/domain.pddl ../F-domains/islands/p03.pddl -strong 1 -inc 2 -policy 1 \u6700\u540e\u6210\u529f\u8fd0\u884c\u7684\u4f8b\u7a0b\uff1a restarts : 0 conflicts : 0 (-nan /sec) decisions : 0 (-nan /sec) propagations : 191 (inf /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.92 MB CPU time : 0 s UNSATISFIABLE ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 2958 7243 | 986 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 8 (512 /sec) decisions : 10 (640 /sec) propagations : 749 (47936 /sec) conflict literals : 15 (21.05 % deleted) Memory used : 13.92 MB CPU time : 0.015625 s UNSATISFIABLE ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 5128 12958 | 1709 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 27 (inf /sec) decisions : 59 (inf /sec) propagations : 3126 (inf /sec) conflict literals : 111 (24.49 % deleted) Memory used : 14.05 MB CPU time : 0 s SATISFIABLE ('WARNING: variable not Atom nor NegatedAtom;', '<none of those>') main.py\u8fd9\u884c\uff1a >>> my_task = p.translate_to_atomic() \u8f93\u51fa Setting atoms # Atoms: 31 Setting initial Setting goal Setting actions # Actions: 80 Setting other actions (0, '/', 80) Setting action card Setting mutexes Setting relevant actions Setting splitting Setting compatible actions (0, '/', 80) 0.00220704078674 main.py 92 cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong) solver_time = [] for i in range(1000): if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') controllerStates = generateControllerStates(i * params['inc']) print('=================================================') print('Trying with %i states' % len(controllerStates)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) print('# Atoms: %i' % len(my_task.get_atoms())) print('# Actions: %i' % len(my_task.get_actions())) cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) print('SAT formula generation time = %f' % (timer() - start_g)) print('# Clauses = %i' % cnf.getNumberClauses()) print('# Variables = %i' % cnf.getNumberVariables()) if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') print('Creating formula...') name_final = cnf.generateInputSat(name_formula_file) print('Done creating formula. Calling solver...') start_solv = timer() time_for_sat = int(time_limit - (timer() - time_start)) if time_for_sat < time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') command = './minisat %s %s' % (name_formula_file, name_output_satsolver) # command = '/path/to/SATsolver/minisat -mem-lim=%i -cpu-lim=%i %s %s' % (mem_limit, time_for_sat, name_formula_file, name_output_satsolver) print('SAT solver called with %i MB and %i seconds' % (mem_limit, time_for_sat)) os.system(command) end_solv = timer() solver_time.append(end_solv - start_solv) print('Done solver. Round time: %f' % (end_solv - start_solv)) print('Cumulated solver time: %f' % sum(solver_time)) result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) if result is None: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME/MEM') if result: break print('UNSATISFIABLE') ./minisat %s %s' % (name_formula_file, name_output_satsolver\uff09 \u6839\u636eminisat\u7528\u6cd5\uff1a USAGE: ./minisat <input-file> <result-output-file> where the input may be either in plain/gzipped DIMACS format or in BCNF. \u4e5f\u5c31\u662f\u8bf4\u5728\u547d\u4ee4\u884c\u8f93\u5165\uff1a ./minisat formula-temp.txt outsat-temp.txt \u5982\u679c\u5728\u547d\u4ee4\u884c\u8f93\u5165\u5355\u72ec\u8fd0\u884ccnf\u751f\u6210sat\u6c42\u89e3\u7684\u8fc7\u7a0b\u662f\uff1a $ ./minisat test-formula-temp.txt test-outsat-temp.txt ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 5128 12958 | 1709 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 32 (2048 /sec) decisions : 64 (4096 /sec) propagations : 3495 (223680 /sec) conflict literals : 136 (21.84 % deleted) Memory used : 14.05 MB CPU time : 0.015625 s SATISFIABLE \u5bf9\u5e94\u7684\u662fmain.py\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6700\u6700\u6700\u5f00\u59cb\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u5148\u8fd0\u884cminisat\u518d\u51fa\u73b0\u7ed3\u679c\uff0c\u56e0\u4e3aDemo\u9700\u8981\u627e4\u8fc7\u7a0b\u624d\u80fd\u51fa\u7ed3\u679c\uff0c\u6240\u4ee5\u8c03\u75283\u6b21minisat\u5f00\u5934\u51fa\u73b03\u6b21\u8fd9\u6bb5\u4f7f\u7528\u60c5\u51b5\uff0c\u4ee5\u53ca\u524d\u4e24\u6b21test-outsat-temp.txt\u7528python\u8bfb\u53d6\u4e3aresult==None\u4e3a\u7a7a\u8bf4\u660e./minisat\u627e\u4e0d\u5230\u53ef\u6ee1\u8db3\u7684\uff0c\u4e8e\u662fUNSATISFIABLE\uff0c\u77e5\u9053\u7b2c\u4e09\u6b21\u627e\u5230\u4e4b\u540e\u5c31\u662fSATISFIABLE\u53ef\u6ee1\u8db3\u6709\u89e3\u3002 \u5bf9\u5e94\u6574\u4f53\u547d\u4ee4\u884c\u7684\u8f93\u51fa\u4e0b\u9762\u7684\uff1a ================================================= Trying with 2 states Looking for strong plans: False Fair actions: True # Atoms: 31 # Actions: 80 SAT formula generation time = 0.008767 # Clauses = 2877 # Variables = 276 Creating formula... Done creating formula. Calling solver... SAT solver called with 4096 MB and 3599 seconds Done solver. Round time: 0.050868 Cumulated solver time: 0.050868 UNSATISFIABLE ================================================= Trying with 3 states Looking for strong plans: False Fair actions: True # Atoms: 31 # Actions: 80 SAT formula generation time = 0.020353 # Clauses = 4917 # Variables = 450 Creating formula... Done creating formula. Calling solver... SAT solver called with 4096 MB and 3599 seconds Done solver. Round time: 0.022791 Cumulated solver time: 0.073659 UNSATISFIABLE ================================================= Trying with 4 states Looking for strong plans: False Fair actions: True # Atoms: 31 # Actions: 80 SAT formula generation time = 0.030047 # Clauses = 7458 # Variables = 656 Creating formula... Done creating formula. Calling solver... SAT solver called with 4096 MB and 3599 seconds Done solver. Round time: 0.022768 Cumulated solver time: 0.096427 CNF.py\u4e2d\u7684parserOutput\u65b9\u6cd5 def parseOutput(self, nameFile, controllerStates, parser, print_policy = False): sets = [set([]) for i in range(self.num_types)] fres = open(nameFile, 'r') res = fres.readlines() if 'UNSAT' in res[0]: return False if 'INDET' in res[0]: return None if not print_policy: return True res = res[1] res = res.split(' ') for r in res: if '\\n' in res: continue var = int(r) if var > 0: varName = self.mapNumberVariable[var] t = self.mapVariableType[varName] sets[t - 1].add(varName) print('===================\\n===================') print('Controller -- CS = Controller State') for i in range(len(sets)): if i + 1 in self.print_types: s = sets[i] if i == 0: # pair atom controller print('===================\\n===================') print('Atom (CS)') print('___________________') for n in controllerStates: print('----------') for j in s: ind = '(' + n + ')' if ind in j: print('%s %s' % (str(parser.get_var_string(j.split(ind)[0])), str(ind))) elif i == 1: # pair cs action print('===================\\n===================') print('(CS, Action with arguments)') print('___________________') for n in controllerStates: for j in s: if '(' + n + ',' in j: print(j) elif i == 2: # Triplet print('===================\\n===================') print('(CS, Action name, CS)') print('___________________') for n in controllerStates: for j in s: if '(' + n + ',' in j: print(j) else: print('===================') print('(CS, CS)') print('___________________') for j in s: print(j) print('===================') print('Solved with %i states' % len(controllerStates)) return True =================== =================== Controller -- CS = Controller State =================== =================== Atom (CS) ___________________ ---------- Atom person-at(l22-1) (n0) Atom person-alive() (n0) Atom bridge-clear() (n0) ---------- Atom person-at(l21-1) (n1) Atom person-alive() (n1) Atom bridge-clear() (n1) ---------- Atom person-at(l22-2) (n2) Atom person-alive() (n2) ---------- Atom person-at(l21-2) (ng) =================== =================== (CS, Action with arguments) ___________________ (n0,move-person(l22-1,l21-1)) (n0,move-person) (n1,walk-on-bridge(l21-1,l22-2)) (n1,walk-on-bridge) (n2,move-person) (n2,move-person(l22-2,l21-2)) =================== =================== (CS, Action name, CS) ___________________ (n0,move-person,n1) (n1,walk-on-bridge,n2) (n2,move-person,ng) =================== (CS, CS) ___________________ (n2,ng) (n0,n1) (n1,n2) =================== Solved with 4 states main.py 137 print('Elapsed total time (s): %f' % (timer() - time_start)) print('Elapsed solver time (s): %f' % sum(solver_time)) print('Elapsed solver time (s): %s' % str(solver_time)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, 'Done') Elapsed total time (s): 0.354544 Elapsed solver time (s): 0.096427 Elapsed solver time (s): [0.05086803436279297, 0.022791147232055664, 0.022768020629882812] Looking for strong plans: False Fair actions: True Done bugs \u00b6 from parser import Parser \u65e0\u6cd5\u5bfc\u5165\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\uff0c\u89c2\u5bdf__pycache__\u6ca1\u6709\u5bf9\u5e94.pyc\u5bfc\u5165\u4e0d\u6210\u529f\u4e5f\u53d1\u73b0 \u6682\u65f6low\u70b8\u5929\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u590d\u5236parser.py\u4ee3\u7801\u5230main.py\u6587\u4ef6,\u6210\u529f\u3002 bug2 \u00b6 Traceback (most recent call last): File \"main.py\", line 432, in <module> result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) File \"C:\\Users\\admin\\Desktop\\hush\\FOND-SAT\\src\\CNF.py\", line 202, in parseOutput fres = open(nameFile, 'r') FileNotFoundError: [Errno 2] No such file or directory: 'outsat-temp.txt' \u89c2\u5bdf\u6e90\u7801 \u6682\u65f6g 430 print('Cumulated solver time: %f' % sum(solver_time)) result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) if result is None: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME/MEM') if result: break print('UNSATISFIABLE') \u56de\u8c03 def parseOutput(self, nameFile, controllerStates, parser, print_policy = False): sets = [set([]) for i in range(self.num_types)] fres = open(nameFile, 'r') res = fres.readlines() FileNotFoundError: [Errno 2] No such file or directory: 'outsat-temp.txt' debug \u00b6 Traceback (most recent call last): File \"translate/translate.py\", line 692, in <module> main() File \"translate/translate.py\", line 678, in main sas_task = pddl_to_sas(task) File \"translate/translate.py\", line 518, in pddl_to_sas groups, mutex_groups, translation_key = fact_groups.compute_groups( File \"/home/tridu33/document/FOND-SAT/src/translate/fact_groups.py\", line 110, in compute_groups groups = invariant_finder.get_groups(task, reachable_action_params) File \"/home/tridu33/document/FOND-SAT/src/translate/invariant_finder.py\", line 134, in get_groups invariants = sorted(find_invariants(task, reachable_action_params)) File \"/home/tridu33/document/FOND-SAT/src/translate/invariant_finder.py\", line 102, in find_invariants start_time = time.clock() AttributeError: module 'time' has no attribute 'clock' Traceback (most recent call last): File \"main.py\", line 92, in generate_task f_task = open(sas_file_name, 'r') FileNotFoundError: [Errno 2] No such file or directory: 'outputtrans-temp.sas' During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"main.py\", line 370, in <module> p.generate_task(name_sas_file) File \"main.py\", line 94, in generate_task raise MyError('Error opening sas file!') __main__.MyError: 'Error opening sas file!' The error occurs because in python 2, there is time.clock() , but in python 3, it has been replaced with time.perf_counter() . \u279c src grep -r time.clock ./ ./translate/invariant_finder.py: start_time = time.clock() ./translate/invariant_finder.py: if time.clock() - start_time > task.INVARIANT_TIME_LIMIT: Linux\u4e0b ./minisat:cannot execute binary file: Exec format error from parser import Parser \u00b6 #------------------------------------- #from parser import Parser #''' from objs import Variable, Operator def generate_atom(name, val): return '(' + name + '=' + str(val) + ')' class MyError(Exception): def __init__(self, value): self.value = value def __str__(self): return repr(self.value) class Parser: def __init__(self): self.domain = None self.problem = None self.task = None self.variables = {} # map, int (vars number) --> Variable object self.initial = {} self.goal = {} self.operators = set([]) self.mutex_groups = [] # list containing mutex groups; each is a list of tuples, each tuple has 2 elements, (var, val) def print_task(self): self.print_variables() print('==============================') self.print_initial() print('==============================') self.print_goal() print('==============================') self.print_operators() def print_operators(self): for o in self.operators: print(o.name) print('PRE') for p in o.prec: var = p[0] val = p[1] print(self.variables[var].get_str(val)) print('EFFECTS') for p in o.effects: var = p[0] val1 = p[1] val2 = p[2] if val1 == -1: print('---------', self.variables[var].get_str(val2)) else: print(self.variables[var].get_str(val1), self.variables[var].get_str(val2)) print('-----------------------') def print_variables(self): for v in self.variables: print(v) self.variables[v].print_me() print('-----------------------') def print_initial(self): for i in self.initial: print(self.variables[i].get_str(self.initial[i])) def print_goal(self): for i in self.goal: print(self.variables[i].get_str(self.goal[i])) def set_domain(self, path_domain): self.domain = path_domain def set_problem(self, path_problem): self.problem = path_problem def generate_file(self, sas_file_name): if self.domain == None or self.problem == None: raise MyError('Domain and/or problem not set!') time_limit = 1000 command = 'python translate/translate.py ' + str(time_limit) + ' ' + self.domain + ' ' + self.problem + ' ' + sas_file_name + ' | grep \"noprint\"' os.system(command) def generate_task(self, sas_file_name): try: f_task = open(sas_file_name, 'r') except: raise MyError('Error opening sas file!') lines = f_task.readlines() lines = self.__process_lines(lines) limits = self.__get_limits(lines) for (init, end) in limits: self.process(lines[init + 1: end], lines[init]) def process(self, lines, title): if 'version' in title: self.process_version(lines) if 'metric' in title: self.process_metric(lines) if 'variable' in title: self.process_variable(lines) if 'mutex_group' in title: self.process_mutex_group(lines) if 'state' in title: self.process_initial_state(lines) if 'goal' in title: self.process_goal(lines) if 'operator' in title: self.process_operator(lines) if 'rule' in title: self.process_rule(lines) def process_version(self, lines): # TODO return None def process_metric(self, lines): # TODO return None def process_variable(self, lines): v = Variable() value = int(v.set_name(lines[0])) rg = int(lines[2]) for i in range(rg): v.add_value(i, lines[2 + i + 1]) self.variables[value] = v def process_mutex_group(self, lines): mutex_g = [] for line in lines[1:]: var = int(line.split(' ')[0]) val = int(line.split(' ')[1]) mutex_g.append((var, val)) self.mutex_groups.append(mutex_g) def process_initial_state(self, lines): for i, line in enumerate(lines): self.initial[i] = int(line) # var, value def process_goal(self, lines): first = True for line in lines: if first: first = False continue var = int(line.split(' ')[0]) value = int(line.split(' ')[1]) self.goal[var] = value def process_operator(self, lines): o = Operator(self.variables) o.set_name(lines[0]) num_prev_cond = int(lines[1]) if num_prev_cond != 0: self.__process_prevail_conditions(lines[2:2 + num_prev_cond], o) line_num_effects = 2 + num_prev_cond num_effects = int(lines[line_num_effects]) if num_effects != 0: self.__process_effects(lines[line_num_effects + 1:line_num_effects + num_effects + 1], o) self.operators.add(o) # o.print_me() def process_rule(self, lines): # TODO return None def __process_effects(self, lines, operator): for line in lines: l_split = line.split(' ') if len(l_split) != 4: raise MyError('Incorrect number of components in effects of an operator!') if l_split[0] != '0': raise MyError('First component of effects != 0!') var = int(l_split[1]) pre = int(l_split[2]) eff = int(l_split[3]) operator.add_prec_eff(var, pre, eff) def __process_prevail_conditions(self, lines, operator): for line in lines: try: var, value = line.split(' ') except: raise MyError('Error processing prevail conditions!') operator.add_precondition(int(var), int(value)) def __get_limits(self, lines): initis = [] ends = [] for i, line in enumerate(lines): if 'begin_' in line: initis.append(i) if 'end_' in line: ends.append(i) if len(initis) != len(ends): raise MyError('Inits and ends of different size!') return zip(initis, ends) def __process_lines(self, lines): p_lines = [] for line in lines: p_lines.append(line.split('\\n')[0]) return p_lines def translate_to_atomic(self): task = MyTask() debug = False print('Setting atoms') task.set_atoms(self.get_atoms(), debug) print('Setting initial') task.set_initial(self.get_initial_atomic(), debug) print('Setting goal') task.set_goal(self.get_goal_atomic(), debug) print('Setting actions') task.set_actions_atomic(self.get_actions_atomic(), debug) print('Setting mutexes') task.set_mutex_groups(self.get_mutex_groups_atomic(), debug) print('Setting relevant actions') task.set_relevant_actions(debug) print('Setting splitting') task.initialize_splitting(debug) start = timer() print('Setting compatible actions') task.create_compatible_actions(debug) print(timer() - start) return task def get_atoms(self): atoms = set([]) for v in self.variables: var = self.variables[v] for val in var.possible_values: atoms.add(generate_atom(var.name, val)) return atoms def get_initial_atomic(self): initial = set([]) for var in self.initial: value = self.initial[var] initial.add(generate_atom(self.variables[var].name, value)) # print initial return initial def get_goal_atomic(self): goal = set([]) for var in self.goal: value = self.goal[var] goal.add(generate_atom(self.variables[var].name, value)) # print goal return goal def get_actions_atomic(self): actions = {} for action in self.operators: act_name = action.name preconditions = set([]) add_list = set([]) del_list = set([]) for var, val in action.prec: preconditions.add(generate_atom(self.variables[var].name, val)) for var, pre, post in action.effects: name = self.variables[var].name if pre != -1: # -1 is for value not important atom_pre = generate_atom(name, pre) preconditions.add(atom_pre) if pre != post: # the var changed --> old value to del list del_list.add(atom_pre) if post != -1: add_list.add(generate_atom(name, post)) # also, delete all other possible values! (if not in prec) if pre == -1: var_values = self.variables[var].possible_values for v in var_values: if v == post: continue atom_del = generate_atom(name, v) del_list.add(atom_del) actions[act_name] = [list(preconditions), list(add_list), list(del_list)] return actions def get_mutex_groups_atomic(self): mutex_groups_atomic = [] for mutex_group in self.mutex_groups: # mutex_group is a list of tuples mg = [] for var, val in mutex_group: name = self.variables[var].name mg.append(generate_atom(name, val)) mutex_groups_atomic.append(mg) return mutex_groups_atomic def get_var_string(self, name): # name = (varX=Y) s = name[1:len(name) - 1] # s = varX=Y var = int(s.split('=')[0].split('var')[1]) val = int(s.split('=')[1]) return self.variables[var].get_str(val) #''' #from parser import Parser # End #------------------------------------","title":"QA_FOND"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QA_FOND/#qa","text":"\u7fa4\u53cb\u95ee\uff1a \u5982\u4f55\u7406\u89e3\u8bed\u4e49\u548c\u8bed\u6cd5\u5462 \u8bed\u4e49\u662f\u8bed\u8a00\u7684\u7279\u6027\u5417 zz \u56de\u7b54\uff1a \u4e00\u4e2a\u8bed\u8a00\u53ea\u6709\u8bed\u4e49\u800c\u6ca1\u6709\u8bed\u6cd5\uff0c\u4f60\u5c31\u65e0\u6cd5\u8fdb\u884c\u8bc1\u660e\uff0c\u800c\u4e00\u4e2a\u8bed\u8a00\u53ea\u6709\u8bed\u6cd5\u800c\u6ca1\u6709\u8bed\u4e49\uff0c\u4f60\u5c31\u65e0\u6cd5\u5224\u65ad\u5bf9\u9519\u3002 \u4ece\u8bed\u6cd5\u7684\u53ef\u63a8\u51fa\uff0c\u5230\u8bed\u4e49\u7684\u6709\u6548\uff0c\u662f\u8c13\u53ef\u9760\u6027\u3002\u4ece\u8bed\u4e49\u7684\u6709\u6548\u5230\u5230\u8bed\u6cd5\u7684\u53ef\u63a8\u51fa\uff0c\u662f\u8c13\u5b8c\u5168\u6027\u4e5f\u3002 \u7b2c\u4e00\u4e2astrong cyclic planning, \u6311\u51fa\u6765\u4e00\u4e9b\u7b97strong planning. \u55ef\u5450\uff0c\u8fd9\u4e2ak\u597d\u50cf\u662f\u6b65\u957f\u4e3a1\uff0c\u4ece1\u5f00\u59cb\uff0c\u524d\u5411\u4e3a\u8d1f\uff08\u56de\u6eaf\u6b65\u957f-1\uff09\uff0c\u540e\u5411\u4e3a\u6b63 k =|S| CNF\u4e0d\u662fa1 \u039b a2 \u039b ...... \u039b an\u8fd9\u79cd\u683c\u5f0f\u5417\uff0c\u5b83\u7684\u7b97\u6cd5\u4e0d\u662f\u8981\u4eceS\u91cc\u9762\u9009\u82e5\u5e72\u4e2a\u72b6\u6001\u53bb\u586b\u5145\u8fd9\u4e2aCNF\u8868\u8fbe\u5f0f\uff0c\u7136\u540e\u8c03\u7528minisat\u53bb\u770b\u662f\u4e0d\u662fsatisfiable\u5417\uff1f\u5bf9\u4e8e\u4e00\u4e2aFOND\u95ee\u9898\uff0c\u5b83\u7684\u72b6\u6001\u6700\u591a\u53ea\u6709|S|\u4e2a\uff0c\u6240\u4ee5\u5f53C(P\uff0ck)\u91cc\u9762\u7684k\u7b49\u4e8e|S|+1\u7684\u65f6\u5019\uff0c\u610f\u5473\u7740\u8be5\u95ee\u9898\u4e0d\u80fd\u89e3 how each high-level fluent can be translated into a low-level formula\uff0c\u8bba\u6587\u4e2d\u4e5f\u51fa\u73b0\u8fc7\u51e0\u6b21fluent\u662f\u5565\u610f\u601d\uff1f Let Q = be a QNP. The number of boolean states for Q is exponential in the number of fluents and variables \u300aknowledge in action\u300b\u4f5c\u8005Raymond Reiter \uff0c\u4e66\u91cc\u5e94\u8be5\u6709\u8fd9\u4e2a\u6982\u5ff5 \u8bb0\u8d77\u6765\u4e86\uff0cfluent\u4f60\u5c31\u5f53\u6210\u662f\u5bf9\u4e00\u4e2a\u539f\u5b50\u53d8\u91cf\u7684\u8d4b\u503c\u3002 \u5728\u72b6\u6001s\u4e0b\uff0c\u53d8\u91cfF\u4e3a\u771f\uff0c\u90a3\u4f60\u5c31\u8ba4\u4e3aF\u662f\u4e00\u4e2afluent\u53ed \u77f3\u5934\u4e16\u754c\uff1a \\(Q_{clear} =\\) < F ,V,I,O,G> F,{H} V,{n(x)} I,{ \\(\\neg H\\) ,n(x)>0} O,{a,b}, a=< \\(\\neg H\\) ,n(x)>0;H,n(x) \\(\\downarrow\\) >, b= \\(\\neg H\\) > G={n(x)=0}","title":"Q&amp;A"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QA_FOND/#minisat","text":"USAGE: ./minisat <input-file> <result-output-file> where the input may be either in plain/gzipped DIMACS format or in BCNF.","title":"minisat"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QA_FOND/#fond-sat","text":"\u6838\u5fc3\u4ee3\u7801 \uff1a cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong) ...... cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver) ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) ...... \u8fd9\u4e2acnf\u7c7b\uff0c\u8f93\u5165\u201c formula-temp.txt\u5199\u6709cnf\u7684\u6587\u4ef6 \u3001 formula-extra-temp.txt\u7a7a\u53ef\u80fd\u8981\u6709\u6253\u5f00\u6761\u4ef6 \uff0c fair, strong\u201d\u53ef\u4ee5\u5b9e\u73b0\u8f6c\u6362\u6210\u4e3a CNF cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong) solver_time = [] for i in range(1000): if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') controllerStates = generateControllerStates(i * params['inc']) print('=================================================') print('Trying with %i states' % len(controllerStates)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) print('# Atoms: %i' % len(my_task.get_atoms())) print('# Actions: %i' % len(my_task.get_actions())) cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) print('SAT formula generation time = %f' % (timer() - start_g)) print('# Clauses = %i' % cnf.getNumberClauses()) print('# Variables = %i' % cnf.getNumberVariables()) if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') print('Creating formula...') name_final = cnf.generateInputSat(name_formula_file) print('Done creating formula. Calling solver...') start_solv = timer() time_for_sat = int(time_limit - (timer() - time_start)) if time_for_sat < time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') \u7136\u540e\u5c31\u662f\u8c03\u7528\u6c42\u89e3\u4e86\u3002 python main.py ../F-domains/islands/domain.pddl ../F-domains/islands/p03.pddl -policy 1 \u53c2\u6570\u5b57\u5178\uff1a # params\u5b57\u5178 {'time_limit': 3600, 'inc': 1, 'path_domain': '../F-domains/islands/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../F-domains/islands/p03.pddl', 'name_temp': 'temp' } \u6240\u4ee5\u53d6\u4ee3\u547d\u4ee4\u884c\u53bb\u53c2\u6570\u7684\u8fd0\u884c\u65b9\u6cd5\u662f\uff1a params={'time_limit': 3600, 'inc': 1, 'path_domain': '../F-domains/islands/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../F-domains/islands/p03.pddl', 'name_temp': 'temp'} python main.py ../F-domains/islands/domain.pddl ../F-domains/islands/p03.pddl -strong 1 -inc 2 -policy 1 \u6700\u540e\u6210\u529f\u8fd0\u884c\u7684\u4f8b\u7a0b\uff1a restarts : 0 conflicts : 0 (-nan /sec) decisions : 0 (-nan /sec) propagations : 191 (inf /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.92 MB CPU time : 0 s UNSATISFIABLE ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 2958 7243 | 986 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 8 (512 /sec) decisions : 10 (640 /sec) propagations : 749 (47936 /sec) conflict literals : 15 (21.05 % deleted) Memory used : 13.92 MB CPU time : 0.015625 s UNSATISFIABLE ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 5128 12958 | 1709 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 27 (inf /sec) decisions : 59 (inf /sec) propagations : 3126 (inf /sec) conflict literals : 111 (24.49 % deleted) Memory used : 14.05 MB CPU time : 0 s SATISFIABLE ('WARNING: variable not Atom nor NegatedAtom;', '<none of those>') main.py\u8fd9\u884c\uff1a >>> my_task = p.translate_to_atomic() \u8f93\u51fa Setting atoms # Atoms: 31 Setting initial Setting goal Setting actions # Actions: 80 Setting other actions (0, '/', 80) Setting action card Setting mutexes Setting relevant actions Setting splitting Setting compatible actions (0, '/', 80) 0.00220704078674 main.py 92 cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong) solver_time = [] for i in range(1000): if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') controllerStates = generateControllerStates(i * params['inc']) print('=================================================') print('Trying with %i states' % len(controllerStates)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) print('# Atoms: %i' % len(my_task.get_atoms())) print('# Actions: %i' % len(my_task.get_actions())) cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) print('SAT formula generation time = %f' % (timer() - start_g)) print('# Clauses = %i' % cnf.getNumberClauses()) print('# Variables = %i' % cnf.getNumberVariables()) if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') print('Creating formula...') name_final = cnf.generateInputSat(name_formula_file) print('Done creating formula. Calling solver...') start_solv = timer() time_for_sat = int(time_limit - (timer() - time_start)) if time_for_sat < time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') command = './minisat %s %s' % (name_formula_file, name_output_satsolver) # command = '/path/to/SATsolver/minisat -mem-lim=%i -cpu-lim=%i %s %s' % (mem_limit, time_for_sat, name_formula_file, name_output_satsolver) print('SAT solver called with %i MB and %i seconds' % (mem_limit, time_for_sat)) os.system(command) end_solv = timer() solver_time.append(end_solv - start_solv) print('Done solver. Round time: %f' % (end_solv - start_solv)) print('Cumulated solver time: %f' % sum(solver_time)) result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) if result is None: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME/MEM') if result: break print('UNSATISFIABLE') ./minisat %s %s' % (name_formula_file, name_output_satsolver\uff09 \u6839\u636eminisat\u7528\u6cd5\uff1a USAGE: ./minisat <input-file> <result-output-file> where the input may be either in plain/gzipped DIMACS format or in BCNF. \u4e5f\u5c31\u662f\u8bf4\u5728\u547d\u4ee4\u884c\u8f93\u5165\uff1a ./minisat formula-temp.txt outsat-temp.txt \u5982\u679c\u5728\u547d\u4ee4\u884c\u8f93\u5165\u5355\u72ec\u8fd0\u884ccnf\u751f\u6210sat\u6c42\u89e3\u7684\u8fc7\u7a0b\u662f\uff1a $ ./minisat test-formula-temp.txt test-outsat-temp.txt ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 5128 12958 | 1709 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 32 (2048 /sec) decisions : 64 (4096 /sec) propagations : 3495 (223680 /sec) conflict literals : 136 (21.84 % deleted) Memory used : 14.05 MB CPU time : 0.015625 s SATISFIABLE \u5bf9\u5e94\u7684\u662fmain.py\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6700\u6700\u6700\u5f00\u59cb\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u5148\u8fd0\u884cminisat\u518d\u51fa\u73b0\u7ed3\u679c\uff0c\u56e0\u4e3aDemo\u9700\u8981\u627e4\u8fc7\u7a0b\u624d\u80fd\u51fa\u7ed3\u679c\uff0c\u6240\u4ee5\u8c03\u75283\u6b21minisat\u5f00\u5934\u51fa\u73b03\u6b21\u8fd9\u6bb5\u4f7f\u7528\u60c5\u51b5\uff0c\u4ee5\u53ca\u524d\u4e24\u6b21test-outsat-temp.txt\u7528python\u8bfb\u53d6\u4e3aresult==None\u4e3a\u7a7a\u8bf4\u660e./minisat\u627e\u4e0d\u5230\u53ef\u6ee1\u8db3\u7684\uff0c\u4e8e\u662fUNSATISFIABLE\uff0c\u77e5\u9053\u7b2c\u4e09\u6b21\u627e\u5230\u4e4b\u540e\u5c31\u662fSATISFIABLE\u53ef\u6ee1\u8db3\u6709\u89e3\u3002 \u5bf9\u5e94\u6574\u4f53\u547d\u4ee4\u884c\u7684\u8f93\u51fa\u4e0b\u9762\u7684\uff1a ================================================= Trying with 2 states Looking for strong plans: False Fair actions: True # Atoms: 31 # Actions: 80 SAT formula generation time = 0.008767 # Clauses = 2877 # Variables = 276 Creating formula... Done creating formula. Calling solver... SAT solver called with 4096 MB and 3599 seconds Done solver. Round time: 0.050868 Cumulated solver time: 0.050868 UNSATISFIABLE ================================================= Trying with 3 states Looking for strong plans: False Fair actions: True # Atoms: 31 # Actions: 80 SAT formula generation time = 0.020353 # Clauses = 4917 # Variables = 450 Creating formula... Done creating formula. Calling solver... SAT solver called with 4096 MB and 3599 seconds Done solver. Round time: 0.022791 Cumulated solver time: 0.073659 UNSATISFIABLE ================================================= Trying with 4 states Looking for strong plans: False Fair actions: True # Atoms: 31 # Actions: 80 SAT formula generation time = 0.030047 # Clauses = 7458 # Variables = 656 Creating formula... Done creating formula. Calling solver... SAT solver called with 4096 MB and 3599 seconds Done solver. Round time: 0.022768 Cumulated solver time: 0.096427 CNF.py\u4e2d\u7684parserOutput\u65b9\u6cd5 def parseOutput(self, nameFile, controllerStates, parser, print_policy = False): sets = [set([]) for i in range(self.num_types)] fres = open(nameFile, 'r') res = fres.readlines() if 'UNSAT' in res[0]: return False if 'INDET' in res[0]: return None if not print_policy: return True res = res[1] res = res.split(' ') for r in res: if '\\n' in res: continue var = int(r) if var > 0: varName = self.mapNumberVariable[var] t = self.mapVariableType[varName] sets[t - 1].add(varName) print('===================\\n===================') print('Controller -- CS = Controller State') for i in range(len(sets)): if i + 1 in self.print_types: s = sets[i] if i == 0: # pair atom controller print('===================\\n===================') print('Atom (CS)') print('___________________') for n in controllerStates: print('----------') for j in s: ind = '(' + n + ')' if ind in j: print('%s %s' % (str(parser.get_var_string(j.split(ind)[0])), str(ind))) elif i == 1: # pair cs action print('===================\\n===================') print('(CS, Action with arguments)') print('___________________') for n in controllerStates: for j in s: if '(' + n + ',' in j: print(j) elif i == 2: # Triplet print('===================\\n===================') print('(CS, Action name, CS)') print('___________________') for n in controllerStates: for j in s: if '(' + n + ',' in j: print(j) else: print('===================') print('(CS, CS)') print('___________________') for j in s: print(j) print('===================') print('Solved with %i states' % len(controllerStates)) return True =================== =================== Controller -- CS = Controller State =================== =================== Atom (CS) ___________________ ---------- Atom person-at(l22-1) (n0) Atom person-alive() (n0) Atom bridge-clear() (n0) ---------- Atom person-at(l21-1) (n1) Atom person-alive() (n1) Atom bridge-clear() (n1) ---------- Atom person-at(l22-2) (n2) Atom person-alive() (n2) ---------- Atom person-at(l21-2) (ng) =================== =================== (CS, Action with arguments) ___________________ (n0,move-person(l22-1,l21-1)) (n0,move-person) (n1,walk-on-bridge(l21-1,l22-2)) (n1,walk-on-bridge) (n2,move-person) (n2,move-person(l22-2,l21-2)) =================== =================== (CS, Action name, CS) ___________________ (n0,move-person,n1) (n1,walk-on-bridge,n2) (n2,move-person,ng) =================== (CS, CS) ___________________ (n2,ng) (n0,n1) (n1,n2) =================== Solved with 4 states main.py 137 print('Elapsed total time (s): %f' % (timer() - time_start)) print('Elapsed solver time (s): %f' % sum(solver_time)) print('Elapsed solver time (s): %s' % str(solver_time)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, 'Done') Elapsed total time (s): 0.354544 Elapsed solver time (s): 0.096427 Elapsed solver time (s): [0.05086803436279297, 0.022791147232055664, 0.022768020629882812] Looking for strong plans: False Fair actions: True Done","title":"FOND-SAT"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QA_FOND/#bugs","text":"from parser import Parser \u65e0\u6cd5\u5bfc\u5165\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\uff0c\u89c2\u5bdf__pycache__\u6ca1\u6709\u5bf9\u5e94.pyc\u5bfc\u5165\u4e0d\u6210\u529f\u4e5f\u53d1\u73b0 \u6682\u65f6low\u70b8\u5929\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u590d\u5236parser.py\u4ee3\u7801\u5230main.py\u6587\u4ef6,\u6210\u529f\u3002","title":"bugs"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QA_FOND/#bug2","text":"Traceback (most recent call last): File \"main.py\", line 432, in <module> result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) File \"C:\\Users\\admin\\Desktop\\hush\\FOND-SAT\\src\\CNF.py\", line 202, in parseOutput fres = open(nameFile, 'r') FileNotFoundError: [Errno 2] No such file or directory: 'outsat-temp.txt' \u89c2\u5bdf\u6e90\u7801 \u6682\u65f6g 430 print('Cumulated solver time: %f' % sum(solver_time)) result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) if result is None: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME/MEM') if result: break print('UNSATISFIABLE') \u56de\u8c03 def parseOutput(self, nameFile, controllerStates, parser, print_policy = False): sets = [set([]) for i in range(self.num_types)] fres = open(nameFile, 'r') res = fres.readlines() FileNotFoundError: [Errno 2] No such file or directory: 'outsat-temp.txt'","title":"bug2"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QA_FOND/#debug","text":"Traceback (most recent call last): File \"translate/translate.py\", line 692, in <module> main() File \"translate/translate.py\", line 678, in main sas_task = pddl_to_sas(task) File \"translate/translate.py\", line 518, in pddl_to_sas groups, mutex_groups, translation_key = fact_groups.compute_groups( File \"/home/tridu33/document/FOND-SAT/src/translate/fact_groups.py\", line 110, in compute_groups groups = invariant_finder.get_groups(task, reachable_action_params) File \"/home/tridu33/document/FOND-SAT/src/translate/invariant_finder.py\", line 134, in get_groups invariants = sorted(find_invariants(task, reachable_action_params)) File \"/home/tridu33/document/FOND-SAT/src/translate/invariant_finder.py\", line 102, in find_invariants start_time = time.clock() AttributeError: module 'time' has no attribute 'clock' Traceback (most recent call last): File \"main.py\", line 92, in generate_task f_task = open(sas_file_name, 'r') FileNotFoundError: [Errno 2] No such file or directory: 'outputtrans-temp.sas' During handling of the above exception, another exception occurred: Traceback (most recent call last): File \"main.py\", line 370, in <module> p.generate_task(name_sas_file) File \"main.py\", line 94, in generate_task raise MyError('Error opening sas file!') __main__.MyError: 'Error opening sas file!' The error occurs because in python 2, there is time.clock() , but in python 3, it has been replaced with time.perf_counter() . \u279c src grep -r time.clock ./ ./translate/invariant_finder.py: start_time = time.clock() ./translate/invariant_finder.py: if time.clock() - start_time > task.INVARIANT_TIME_LIMIT: Linux\u4e0b ./minisat:cannot execute binary file: Exec format error","title":"debug"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QA_FOND/#from-parser-import-parser","text":"#------------------------------------- #from parser import Parser #''' from objs import Variable, Operator def generate_atom(name, val): return '(' + name + '=' + str(val) + ')' class MyError(Exception): def __init__(self, value): self.value = value def __str__(self): return repr(self.value) class Parser: def __init__(self): self.domain = None self.problem = None self.task = None self.variables = {} # map, int (vars number) --> Variable object self.initial = {} self.goal = {} self.operators = set([]) self.mutex_groups = [] # list containing mutex groups; each is a list of tuples, each tuple has 2 elements, (var, val) def print_task(self): self.print_variables() print('==============================') self.print_initial() print('==============================') self.print_goal() print('==============================') self.print_operators() def print_operators(self): for o in self.operators: print(o.name) print('PRE') for p in o.prec: var = p[0] val = p[1] print(self.variables[var].get_str(val)) print('EFFECTS') for p in o.effects: var = p[0] val1 = p[1] val2 = p[2] if val1 == -1: print('---------', self.variables[var].get_str(val2)) else: print(self.variables[var].get_str(val1), self.variables[var].get_str(val2)) print('-----------------------') def print_variables(self): for v in self.variables: print(v) self.variables[v].print_me() print('-----------------------') def print_initial(self): for i in self.initial: print(self.variables[i].get_str(self.initial[i])) def print_goal(self): for i in self.goal: print(self.variables[i].get_str(self.goal[i])) def set_domain(self, path_domain): self.domain = path_domain def set_problem(self, path_problem): self.problem = path_problem def generate_file(self, sas_file_name): if self.domain == None or self.problem == None: raise MyError('Domain and/or problem not set!') time_limit = 1000 command = 'python translate/translate.py ' + str(time_limit) + ' ' + self.domain + ' ' + self.problem + ' ' + sas_file_name + ' | grep \"noprint\"' os.system(command) def generate_task(self, sas_file_name): try: f_task = open(sas_file_name, 'r') except: raise MyError('Error opening sas file!') lines = f_task.readlines() lines = self.__process_lines(lines) limits = self.__get_limits(lines) for (init, end) in limits: self.process(lines[init + 1: end], lines[init]) def process(self, lines, title): if 'version' in title: self.process_version(lines) if 'metric' in title: self.process_metric(lines) if 'variable' in title: self.process_variable(lines) if 'mutex_group' in title: self.process_mutex_group(lines) if 'state' in title: self.process_initial_state(lines) if 'goal' in title: self.process_goal(lines) if 'operator' in title: self.process_operator(lines) if 'rule' in title: self.process_rule(lines) def process_version(self, lines): # TODO return None def process_metric(self, lines): # TODO return None def process_variable(self, lines): v = Variable() value = int(v.set_name(lines[0])) rg = int(lines[2]) for i in range(rg): v.add_value(i, lines[2 + i + 1]) self.variables[value] = v def process_mutex_group(self, lines): mutex_g = [] for line in lines[1:]: var = int(line.split(' ')[0]) val = int(line.split(' ')[1]) mutex_g.append((var, val)) self.mutex_groups.append(mutex_g) def process_initial_state(self, lines): for i, line in enumerate(lines): self.initial[i] = int(line) # var, value def process_goal(self, lines): first = True for line in lines: if first: first = False continue var = int(line.split(' ')[0]) value = int(line.split(' ')[1]) self.goal[var] = value def process_operator(self, lines): o = Operator(self.variables) o.set_name(lines[0]) num_prev_cond = int(lines[1]) if num_prev_cond != 0: self.__process_prevail_conditions(lines[2:2 + num_prev_cond], o) line_num_effects = 2 + num_prev_cond num_effects = int(lines[line_num_effects]) if num_effects != 0: self.__process_effects(lines[line_num_effects + 1:line_num_effects + num_effects + 1], o) self.operators.add(o) # o.print_me() def process_rule(self, lines): # TODO return None def __process_effects(self, lines, operator): for line in lines: l_split = line.split(' ') if len(l_split) != 4: raise MyError('Incorrect number of components in effects of an operator!') if l_split[0] != '0': raise MyError('First component of effects != 0!') var = int(l_split[1]) pre = int(l_split[2]) eff = int(l_split[3]) operator.add_prec_eff(var, pre, eff) def __process_prevail_conditions(self, lines, operator): for line in lines: try: var, value = line.split(' ') except: raise MyError('Error processing prevail conditions!') operator.add_precondition(int(var), int(value)) def __get_limits(self, lines): initis = [] ends = [] for i, line in enumerate(lines): if 'begin_' in line: initis.append(i) if 'end_' in line: ends.append(i) if len(initis) != len(ends): raise MyError('Inits and ends of different size!') return zip(initis, ends) def __process_lines(self, lines): p_lines = [] for line in lines: p_lines.append(line.split('\\n')[0]) return p_lines def translate_to_atomic(self): task = MyTask() debug = False print('Setting atoms') task.set_atoms(self.get_atoms(), debug) print('Setting initial') task.set_initial(self.get_initial_atomic(), debug) print('Setting goal') task.set_goal(self.get_goal_atomic(), debug) print('Setting actions') task.set_actions_atomic(self.get_actions_atomic(), debug) print('Setting mutexes') task.set_mutex_groups(self.get_mutex_groups_atomic(), debug) print('Setting relevant actions') task.set_relevant_actions(debug) print('Setting splitting') task.initialize_splitting(debug) start = timer() print('Setting compatible actions') task.create_compatible_actions(debug) print(timer() - start) return task def get_atoms(self): atoms = set([]) for v in self.variables: var = self.variables[v] for val in var.possible_values: atoms.add(generate_atom(var.name, val)) return atoms def get_initial_atomic(self): initial = set([]) for var in self.initial: value = self.initial[var] initial.add(generate_atom(self.variables[var].name, value)) # print initial return initial def get_goal_atomic(self): goal = set([]) for var in self.goal: value = self.goal[var] goal.add(generate_atom(self.variables[var].name, value)) # print goal return goal def get_actions_atomic(self): actions = {} for action in self.operators: act_name = action.name preconditions = set([]) add_list = set([]) del_list = set([]) for var, val in action.prec: preconditions.add(generate_atom(self.variables[var].name, val)) for var, pre, post in action.effects: name = self.variables[var].name if pre != -1: # -1 is for value not important atom_pre = generate_atom(name, pre) preconditions.add(atom_pre) if pre != post: # the var changed --> old value to del list del_list.add(atom_pre) if post != -1: add_list.add(generate_atom(name, post)) # also, delete all other possible values! (if not in prec) if pre == -1: var_values = self.variables[var].possible_values for v in var_values: if v == post: continue atom_del = generate_atom(name, v) del_list.add(atom_del) actions[act_name] = [list(preconditions), list(add_list), list(del_list)] return actions def get_mutex_groups_atomic(self): mutex_groups_atomic = [] for mutex_group in self.mutex_groups: # mutex_group is a list of tuples mg = [] for var, val in mutex_group: name = self.variables[var].name mg.append(generate_atom(name, val)) mutex_groups_atomic.append(mg) return mutex_groups_atomic def get_var_string(self, name): # name = (varX=Y) s = name[1:len(name) - 1] # s = varX=Y var = int(s.split('=')[0].split('var')[1]) val = int(s.split('=')[1]) return self.variables[var].get_str(val) #''' #from parser import Parser # End #------------------------------------","title":"from parser import Parser"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/","text":"QNP \u9996\u5148qnp2fond \u7136\u540efond-sat FOND\u4e92\u76f8\u8f6c\u6362QNP \\(Q_{clear}\\) Block world \u4e00\u4e2a\u53d8\u91cf \u4e24\u4e2a\u53d8\u91cf Gripper related work QNP \u00b6 groundai.com/project/qualitative-numeric-planning-reductions-and-complexity/1 \u539fqnp\u95ee\u9898Q grid 2 delta(X) 1 delta(Y) 1 2 delta(X) 1 delta(Y) 1 2 delta(X) 0 delta(Y) 0 2 Move-in-row 1 delta(X) 1 1 delta(X) 0 Move-in-column 1 delta(Y) 1 1 delta(Y) 0 \u9996\u5148qnp2fond \u00b6 The translator is invoked using qnp2fond <qnp-file> <counter-capacity> <loop-nesting> <prefix> where the first argument is the name of a .qnp file (see below), the two additional arguments are non-negative integers, typicall small ones such as 0, 1 or 2, and the last argument is the prefix for the generated files (domain and problem files). ./qnp2fond ./grid.qnp 2 2 grid_output \u7136\u540efond-sat \u00b6 usage: main.py [-h] [-time_limit TIME_LIMIT] [-mem_limit MEM_LIMIT] [-name_temp NAME_TEMP] [-strong STRONG] [-inc INC] [-gen_info GEN_INFO] [-policy POLICY] path_domain path_instance python main.py ../F-domains/islands/domain.pddl ../F-domains/islands/p03.pddl -strong 1 -inc 2 -policy 1 \u81ea\u52a8\u5316\u6c42\u89e3\u8fc7\u7a0b\uff1a python main.py ../qnp2fond_examples/grid_output_d.pddl ../qnp2fond_examples/grid_output_p.pddl -strong 1 -inc 2 -policy 1 https://www.groundai.com/project/qualitative-numeric-planning-reductions-and-complexity/ \u57fa\u672c\u4e0a\uff0c\u5171\u4eab\u4e00\u7ec4\u76f8\u540c\u52a8\u4f5c\u548c\u72b6\u6001\u7279\u5f81\u7684\u8ba1\u5212\u5b9e\u4f8b*P\u7684*\u5b9e\u4f8b\u901a\u5e38\u53ef\u4ee5\u8868\u793a\u4e3a\u5355\u4e2aQNP\u95ee\u9898*Q\uff0c*\u5176\u89e3\u51b3\u65b9\u6848\u5c06\u72b6\u6001\u7279\u5f81\u6620\u5c04\u4e3a\u52a8\u4f5c\uff0c\u7136\u540e\u89e3\u51b3Q\u4e2d\u7684\u6240\u6709\u95ee\u9898\uff08Bonet\uff06Geffner\uff0c2018\uff09\u3002 QNP\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u89e3\u51b3\uff08Srivastava\u7b49\uff0c2011\uff09\u3002 \u9996\u5148\uff0c\u5c06QNP Q\u8f6c\u6362\u4e3a\u6807\u51c6\u7684\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u975e\u786e\u5b9a\u6027\uff08FOND\uff09\u95ee\u9898P\uff08Cimatti\uff0cPistore\uff0cRoveri\u548cTraverso\uff0c2003\u5e74\uff09\u3002 \u7136\u540e\uff0c\u6d4b\u8bd5\u7531\u73b0\u6210\u7684FOND\u89c4\u5212\u5668\u83b7\u5f97\u7684P\u7684\u89e3\u662f\u5426**\u7ec8\u6b62**\u3002\u8fd9\u6700\u540e\u4e00\u6b65\u662f\u5fc5\u9700\u7684\uff0c\u56e0\u4e3aFOND\u95ee\u9898P\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u662funfair\uff0c\u4f46\u5728\u6761\u4ef6\u4e0a\u662ffair\uff1a\u5982\u679cX\u7684\u589e\u52a0\u4e0d\u8d85\u8fc7\u6709\u9650\u6570\uff0c\u5219\u6570\u503c\u53d8\u91cfX\u7684\u65e0\u7a77\u5b9a\u6027\u51cf\u91cf\u6700\u7ec8\u4f7f\u8868\u8fbe\u5f0fX = 0\u6210\u7acb\u3002 \uff08Bonet\uff0cDe Giacomo\uff0cGeffner\u548cRubin\uff0c2017\u5e74\uff09\u3002 \u90a3\u4e48\uff0c\u89e3\u51b3P \u5e76\u7ec8\u6b62\u7684\u7b56\u7565\u5c31\u662f\u89e3\u51b3QNP Q \u7684\u7b56\u7565\uff08Srivastava et al\u3002\uff0c2011\uff09\u3002 \u4f46\u662f\uff0c\u9075\u5faa\u8fd9\u79cd\u751f\u6210\u548c\u6d4b\u8bd5\u65b9\u6cd5\u89e3\u51b3QNP\u7684\u8ba1\u7b97\u7f3a\u70b9\u662f\u4e24\u4e2a\u3002 - \u9996\u5148\uff0c\u4fee\u6539FOND\u8ba1\u5212\u8005\u4ee5\u751f\u6210FOND\u95ee\u9898\u7684\u6240\u6709\u89e3\u51b3\u65b9\u6848\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3aFOND\u8ba1\u5212\u4e0d\u662f\u884c\u200b\u200b\u52a8\u5e8f\u5217\u800c\u662f\u95ed\u73af\u7b56\u7565\u3002 - \u5176\u6b21\uff0c\u9700\u8981\u6d4b\u8bd5\u7ec8\u6b62\u7684\u7b56\u7565\u7684\u6570\u91cf\u53ef\u80fd\u975e\u5e38\u5e9e\u5927\uff1aFOND\u72b6\u6001\u7684\u6570\u91cf\u5448\u6307\u6570\u5f62\u5f0f\uff0c\u56e0\u6b64\u53d8\u91cf\u6570\u91cf\u6210\u500d\u589e\u52a0\u3002 \u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u662f\u4e00\u4e2a\u987a\u5e8f\u51b3\u7b56\u95ee\u9898\uff0c\u5728\u8be5\u95ee\u9898\u4e2d\uff0c\u8981\u901a\u8fc7\u4ece\u7ed9\u5b9a\u521d\u59cb\u72b6\u6001\u6267\u884c\u5177\u6709\u786e\u5b9a\u6027\u4f5c\u7528\u7684\u52a8\u4f5c\u6765\u8fbe\u5230\u76ee\u6807\u200b\u200b\u3002\u8fd9\u4e9b\u95ee\u9898\u901a\u5e38\u4ee5\u8bf8\u5982STRIPS\uff08Fikes\u548cNilsson\uff0c1971\uff1b Russell\u548cNorvig\uff0c2002\uff09\u4e4b\u7c7b\u7684\u8ba1\u5212\u8bed\u8a00\u4ee5\u7d27\u51d1\u7684\u5f62\u5f0f\u8868\u8fbe\u3002 \u4e00\u4e2a\uff08\u624e\u6839\u7684\uff09STRIPS\u8ba1\u5212\u95ee\u9898\uff08\u5e26\u6709\u5426\u5b9a\uff09\u662f\u4e00\u4e2a\u5143\u7ec4P = {F\uff0cI\uff0cO\uff0cG\uff09 \uff0c\u5176\u4e2d*F* \u8868\u793a\u4e00\u7ec4\u547d\u9898\u53d8\u91cf\uff0c I \u548c*G* \u662f*F\u7684*\u96c6\u5408\uff0c\u4ee3\u8868\u521d\u59cb\u548c\u76ee\u6807\u60c5\u51b5\uff0c O\u662f\u4e00\u7ec4\u52a8\u4f5ca\uff0c\u5176\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c*\u662f*\u7531F\u5b57\u8bcd\u96c6\u7ed9\u5b9a\u7684Pre\uff08a\uff09\u548c Eff\uff08a\uff09 \u95ee\u9898P = {F\uff0cI\uff0cO\uff0cG\uff09\u7684\u72b6\u6001\u6a21\u578bS\uff08P \uff09\u662f\u5143\u7ec4S\uff08P \uff09= {S\uff0cs\u3007\uff0cAct\uff0cA\uff0cf\uff0cSg \uff09\uff0c \u5176\u4e2dS \u662f\u53ef\u80fd\u7684\u96c6\u5408\u771f\u4f30\u503c\u5728F\u6587\u5b57\uff0c\u79f0\u4e3a\u72b6\u6001\uff0c\u0161 \u3007\u662f\u521d\u59cb\u72b6\u6001\uff0cACT = O\uff0cA\uff08s\uff09\u8868\u793a\u5728\u52a8\u4f5c\uff0c\u5176\u5148\u51b3\u6761\u4ef6\u662f\u5728S\uff0cF\uff08A\uff0cS\uff09\u771f\u8868\u793a\u72b6\u6001s\u7684\u52a8\u4f5c\u7684\u5728GA\u7684\u52a8\u4f5ca in s\u4e4b\u540e\u7684\uff0c\u800cSg\u662f\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u3002\u5047\u8bbe\u95ee\u9898P\u5728s\u3007\u548cf\u5b9a\u4e49\u660e\u786e\u4e14Sg\u4e0d\u4e3a\u7a7a\u7684\u610f\u4e49\u4e0a\u662f\u4e00\u81f4\u7684\u3002 \u7ecf\u5178\u95ee\u9898P\u7684\u89e3\u51b3\u65b9\u6848\u662f\u52a8\u4f5c\u5e8f\u5217 \u7531FOND\u95ee\u9898P = {F\uff0cI\uff0cO\uff0cG\uff09\u786e\u5b9a\u7684\u72b6\u6001\u6a21\u578bS\uff08P\uff09\u662f\u4e00\u4e2a\u5143\u7ec4S\uff08P\uff09= {S\uff0cs\u3007\uff0cAct\uff0cA\uff0cF\uff0cSG\uff09**\u72b6\u6001\u8f6c\u79fb\u51fd\u6570F**\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u5e76\u4e14\u5c06\u52a8\u4f5ca\u548c\u72b6\u6001s\u6620\u5c04\u5230\u53ef\u80fd\u7684\u540e\u7eed\u72b6\u6001\u7684\u975e\u7a7a\u96c6F\uff08a\uff0cs\uff09\u3002\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u4e0d\u786e\u5b9a\u6027\u8f6c\u6362\u51fd\u6570F \u4ee5\u5206\u89e3\u5f62\u5f0f\u7ed9\u51fa\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u884c\u52a8\u4e00\u7531\u591a\u79cd\u6548\u679c\u5236\u6210Eff x | \u2022\u2022\u2022| Eff n\uff08\u53ef\u80fd\u662f\u786e\u5b9a\u7684\uff0c\u5f53n = 1\u65f6\uff09\uff0cF\uff08a\uff0cs\uff09\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u679cs'\u4e3aa\u7684\u6bcf\u4e2a\u4e0d\u786e\u5b9a\u6027\u6548\u5e94\u9009\u62e9\u4e00\u4e2aEffi\u7684\u7ed3\u679c \\(^2\\) \u77f3\u5934\u4e16\u754c\uff1a \\(Q_{clear} =\\) F,{H} V,{n(x)} I,{ \\(\\neg H\\) ,n(x)>0} O,{a,b}, a=< \\(\\neg H\\) ,n(x)>0;H,n(x) \\(\\downarrow\\) >, b= \\(\\neg H\\) > G={n(x)=0} graph LR; \u3000\u3000\u00acH,n>0 -->|a\u52a8\u4f5cn\u2193| H,N\u2193\u4ecd>0; \u3000\u3000H,N\u2193\u4ecd>0 -->|b\u52a8\u4f5c\u00acH|\u00acH,n>0; \u3000\u3000H,N\u2193\u4ecd>0 -->|a\u52a8\u4f5cn\u2193| n=0 ; \\(Q_{nest} =\\) F,{ \\(\\oslash\\) } V,{X,Y} I,{X>0,Y>0;} O,{a,b}, a=\\< X>0,Y=0;X \\(\\downarrow\\) Y \\(\\uparrow\\) >, b=\\ 0; Y \\(\\downarrow\\) > G={X=0} graph LR; \u3000\u3000X>0,Y>0 -->|b\u52a8\u4f5cY\u2193| X>0,Y>0; \u3000\u3000X>0,Y>0 -->|b\u52a8\u4f5cY\u2193| X>0,Y=0; \u3000\u3000X>0,Y=0 -->|a\u52a8\u4f5cX\u2193Y\u2191| X>0,Y>0 ; \u3000\u3000X>0,Y=0 -->|a\u52a8\u4f5cX\u2193Y\u2191| X=0,Y>0 ; \u8981\u4fdd\u8bc1fair\uff0c\u6709\u7684\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5c\u60c5\u51b5\u4e0b\u4e0d\u80fd\u65e0\u9650\u6b7b\u78d5\u4e00\u4e2a\u5faa\u73af\u4e0d\u51fa\u6765\uff0c\u8fd9\u9898\u786e\u5b9a\u6027deterministic\u3002 Y\u5faa\u73afnest loop(strong cyclic solutions/infinite)\uff0cX\u7684\u5355\u8c03\u9012\u51cffinite\u5f52\u96f6\u53ef\u8bc1\u3002 \u5c31\u50cf\u300a\u8303\u7574\u5b66\u300b\u7684\u56fe QNP\u95ee\u9898Q=\\< F,V,I,O,G >\u6839\u636e\u516c\u5f0fDefinition\u76f4\u63a5\u7ffb\u8bd1\u5f97\u5230FOND\u95ee\u9898P= \\(T_D(Q)\\) =\\< F',I',O',G' > F \u2032 = F \u222a {X = 0 : X \u2208 V }, where X = 0 stands for a new propositional symbol pX = 0 and X > 0 stands for \u00acpX = 0, I \u2032 = I but with X = 0 and X > 0 denoting pX = 0 and \u00acpX = 0 O\u2032 = O but with Inc(X) effects replaced by the deterministic propositional effects X > 0, and Dec(X) effects replaced by non-deterministic propositional effects X > 0 | X = 0, G\u2032 = G but with X = 0 and X > 0 denoting pX = 0 and \u00acpX = 0 \u4ece\u8fd9\u4e2a\u56fe\u5f00\u59cb\u51fa\u53d1\uff1a graph LR; \u3000\u3000X>0,Y>0 -->|b\u52a8\u4f5cY\u2193| X>0,Y>0; \u3000\u3000X>0,Y>0 -->|b\u52a8\u4f5cY\u2193| X>0,Y=0; \u3000\u3000X>0,Y=0 -->|a\u52a8\u4f5cX\u2193Y\u2191| X>0,Y>0 ; \u3000\u3000X>0,Y=0 -->|a\u52a8\u4f5cX\u2193Y\u2191| X=0,Y>0 ; \u6b65\u9aa4\uff1a 1. \u6587\u5b57X=0\u548cX>0\u5199\u6210\u6570\u503c\u53d8\u91cfX\u7684eliminated,x=0\u8868\u793a \\(P_X\\) =0,\u800cX>0\u8868\u793a \\(\\neg P_X\\) =0,\u6211\u7406\u89e3\u662f\u975e\u96f6\u5373\u771f\uff0c\u8fd9\u91cc\u5f53\u4f5c\u4e00\u79cd\u6807\u8bc6True\uff0c\u8ba4\u4e3a\u5efa\u6a21\u76ee\u6807\u4ee4\u63a7\u5236\u53d8\u91cfX=0 2. \\(In_c(x)\\) \u4ee3\u8868 \u786e\u5b9a\u6027\u540e\u7eed\u547d\u9898\u6548\u679cX>0,\u6bd4\u5982\u4e0a\u56fe\u52a8\u4f5cb\u7bad\u5934\u540e\u7eed\u90fd\u662fX>0; 3. \\(Dec(x)\\) \u4ee3\u8868 \u786e\u5b9a\u6027\u540e\u7eed\u547d\u9898\u6548\u679c X>0|X=0 ,\u5373 \\(P_X=0 | \\neg P_X=0\\) ,\u8fd8\u662f\u4e0a\u56fe,a\u4e3a\u4f8b\u5b50\u7684\u8bdd\u5c31\u662fa\u7bad\u5934\u6709\u53ef\u80fd\u6307\u5411X>0|X=0; \u91cd\u70b9\u5728\u4e8e\uff1a FOND\u4e5f\u80fd\u5f52\u7ea6\u5230QNP,\u76f8\u540c\u590d\u6742\u6027 Sieve\u7b97\u6cd5 \u5148\u6df1\u5ea6\u4f18\u5148\u627e\u51faSCC\u7ed3\u70b9\u96c6\u5408\uff08\u7b2c\u4e00\u4e2a\u7b2c\u4e8c\u4e2a\uff0c\u51fa\u53d1\u80fd\u904d\u5386\u6240\u6709\u70b9\u56de\u5230\u81ea\u8eab\u7684\u8282\u70b9\uff09 \u7136\u540e\u53bb\u9664SCC\u7ed3\u70b9\u51fa\u53d1,Dec(x)\u7684\u7bad\u5934\uff0cNot increase\u7684\u3002 \u6700\u540e\u5269\u4e0b\u7684\u770b\u662f\u4e0d\u662facyclic\uff0c\u662f\u5219terminate\uff0c\u5426\u5219\u5faa\u73af FOND\u4e92\u76f8\u8f6c\u6362QNP \u00b6 \u8ddf\u7740\u6587\u7ae0\u4ecb\u7ecd\u7684\u8f6c \\(Q_{clear}\\) Block world \u00b6 \u4e00\u4e2a\u53d8\u91cf \u00b6 \u79ef\u6728\u4e16\u754c \u4e24\u4e2a\u53d8\u91cf \u00b6 \u79ef\u6728\u4e16\u754c\u63a5\u9f99\u7248 \u611f\u89c9\u4e0d\u4e00\u5b9a\u6e05\u7406\u5b8cX\u4e0a\u7684n\u4e2a\u79ef\u6728\uff0c\u518d\u8bf7\u5f00y\u4e0a\u7684m\u4e2a\u79ef\u6728\uff0c \u4e5f\u53ef\u80fd\u662f\u5148y\u540ex \u66f4\u53ef\u80fd\u662f\u50cf\u4e0b\u9762\u8fd9\u6837x\uff0cy\u6df7\u5408\u7740\u6765\uff1a Gripper \u00b6 related work \u00b6 QNPs have been introduced as a decidable planning model able to account for plans with loops [ Srivastava, Zilberstein, Immerman, GeffnerSrivastava et al.2011 , Srivastava, Zilberstein, Gupta, Abbeel, RussellSrivastava et al.2015 ]. In addition, by defining the boolean and numerical variables of QNPs as suitable general boolean and numerical features over a given domain, it has been shown that QNPs can be used to express abstract models for generalized planning, in particular when the ground actions change from instance to instance [ Bonet GeffnerBonet Geffner2018 ]. More recently, it has been shown that these QNP abstractions can be learned automatically from a given planning domain and sampled plans [ Bonet, Franc\u00e8s, GeffnerBonet et al.2019 ]. QNPs thus provide a convenient language for a model-based approach for the computation of general plans where such plans are derived from a (QNP) planning model. If the model is sound, the general plans are guaranteed to be correct [ Bonet GeffnerBonet Geffner2018 , Bonet, Franc\u00e8s, GeffnerBonet et al.2019 ]. This is contrast with the more common inductive or learning-based approaches where plans computed to solve a few sampled instances are assumed to generalize to other instances by virtue of the compact form of the plans [ KhardonKhardon1999 , Martin GeffnerMartin Geffner2004 , Fern, Yoon, GivanFern et al.2004 ]. These learning approaches do not construct or solve a suitable abstraction of the problems as expressed by QNPs. Inductive approaches have been used recently to learn general plans in the form of finite-state controllers [ Bonet, Palacios, GeffnerBonet et al.2009 , Hu De GiacomoHu De Giacomo2013 ], finite programs [ Aguas, Celorrio, , JonssonAguas et al.2016 ], and deep neural nets learned in a supervised manner [ Toyer, Trevizan, Thi\u00e9baux, XieToyer et al.2018 , Bueno, de Barros, Mau\u00e1, SannerBueno et al.2019 , Issakkimuthu, Fern, TadepalliIssakkimuthu et al.2018 , Bajpai, Garg, et al.Bajpai et al.2018 ]. A key difference between learning-based and model-based approaches is that the correctness of the latter follows from the soundness of the model. Deep reinforcement learning methods have also been used recently for computing generalized plans with no supervision [ Groshev, Goldstein, Tamar, Srivastava, AbbeelGroshev et al.2018 , Sukhbaatar, Szlam, Synnaeve, Chintala, FergusSukhbaatar et al.2015 ], yet by not using first-order symbolic representations, they have difficulties in dealing with relational domains that involve objects and relations [ Garnelo ShanahanGarnelo Shanahan2019 ]. Forms of generalized planning have also been formulated using first-order logic [ Srivastava, Immerman, ZilbersteinSrivastava et al.2011 , Illanes McIlraithIllanes McIlraith2019 ], and general plans over finite horizons have been derived using first-order regression as well [ Boutilier, Reiter, PriceBoutilier et al.2001 , Wang, Joshi, KhardonWang et al.2008 , Van OtterloVan Otterlo2012 , Sanner BoutilierSanner Boutilier2009 ]. The use of QNPs for expressing (or learning) abstractions for generalized planning problems, combined with the compilation of QNPs into FOND problems, allows us to benefit from the performance of propositional off-the-shelf FOND planners like PRP [ Muise, McIlraith, BeckMuise et al.2012 ], MyND [ Bercher Mattm\u00fcllerBercher Mattm\u00fcller2009 ], or FOND-SAT [ Geffner GeffnerGeffner Geffner2018 ] in order to find policies for generalized planning. QNP planning problems can be easily translated into LTL planning problems with FOND domains, reachability goals, and a particular type of trajectory constraints that can be expressed as compact LTL formula [ Bonet, De Giacomo, Geffner, RubinBonet et al.2017 ]. The trajectory constraints use a fragment of LTL [ PnueliPnueli1977 ] to express the QNP fairness constraints; namely, that for each numerical variable X in a QNP, it is always the case that infinite decrements of X combined with finite increments of X must eventually drive the variable X to 0. As a result, QNP planning can be translated quite efficiently (linear time) into LTL synthesis. The translation, however, is not particularly useful computationally, as QNP planning, like FOND planning, is EXP-Complete, while LTL synthesis is 2EXP-Complete (doubly exponential in time) [ Pnueli RosnerPnueli Rosner1989 ]. In LTL planning, i.e., FOND planning with LTL goals and trajectory constraints, the double exponential growth is in the number of variables that appear in such formulas [ Camacho, Bienvenu, McIlraithCamacho et al.2019 , Aminof, Giacomo, Murano, RubinAminof et al.2019 ]. For the specific type of LTL trajectory constraints that QNPs convey, the general method of bonet:ijcai2017 bonet:ijcai2017 results in an EXPSPACE algorithm for the synthesis of a tree automaton that solves the given QNP (or to determine that such automaton does not exist). Indeed, the method first computes a deterministic parity word (DPW) automaton that accepts the models of an LTL formula that captures the QNP; this automaton may be of doubly exponential size and with an exponential number of priorities for general types of LTL trajectory constraints, but it is \u201conly\u201d of exponential size and with a bounded number of priorities for QNPs. Then, a deterministic parity tree automaton At, that accepts the policies for the QNP and is built from the DPW automaton, must be tested for non-emptiness. The tree automaton At has size that is polynomial in the size of the DPW automaton and with the same number of priorities. The non-emptiness test requires time that is polynomial in the size of At but exponential in the number of priorities. For QNPs, the number of priorities is bounded and thus this method can be implemented in exponential space since the DPW automaton must be explicitly built. Like the reduction from QNPs into FOND problems, this method does not solve the question posed above about the solvability of QNPs by memoryless policies since the automaton At captures all history-based policies for the input QNP, not only memoryless policies.","title":"QNP"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#qnp","text":"groundai.com/project/qualitative-numeric-planning-reductions-and-complexity/1 \u539fqnp\u95ee\u9898Q grid 2 delta(X) 1 delta(Y) 1 2 delta(X) 1 delta(Y) 1 2 delta(X) 0 delta(Y) 0 2 Move-in-row 1 delta(X) 1 1 delta(X) 0 Move-in-column 1 delta(Y) 1 1 delta(Y) 0","title":"QNP"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#qnp2fond","text":"The translator is invoked using qnp2fond <qnp-file> <counter-capacity> <loop-nesting> <prefix> where the first argument is the name of a .qnp file (see below), the two additional arguments are non-negative integers, typicall small ones such as 0, 1 or 2, and the last argument is the prefix for the generated files (domain and problem files). ./qnp2fond ./grid.qnp 2 2 grid_output","title":"\u9996\u5148qnp2fond"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#fond-sat","text":"usage: main.py [-h] [-time_limit TIME_LIMIT] [-mem_limit MEM_LIMIT] [-name_temp NAME_TEMP] [-strong STRONG] [-inc INC] [-gen_info GEN_INFO] [-policy POLICY] path_domain path_instance python main.py ../F-domains/islands/domain.pddl ../F-domains/islands/p03.pddl -strong 1 -inc 2 -policy 1 \u81ea\u52a8\u5316\u6c42\u89e3\u8fc7\u7a0b\uff1a python main.py ../qnp2fond_examples/grid_output_d.pddl ../qnp2fond_examples/grid_output_p.pddl -strong 1 -inc 2 -policy 1 https://www.groundai.com/project/qualitative-numeric-planning-reductions-and-complexity/ \u57fa\u672c\u4e0a\uff0c\u5171\u4eab\u4e00\u7ec4\u76f8\u540c\u52a8\u4f5c\u548c\u72b6\u6001\u7279\u5f81\u7684\u8ba1\u5212\u5b9e\u4f8b*P\u7684*\u5b9e\u4f8b\u901a\u5e38\u53ef\u4ee5\u8868\u793a\u4e3a\u5355\u4e2aQNP\u95ee\u9898*Q\uff0c*\u5176\u89e3\u51b3\u65b9\u6848\u5c06\u72b6\u6001\u7279\u5f81\u6620\u5c04\u4e3a\u52a8\u4f5c\uff0c\u7136\u540e\u89e3\u51b3Q\u4e2d\u7684\u6240\u6709\u95ee\u9898\uff08Bonet\uff06Geffner\uff0c2018\uff09\u3002 QNP\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u89e3\u51b3\uff08Srivastava\u7b49\uff0c2011\uff09\u3002 \u9996\u5148\uff0c\u5c06QNP Q\u8f6c\u6362\u4e3a\u6807\u51c6\u7684\u5b8c\u5168\u53ef\u89c2\u5bdf\u7684\u975e\u786e\u5b9a\u6027\uff08FOND\uff09\u95ee\u9898P\uff08Cimatti\uff0cPistore\uff0cRoveri\u548cTraverso\uff0c2003\u5e74\uff09\u3002 \u7136\u540e\uff0c\u6d4b\u8bd5\u7531\u73b0\u6210\u7684FOND\u89c4\u5212\u5668\u83b7\u5f97\u7684P\u7684\u89e3\u662f\u5426**\u7ec8\u6b62**\u3002\u8fd9\u6700\u540e\u4e00\u6b65\u662f\u5fc5\u9700\u7684\uff0c\u56e0\u4e3aFOND\u95ee\u9898P\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u662funfair\uff0c\u4f46\u5728\u6761\u4ef6\u4e0a\u662ffair\uff1a\u5982\u679cX\u7684\u589e\u52a0\u4e0d\u8d85\u8fc7\u6709\u9650\u6570\uff0c\u5219\u6570\u503c\u53d8\u91cfX\u7684\u65e0\u7a77\u5b9a\u6027\u51cf\u91cf\u6700\u7ec8\u4f7f\u8868\u8fbe\u5f0fX = 0\u6210\u7acb\u3002 \uff08Bonet\uff0cDe Giacomo\uff0cGeffner\u548cRubin\uff0c2017\u5e74\uff09\u3002 \u90a3\u4e48\uff0c\u89e3\u51b3P \u5e76\u7ec8\u6b62\u7684\u7b56\u7565\u5c31\u662f\u89e3\u51b3QNP Q \u7684\u7b56\u7565\uff08Srivastava et al\u3002\uff0c2011\uff09\u3002 \u4f46\u662f\uff0c\u9075\u5faa\u8fd9\u79cd\u751f\u6210\u548c\u6d4b\u8bd5\u65b9\u6cd5\u89e3\u51b3QNP\u7684\u8ba1\u7b97\u7f3a\u70b9\u662f\u4e24\u4e2a\u3002 - \u9996\u5148\uff0c\u4fee\u6539FOND\u8ba1\u5212\u8005\u4ee5\u751f\u6210FOND\u95ee\u9898\u7684\u6240\u6709\u89e3\u51b3\u65b9\u6848\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3aFOND\u8ba1\u5212\u4e0d\u662f\u884c\u200b\u200b\u52a8\u5e8f\u5217\u800c\u662f\u95ed\u73af\u7b56\u7565\u3002 - \u5176\u6b21\uff0c\u9700\u8981\u6d4b\u8bd5\u7ec8\u6b62\u7684\u7b56\u7565\u7684\u6570\u91cf\u53ef\u80fd\u975e\u5e38\u5e9e\u5927\uff1aFOND\u72b6\u6001\u7684\u6570\u91cf\u5448\u6307\u6570\u5f62\u5f0f\uff0c\u56e0\u6b64\u53d8\u91cf\u6570\u91cf\u6210\u500d\u589e\u52a0\u3002 \u7ecf\u5178\u7684\u8ba1\u5212\u95ee\u9898\u662f\u4e00\u4e2a\u987a\u5e8f\u51b3\u7b56\u95ee\u9898\uff0c\u5728\u8be5\u95ee\u9898\u4e2d\uff0c\u8981\u901a\u8fc7\u4ece\u7ed9\u5b9a\u521d\u59cb\u72b6\u6001\u6267\u884c\u5177\u6709\u786e\u5b9a\u6027\u4f5c\u7528\u7684\u52a8\u4f5c\u6765\u8fbe\u5230\u76ee\u6807\u200b\u200b\u3002\u8fd9\u4e9b\u95ee\u9898\u901a\u5e38\u4ee5\u8bf8\u5982STRIPS\uff08Fikes\u548cNilsson\uff0c1971\uff1b Russell\u548cNorvig\uff0c2002\uff09\u4e4b\u7c7b\u7684\u8ba1\u5212\u8bed\u8a00\u4ee5\u7d27\u51d1\u7684\u5f62\u5f0f\u8868\u8fbe\u3002 \u4e00\u4e2a\uff08\u624e\u6839\u7684\uff09STRIPS\u8ba1\u5212\u95ee\u9898\uff08\u5e26\u6709\u5426\u5b9a\uff09\u662f\u4e00\u4e2a\u5143\u7ec4P = {F\uff0cI\uff0cO\uff0cG\uff09 \uff0c\u5176\u4e2d*F* \u8868\u793a\u4e00\u7ec4\u547d\u9898\u53d8\u91cf\uff0c I \u548c*G* \u662f*F\u7684*\u96c6\u5408\uff0c\u4ee3\u8868\u521d\u59cb\u548c\u76ee\u6807\u60c5\u51b5\uff0c O\u662f\u4e00\u7ec4\u52a8\u4f5ca\uff0c\u5176\u524d\u63d0\u6761\u4ef6\u548c\u6548\u679c*\u662f*\u7531F\u5b57\u8bcd\u96c6\u7ed9\u5b9a\u7684Pre\uff08a\uff09\u548c Eff\uff08a\uff09 \u95ee\u9898P = {F\uff0cI\uff0cO\uff0cG\uff09\u7684\u72b6\u6001\u6a21\u578bS\uff08P \uff09\u662f\u5143\u7ec4S\uff08P \uff09= {S\uff0cs\u3007\uff0cAct\uff0cA\uff0cf\uff0cSg \uff09\uff0c \u5176\u4e2dS \u662f\u53ef\u80fd\u7684\u96c6\u5408\u771f\u4f30\u503c\u5728F\u6587\u5b57\uff0c\u79f0\u4e3a\u72b6\u6001\uff0c\u0161 \u3007\u662f\u521d\u59cb\u72b6\u6001\uff0cACT = O\uff0cA\uff08s\uff09\u8868\u793a\u5728\u52a8\u4f5c\uff0c\u5176\u5148\u51b3\u6761\u4ef6\u662f\u5728S\uff0cF\uff08A\uff0cS\uff09\u771f\u8868\u793a\u72b6\u6001s\u7684\u52a8\u4f5c\u7684\u5728GA\u7684\u52a8\u4f5ca in s\u4e4b\u540e\u7684\uff0c\u800cSg\u662f\u76ee\u6807\u72b6\u6001\u7684\u96c6\u5408\u3002\u5047\u8bbe\u95ee\u9898P\u5728s\u3007\u548cf\u5b9a\u4e49\u660e\u786e\u4e14Sg\u4e0d\u4e3a\u7a7a\u7684\u610f\u4e49\u4e0a\u662f\u4e00\u81f4\u7684\u3002 \u7ecf\u5178\u95ee\u9898P\u7684\u89e3\u51b3\u65b9\u6848\u662f\u52a8\u4f5c\u5e8f\u5217 \u7531FOND\u95ee\u9898P = {F\uff0cI\uff0cO\uff0cG\uff09\u786e\u5b9a\u7684\u72b6\u6001\u6a21\u578bS\uff08P\uff09\u662f\u4e00\u4e2a\u5143\u7ec4S\uff08P\uff09= {S\uff0cs\u3007\uff0cAct\uff0cA\uff0cF\uff0cSG\uff09**\u72b6\u6001\u8f6c\u79fb\u51fd\u6570F**\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u5e76\u4e14\u5c06\u52a8\u4f5ca\u548c\u72b6\u6001s\u6620\u5c04\u5230\u53ef\u80fd\u7684\u540e\u7eed\u72b6\u6001\u7684\u975e\u7a7a\u96c6F\uff08a\uff0cs\uff09\u3002\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u4e0d\u786e\u5b9a\u6027\u8f6c\u6362\u51fd\u6570F \u4ee5\u5206\u89e3\u5f62\u5f0f\u7ed9\u51fa\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u884c\u52a8\u4e00\u7531\u591a\u79cd\u6548\u679c\u5236\u6210Eff x | \u2022\u2022\u2022| Eff n\uff08\u53ef\u80fd\u662f\u786e\u5b9a\u7684\uff0c\u5f53n = 1\u65f6\uff09\uff0cF\uff08a\uff0cs\uff09\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u679cs'\u4e3aa\u7684\u6bcf\u4e2a\u4e0d\u786e\u5b9a\u6027\u6548\u5e94\u9009\u62e9\u4e00\u4e2aEffi\u7684\u7ed3\u679c \\(^2\\) \u77f3\u5934\u4e16\u754c\uff1a \\(Q_{clear} =\\) F,{H} V,{n(x)} I,{ \\(\\neg H\\) ,n(x)>0} O,{a,b}, a=< \\(\\neg H\\) ,n(x)>0;H,n(x) \\(\\downarrow\\) >, b= \\(\\neg H\\) > G={n(x)=0} graph LR; \u3000\u3000\u00acH,n>0 -->|a\u52a8\u4f5cn\u2193| H,N\u2193\u4ecd>0; \u3000\u3000H,N\u2193\u4ecd>0 -->|b\u52a8\u4f5c\u00acH|\u00acH,n>0; \u3000\u3000H,N\u2193\u4ecd>0 -->|a\u52a8\u4f5cn\u2193| n=0 ; \\(Q_{nest} =\\) F,{ \\(\\oslash\\) } V,{X,Y} I,{X>0,Y>0;} O,{a,b}, a=\\< X>0,Y=0;X \\(\\downarrow\\) Y \\(\\uparrow\\) >, b=\\ 0; Y \\(\\downarrow\\) > G={X=0} graph LR; \u3000\u3000X>0,Y>0 -->|b\u52a8\u4f5cY\u2193| X>0,Y>0; \u3000\u3000X>0,Y>0 -->|b\u52a8\u4f5cY\u2193| X>0,Y=0; \u3000\u3000X>0,Y=0 -->|a\u52a8\u4f5cX\u2193Y\u2191| X>0,Y>0 ; \u3000\u3000X>0,Y=0 -->|a\u52a8\u4f5cX\u2193Y\u2191| X=0,Y>0 ; \u8981\u4fdd\u8bc1fair\uff0c\u6709\u7684\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5c\u60c5\u51b5\u4e0b\u4e0d\u80fd\u65e0\u9650\u6b7b\u78d5\u4e00\u4e2a\u5faa\u73af\u4e0d\u51fa\u6765\uff0c\u8fd9\u9898\u786e\u5b9a\u6027deterministic\u3002 Y\u5faa\u73afnest loop(strong cyclic solutions/infinite)\uff0cX\u7684\u5355\u8c03\u9012\u51cffinite\u5f52\u96f6\u53ef\u8bc1\u3002 \u5c31\u50cf\u300a\u8303\u7574\u5b66\u300b\u7684\u56fe QNP\u95ee\u9898Q=\\< F,V,I,O,G >\u6839\u636e\u516c\u5f0fDefinition\u76f4\u63a5\u7ffb\u8bd1\u5f97\u5230FOND\u95ee\u9898P= \\(T_D(Q)\\) =\\< F',I',O',G' > F \u2032 = F \u222a {X = 0 : X \u2208 V }, where X = 0 stands for a new propositional symbol pX = 0 and X > 0 stands for \u00acpX = 0, I \u2032 = I but with X = 0 and X > 0 denoting pX = 0 and \u00acpX = 0 O\u2032 = O but with Inc(X) effects replaced by the deterministic propositional effects X > 0, and Dec(X) effects replaced by non-deterministic propositional effects X > 0 | X = 0, G\u2032 = G but with X = 0 and X > 0 denoting pX = 0 and \u00acpX = 0 \u4ece\u8fd9\u4e2a\u56fe\u5f00\u59cb\u51fa\u53d1\uff1a graph LR; \u3000\u3000X>0,Y>0 -->|b\u52a8\u4f5cY\u2193| X>0,Y>0; \u3000\u3000X>0,Y>0 -->|b\u52a8\u4f5cY\u2193| X>0,Y=0; \u3000\u3000X>0,Y=0 -->|a\u52a8\u4f5cX\u2193Y\u2191| X>0,Y>0 ; \u3000\u3000X>0,Y=0 -->|a\u52a8\u4f5cX\u2193Y\u2191| X=0,Y>0 ; \u6b65\u9aa4\uff1a 1. \u6587\u5b57X=0\u548cX>0\u5199\u6210\u6570\u503c\u53d8\u91cfX\u7684eliminated,x=0\u8868\u793a \\(P_X\\) =0,\u800cX>0\u8868\u793a \\(\\neg P_X\\) =0,\u6211\u7406\u89e3\u662f\u975e\u96f6\u5373\u771f\uff0c\u8fd9\u91cc\u5f53\u4f5c\u4e00\u79cd\u6807\u8bc6True\uff0c\u8ba4\u4e3a\u5efa\u6a21\u76ee\u6807\u4ee4\u63a7\u5236\u53d8\u91cfX=0 2. \\(In_c(x)\\) \u4ee3\u8868 \u786e\u5b9a\u6027\u540e\u7eed\u547d\u9898\u6548\u679cX>0,\u6bd4\u5982\u4e0a\u56fe\u52a8\u4f5cb\u7bad\u5934\u540e\u7eed\u90fd\u662fX>0; 3. \\(Dec(x)\\) \u4ee3\u8868 \u786e\u5b9a\u6027\u540e\u7eed\u547d\u9898\u6548\u679c X>0|X=0 ,\u5373 \\(P_X=0 | \\neg P_X=0\\) ,\u8fd8\u662f\u4e0a\u56fe,a\u4e3a\u4f8b\u5b50\u7684\u8bdd\u5c31\u662fa\u7bad\u5934\u6709\u53ef\u80fd\u6307\u5411X>0|X=0; \u91cd\u70b9\u5728\u4e8e\uff1a FOND\u4e5f\u80fd\u5f52\u7ea6\u5230QNP,\u76f8\u540c\u590d\u6742\u6027 Sieve\u7b97\u6cd5 \u5148\u6df1\u5ea6\u4f18\u5148\u627e\u51faSCC\u7ed3\u70b9\u96c6\u5408\uff08\u7b2c\u4e00\u4e2a\u7b2c\u4e8c\u4e2a\uff0c\u51fa\u53d1\u80fd\u904d\u5386\u6240\u6709\u70b9\u56de\u5230\u81ea\u8eab\u7684\u8282\u70b9\uff09 \u7136\u540e\u53bb\u9664SCC\u7ed3\u70b9\u51fa\u53d1,Dec(x)\u7684\u7bad\u5934\uff0cNot increase\u7684\u3002 \u6700\u540e\u5269\u4e0b\u7684\u770b\u662f\u4e0d\u662facyclic\uff0c\u662f\u5219terminate\uff0c\u5426\u5219\u5faa\u73af","title":"\u7136\u540efond-sat"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#fondqnp","text":"\u8ddf\u7740\u6587\u7ae0\u4ecb\u7ecd\u7684\u8f6c","title":"FOND\u4e92\u76f8\u8f6c\u6362QNP"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#q_clear-block-world","text":"","title":"\\(Q_{clear}\\) Block world"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#_1","text":"\u79ef\u6728\u4e16\u754c","title":"\u4e00\u4e2a\u53d8\u91cf"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#_2","text":"\u79ef\u6728\u4e16\u754c\u63a5\u9f99\u7248 \u611f\u89c9\u4e0d\u4e00\u5b9a\u6e05\u7406\u5b8cX\u4e0a\u7684n\u4e2a\u79ef\u6728\uff0c\u518d\u8bf7\u5f00y\u4e0a\u7684m\u4e2a\u79ef\u6728\uff0c \u4e5f\u53ef\u80fd\u662f\u5148y\u540ex \u66f4\u53ef\u80fd\u662f\u50cf\u4e0b\u9762\u8fd9\u6837x\uff0cy\u6df7\u5408\u7740\u6765\uff1a","title":"\u4e24\u4e2a\u53d8\u91cf"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#gripper","text":"","title":"Gripper"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP/#related-work","text":"QNPs have been introduced as a decidable planning model able to account for plans with loops [ Srivastava, Zilberstein, Immerman, GeffnerSrivastava et al.2011 , Srivastava, Zilberstein, Gupta, Abbeel, RussellSrivastava et al.2015 ]. In addition, by defining the boolean and numerical variables of QNPs as suitable general boolean and numerical features over a given domain, it has been shown that QNPs can be used to express abstract models for generalized planning, in particular when the ground actions change from instance to instance [ Bonet GeffnerBonet Geffner2018 ]. More recently, it has been shown that these QNP abstractions can be learned automatically from a given planning domain and sampled plans [ Bonet, Franc\u00e8s, GeffnerBonet et al.2019 ]. QNPs thus provide a convenient language for a model-based approach for the computation of general plans where such plans are derived from a (QNP) planning model. If the model is sound, the general plans are guaranteed to be correct [ Bonet GeffnerBonet Geffner2018 , Bonet, Franc\u00e8s, GeffnerBonet et al.2019 ]. This is contrast with the more common inductive or learning-based approaches where plans computed to solve a few sampled instances are assumed to generalize to other instances by virtue of the compact form of the plans [ KhardonKhardon1999 , Martin GeffnerMartin Geffner2004 , Fern, Yoon, GivanFern et al.2004 ]. These learning approaches do not construct or solve a suitable abstraction of the problems as expressed by QNPs. Inductive approaches have been used recently to learn general plans in the form of finite-state controllers [ Bonet, Palacios, GeffnerBonet et al.2009 , Hu De GiacomoHu De Giacomo2013 ], finite programs [ Aguas, Celorrio, , JonssonAguas et al.2016 ], and deep neural nets learned in a supervised manner [ Toyer, Trevizan, Thi\u00e9baux, XieToyer et al.2018 , Bueno, de Barros, Mau\u00e1, SannerBueno et al.2019 , Issakkimuthu, Fern, TadepalliIssakkimuthu et al.2018 , Bajpai, Garg, et al.Bajpai et al.2018 ]. A key difference between learning-based and model-based approaches is that the correctness of the latter follows from the soundness of the model. Deep reinforcement learning methods have also been used recently for computing generalized plans with no supervision [ Groshev, Goldstein, Tamar, Srivastava, AbbeelGroshev et al.2018 , Sukhbaatar, Szlam, Synnaeve, Chintala, FergusSukhbaatar et al.2015 ], yet by not using first-order symbolic representations, they have difficulties in dealing with relational domains that involve objects and relations [ Garnelo ShanahanGarnelo Shanahan2019 ]. Forms of generalized planning have also been formulated using first-order logic [ Srivastava, Immerman, ZilbersteinSrivastava et al.2011 , Illanes McIlraithIllanes McIlraith2019 ], and general plans over finite horizons have been derived using first-order regression as well [ Boutilier, Reiter, PriceBoutilier et al.2001 , Wang, Joshi, KhardonWang et al.2008 , Van OtterloVan Otterlo2012 , Sanner BoutilierSanner Boutilier2009 ]. The use of QNPs for expressing (or learning) abstractions for generalized planning problems, combined with the compilation of QNPs into FOND problems, allows us to benefit from the performance of propositional off-the-shelf FOND planners like PRP [ Muise, McIlraith, BeckMuise et al.2012 ], MyND [ Bercher Mattm\u00fcllerBercher Mattm\u00fcller2009 ], or FOND-SAT [ Geffner GeffnerGeffner Geffner2018 ] in order to find policies for generalized planning. QNP planning problems can be easily translated into LTL planning problems with FOND domains, reachability goals, and a particular type of trajectory constraints that can be expressed as compact LTL formula [ Bonet, De Giacomo, Geffner, RubinBonet et al.2017 ]. The trajectory constraints use a fragment of LTL [ PnueliPnueli1977 ] to express the QNP fairness constraints; namely, that for each numerical variable X in a QNP, it is always the case that infinite decrements of X combined with finite increments of X must eventually drive the variable X to 0. As a result, QNP planning can be translated quite efficiently (linear time) into LTL synthesis. The translation, however, is not particularly useful computationally, as QNP planning, like FOND planning, is EXP-Complete, while LTL synthesis is 2EXP-Complete (doubly exponential in time) [ Pnueli RosnerPnueli Rosner1989 ]. In LTL planning, i.e., FOND planning with LTL goals and trajectory constraints, the double exponential growth is in the number of variables that appear in such formulas [ Camacho, Bienvenu, McIlraithCamacho et al.2019 , Aminof, Giacomo, Murano, RubinAminof et al.2019 ]. For the specific type of LTL trajectory constraints that QNPs convey, the general method of bonet:ijcai2017 bonet:ijcai2017 results in an EXPSPACE algorithm for the synthesis of a tree automaton that solves the given QNP (or to determine that such automaton does not exist). Indeed, the method first computes a deterministic parity word (DPW) automaton that accepts the models of an LTL formula that captures the QNP; this automaton may be of doubly exponential size and with an exponential number of priorities for general types of LTL trajectory constraints, but it is \u201conly\u201d of exponential size and with a bounded number of priorities for QNPs. Then, a deterministic parity tree automaton At, that accepts the policies for the QNP and is built from the DPW automaton, must be tested for non-emptiness. The tree automaton At has size that is polynomial in the size of the DPW automaton and with the same number of priorities. The non-emptiness test requires time that is polynomial in the size of At but exponential in the number of priorities. For QNPs, the number of priorities is bounded and thus this method can be implemented in exponential space since the DPW automaton must be explicitly built. Like the reduction from QNPs into FOND problems, this method does not solve the question posed above about the solvability of QNPs by memoryless policies since the automaton At captures all history-based policies for the input QNP, not only memoryless policies.","title":"related work"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/","text":"\u4e24\u4e2a\u53d8\u91cf Gripper QNP2SAT \u8bd5\u8bd5\u7f16\u7801\u7b26\u53f7\u5316\u6c42\u89e3 \u72b6\u6001states \u8f93\u5165--\u56fe\u89e3\u533a\u522b\u5728\u4e8e\u72b6\u6001\u6570\u91cf \u679a\u4e3e\u57fa\u7840\u539f\u5b50\u547d\u9898 \u5b50\u53e5\u751f\u6210\u89c4\u5219 SAT\u627e\u51fa\u5bf9\u5e94\u7684\u6570\u636e\u7f16\u7801\u7a7a\u95f4\u5185\u54ea\u4e9b\u201c\u539f\u5b50\u547d\u9898\u4e3a\u771f\uff1f\u201d \u91cd\u70b9\u662f\u4ee3\u7801\u600e\u4e48\u5199\uff1f \u4e24\u4e2a\u53d8\u91cf \u00b6 \u79ef\u6728\u4e16\u754c\u63a5\u9f99\u7248 \u611f\u89c9\u4e0d\u4e00\u5b9a\u6e05\u7406\u5b8cX\u4e0a\u7684n\u4e2a\u79ef\u6728\uff0c\u518d\u8bf7\u5f00y\u4e0a\u7684m\u4e2a\u79ef\u6728\uff0c \u4e5f\u53ef\u80fd\u662f\u5148y\u540ex \u66f4\u53ef\u80fd\u662f\u50cf\u4e0b\u9762\u8fd9\u6837x\uff0cy\u6df7\u5408\u7740\u6765\uff1a Gripper \u00b6 QNP2SAT \u00b6 \u8bd5\u8bd5\u7f16\u7801\u7b26\u53f7\u5316\u6c42\u89e3 \u00b6 \u6574\u4f53\u7684\u60f3\u6cd5\u662f: \u5148\u679a\u4e3e\u7a7a\u95f4\u5185\u7684\u539f\u5b50\u547d\u9898F+\u6570\u503c\u53d8\u91cfV\uff0c \u884d\u751f\u5b50\u53e5cnf \u6c42\u53d6sat\uff0c\u627e\u5230\u4e3a\u771f\u7684\u90a3\u4e9b \u539f\u5b50\u547d\u9898F+\u6570\u503c\u53d8\u91cfV \u7136\u540e\u6311\u90a3\u4e9b\u771f\u7684\u72b6\u6001\u5b50\u53e5\u6253\u5370\u51fa\u6765\u5c31\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u6b65\u9aa4 \u7b80\u5355\u6765\u8bf4\u5c31\u662f \u6240\u6709actions\u4e2d\u7684\u72b6\u6001\u90fd\u679a\u4e3e\u5582\u8fdb\u53bb\u751f\u6210\u201c\u539f\u5b50\u547d\u9898Variables\u4eec\u201d\uff0c action\u4e2d\u7f3a\u7701\u503c\u5168\u90e8\u5f53\u4f5c\u53d8\u91cf\uff0c\u4e24\u4e2a\u72b6\u6001\u5fc5\u987b\u6709\u7684s0\u548csG. 2 states\u641c\u7d22\u7684\u65f6\u5019\uff1as0,sG\u7ec4\u5408\u8fdb\u53bb\u6240\u6709actions\u4e2d\u7f3a\u7701\u503c\uff0c\u5f97\u5230Variables\u3002 \u540c\u7406\uff0c3 states\u8d70\u4e09\u6b65\u7684\u65f6\u5019\uff0cs0,sGs1\u7ec4\u5408\u8fdb\u53bb\u6240\u6709actions\u4e2d\u7f3a\u7701\u503c\uff0c\u5f97\u5230Variables\u3002 \u7136\u540e\u751f\u6210\u9700\u8981\u540c\u65f6\u6ee1\u8db3\u7684clause\u5b50\u53e5\u7684\u5408\u53d6cnf \u5047\u8bbe\u5230\u5e95\u7684\u5b50\u53e5\u4e3a\u771f\uff0c\u7528Actions\u5f62\u5f0f\u5316\u7684\u7b26\u53f7\u516c\u5f0f\u6765\u6f14\u7b97\uff0c\u751f\u6210\u201c\u5047\u5982\u80fd\u5230\u8fbe\u76ee\u6807\uff0c\u90a3\u4e48\u54ea\u4e9b\u53e5\u5b50\u662f\u771f\u7684\u201d\u7684Clauses\u5b50\u53e5\uff0c\u7136\u540e\u5199\u6210\u5408\u53d6\u5f0fcnf cnf\u5582\u8fdb\u53bbminisat\u5f97\u5230\u53ef\u6ee1\u8db3\u7684\u53d6\u503c\u4e3a\u771f\u7684\u539f\u5b50\u547d\u9898,\"\u503c-\u516c\u5f0f\u6620\u5c04\u8868\"\u7ffb\u8bd1\u56de\u6765\u516c\u5f0f\u5e8f\u5217\u5f97\u5230\u4e00\u4e2a\u89e3\uff0c\u5982\u679ccnf\u6dfb\u52a0\u4e0a\u4e00\u6761\u516c\u5f0f\u4e3a\u5047\u7136\u540eminsat\u5faa\u73af\u5f97\u5230\u591a\u4e2a\u89e3\u3002 \u72b6\u6001states \u00b6 If we use the notation s[X = 0] to refer to s[X] = 0, then \u03c0(s) must depend solely on the truth-valuation over the F-literals p and the V -literals X = 0 that are determined by the state s. There is indeed a \ufb01nite number of such truth valuations but an in\ufb01nite number of states. We refer to such truth valuations as the boolean states of the QNP and denote the boolean state associated with a state s as \\(\\overline{s}\\) . \\(\\overline{s}\\) \u4ee3\u8868\u72b6\u6001,F\u539f\u5b50\u547d\u9898(101...01)+V(x,y,z), \u611f\u89c9\u56fe\u4e2dx>0\u5b9e\u9645\u4e0a\u5e94\u8be5\u6709x \u5c31\u7b97\u539f\u5b50\u547d\u9898\u76f8\u540c\uff0c\u4e5f\u662f\u4e0d\u540c\u7684\u3002 n0\u3001n1\u3001...\u3001n_inf\u6b65\u8fdb\u884c\uff0c\u7136\u540e S\u7528(F\u5e03\u5c14\u72b6\u6001\uff0cV\u6570\u503c)\u6765\u8868\u793a (S,b_i) (S,b_i,s') ? ReachI(s_i) ?ReachG(S_i,j) \u8f93\u5165--\u56fe\u89e3\u533a\u522b\u5728\u4e8e\u72b6\u6001\u6570\u91cf \u00b6 repeat((repeat if ~ do \u5185\u5c42\u5faa\u73af...)if ~\u5224\u65ad\u7ed3\u675f\u7684\u6761\u4ef6 do \u5916\u5c42\u5faa\u73af...) \u5bf9\u6bd4\u56fe\u89e3QNP\u7684\u65b9\u6cd5\u4e2d\uff0c\u5176\u4e2d\u7684n>0,n=0\u53ef\u4ee5\u770b\u4f5c\u5355\u7eaf\u7684\u6587\u5b57\u547d\u9898\uff0c\u4ee3\u8868\u7684\u610f\u4e49\u662f\u975e\u96f6\u548c\u96f6\uff0c\u540c\u65f6\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5c\u4e0d\u9700\u8981\u4f20\u9012 if(n==1)\u8d70\u54ea\u6761\u8def\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8d70\u90a3\u6761\u8def\u9ed8\u8ba4\u8ba9\u7528\u6237\u6839\u636e\u8f93\u51fa\u6765\u81ea\u884c\u5224\u65ad\uff0c\u751a\u81f3n=n-1\u6267\u884c\u591a\u5c11\u6b21\u6211\u4e5f\u4e0d\u5173\u5fc3. \u56e0\u4e3a\u7ed3\u679c\u51fa\u6765\u7528\u6237\u201c\u81ea\u5df1\u5224\u65ad\u5230\u5e95\u4ec0\u4e48\u65f6\u5019\u5230n=1\u4e34\u754c\u6570\u503c\u6807\u8bc6\u72b6\u6001\u201d\u5f00\u59cb\u8d70\u975e\u5faa\u73af\u7684\u90a3\u6761\u8def\u5f84\uff08\u4e3b\u8981\u662f\u56e0\u4e3a\u201c\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7b49\u6548\u56fe\u5b9e\u73b0\u7684\u8fd9\u4e2a\u529f\u80fd\") \u5728\u8fd9\u4e2aQNP2SAT\u65b9\u6cd5\u4e2d\uff0c\u8fde n,n-1,n-2,...,2,1 \u90fd\u8981\u5206\u4e0d\u540c\u72b6\u6001\u6765\u4e00\u4ee5\u533a\u5206\uff0c \u8fd8\u6709\u4e00\u4e2a\u533a\u522b\u662f\uff1a\u6bcf\u4e2a\u52a8\u4f5c\u524d\u63d0\u8981\u8f93\u5165**\u5224\u65ad\u6761\u4ef6** S16 \u2192|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u8fd9\u4e2a\u52a8\u4f5c\u4e3a\u4f8b\uff1a {n=1}^S16 --> S2^{n=n-1};#QNP2SAT\u8981\u5199\u6210\u8fd9\u6837\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5f88\u5f31\u667a\u7684\u95ee\u9898\uff0c\u4f46\u662fn\u6bd4\u8f83\u5927\uff0c\u590d\u6742\u5ea6\u589e\u52a0\u4e5f\u4f1a\u5f88\u5927\uff0c\u8fd9\u662f\u56e0\u4e3a\u65b9\u6cd5\u4e0d\u597d\u3002 QNP-SAT\u65b9\u6cd5\u6ca1\u6709\u901a\u8fc7**\u5f3a\u8fde\u901a\u89c4\u7ea6n>0 v.s n=0\u72b6\u6001**\uff0c\u800c\u9700\u8981\u679a\u4e3e\u51fan,n-1,...,3,2,1\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u4f20action\u53c2\u6570\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad E,X,D#\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u7b26\u53f7\uff0cF\u8bfb\u53d6\u540e\uff0c\u81ea\u52a8\u91cd\u547d\u540d\u5b58\u6210\u5e03\u5c14\u547d\u9898f1,f2,f3---1\uff1b\u975ef1,-f2,-f3---0 n,m#\u5efa\u8bae\u4f7f\u7528v1,v2,v3,...\u547d\u540d\u3002\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u7b26\u53f7\uff0cV\u8bfb\u53d6\u540e\uff0c\u7a0b\u5e8f\u81ea\u52a8\u91cd\u547d\u540d\u5b58\u6210v1,v2.\u7ea6\u5b9av1>0,v2>0\u53d6\u503c0\uff1bv1=0,v2=0\u53d6\u503c1\uff1b E,-S,-D,n>0,m>0#\u521d\u59cbI\uff0c\u7a0b\u5e8f\u5148\u66ff\u6362\u4e3a10000B=16D,\u53ea\u9700\u8981\u5b58\u4e00\u4e2aInterger\u8868\u793aS_0 E,-S,D,n=0,m>0#\u521d\u59cbG\uff0c\u7a0b\u5e8f\u5148\u66ff\u6362\u4e3a10110B=22D,\u53ea\u9700\u8981\u5b58\u4e00\u4e2aInterger\u8868\u793aS_G a1:#action 1:Pick-above-x\u6361\u8d77\u6765x\u4e0a\u65b9\u79ef\u6728: \u3000\u3000if(n>1^m>1)(E,-X,-D,n>0,m>0), (-E,-X,-D,n>0,m>0);#\u4ee3\u7801\u4e2d\u5e94\u8be5\u5b58\u6210\u547d\u540da1\u7684\u4e8c\u7ef4\u77e9\u9635\uff1f\u6216\u8005\u4e00\u7ef4\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\u662f\u5143\u7ec4(S16,S0)\u4e0b\u540c\uff0c\u5199\u6210\u8fd9\u6837 if(n==1)S16(E,-X,-D,n>0,m>0), S2(-E,-X,-D,n=0,m>0) ;#(S,S) \u3000\u3000if(n>1)S17(E,-X,-D,n>0,m=0), S1(-E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000if(n==1)S17(E,-X,-D,n>0,m=0), S3(-E,-X,-D,n=0,m=0);#(S,S) a2\uff1a#Pick-above-y\u6361\u8d77\u6765y\u4e0a\u65b9\u79ef\u6728: \u3000\u3000if(n>1^m>1)S16(E,-X,-D,n>0,m>0), S0(-E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000if(m>1)S18(E,-X,-D,n=0,m>0),S2(-E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000if(m==1)S18(E,-X,-D,n=0,m>0) , S3(-E,-X,-D,n=0,m=0);#(S,S) \u3000\u3000if(m==1)S16(E,-X,-D,n>0,m>0) ,S1(-E,-X,-D,n>0,m=0) ;#(S,S) a3\uff1a#put-aside\u79ef\u6728(\u4e0d\u5305\u62ecx\uff0c\u624b\u6301x\u653e\u4e00\u8fb9\u53eb\u505aput-x-aside\u662f\u4e0b\u9762\u8ba8\u8bba\u7684\u4e00\u4e2a\u52a8\u4f5c)\u653e\u4e00\u8fb9\u5230\u684c\u9762Table #\u5305\u62ec\u8fd9\u4e2a Putaside-1 = h\u00acE,\u00acX,\u00acD,n=0;Ei to put aside (not above x or y) the block being held, # \u4e5f\u5305\u62ec\u8fd9\u4e2a Putaside-2 = h\u00acE,\u00acX,\u00acD,n>0,m>0;Ei to put aside (not above x or y) the block being held, \u3000\u3000S0(-E,-X,-D,n>0,m>0) ,S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0),S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) , S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) , S19(E,-X,-D,n=0,m=0);#(S,S) #\u8fd9\u91cc\u9700\u8981\u63d0\u4e00\u70b9\uff1a\u5141\u8bb8_\u7f3a\u7701\u9879 #\u6bd4\u5982\u653e\u4e0b\u77f3\u5934\uff0c\u552f\u4e00\u7684\u76f4\u89c2\u5f62\u5f0f\u5316\u8868\u793a<-E,E>,\u5176\u5b9e\u5bf9\u5e94\u7684\u72b6\u6001\u6709\uff1a S_(-E,_,_,_,_) -->|put-aside| S__(E,_,_,_,_); #\u7136\u540e\u53ef\u4ee5\u8fd0\u7528PC\u679a\u4e3e\u904d\u5386\uff1a \u3000\u3000S12(-E,X,D,n>0,m>0) , S28(E,X,D,n>0,m>0);#(S,S) \u3000\u3000S14(-E,X,D,n=0,m>0) ,S30(E,X,D,n=0,m>0);#(S,S) \u3000\u3000S13(-E,X,D,n>0,m=0) ,S29(E,X,D,n>0,m=0);#(S,S) \u3000\u3000S15(-E,X,D,n=0,m=0) ,S31(E,X,D,n=0,m=0);\u3000#(S,S) \u3000\u3000S8(-E,X,-D,n>0,m>0) ,S24(E,X,-D,n>0,m>0);#(S,S) \u3000\u3000S10(-E,X,-D,n=0,m>0) ,S26(E,X,-D,n=0,m>0);#(S,S) \u3000\u3000S9(-E,X,-D,n>0,m=0) ,S25(E,X,-D,n>0,m=0);#(S,S) \u3000\u3000S11(-E,X,-D,n=0,m=0) ,S27(E,X,-D,n=0,m=0);#(S,S) \u3000\u3000S4(-E,-X,D,n>0,m>0) , S20(E,-X,D,n>0,m>0);#(S,S) \u3000\u3000S6(-E,-X,D,n=0,m>0) ,S22(E,-X,D,n=0,m>0);#(S,S) \u3000\u3000S5(-E,-X,D,n>0,m=0) ,S21(E,-X,D,n>0,m=0);#(S,S) \u3000\u3000S7(-E,-X,D,n=0,m=0) ,S23(E,-X,D,n=0,m=0);\u3000#(S,S) \u3000\u3000S0(-E,-X,-D,n>0,m>0),S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0) ,S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) ,S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) ,S19(E,-X,-D,n=0,m=0);#(S,S) #\u591a\u51fa\u6765\u7684\u53ef\u4ee5\u901a\u8fc7ISM\u6280\u672f\u7684\u201c\u533a\u57df\u5212\u5206\u201d\u53bb\u6389\u201c\u65e0S0,SG\u65e0\u5173\u7684\u5b64\u7acb\u56fe\u4eec\u201d\uff0c\u7ed3\u679c\u5c31\u53ea\u5269\u4e0b\u524d\u9762\u63d0\u5230\u7684\u8fd9\u51e0\u4e2a\u771f\u6b63\u4f1a\u7528\u7684\u201c\u53ef\u8fbe\u72b6\u6001\u201d\uff1a \u3000\u3000S0(-E,-X,-D,n>0,m>0) ,S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0) ,S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) ,S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) ,S19(E,-X,-D,n=0,m=0);#(S,S) #\u4f46\u662f\u5982\u679c\u9700\u8981\u9690\u542b\u6761\u4ef6\u63a8\u7406\u7684\u201c\u4e0d\u53ef\u80fd\u72b6\u6001\u201d\u9700\u8981\u4eba\u5de5\u8f93\u5165\u7684\u65f6\u5019\u6392\u9664\uff0c\u56e0\u4e3aPC\u4e0d\u77e5\u9053\u8bed\u4e49\uff0c\u53ea\u77e5\u9053\u8bed\u6cd5\u63a8\u5bfc\u6ca1\u6bdb\u75c5\u5c31\u884c\u3002\u6216\u8005\u9700\u8981\u53e6\u5916\u5b9a\u4e49\u4e00\u884c\u53ef\u9009\u9879\uff0c\u7528\u6765\u8f93\u5165\u4e0d\u53ef\u80fd\u72b6\u6001\uff0c\u5728\u77e9\u9635\u5904\u7406\u524d\u53bb\u6389\u8fd9\u4e2a\u201c\u4e0d\u53ef\u80fd\u72b6\u6001\u7ed3\u70b9\u201d\u3002\u53ef\u9009\u9879\u600e\u4e48\u5f04\u5462\uff1f a4\uff1a#pick-x\uff0c\u62ff\u8d77\u6765x\u77f3\u5934\uff0c**\u5173\u952e\u52a8\u4f5c**\uff0cpre\u4e00\u5bf9\u4e00\u6620\u5c04effect\u7684\u884c\u4e3a\uff0c S19(E,-X,-D,n=0,m=0) , S11(E,-X,-D,n=0,m=0);#(S,S) a5\uff1a#put-x-on-y,\u628a\u624b\u4e2d\u7684x\u653e\u5728y\u4e0a\u65b9\uff1a \u3000\u3000S11(E,-X,-D,n=0,m=0) , S22(E,-X,D,n=0,m>0);#(S,S) a6 #put-x-aside,\u5efa\u8bae\u522b\u5b9a\u4e49\u8fd9\u52a8\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5371\u9669\uff08\u6beb\u65e0\u610f\u4e49\u800c\u4e14\u591a\u4f59\uff09\u7684\u52a8\u4f5c \u3000\u3000S11(E,-X,-D,n=0,m=0) , S19(E,-X,-D,n=0,m=0);#(S,S) \u6ce8\uff1a\u5176\u4e2d \\(S_7=(\\overline{T},b>0,c>0,g>0)\\) \u662f\u6ca1\u60f3\u660e\u767d\uff0c\u591a\u5b9a\u4e49\u51fa\u6765\uff0c\u53ef\u6709\u53ef\u65e0\u7684\u64cd\u4f5c\uff0c\u5199\u4e0a\u65e0\u6240\u8c13\u3002 \u679a\u4e3e\u57fa\u7840\u539f\u5b50\u547d\u9898 \u00b6 QNP-SAT\u65b9\u6cd5\u6ca1\u6709\u901a\u8fc7**\u5f3a\u8fde\u901a\u89c4\u7ea6n>0 v.s n=0\u72b6\u6001**\uff0c\u800c\u9700\u8981\u679a\u4e3e\u51fan,n-1,...,3,2,1\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u4f20action\u53c2\u6570\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad \u7f16\u7801\u7a7a\u95f4 **ations=pre\u2192effect**\u4e2d,preonditoin\u548ceffect\u53ef\u4ee5\u770b\u4f5c\u53d8\u91cf\uff0c\u628a\u53ef\u8fbe\u72b6\u6001\uff0c\u6ee1\u8db3Actions\u5b9a\u4e49\u7684\u8bed\u4e49\u7684\u5404\u79cd\u60c5\u51b5\uff0c\u90fd\u679a\u4e3e\u4ee3\u5165\uff0c\u5c31\u80fd\u751f\u6210\u539f\u5b50\u547d\u9898Variables \u6bd4\u5982\uff1a \u5f53\u8d70\u4e00\u6b65\u8def\u7684\u65f6\u5019\uff0cn0,nG\u91cc\u4e24\u4e2a\u72b6\u6001\uff0c\u4ee3\u5165actions\u4e2d\u7684\u201cpre--effect\u201d \u5f53\u8d70\u4e24\u6b65\u8def\u7684\u65f6\u5019\uff0cn0,n1,nG\u4ee3\u5165\uff0c\u5176\u4e2d\u6bd4\u5982Blockworlf\u4e2d\u7f16\u7801\u7a7a\u95f4\u5c31\u662f2*2*2*n*m\u4e2a\uff0c\u5217\u4e3e\u51fa\u6765(E,-X,-D,n>0,m>0)......\u5176\u4e2d\u4e24\u4e2a\u72b6\u6001n0,nG\u88ab\u5360\u7528\uff0cn1\u53d6\u503c\u53ef\u4ee5\u662f\uff082*2*2*n*m-2\uff09\u4e2a\u3002 \u8fd9\u4e9b\u547d\u9898\u90fd\u5199\u51fa\u6765\uff0c\u4e0d\u662f\u8bf4\u201cn1\u540c\u65f6\u53d6\u503c\u662f\uff082*2*2*n*m-2\uff09\u4e2a\u201d\uff0c\u800c\u662f\u8fd9\u4e9bVariables\u4e2d\u6709\u5bf9\u6709\u9519\uff0c\u90fd\u5217\u51fa\u6765\u5148\uff0c \u540e\u7eed\u6839\u636e\u201c\u5047\u8bbe\u80fd\u62b5\u8fbe\u76ee\u6807\u7684\u751f\u6210\u5f0fClauses\u7684\u5408\u53d6cnf\u201d\u6c42SAT\u53ef\u6ee1\u8db3\u516c\u5f0f\u627e\u5230\u8fd9\u5bf9\u516c\u5f0f\u91cc\u7684\u201c\u4e00\u4e2a\u89e3\u201d \u5b50\u53e5\u751f\u6210\u89c4\u5219 \u00b6 \u6539\u7f16FOND-SAT\u90a3\u4e2a\u8bba\u6587\u7684\u8fd9\u51e0\u4e2a\uff1a \\(\u00acp(S_i0)\\) if p \\(\\notin\\) s0 ; negative info in s0 \\(p(S_iG)\\) if p \u2208 G ; goal \\((S_i, b) \u2192 p(S_i)\\) if p \u2208 prec(b); preconditions \\((S_i, b) \u2192 (S_i, b')\\) if b and b' are siblings \\((S_i, b) \u2192\u00ac(S_i, b')\\) if b and b' not siblings \\((S_i, b) \u21d0\u21d2\\bigvee_{S_i'}(S_i, b, S_i')\\) ; some next controller state \\((S_i, b, S_i') \u2227\u00acp(S_i) \u2192\u00acp(S_i')\\) if p \\(\\notin\\) add(b); fwd prop. \\((S_i, b, S_i') \u2192\u00acp(S_i')\\) if p\u2208del(b); fwd prop. neg. info \\(ReachI(S_0)\\) ; reachability from \\(S_0\\) 10. \\((S_i, b, S_i') \u2227 ReachI(S_i)\\) \u2192 \\(ReachI(S_i')\\) \\(ReachG(S_G,j), j =0,...,k\\) , reach \\(S_G\\) in \u2264 j steps \u00ac \\(ReachG(S_i, 0)\\) for all \\(S_i \\neq S_G\\) \\(ReachG(S_i, j+1) \u21d0\u21d2 \\bigvee_{b,S_i'}\\) b,S_i' [(S_i, b, S_i')\u2227ReachG(S_i',j)] ReachG(S_i, j) \u2192 ReachG(S_i, j+1) \\(ReachI(S_i) \u2192 ReachG(S_i, k)\\) :if \\(S_0\\) reaches \\(S_i\\) , \\(S_i\\) reaches \\(S_G\\) . \u627e\u51fa\u201c\u5f53\u80fd\u62b5\u8fbe\u7ec8\u70b9\u610f\u5473\u7740\u7684---\u6700\u5c0f\u9012\u5f52\u6b65\u9aa4\u7684\u516c\u5f0f\u201d\u3002 \u7279\u522b\u7684\u5730\u65b9\u5728\u4e8e\u72b6\u6001S\u5305\u62ec\uff08\u547d\u9898F+\u6570\u503c\u53d8\u91cf\u4eecV\uff09\u7684\u53d8\u52a8,\u800c\u4e0d\u4ec5\u4ec5\u662fFOND\u95ee\u9898\u7684F\u96c6\u5408\u4e2d\u539f\u5b50\u547d\u9898p \u3002 SAT\u627e\u51fa\u5bf9\u5e94\u7684\u6570\u636e\u7f16\u7801\u7a7a\u95f4\u5185\u54ea\u4e9b\u201c\u539f\u5b50\u547d\u9898\u4e3a\u771f\uff1f\u201d \u00b6 \u4e3a\u771f\u7684\u539f\u5b50\u547d\u9898\u5c31\u662f\u89e3\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765S\u4eec\u5c31\u662f\u4e00\u6761\u627e\u5230\u7684\u6c42\u89e3\u8def\u5f84\u89c4\u5212\u5e8f\u5217. \u5982\u679csat\u6dfb\u52a0\u4e0a\u6b21\u6c42\u89e3\u7684\u7b54\u6848\u5230cnf\u4e2d\uff0c\u6392\u9664\u5f97\u5230\u7684\u7b54\u6848\u5c31\u662f\u201c\u7b2c\u4e8c\u4e2a\u89e3\u201d\uff0c\u5faa\u73af\u5230\u5185\u5b58\u6ea2\u51fa\u6216\u8005Unsatified\u65e0\u89e3\uff0c\u5c31\u8bf4\u660e\u5dee\u4e0d\u591a\u591f\u4e86\u3002 \u91cd\u70b9\u662f\u4ee3\u7801\u600e\u4e48\u5199\uff1f \u00b6 \u53c2\u8003FOND-SAT\u7684\u6838\u5fc3\u4ee3\u7801\uff1a problem.qnp\u6587\u672c\u6587\u4ef6\uff0c\u5199\u4e2aParser\u5b58\u6210\u7279\u5b9a\u6570\u636e\u7ed3\u6784\uff0c\u4f20\u8fdb\u53bbpython\u8fdb\u884c\u5904\u7406. solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! \u4f20\u5165\u5b57\u7b26'n0', \u7ec8\u6001'ng' >>> print(controllerStates) ['n0', 'n1', 'ng']\u8fd9\u4e2a\u662f3\u683c\u7684\u60c5\u51b5\uff0c2\u683c\u7684\u65f6\u5019\u662f['n0','ng'] >>> len(controllerStates) 3 >>> print(show_gen_info) False\u61d2\u5f97\u663e\u793a\u8fd9\u90e8\u5206\uff0c\u56e0\u4e3a\u548c\u6211\u8981\u5173\u5fc3\u7684\u91cd\u70b9\u6ca1\u5173\u7cfb \u8fd9\u91cc\u7684p\u662fParser\u5b9e\u4f8b\uff0c\u53ef\u80fd\u7528\u91cc\u9762\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u57fa\u672c\u770b\u7740\u90fd\u662f\u79c1\u6709\u53d8\u91cf ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ......","title":"QNP2SAT"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#_1","text":"\u79ef\u6728\u4e16\u754c\u63a5\u9f99\u7248 \u611f\u89c9\u4e0d\u4e00\u5b9a\u6e05\u7406\u5b8cX\u4e0a\u7684n\u4e2a\u79ef\u6728\uff0c\u518d\u8bf7\u5f00y\u4e0a\u7684m\u4e2a\u79ef\u6728\uff0c \u4e5f\u53ef\u80fd\u662f\u5148y\u540ex \u66f4\u53ef\u80fd\u662f\u50cf\u4e0b\u9762\u8fd9\u6837x\uff0cy\u6df7\u5408\u7740\u6765\uff1a","title":"\u4e24\u4e2a\u53d8\u91cf"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#gripper","text":"","title":"Gripper"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#qnp2sat","text":"","title":"QNP2SAT"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#_2","text":"\u6574\u4f53\u7684\u60f3\u6cd5\u662f: \u5148\u679a\u4e3e\u7a7a\u95f4\u5185\u7684\u539f\u5b50\u547d\u9898F+\u6570\u503c\u53d8\u91cfV\uff0c \u884d\u751f\u5b50\u53e5cnf \u6c42\u53d6sat\uff0c\u627e\u5230\u4e3a\u771f\u7684\u90a3\u4e9b \u539f\u5b50\u547d\u9898F+\u6570\u503c\u53d8\u91cfV \u7136\u540e\u6311\u90a3\u4e9b\u771f\u7684\u72b6\u6001\u5b50\u53e5\u6253\u5370\u51fa\u6765\u5c31\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u6b65\u9aa4 \u7b80\u5355\u6765\u8bf4\u5c31\u662f \u6240\u6709actions\u4e2d\u7684\u72b6\u6001\u90fd\u679a\u4e3e\u5582\u8fdb\u53bb\u751f\u6210\u201c\u539f\u5b50\u547d\u9898Variables\u4eec\u201d\uff0c action\u4e2d\u7f3a\u7701\u503c\u5168\u90e8\u5f53\u4f5c\u53d8\u91cf\uff0c\u4e24\u4e2a\u72b6\u6001\u5fc5\u987b\u6709\u7684s0\u548csG. 2 states\u641c\u7d22\u7684\u65f6\u5019\uff1as0,sG\u7ec4\u5408\u8fdb\u53bb\u6240\u6709actions\u4e2d\u7f3a\u7701\u503c\uff0c\u5f97\u5230Variables\u3002 \u540c\u7406\uff0c3 states\u8d70\u4e09\u6b65\u7684\u65f6\u5019\uff0cs0,sGs1\u7ec4\u5408\u8fdb\u53bb\u6240\u6709actions\u4e2d\u7f3a\u7701\u503c\uff0c\u5f97\u5230Variables\u3002 \u7136\u540e\u751f\u6210\u9700\u8981\u540c\u65f6\u6ee1\u8db3\u7684clause\u5b50\u53e5\u7684\u5408\u53d6cnf \u5047\u8bbe\u5230\u5e95\u7684\u5b50\u53e5\u4e3a\u771f\uff0c\u7528Actions\u5f62\u5f0f\u5316\u7684\u7b26\u53f7\u516c\u5f0f\u6765\u6f14\u7b97\uff0c\u751f\u6210\u201c\u5047\u5982\u80fd\u5230\u8fbe\u76ee\u6807\uff0c\u90a3\u4e48\u54ea\u4e9b\u53e5\u5b50\u662f\u771f\u7684\u201d\u7684Clauses\u5b50\u53e5\uff0c\u7136\u540e\u5199\u6210\u5408\u53d6\u5f0fcnf cnf\u5582\u8fdb\u53bbminisat\u5f97\u5230\u53ef\u6ee1\u8db3\u7684\u53d6\u503c\u4e3a\u771f\u7684\u539f\u5b50\u547d\u9898,\"\u503c-\u516c\u5f0f\u6620\u5c04\u8868\"\u7ffb\u8bd1\u56de\u6765\u516c\u5f0f\u5e8f\u5217\u5f97\u5230\u4e00\u4e2a\u89e3\uff0c\u5982\u679ccnf\u6dfb\u52a0\u4e0a\u4e00\u6761\u516c\u5f0f\u4e3a\u5047\u7136\u540eminsat\u5faa\u73af\u5f97\u5230\u591a\u4e2a\u89e3\u3002","title":"\u8bd5\u8bd5\u7f16\u7801\u7b26\u53f7\u5316\u6c42\u89e3"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#states","text":"If we use the notation s[X = 0] to refer to s[X] = 0, then \u03c0(s) must depend solely on the truth-valuation over the F-literals p and the V -literals X = 0 that are determined by the state s. There is indeed a \ufb01nite number of such truth valuations but an in\ufb01nite number of states. We refer to such truth valuations as the boolean states of the QNP and denote the boolean state associated with a state s as \\(\\overline{s}\\) . \\(\\overline{s}\\) \u4ee3\u8868\u72b6\u6001,F\u539f\u5b50\u547d\u9898(101...01)+V(x,y,z), \u611f\u89c9\u56fe\u4e2dx>0\u5b9e\u9645\u4e0a\u5e94\u8be5\u6709x \u5c31\u7b97\u539f\u5b50\u547d\u9898\u76f8\u540c\uff0c\u4e5f\u662f\u4e0d\u540c\u7684\u3002 n0\u3001n1\u3001...\u3001n_inf\u6b65\u8fdb\u884c\uff0c\u7136\u540e S\u7528(F\u5e03\u5c14\u72b6\u6001\uff0cV\u6570\u503c)\u6765\u8868\u793a (S,b_i) (S,b_i,s') ? ReachI(s_i) ?ReachG(S_i,j)","title":"\u72b6\u6001states"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#-","text":"repeat((repeat if ~ do \u5185\u5c42\u5faa\u73af...)if ~\u5224\u65ad\u7ed3\u675f\u7684\u6761\u4ef6 do \u5916\u5c42\u5faa\u73af...) \u5bf9\u6bd4\u56fe\u89e3QNP\u7684\u65b9\u6cd5\u4e2d\uff0c\u5176\u4e2d\u7684n>0,n=0\u53ef\u4ee5\u770b\u4f5c\u5355\u7eaf\u7684\u6587\u5b57\u547d\u9898\uff0c\u4ee3\u8868\u7684\u610f\u4e49\u662f\u975e\u96f6\u548c\u96f6\uff0c\u540c\u65f6\u4e0d\u786e\u5b9a\u6027\u52a8\u4f5c\u4e0d\u9700\u8981\u4f20\u9012 if(n==1)\u8d70\u54ea\u6761\u8def\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8d70\u90a3\u6761\u8def\u9ed8\u8ba4\u8ba9\u7528\u6237\u6839\u636e\u8f93\u51fa\u6765\u81ea\u884c\u5224\u65ad\uff0c\u751a\u81f3n=n-1\u6267\u884c\u591a\u5c11\u6b21\u6211\u4e5f\u4e0d\u5173\u5fc3. \u56e0\u4e3a\u7ed3\u679c\u51fa\u6765\u7528\u6237\u201c\u81ea\u5df1\u5224\u65ad\u5230\u5e95\u4ec0\u4e48\u65f6\u5019\u5230n=1\u4e34\u754c\u6570\u503c\u6807\u8bc6\u72b6\u6001\u201d\u5f00\u59cb\u8d70\u975e\u5faa\u73af\u7684\u90a3\u6761\u8def\u5f84\uff08\u4e3b\u8981\u662f\u56e0\u4e3a\u201c\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7b49\u6548\u56fe\u5b9e\u73b0\u7684\u8fd9\u4e2a\u529f\u80fd\") \u5728\u8fd9\u4e2aQNP2SAT\u65b9\u6cd5\u4e2d\uff0c\u8fde n,n-1,n-2,...,2,1 \u90fd\u8981\u5206\u4e0d\u540c\u72b6\u6001\u6765\u4e00\u4ee5\u533a\u5206\uff0c \u8fd8\u6709\u4e00\u4e2a\u533a\u522b\u662f\uff1a\u6bcf\u4e2a\u52a8\u4f5c\u524d\u63d0\u8981\u8f93\u5165**\u5224\u65ad\u6761\u4ef6** S16 \u2192|\u5f53n==1\u62ffx\u4e0a\u77f3n&darr| S2 ; \u8fd9\u4e2a\u52a8\u4f5c\u4e3a\u4f8b\uff1a {n=1}^S16 --> S2^{n=n-1};#QNP2SAT\u8981\u5199\u6210\u8fd9\u6837\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5f88\u5f31\u667a\u7684\u95ee\u9898\uff0c\u4f46\u662fn\u6bd4\u8f83\u5927\uff0c\u590d\u6742\u5ea6\u589e\u52a0\u4e5f\u4f1a\u5f88\u5927\uff0c\u8fd9\u662f\u56e0\u4e3a\u65b9\u6cd5\u4e0d\u597d\u3002 QNP-SAT\u65b9\u6cd5\u6ca1\u6709\u901a\u8fc7**\u5f3a\u8fde\u901a\u89c4\u7ea6n>0 v.s n=0\u72b6\u6001**\uff0c\u800c\u9700\u8981\u679a\u4e3e\u51fan,n-1,...,3,2,1\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u4f20action\u53c2\u6570\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad E,X,D#\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u7b26\u53f7\uff0cF\u8bfb\u53d6\u540e\uff0c\u81ea\u52a8\u91cd\u547d\u540d\u5b58\u6210\u5e03\u5c14\u547d\u9898f1,f2,f3---1\uff1b\u975ef1,-f2,-f3---0 n,m#\u5efa\u8bae\u4f7f\u7528v1,v2,v3,...\u547d\u540d\u3002\u4e0d\u7ba1\u4f60\u7528\u4ec0\u4e48\u7b26\u53f7\uff0cV\u8bfb\u53d6\u540e\uff0c\u7a0b\u5e8f\u81ea\u52a8\u91cd\u547d\u540d\u5b58\u6210v1,v2.\u7ea6\u5b9av1>0,v2>0\u53d6\u503c0\uff1bv1=0,v2=0\u53d6\u503c1\uff1b E,-S,-D,n>0,m>0#\u521d\u59cbI\uff0c\u7a0b\u5e8f\u5148\u66ff\u6362\u4e3a10000B=16D,\u53ea\u9700\u8981\u5b58\u4e00\u4e2aInterger\u8868\u793aS_0 E,-S,D,n=0,m>0#\u521d\u59cbG\uff0c\u7a0b\u5e8f\u5148\u66ff\u6362\u4e3a10110B=22D,\u53ea\u9700\u8981\u5b58\u4e00\u4e2aInterger\u8868\u793aS_G a1:#action 1:Pick-above-x\u6361\u8d77\u6765x\u4e0a\u65b9\u79ef\u6728: \u3000\u3000if(n>1^m>1)(E,-X,-D,n>0,m>0), (-E,-X,-D,n>0,m>0);#\u4ee3\u7801\u4e2d\u5e94\u8be5\u5b58\u6210\u547d\u540da1\u7684\u4e8c\u7ef4\u77e9\u9635\uff1f\u6216\u8005\u4e00\u7ef4\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\u662f\u5143\u7ec4(S16,S0)\u4e0b\u540c\uff0c\u5199\u6210\u8fd9\u6837 if(n==1)S16(E,-X,-D,n>0,m>0), S2(-E,-X,-D,n=0,m>0) ;#(S,S) \u3000\u3000if(n>1)S17(E,-X,-D,n>0,m=0), S1(-E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000if(n==1)S17(E,-X,-D,n>0,m=0), S3(-E,-X,-D,n=0,m=0);#(S,S) a2\uff1a#Pick-above-y\u6361\u8d77\u6765y\u4e0a\u65b9\u79ef\u6728: \u3000\u3000if(n>1^m>1)S16(E,-X,-D,n>0,m>0), S0(-E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000if(m>1)S18(E,-X,-D,n=0,m>0),S2(-E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000if(m==1)S18(E,-X,-D,n=0,m>0) , S3(-E,-X,-D,n=0,m=0);#(S,S) \u3000\u3000if(m==1)S16(E,-X,-D,n>0,m>0) ,S1(-E,-X,-D,n>0,m=0) ;#(S,S) a3\uff1a#put-aside\u79ef\u6728(\u4e0d\u5305\u62ecx\uff0c\u624b\u6301x\u653e\u4e00\u8fb9\u53eb\u505aput-x-aside\u662f\u4e0b\u9762\u8ba8\u8bba\u7684\u4e00\u4e2a\u52a8\u4f5c)\u653e\u4e00\u8fb9\u5230\u684c\u9762Table #\u5305\u62ec\u8fd9\u4e2a Putaside-1 = h\u00acE,\u00acX,\u00acD,n=0;Ei to put aside (not above x or y) the block being held, # \u4e5f\u5305\u62ec\u8fd9\u4e2a Putaside-2 = h\u00acE,\u00acX,\u00acD,n>0,m>0;Ei to put aside (not above x or y) the block being held, \u3000\u3000S0(-E,-X,-D,n>0,m>0) ,S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0),S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) , S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) , S19(E,-X,-D,n=0,m=0);#(S,S) #\u8fd9\u91cc\u9700\u8981\u63d0\u4e00\u70b9\uff1a\u5141\u8bb8_\u7f3a\u7701\u9879 #\u6bd4\u5982\u653e\u4e0b\u77f3\u5934\uff0c\u552f\u4e00\u7684\u76f4\u89c2\u5f62\u5f0f\u5316\u8868\u793a<-E,E>,\u5176\u5b9e\u5bf9\u5e94\u7684\u72b6\u6001\u6709\uff1a S_(-E,_,_,_,_) -->|put-aside| S__(E,_,_,_,_); #\u7136\u540e\u53ef\u4ee5\u8fd0\u7528PC\u679a\u4e3e\u904d\u5386\uff1a \u3000\u3000S12(-E,X,D,n>0,m>0) , S28(E,X,D,n>0,m>0);#(S,S) \u3000\u3000S14(-E,X,D,n=0,m>0) ,S30(E,X,D,n=0,m>0);#(S,S) \u3000\u3000S13(-E,X,D,n>0,m=0) ,S29(E,X,D,n>0,m=0);#(S,S) \u3000\u3000S15(-E,X,D,n=0,m=0) ,S31(E,X,D,n=0,m=0);\u3000#(S,S) \u3000\u3000S8(-E,X,-D,n>0,m>0) ,S24(E,X,-D,n>0,m>0);#(S,S) \u3000\u3000S10(-E,X,-D,n=0,m>0) ,S26(E,X,-D,n=0,m>0);#(S,S) \u3000\u3000S9(-E,X,-D,n>0,m=0) ,S25(E,X,-D,n>0,m=0);#(S,S) \u3000\u3000S11(-E,X,-D,n=0,m=0) ,S27(E,X,-D,n=0,m=0);#(S,S) \u3000\u3000S4(-E,-X,D,n>0,m>0) , S20(E,-X,D,n>0,m>0);#(S,S) \u3000\u3000S6(-E,-X,D,n=0,m>0) ,S22(E,-X,D,n=0,m>0);#(S,S) \u3000\u3000S5(-E,-X,D,n>0,m=0) ,S21(E,-X,D,n>0,m=0);#(S,S) \u3000\u3000S7(-E,-X,D,n=0,m=0) ,S23(E,-X,D,n=0,m=0);\u3000#(S,S) \u3000\u3000S0(-E,-X,-D,n>0,m>0),S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0) ,S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) ,S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) ,S19(E,-X,-D,n=0,m=0);#(S,S) #\u591a\u51fa\u6765\u7684\u53ef\u4ee5\u901a\u8fc7ISM\u6280\u672f\u7684\u201c\u533a\u57df\u5212\u5206\u201d\u53bb\u6389\u201c\u65e0S0,SG\u65e0\u5173\u7684\u5b64\u7acb\u56fe\u4eec\u201d\uff0c\u7ed3\u679c\u5c31\u53ea\u5269\u4e0b\u524d\u9762\u63d0\u5230\u7684\u8fd9\u51e0\u4e2a\u771f\u6b63\u4f1a\u7528\u7684\u201c\u53ef\u8fbe\u72b6\u6001\u201d\uff1a \u3000\u3000S0(-E,-X,-D,n>0,m>0) ,S16(E,-X,-D,n>0,m>0);#(S,S) \u3000\u3000S2(-E,-X,-D,n=0,m>0) ,S18(E,-X,-D,n=0,m>0);#(S,S) \u3000\u3000S1(-E,-X,-D,n>0,m=0) ,S17(E,-X,-D,n>0,m=0);#(S,S) \u3000\u3000S3(-E,-X,-D,n=0,m=0) ,S19(E,-X,-D,n=0,m=0);#(S,S) #\u4f46\u662f\u5982\u679c\u9700\u8981\u9690\u542b\u6761\u4ef6\u63a8\u7406\u7684\u201c\u4e0d\u53ef\u80fd\u72b6\u6001\u201d\u9700\u8981\u4eba\u5de5\u8f93\u5165\u7684\u65f6\u5019\u6392\u9664\uff0c\u56e0\u4e3aPC\u4e0d\u77e5\u9053\u8bed\u4e49\uff0c\u53ea\u77e5\u9053\u8bed\u6cd5\u63a8\u5bfc\u6ca1\u6bdb\u75c5\u5c31\u884c\u3002\u6216\u8005\u9700\u8981\u53e6\u5916\u5b9a\u4e49\u4e00\u884c\u53ef\u9009\u9879\uff0c\u7528\u6765\u8f93\u5165\u4e0d\u53ef\u80fd\u72b6\u6001\uff0c\u5728\u77e9\u9635\u5904\u7406\u524d\u53bb\u6389\u8fd9\u4e2a\u201c\u4e0d\u53ef\u80fd\u72b6\u6001\u7ed3\u70b9\u201d\u3002\u53ef\u9009\u9879\u600e\u4e48\u5f04\u5462\uff1f a4\uff1a#pick-x\uff0c\u62ff\u8d77\u6765x\u77f3\u5934\uff0c**\u5173\u952e\u52a8\u4f5c**\uff0cpre\u4e00\u5bf9\u4e00\u6620\u5c04effect\u7684\u884c\u4e3a\uff0c S19(E,-X,-D,n=0,m=0) , S11(E,-X,-D,n=0,m=0);#(S,S) a5\uff1a#put-x-on-y,\u628a\u624b\u4e2d\u7684x\u653e\u5728y\u4e0a\u65b9\uff1a \u3000\u3000S11(E,-X,-D,n=0,m=0) , S22(E,-X,D,n=0,m>0);#(S,S) a6 #put-x-aside,\u5efa\u8bae\u522b\u5b9a\u4e49\u8fd9\u52a8\u4f5c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5371\u9669\uff08\u6beb\u65e0\u610f\u4e49\u800c\u4e14\u591a\u4f59\uff09\u7684\u52a8\u4f5c \u3000\u3000S11(E,-X,-D,n=0,m=0) , S19(E,-X,-D,n=0,m=0);#(S,S) \u6ce8\uff1a\u5176\u4e2d \\(S_7=(\\overline{T},b>0,c>0,g>0)\\) \u662f\u6ca1\u60f3\u660e\u767d\uff0c\u591a\u5b9a\u4e49\u51fa\u6765\uff0c\u53ef\u6709\u53ef\u65e0\u7684\u64cd\u4f5c\uff0c\u5199\u4e0a\u65e0\u6240\u8c13\u3002","title":"\u8f93\u5165--\u56fe\u89e3\u533a\u522b\u5728\u4e8e\u72b6\u6001\u6570\u91cf"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#_3","text":"QNP-SAT\u65b9\u6cd5\u6ca1\u6709\u901a\u8fc7**\u5f3a\u8fde\u901a\u89c4\u7ea6n>0 v.s n=0\u72b6\u6001**\uff0c\u800c\u9700\u8981\u679a\u4e3e\u51fan,n-1,...,3,2,1\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u4f20action\u53c2\u6570\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad \u7f16\u7801\u7a7a\u95f4 **ations=pre\u2192effect**\u4e2d,preonditoin\u548ceffect\u53ef\u4ee5\u770b\u4f5c\u53d8\u91cf\uff0c\u628a\u53ef\u8fbe\u72b6\u6001\uff0c\u6ee1\u8db3Actions\u5b9a\u4e49\u7684\u8bed\u4e49\u7684\u5404\u79cd\u60c5\u51b5\uff0c\u90fd\u679a\u4e3e\u4ee3\u5165\uff0c\u5c31\u80fd\u751f\u6210\u539f\u5b50\u547d\u9898Variables \u6bd4\u5982\uff1a \u5f53\u8d70\u4e00\u6b65\u8def\u7684\u65f6\u5019\uff0cn0,nG\u91cc\u4e24\u4e2a\u72b6\u6001\uff0c\u4ee3\u5165actions\u4e2d\u7684\u201cpre--effect\u201d \u5f53\u8d70\u4e24\u6b65\u8def\u7684\u65f6\u5019\uff0cn0,n1,nG\u4ee3\u5165\uff0c\u5176\u4e2d\u6bd4\u5982Blockworlf\u4e2d\u7f16\u7801\u7a7a\u95f4\u5c31\u662f2*2*2*n*m\u4e2a\uff0c\u5217\u4e3e\u51fa\u6765(E,-X,-D,n>0,m>0)......\u5176\u4e2d\u4e24\u4e2a\u72b6\u6001n0,nG\u88ab\u5360\u7528\uff0cn1\u53d6\u503c\u53ef\u4ee5\u662f\uff082*2*2*n*m-2\uff09\u4e2a\u3002 \u8fd9\u4e9b\u547d\u9898\u90fd\u5199\u51fa\u6765\uff0c\u4e0d\u662f\u8bf4\u201cn1\u540c\u65f6\u53d6\u503c\u662f\uff082*2*2*n*m-2\uff09\u4e2a\u201d\uff0c\u800c\u662f\u8fd9\u4e9bVariables\u4e2d\u6709\u5bf9\u6709\u9519\uff0c\u90fd\u5217\u51fa\u6765\u5148\uff0c \u540e\u7eed\u6839\u636e\u201c\u5047\u8bbe\u80fd\u62b5\u8fbe\u76ee\u6807\u7684\u751f\u6210\u5f0fClauses\u7684\u5408\u53d6cnf\u201d\u6c42SAT\u53ef\u6ee1\u8db3\u516c\u5f0f\u627e\u5230\u8fd9\u5bf9\u516c\u5f0f\u91cc\u7684\u201c\u4e00\u4e2a\u89e3\u201d","title":"\u679a\u4e3e\u57fa\u7840\u539f\u5b50\u547d\u9898"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#_4","text":"\u6539\u7f16FOND-SAT\u90a3\u4e2a\u8bba\u6587\u7684\u8fd9\u51e0\u4e2a\uff1a \\(\u00acp(S_i0)\\) if p \\(\\notin\\) s0 ; negative info in s0 \\(p(S_iG)\\) if p \u2208 G ; goal \\((S_i, b) \u2192 p(S_i)\\) if p \u2208 prec(b); preconditions \\((S_i, b) \u2192 (S_i, b')\\) if b and b' are siblings \\((S_i, b) \u2192\u00ac(S_i, b')\\) if b and b' not siblings \\((S_i, b) \u21d0\u21d2\\bigvee_{S_i'}(S_i, b, S_i')\\) ; some next controller state \\((S_i, b, S_i') \u2227\u00acp(S_i) \u2192\u00acp(S_i')\\) if p \\(\\notin\\) add(b); fwd prop. \\((S_i, b, S_i') \u2192\u00acp(S_i')\\) if p\u2208del(b); fwd prop. neg. info \\(ReachI(S_0)\\) ; reachability from \\(S_0\\) 10. \\((S_i, b, S_i') \u2227 ReachI(S_i)\\) \u2192 \\(ReachI(S_i')\\) \\(ReachG(S_G,j), j =0,...,k\\) , reach \\(S_G\\) in \u2264 j steps \u00ac \\(ReachG(S_i, 0)\\) for all \\(S_i \\neq S_G\\) \\(ReachG(S_i, j+1) \u21d0\u21d2 \\bigvee_{b,S_i'}\\) b,S_i' [(S_i, b, S_i')\u2227ReachG(S_i',j)] ReachG(S_i, j) \u2192 ReachG(S_i, j+1) \\(ReachI(S_i) \u2192 ReachG(S_i, k)\\) :if \\(S_0\\) reaches \\(S_i\\) , \\(S_i\\) reaches \\(S_G\\) . \u627e\u51fa\u201c\u5f53\u80fd\u62b5\u8fbe\u7ec8\u70b9\u610f\u5473\u7740\u7684---\u6700\u5c0f\u9012\u5f52\u6b65\u9aa4\u7684\u516c\u5f0f\u201d\u3002 \u7279\u522b\u7684\u5730\u65b9\u5728\u4e8e\u72b6\u6001S\u5305\u62ec\uff08\u547d\u9898F+\u6570\u503c\u53d8\u91cf\u4eecV\uff09\u7684\u53d8\u52a8,\u800c\u4e0d\u4ec5\u4ec5\u662fFOND\u95ee\u9898\u7684F\u96c6\u5408\u4e2d\u539f\u5b50\u547d\u9898p \u3002","title":"\u5b50\u53e5\u751f\u6210\u89c4\u5219"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#sat","text":"\u4e3a\u771f\u7684\u539f\u5b50\u547d\u9898\u5c31\u662f\u89e3\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765S\u4eec\u5c31\u662f\u4e00\u6761\u627e\u5230\u7684\u6c42\u89e3\u8def\u5f84\u89c4\u5212\u5e8f\u5217. \u5982\u679csat\u6dfb\u52a0\u4e0a\u6b21\u6c42\u89e3\u7684\u7b54\u6848\u5230cnf\u4e2d\uff0c\u6392\u9664\u5f97\u5230\u7684\u7b54\u6848\u5c31\u662f\u201c\u7b2c\u4e8c\u4e2a\u89e3\u201d\uff0c\u5faa\u73af\u5230\u5185\u5b58\u6ea2\u51fa\u6216\u8005Unsatified\u65e0\u89e3\uff0c\u5c31\u8bf4\u660e\u5dee\u4e0d\u591a\u591f\u4e86\u3002","title":"SAT\u627e\u51fa\u5bf9\u5e94\u7684\u6570\u636e\u7f16\u7801\u7a7a\u95f4\u5185\u54ea\u4e9b\u201c\u539f\u5b50\u547d\u9898\u4e3a\u771f\uff1f\u201d"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/QNP2SAT/#_5","text":"\u53c2\u8003FOND-SAT\u7684\u6838\u5fc3\u4ee3\u7801\uff1a problem.qnp\u6587\u672c\u6587\u4ef6\uff0c\u5199\u4e2aParser\u5b58\u6210\u7279\u5b9a\u6570\u636e\u7ed3\u6784\uff0c\u4f20\u8fdb\u53bbpython\u8fdb\u884c\u5904\u7406. solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! \u4f20\u5165\u5b57\u7b26'n0', \u7ec8\u6001'ng' >>> print(controllerStates) ['n0', 'n1', 'ng']\u8fd9\u4e2a\u662f3\u683c\u7684\u60c5\u51b5\uff0c2\u683c\u7684\u65f6\u5019\u662f['n0','ng'] >>> len(controllerStates) 3 >>> print(show_gen_info) False\u61d2\u5f97\u663e\u793a\u8fd9\u90e8\u5206\uff0c\u56e0\u4e3a\u548c\u6211\u8981\u5173\u5fc3\u7684\u91cd\u70b9\u6ca1\u5173\u7cfb \u8fd9\u91cc\u7684p\u662fParser\u5b9e\u4f8b\uff0c\u53ef\u80fd\u7528\u91cc\u9762\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u57fa\u672c\u770b\u7740\u90fd\u662f\u79c1\u6709\u53d8\u91cf ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ......","title":"\u91cd\u70b9\u662f\u4ee3\u7801\u600e\u4e48\u5199\uff1f"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/qnp2fond/","text":"qnp2fond qnp2fond \u00b6 ./qnp2fond [--force-direct] [--disable-optimizations] <qnp-file> <num-bits-per-counter> <max-stack-depth> <prefix> \u4f8b\u5b50 $ ./qnp2fond ./blocks04.qnp 2 2 blocks04_output call: ./qnp2fond ./blocks04.qnp 2 2 blocks04_output qnp: #features=5, #numeric=2, #boolean=3, #actions=8 using full translation... translation: time=0 translation: stats.extra=[ 9 8 4 2 2 ] fond: #features=22, #actions=16 \u6709\u7406\u7531\u76f8\u4fe1\uff0cpddl2cnf\u7ffb\u8bd1\u662f\u73b0\u6210\u7684\u8f6e\u5b50\u4ee3\u7801\uff0c\u8f93\u5165\u8f93\u51fa\u5df2\u7ecf\u5f88\u660e\u786e\u4e86\u3002 /hush$ diff ./FOND-SAT/src/translate/translate.py ./PRP/planner-for-relevant-policies/src/translate/translate.py 651,652d650 < \"sas_name\", help=\"sas file name\") < argparser.add_argument( 659d656 < print('HOLAAAAAAAAAAAAAAAAAAAAAAA') 686c683 < with open(args.sas_name, \"w\") as output_file: --- > with open(\"output.sas\", \"w\") as output_file: \u547d\u4ee4\u884c\u6267\u884c\uff1a command = 'python translate/translate.py ' + str(time_limit) + ' ' + self.domain + ' ' + self.problem + ' ' + sas_file_name + ' | grep \"noprint\"' \u4f7f\u7528domain\u6587\u4ef6\u548c\u95ee\u9898\u63cf\u8ff0\u6587\u4ef6pddl\u901a\u8fc7translate.py\u751f\u6210\u7ffb\u8bd1\u540e\u7684sas\u6587\u4ef6 begin_version 3 end_version begin_metric 0 end_metric 1 begin_variable var0 -1 2 Atom person-at(l1) Atom person-at(l2) end_variable 1 begin_mutex_group 2 0 0 0 1 end_mutex_group begin_state 0 end_state begin_goal 1 0 1 end_goal 2 begin_operator\u6709\u591a\u5c11\u4e2a\u64cd\u4f5c\u5168\u90e8\u90fd\u5199\u5728\u8fd9\u91cc\uff0c\u6bd4\u5982L3\u67094\u4e2a\u64cd\u4f5c move-right l1 l2 0 1 0 0 0 1 0 end_operator begin_operator move-right l2 l1 0 1 0 0 1 0 0 end_operator 0\u8fd9\u884c\u56fa\u5b9a\u7684 \u63a5\u7740 p.generate_task(name_sas_file) #\u8bfb\u53d6sas\u6587\u4ef6\uff0c\u4fdd\u5b58\u6570\u636e >>> my_task = p.translate_to_atomic() #\u5b58\u8fdbmy_task\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61my_task\u4e2d","title":"qnp2fond"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/qnp2fond/#qnp2fond","text":"./qnp2fond [--force-direct] [--disable-optimizations] <qnp-file> <num-bits-per-counter> <max-stack-depth> <prefix> \u4f8b\u5b50 $ ./qnp2fond ./blocks04.qnp 2 2 blocks04_output call: ./qnp2fond ./blocks04.qnp 2 2 blocks04_output qnp: #features=5, #numeric=2, #boolean=3, #actions=8 using full translation... translation: time=0 translation: stats.extra=[ 9 8 4 2 2 ] fond: #features=22, #actions=16 \u6709\u7406\u7531\u76f8\u4fe1\uff0cpddl2cnf\u7ffb\u8bd1\u662f\u73b0\u6210\u7684\u8f6e\u5b50\u4ee3\u7801\uff0c\u8f93\u5165\u8f93\u51fa\u5df2\u7ecf\u5f88\u660e\u786e\u4e86\u3002 /hush$ diff ./FOND-SAT/src/translate/translate.py ./PRP/planner-for-relevant-policies/src/translate/translate.py 651,652d650 < \"sas_name\", help=\"sas file name\") < argparser.add_argument( 659d656 < print('HOLAAAAAAAAAAAAAAAAAAAAAAA') 686c683 < with open(args.sas_name, \"w\") as output_file: --- > with open(\"output.sas\", \"w\") as output_file: \u547d\u4ee4\u884c\u6267\u884c\uff1a command = 'python translate/translate.py ' + str(time_limit) + ' ' + self.domain + ' ' + self.problem + ' ' + sas_file_name + ' | grep \"noprint\"' \u4f7f\u7528domain\u6587\u4ef6\u548c\u95ee\u9898\u63cf\u8ff0\u6587\u4ef6pddl\u901a\u8fc7translate.py\u751f\u6210\u7ffb\u8bd1\u540e\u7684sas\u6587\u4ef6 begin_version 3 end_version begin_metric 0 end_metric 1 begin_variable var0 -1 2 Atom person-at(l1) Atom person-at(l2) end_variable 1 begin_mutex_group 2 0 0 0 1 end_mutex_group begin_state 0 end_state begin_goal 1 0 1 end_goal 2 begin_operator\u6709\u591a\u5c11\u4e2a\u64cd\u4f5c\u5168\u90e8\u90fd\u5199\u5728\u8fd9\u91cc\uff0c\u6bd4\u5982L3\u67094\u4e2a\u64cd\u4f5c move-right l1 l2 0 1 0 0 0 1 0 end_operator begin_operator move-right l2 l1 0 1 0 0 1 0 0 end_operator 0\u8fd9\u884c\u56fa\u5b9a\u7684 \u63a5\u7740 p.generate_task(name_sas_file) #\u8bfb\u53d6sas\u6587\u4ef6\uff0c\u4fdd\u5b58\u6570\u636e >>> my_task = p.translate_to_atomic() #\u5b58\u8fdbmy_task\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61my_task\u4e2d","title":"qnp2fond"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/","text":"stupid domain.pddl \u5148\u751f\u6210sas\u6587\u4ef6 \u7136\u540ep=Parser()\u8bfb\u53d6sas\u6587\u4ef6\u751f\u6210my_task()\u5bf9\u8c61my_task\u6570\u636e\u5bf9\u8c61\u5b58\u50a8\u7ed3\u6784\uff1a Clauses = 70 Variables = 26 \u901a\u8fc7\u8c03\u7528minisat\u6839\u636e\u4e0acnf\u6587\u4ef6\u751f\u6210\u7684outsat-temp.tx \u516c\u5f0f\u6620\u5c04 \u6700\u7ec8\u7ed3\u679c\uff1a \u6211\u7684stupid road demo run in Ipython/Jupyter main.py \u66ff\u6362args\u8f93\u5165\u53c2\u6570\u5b57\u5178\uff0c\u76f4\u63a5\u8f93\u5165\u6211\u60f3\u8981\u7684\u5b57\u5178\uff0c\u5305\u62ec\u4f20\u8fdb\u53bb\u7684\u6570\u503c\u53c2\u6570 \u4f7f\u7528domain\u6587\u4ef6\u548c\u95ee\u9898\u63cf\u8ff0\u6587\u4ef6pddl\u901a\u8fc7translate.py\u751f\u6210\u7ffb\u8bd1\u540e\u7684sas\u6587\u4ef6 \u5728Parser\u7c7b\u7684\u65b9\u6cd5\u4e2d\u7ffb\u8bd1\u6210\uff0c\u4fdd\u5b58\u6210mytask\u7c7b\u7684\u6570\u636e\uff1a \u63a5\u4e0b\u6765\u8fd9\u4e2a\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u6ce8\u610f\u7559\u610f\u91cd\u70b9\uff1a stupid \u00b6 domain.pddl \u00b6 (define (problem line-0) (:domain line) (:objects L1 - location L2 - location ) (:init (person-at L1) (road L1 L2) (road L2 L1) ) (:goal (person-at L2)) ) problem 2 grid move right ; Stupid Examples for me to understand this programe (define (domain line) (:requirements :typing) (:types location) (:predicates (person-at ?loc - location) (road ?from - location ?to - location) ) (:action move ;move\u52a8\u4f5c\u547d\u540d\u4e3amove\u624d\u5408\u7406\u3002\u4e00\u5f00\u59cb\u4f8b\u5b50\u6ca1\u5199\u597d\uff0c\u53cd\u6b63\u540e\u7eed\u201cmove\u201d\u90fd\u7406\u89e3\u4e3amove\u5c31\u597d\u3002\u524d\u63d0\u7ea6\u675f\u597d\u50cf\u4e5f\u6709\u70b9\u5c0f\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\u540e\u7eed\u7406\u89e3\uff0c\u5c31\u61d2\u5f97\u6539\u52a8\u4e86\u3002 :parameters (?from - location ?to - location) :precondition (and (person-at ?from) (road ?from ?to)) :effect (and (person-at ?to) (not (person-at ?from))) ) ) /src$ python main.py ../mystupidroad/domain.pddl ../mystupidroad/stupid.pddl -strong 1 -policy 1 \u4e2d\u95f4\u6587\u4ef6\uff1a \u5148\u751f\u6210sas\u6587\u4ef6 \u00b6 begin_version 3 end_version begin_metric 0 end_metric 1 begin_variable var0 -1 2 Atom person-at(l1) Atom person-at(l2) end_variable 1 begin_mutex_group 2 0 0 0 1 end_mutex_group begin_state 0 end_state begin_goal 1 0 1 end_goal 2 begin_operator move l1 l2 0 1 0 0 0 1 0 end_operator begin_operator move l2 l1 0 1 0 0 1 0 0 end_operator 0 \u7136\u540ep=Parser()\u8bfb\u53d6sas\u6587\u4ef6\u751f\u6210my_task()\u5bf9\u8c61my_task\u6570\u636e\u5bf9\u8c61\u5b58\u50a8\u7ed3\u6784\uff1a \u00b6 >>> my_task.print_task() ATOMS ================================================ (var0=1) (var0=0) INITIAL ============================================== (var0=0) GOAL ================================================= (var0=1) ACTIONS ============================================== ('move(l1,l2)', []) ('move(l1,l2)', [['(var0=0)'], ['(var0=1)'], ['(var0=0)']]) ('move(l2,l1)', []) ('move(l2,l1)', [['(var0=1)'], ['(var0=0)'], ['(var0=1)']]) >>> print(my_task.action_nondet) {'move(l1,l2)': [], 'move(l2,l1)': []} >>> print(my_task.action_cardinality) {'move': 1, 'move(l1,l2)': 1, 'move(l2,l1)': 1} >>> print(my_task.mutex_groups) [['(var0=0)', '(var0=1)']] >>> print(my_task.compatible_actions) {'move(l1,l2)': set([]), 'move(l2,l1)': set([])} >>> print(my_task.mutex_groups_set) [set(['(var0=1)', '(var0=0)'])] >>> print(my_task.relevant_actions_atom) {'(var0=1)': set(['move(l1,l2)', 'move(l2,l1)']), '(var0=0)': set(['move(l1,l2)', 'move(l2,l1)'])} >>> print(my_task.relevant_actions_atom_aname) {} >>> print(my_task.action_names) set(['move']) >>> print(my_task.other_actions_name) {'move': []} >>> print(my_task.action_name_to_actions) {'move': ['move(l1,l2)', 'move(l2,l1)']} Clauses = 70 Variables = 26 \u00b6 \u5b9e\u9645\u7684\u8f93\u51fa\u4e2d\uff1a SAT formula generation time = 0.000351 # Clauses = 70 # Variables = 26 \u7136\u540e\u5728cnf=CNF\u7c7b\u7684\u5bf9\u8c61\u8f93\u5165my_task\u6570\u636e, main.py\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u7559\u610f\u91cd\u70b9\uff1a solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! \u4f20\u5165\u5b57\u7b26'n0', \u7ec8\u6001'ng' >>> print(controllerStates) ['n0', 'n1', 'ng']\u8fd9\u4e2a\u662f3\u683c\u7684\u60c5\u51b5\uff0c2\u683c\u7684\u65f6\u5019\u662f['n0','ng'] >>> len(controllerStates) 3 >>> print(show_gen_info) False\u61d2\u5f97\u663e\u793a\u8fd9\u90e8\u5206\uff0c\u56e0\u4e3a\u548c\u6211\u8981\u5173\u5fc3\u7684\u91cd\u70b9\u6ca1\u5173\u7cfb \u8fd9\u91cc\u7684p\u662fParser\u5b9e\u4f8b\uff0c\u53ef\u80fd\u7528\u91cc\u9762\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u57fa\u672c\u770b\u7740\u90fd\u662f\u79c1\u6709\u53d8\u91cf ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... \u751f\u6210Fomula-temp.txt\uff0c\u548cformula-temp.txtheader\u552f\u4e00\u533a\u522b\u7b2c\u4e00\u884c\uff0ccnf 1,1\u3002\u91cc\u9762\u4fdd\u5b58\u7740\u6240\u6709Clause\u7684cnf\u683c\u5f0f\u5408\u53d6\u8303\u5f0f\u516c\u5f0f\u7f16\u53f7\uff0c\u7b26\u53f7\u6b63\u8d1f\u5e94\u8be5\u4ee3\u8868\u5bf9\u5e94\u5b50\u5f0fClauses\u6b63\u8d1f\u6587\u5b57\uff0c 26Variables\u751f\u621070Clauses\u7684cnf\u6587\u4ef6 Variables 26 >>> cnf.printVariables() reachableG(ng,0) (ng,move,n0) (ng,move(l1,l2)) reachableI(n0) (n0,move) (ng,move(l2,l1)) (n0,move,ng) (ng,move,ng) reachableI(ng) reachableG(n0,0) (var0=0)(n0) (ng,move) (n0,n0) reachableG(ng,1) YR1-n0-n0-0 (ng,n0) (var0=0)(ng) YR1-n0-ng-0 (var0=1)(n0) (n0,move(l2,l1)) (ng,ng) (n0,ng) (n0,move,n0) (var0=1)(ng) (n0,move(l1,l2)) reachableG(n0,1) p cnf 1 1 -1 0 2 0 -3 4 0 -5 1 0 -6 7 0 -8 2 0 -11 -12 0 -12 -11 0 -3 9 0 -5 9 0 -9 11 12 0 -9 3 5 0 -13 -14 0 -14 -13 0 -6 10 0 -8 10 0 -10 13 14 0 -10 6 8 0 -11 9 0 -12 9 0 -13 10 0 -14 10 0 9 0 -11 -5 -1 0 -15 1 -1 3 0 -11 -3 -4 0 -15 4 -4 5 0 -12 -5 -2 0 -16 1 -2 3 0 -12 -3 -7 0 -16 4 -7 5 0 -13 -8 -1 0 -17 2 -1 6 0 -13 -6 -4 0 -17 7 -4 8 0 -14 -8 -2 0 -18 2 -2 6 0 -14 -6 -7 0 -18 7 -7 8 0 -11 15 0 -15 11 0 -12 16 0 -16 12 0 -13 17 0 -17 13 0 -14 18 0 -18 14 0 19 0 -15 -19 19 0 -16 -19 20 0 -17 -20 19 0 -18 -20 20 0 -19 21 0 -20 22 0 23 0 22 0 -24 0 -24 21 0 -23 22 0 -25 -15 24 0 -24 25 0 15 25 0 -26 -16 23 0 -23 26 0 16 26 0 -21 25 0 -21 26 0 21 -25 -26 0 -4 -1 0 -7 -2 0 \u5bf9\u5e94\u547d\u9898cnf\u5c31\u662fClauses 70 p cnf 1 1 '(var0=1)(n0)' 0 '(var0=1)(ng)' 0 \u8d1f'(n0,move(l1,l2))' '(var0=0)(n0)' 0 \u8d1f'(n0,move(l2,l1))' '(var0=1)(n0)' 0 \u8d1f'(ng,move(l1,l2))' '(var0=0)(ng)' 0 \u8d1f'(ng,move(l2,l1))' '(var0=1)(ng)' 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move,ng)' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move,n0)' 0 \u8d1f'(n0,move(l1,l2))' '(n0,move)' 0 \u8d1f'(n0,move(l2,l1))' '(n0,move)' 0 \u8d1f'(n0,move)' '(n0,move,n0)' '(n0,move,ng)' 0 \u8d1f'(n0,move)' '(n0,move(l1,l2))' '(n0,move(l2,l1))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move,ng)' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move,n0)' 0 \u8d1f'(ng,move(l1,l2))' '(ng,move)' 0 \u8d1f'(ng,move(l2,l1))' '(ng,move)' 0 \u8d1f'(ng,move)' '(ng,move,n0)' '(ng,move,ng)' 0 \u8d1f'(ng,move)' '(ng,move(l1,l2))' '(ng,move(l2,l1))' 0 \u8d1f'(n0,move,n0)' '(n0,move)' 0 \u8d1f'(n0,move,ng)' '(n0,move)' 0 \u8d1f'(ng,move,n0)' '(ng,move)' 0 \u8d1f'(ng,move,ng)' '(ng,move)' 0 '(n0,move)' 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move(l2,l1))' '(var0=1)(n0)' 0 \u8d1f'(n0,n0)' '(var0=1)(n0)' '(var0=1)(n0)' '(n0,move(l1,l2))' 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move(l1,l2))' \u8d1f'(var0=0)(n0)' 0 \u8d1f'(n0,n0)' '(var0=0)(n0)' \u8d1f'(var0=0)(n0)' '(n0,move(l2,l1))' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move(l2,l1))' \u8d1f'(var0=1)(ng)' 0 \u8d1f'(n0,ng)' '(var0=1)(n0)' \u8d1f'(var0=1)(ng)' '(n0,move(l1,l2))' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move(l1,l2))' \u8d1f'(var0=0)(ng)' 0 \u8d1f'(n0,ng)' '(var0=0)(n0)' \u8d1f'(var0=0)(ng)' '(n0,move(l2,l1))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move(l2,l1))' '(var0=1)(n0)' 0 \u8d1f'(ng,n0)' '(var0=1)(ng)' '(var0=1)(n0)' '(ng,move(l1,l2))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move(l1,l2))' \u8d1f'(var0=0)(n0)' 0 \u8d1f'(ng,n0)' '(var0=0)(ng)' \u8d1f'(var0=0)(n0)' '(ng,move(l2,l1))' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move(l2,l1))' \u8d1f'(var0=1)(ng)' 0 \u8d1f'(ng,ng)' '(var0=1)(ng)' \u8d1f'(var0=1)(ng)' '(ng,move(l1,l2))' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move(l1,l2))' \u8d1f'(var0=0)(ng)' 0 \u8d1f'(ng,ng)' '(var0=0)(ng)' \u8d1f'(var0=0)(ng)' '(ng,move(l2,l1))' 0 \u8d1f'(n0,move,n0)' '(n0,n0)' 0 \u8d1f'(n0,n0)' '(n0,move,n0)' 0 \u8d1f'(n0,move,ng)' '(n0,ng)' 0 \u8d1f'(n0,ng)' '(n0,move,ng)' 0 \u8d1f'(ng,move,n0)' '(ng,n0)' 0 \u8d1f'(ng,n0)' '(ng,move,n0)' 0 \u8d1f'(ng,move,ng)' '(ng,ng)' 0 \u8d1f'(ng,ng)' '(ng,move,ng)' 0 'reachableI(n0)' 0 \u8d1f'(n0,n0)' \u8d1f'reachableI(n0)' 'reachableI(n0)' 0 \u8d1f'(n0,ng)' \u8d1f'reachableI(n0)' 'reachableI(ng)' 0 \u8d1f'(ng,n0)' \u8d1f'reachableI(ng)' 'reachableI(n0)' 0 \u8d1f'(ng,ng)' \u8d1f'reachableI(ng)' 'reachableI(ng)' 0 \u8d1f'reachableI(n0)' 'reachableG(n0,1)' 0 \u8d1f'reachableI(ng)' 'reachableG(ng,1)' 0 'reachableG(ng,0)' 0 'reachableG(ng,1)' 0 \u8d1f'reachableG(n0,0)' 0 \u8d1f'reachableG(n0,0)' 'reachableG(n0,1)' 0 \u8d1f'reachableG(ng,0)' 'reachableG(ng,1)' 0 \u8d1f'YR1-n0-n0-0' \u8d1f'(n0,n0)' 'reachableG(n0,0)' 0 \u8d1f'reachableG(n0,0)' 'YR1-n0-n0-0' 0 '(n0,n0)' 'YR1-n0-n0-0' 0 \u8d1f'YR1-n0-ng-0' \u8d1f'(n0,ng)' 'reachableG(ng,0)' 0 \u8d1f'reachableG(ng,0)' 'YR1-n0-ng-0' 0 '(n0,ng)' 'YR1-n0-ng-0' 0 \u8d1f'reachableG(n0,1)' 'YR1-n0-n0-0' 0 \u8d1f'reachableG(n0,1)' 'YR1-n0-ng-0' 0 'reachableG(n0,1)' \u8d1f'YR1-n0-n0-0' \u8d1f'YR1-n0-ng-0' 0 \u8d1f'(var0=0)(n0)' '(var0=1)(n0)' 0 \u8d1f'(var0=0)(ng)' \u8d1f'(var0=1)(ng)' 0 cnf.py ########################################### ############## GENERATION ################# ########################################### #def generate_clauses(self, task, initialCState, goalCState, controllerStates, k, parser = None, debug = False): def generate_clauses(self, task, initialCState, goalCState, controllerStates, k, parser = None, debug = True): self.generateInitial(task, initialCState, debug) self.generateGoal(task, goalCState, debug) self.generatePreconditions(task, controllerStates, debug) self.generatePossibleNonDet(task, controllerStates, debug) self.generateOneSuccessor(task, controllerStates, debug) self.generateTripletForcesBin(task, controllerStates, debug) self.generateAtLeastOneAction(task, controllerStates, debug) self.generateNegativeForwardPropagation(task, controllerStates, debug) self.generateGeneralizeConnection(task, controllerStates, debug) self.generateReachableIClauses(task, initialCState, controllerStates, k, debug) self.generateReachableGClauses(task, controllerStates, goalCState, k, debug) self.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) self.generateMutexGroupsClauses(task, controllerStates, debug) ### cnf.26Variables \u2192 70Clauses \u5bf9\u5e94\u7684\u5b50\u53e5\u751f\u6210\u5982\u4e0b\u6240\u793a\uff1a >>> cnf.reset() p cnf 1 1 >>> start_g = timer() >>> task=my_task >>> initialCState='n0' >>> goalCState='ng' >>> debug=True >>> k=len(controllerStates) self.generateInitial(task, initialCState, debug) # -p(n0) for all p not in initial state \u7ed3\u679c >>> cnf.generateInitial(task, initialCState, debug) -1 0 \u8d1f'(var0=1)(n0)' 0 Generation: Initial v 1 c : 1 0.000241 self.generateGoal(task, goalCState, debug) # p(ng) for all p in goal state \u7ed3\u679c >>> cnf.generateGoal(task, goalCState, debug) 2 0 '(var0=1)(ng)' 0 Generation: Goal v 1 c : 1 0.000200 self.generatePreconditions(task, controllerStates, debug) # p(ng) for all p in goal state \u7ed3\u679c >>> cnf.generatePreconditions(task, controllerStates, debug) -3 4 0 -5 1 0 -6 7 0 -8 2 0 \u8d1f'(n0,move(l1,l2))' '(var0=0)(n0)' 0 \u8d1f'(n0,move(l2,l1))' 1 0 \u8d1f'(ng,move(l1,l2))' '(var0=0)(ng)' 0 \u8d1f'(ng,move(l2,l1))' '(var0=1)(ng)' 0 self.generatePossibleNonDet(task, controllerStates, debug) # 1. (n, act) --> (n, act') // act, act' are non det act of equal det action (action names) # 2. (n, act) --> -(n, act'') // # 3. (n, b) --> (n, b') // b, b' are siblings # 4. (n, b) --> -(n, b'') // b, b'' belong to same act \u7ed3\u679c >>> cnf.generatePossibleNonDet(task, controllerStates, debug) Generation: Non Det v 2 c : 0 0.000035 self.generateOneSuccessor(task, controllerStates, debug) # 1. (n, act) --> \\OR_{b} (n, b) // for b with name act # 2. (n, act) --> \\OR_{n'} (n, act, n') # 3. -(n, act, n') \\lor -(n, act, n'') # 4. (n, b) --> (n, act) \u7ed3\u679c >>> cnf.generateOneSuccessor(task, controllerStates, debug) -11 -12 0 -12 -11 0 -3 9 0 -5 9 0 -9 11 12 0 -9 3 5 0 -13 -14 0 -14 -13 0 -6 10 0 -8 10 0 -10 13 14 0 -10 6 8 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move,ng)' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move,n0)' 0 \u8d1f'(n0,move(l1,l2))' '(n0,move)' 0 \u8d1f'(n0,move(l2,l1))' '(n0,move)' 0 \u8d1f'(n0,move)' '(n0,move,n0)' '(n0,move,ng)' 0 \u8d1f'(n0,move)' '(n0,move(l1,l2))' '(n0,move(l2,l1))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move,ng)' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move,n0)' 0 \u8d1f'(ng,move(l1,l2))' '(ng,move)' 0 \u8d1f'(ng,move(l2,l1))' '(ng,move)' 0 \u8d1f'(ng,move)' '(ng,move,n0)' '(ng,move,ng)' 0 \u8d1f'(ng,move)' '(ng,move(l1,l2))' '(ng,move(l2,l1))' 0 Generation: One succ v 4 c : 12 0.085124 self.generateTripletForcesBin(task, controllerStates, debug) # (n, act, n') --> (n, act) \u7ed3\u679c >>> cnf.generateTripletForcesBin(task, controllerStates, debug) -11 9 0 -12 9 0 -13 10 0 -14 10 0 \u8d1f'(n0,move,n0)' '(n0,move)' 0 \u8d1f'(n0,move,ng)' '(n0,move)' 0 \u8d1f'(ng,move,n0)' '(ng,move)' 0 \u8d1f'(ng,move,ng)' '(ng,move)' 0 Generation: Trip bin v 0 c : 4 0.030731 self.generateAtLeastOneAction(task, controllerStates, debug) # \\OR_{act_name} (n, act) for all n except goal, ng \u7ed3\u679c >>> cnf.generateAtLeastOneAction(task, controllerStates, debug) 9 0 '(n0,move)' 0 Generation: One act v 0 c : 1 0.005008 self.generateNegativeForwardPropagation(task, controllerStates, debug) # 1. (n, act, n') \\land (n, b) --> -p(n') // if p in delete list # 2. (n, n') \\land -p(n) --> -p(n') \\lor \\OR_{b: p \\in add(b)} (n, b) # 3. (n, act, n') \\land (n, b) \\land -p(n) --> -p(n') // if p \\not \\in add(b) # and some sibling of b adds p # for a in actions: # print(a, task.get_del_list(a)) # print(a, task.get_add_list(a)) 2.(n, n') \\(\\land\\) -p(n) \u2192 -p(n') \\(\\lor\\) \\(\\lor_{b: p \\in add(b)}\\) \uff08n,b\uff09 \u7ed3\u679c >>> cnf.generateNegativeForwardPropagation(task, controllerStates, debug) -11 -5 -1 0 -15 1 -1 3 0 -11 -3 -4 0 -15 4 -4 5 0 -12 -5 -2 0 -16 1 -2 3 0 -12 -3 -7 0 -16 4 -7 5 0 -13 -8 -1 0 -17 2 -1 6 0 -13 -6 -4 0 -17 7 -4 8 0 -14 -8 -2 0 -18 2 -2 6 0 -14 -6 -7 0 -18 7 -7 8 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move(l2,l1))' \u8d1f'(var0=1)(n0)' 0 \u8d1f'(n0,n0)' '(var0=1)(n0)' \u8d1f'(var0=1)(n0)' '(n0,move(l1,l2))' 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move(l1,l2))' \u8d1f'(var0=0)(n0)' 0 \u8d1f'(n0,n0)' '(var0=0)(n0)' \u8d1f'(var0=0)(n0)' '(n0,move(l2,l1))' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move(l2,l1))' \u8d1f'(var0=1)(ng)' 0 \u8d1f'(n0,ng)' '(var0=1)(n0)' \u8d1f'(var0=1)(ng)' '(n0,move(l1,l2))' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move(l1,l2))' \u8d1f'(var0=0)(ng)' 0 \u8d1f'(n0,ng)' '(var0=0)(n0)' \u8d1f'(var0=0)(ng)' '(n0,move(l2,l1))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move(l2,l1))' \u8d1f'(var0=1)(n0)' 0 \u8d1f'(ng,n0)' '(var0=1)(ng)' \u8d1f'(var0=1)(n0)' '(ng,move(l1,l2))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move(l1,l2))' \u8d1f'(var0=0)(n0)' 0 \u8d1f'(ng,n0)' '(var0=0)(ng)' \u8d1f'(var0=0)(n0)' '(ng,move(l2,l1))' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move(l2,l1))' \u8d1f'(var0=1)(ng)' 0 \u8d1f'(ng,ng)' '(var0=1)(ng)' \u8d1f'(var0=1)(ng)' '(ng,move(l1,l2))' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move(l1,l2))' \u8d1f'(var0=0)(ng)' 0 \u8d1f'(ng,ng)' '(var0=0)(ng)' \u8d1f'(var0=0)(ng)' '(ng,move(l2,l1))' 0 Generation: Neg Prop v 4 c : 16 0.135173 self.generateGeneralizeConnection(task, controllerStates, debug) # (n, n') <--> \\OR_{act} (n, act, n') \u7ed3\u679c >>> cnf.generateGeneralizeConnection(task, controllerStates, debug) -11 15 0 -15 11 0 -12 16 0 -16 12 0 -13 17 0 -17 13 0 -14 18 0 -18 14 0 \u8d1f'(n0,move,n0)' '(n0,n0)' 0 \u8d1f'(n0,n0)' '(n0,move,n0)' 0 \u8d1f'(n0,move,ng)' '(n0,ng)' 0 \u8d1f'(n0,ng)' '(n0,move,ng)' 0 \u8d1f'(ng,move,n0)' '(ng,n0)' 0 \u8d1f'(ng,n0)' '(ng,move,n0)' 0 \u8d1f'(ng,move,ng)' '(ng,ng)' 0 \u8d1f'(ng,ng)' '(ng,move,ng)' 0 Generation: Gen conn v 0 c : 8 0.048381 self.generateReachableIClauses(task, initialCState, controllerStates, k, debug) \u7ed3\u679c >>> cnf.generateReachableIClauses(task, initialCState, controllerStates, k, debug) 19 0 'reachableI(n0)' 0 Generation: RI init v 1 c : 1 0.005257 -15 -19 19 0 -16 -19 20 0 -17 -20 19 0 -18 -20 20 0 \u8d1f'(n0,n0)' \u8d1f'reachableI(n0)' 'reachableI(n0)' 0 \u8d1f'(n0,ng)' \u8d1f'reachableI(n0)' 'reachableI(ng)' 0 \u8d1f'(ng,n0)' \u8d1f'reachableI(ng)' 'reachableI(n0)' 0 \u8d1f'(ng,ng)' \u8d1f'reachableI(ng)' 'reachableI(ng)' 0 Generation: RI prop v 1 c : 4 0.030447 -19 21 0 -20 22 0 \u8d1f'reachableI(n0)' 'reachableG(n0,1)' 0 \u8d1f'reachableI(ng)' 'reachableG(ng,1)' 0 Generation: IG prop v 2 c : 2 0.007711 self.generateReachableGClauses(task, controllerStates, goalCState, k, debug) def generateReachableGClauses(self, task, controllerStates, goalCState, k, debug = True): self.generateReachableGInitial(task, goalCState, controllerStates, k - 1, debug) # ReachG(ng,0), ReachG(ng,1), ... # -ReachG(n, 0) for n != ng # set the initial values for goal state # set the negation for non goal states self.generateCompletionReachabilityG(task, controllerStates, k - 1, debug) # ReachG(n,j) --> ReachG(n, j+1) if self.strong: self.generatePropagationReachableGStrong(task, controllerStates, k - 1, debug) # ReachG(n, j+1) <--> \\AND_{n'} [(n,n') --> ReachG(n', j)] # Force the equivalences # Right arrow # Left arrow else: if not self.fair: self.generatePropagationReachableGUnfair(task, controllerStates, k - 1, debug) # ReachG(n, j+1) <--> [1] # [1] = [2] \\lor [3] # [2] = (n, unfair) \\land \\AND_{n'} [(n,n') --> RG(n',j)] # [3] = \\OR_{n'} [(n, fair) \\land (n,n') \\land RG(n',j)] c1, v1 = self.get_num_cl_vars() start = timer() # Set variables (n, fair) and (n, unfair) self.setFairUnfairActions(task, controllerStates) # Force the equivalences for [2] # [(n,n') --> RG(n',j)] <-> Repl(n,n',j) # Force the equivalences for [3] # [(n, fair) \\land (n,n') \\land RG(n',j)] <-> Repl3(n,n',j) # Right arrow # Left arrow else: self.generatePropagationReachableGCyclic(task, controllerStates, k - 1, debug) # ReachG(n, j+1) <--> \\OR_{n'} [(n,n') \\land ReachG(n', j)] c1, v1 = self.get_num_cl_vars() start = timer() # Force the equivalences # Right arrow # Left arrow \u7ed3\u679c >>> cnf.generateReachableGClauses(task, controllerStates, goalCState, k, debug) 23 0 22 0 -24 0 'reachableG(ng,0)' 0 'reachableG(ng,1)' 0 \u8d1f'reachableG(n0,0)' 0 Generation: RG init v 2 c : 3 0.009479 -24 21 0 -23 22 0 \u8d1f'reachableG(n0,0)' 'reachableG(n0,1)' 0 \u8d1f'reachableG(ng,0)' 'reachableG(ng,1)' 0 Generation: RG compl v 0 c : 2 0.012321 -25 -15 24 0 -24 25 0 15 25 0 -26 -16 23 0 -23 26 0 16 26 0 -21 25 0 -21 26 0 21 -25 -26 0 \u8d1f'YR1-n0-n0-0' \u8d1f'(n0,n0)' 'reachableG(n0,0)' 0 \u8d1f'reachableG(n0,0)' 'YR1-n0-n0-0' 0 '(n0,n0)' 'YR1-n0-n0-0' 0 \u8d1f'YR1-n0-ng-0' \u8d1f'(n0,ng)' 'reachableG(ng,0)' 0 \u8d1f'reachableG(ng,0)' 'YR1-n0-ng-0' 0 '(n0,ng)' 'YR1-n0-ng-0' 0 \u8d1f'reachableG(n0,1)' 'YR1-n0-n0-0' 0 \u8d1f'reachableG(n0,1)' 'YR1-n0-ng-0' 0 'reachableG(n0,1)' \u8d1f'YR1-n0-n0-0' \u8d1f'YR1-n0-ng-0' 0 Generation: RG prop v 2 c : 9 0.059131 self.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) # (na, nb) --> \\OR_{i<=a} (n_i, n_{b-1}) \u7ed3\u679c >>> cnf.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) Generation: Sym brk v 0 c : 0 0.000004 self.generateMutexGroupsClauses(task, controllerStates, debug) \u7ed3\u679c >>> cnf.generateMutexGroupsClauses(task, controllerStates, debug) -4 -1 0 -7 -2 0 \u8d1f'(var0=0)(n0)' \u8d1f'(var0=1)(n0)' 0 \u8d1f'(var0=0)(ng)' \u8d1f'(var0=1)(ng)' 0 Generation: Mutex v 0 c : 2 0.010046 \u901a\u8fc7\u8c03\u7528minisat\u6839\u636e\u4e0acnf\u6587\u4ef6\u751f\u6210\u7684outsat-temp.tx \u00b6 land : \\(\\land\\) lor: \\(lor\\) \u4e5f\u5c31\u662f\u8bf4\u5728\u547d\u4ee4\u884c\u8f93\u5165\uff1a >./minisat formula-temp.txt outsat-temp.txt [MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 21 69 | 7 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 0 (-nan /sec) decisions : 3 (inf /sec) propagations : 26 (inf /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.79 MB CPU time : 0 s SATISFIABLE \u6839\u636e\u4e0acnf\u6587\u4ef6\u751f\u6210\u7684outsat-temp.txt SAT -1 2 3 4 -5 -6 -7 -8 9 -10 -11 12 -13 -14 -15 16 -17 -18 19 20 21 22 23 -24 25 26 0 \u4e5f\u5c31\u662fsat\u5bf9\u5e94\u7684\u516c\u5f0f\u7ed3\u8bba \u7136\u540epython\u8bfb\u53d6\u8fd9\u4e2a\u6ee1\u8db3cnf\u5408\u53d6\u8303\u5f0f\u95ee\u9898\u7684\u53ef\u6ee1\u8db3sat\u89e3\uff0c\u627e\u5230\u5bf9\u5e94\u7f16\u53f7\u7684\u516c\u5f0f\u7ffb\u8bd1\u51fa\u6765\u53d8\u6210\u65b9\u6848\u3002 \u6839\u636e\u4e0b\u9762\u7684 \u516c\u5f0f\u6620\u5c04 \u00b6 >>> print(cnf.mapNumberVariable) {1: '(var0=1)(n0)', 2: '(var0=1)(ng)', 3: '(n0,move(l1,l2))', 4: '(var0=0)(n0)', 5: '(n0,move(l2,l1))', 6: '(ng,move(l1,l2))', 7: '(var0=0)(ng)', 8: '(ng,move(l2,l1))', 9: '(n0,move)', 10: '(ng,move)', 11: '(n0,move,n0)', 12: '(n0,move,ng)', 13: '(ng,move,n0)', 14: '(ng,move,ng)', 15: '(n0,n0)', 16: '(n0,ng)', 17: '(ng,n0)', 18: '(ng,ng)', 19: 'reachableI(n0)', 20: 'reachableI(ng)', 21: 'reachableG(n0,1)', 22: 'reachableG(ng,1)', 23: 'reachableG(ng,0)', 24: 'reachableG(n0,0)', 25: 'YR1-n0-n0-0', 26: 'YR1-n0-ng-0'} >>> print(cnf.mapVariableType) {'reachableG(ng,0)': 5, '(ng,move,n0)': 3, '(ng,move(l1,l2))': 2, 'reachableI(n0)': 4, '(n0,move)': 2, '(ng,move(l2,l1))': 2, '(n0,move,ng)': 3, '(ng,move,ng)': 3, 'reachableI(ng)': 4, 'reachableG(n0,0)': 5, '(var0=0)(n0)': 1, '(ng,move)': 2, '(n0,n0)': 7, 'reachableG(ng,1)': 5, 'YR1-n0-n0-0': 6, '(ng,n0)': 7, '(var0=0)(ng)': 1, 'YR1-n0-ng-0': 6, '(var0=1)(n0)': 1, '(n0,move(l2,l1))': 2, '(ng,ng)': 7, '(n0,ng)': 7, '(n0,move,n0)': 3, '(var0=1)(ng)': 1, '(n0,move(l1,l2))': 2, 'reachableG(n0,1)': 5} >>> print(cnf.mapVariableNumber) {'reachableG(ng,0)': 23, '(ng,move,n0)': 13, '(ng,move(l1,l2))': 6, 'reachableI(n0)': 19, '(n0,move)': 9, '(ng,move(l2,l1))': 8, '(n0,move,ng)': 12, '(ng,move,ng)': 14, 'reachableI(ng)': 20, 'reachableG(n0,0)': 24, '(var0=0)(n0)': 4, '(ng,move)': 10, '(n0,n0)': 15, 'reachableG(ng,1)': 22, 'YR1-n0-n0-0': 25, '(ng,n0)': 17, '(var0=0)(ng)': 7, 'YR1-n0-ng-0': 26, '(var0=1)(n0)': 1, '(n0,move(l2,l1))': 5, '(ng,ng)': 18, '(n0,ng)': 16, '(n0,move,n0)': 11, '(var0=1)(ng)': 2, '(n0,move(l1,l2))': 3, 'reachableG(n0,1)': 21} SAT -1 2 3 4 -5 -6 -7 -8 9 -10 -11 12 -13 -14 -15 16 -17 -18 19 20 21 22 23 -24 25 26 0 \u662f\u8fd9\u4e9bcnf\u5408\u53d6\u8303\u5f0f\u8d77\u6765\u5f97\u5230\u7684\u7ed3\u679c 2: '(var0=1)(ng)', 3: '(n0,move(l1,l2))', 4: '(var0=0)(n0)', 9: '(n0,move)', 12: '(n0,move,ng)', 16: '(n0,ng)', 19: 'reachableI(n0)', 20: 'reachableI(ng)', 21: 'reachableG(n0,1)', 22: 'reachableG(ng,1)', 23: 'reachableG(ng,0)', 25: 'YR1-n0-n0-0', 26: 'YR1-n0-ng-0'} =================== =================== Controller -- CS = Controller State =================== =================== Atom (CS) ___________________ ---------- Atom person-at(l1) (n0) ---------- Atom person-at(l2) (ng) =================== =================== (CS, Action with arguments) ___________________ (n0,move(l1,l2)) (n0,move) =================== =================== (CS, Action name, CS) ___________________ (n0,move,ng) =================== (CS, CS) ___________________ (n0,ng) =================== \u6700\u7ec8\u7ed3\u679c\uff1a \u00b6 ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 21 69 | 7 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 0 (-nan /sec) decisions : 3 (inf /sec) propagations : 26 (inf /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.79 MB CPU time : 0 s SATISFIABLE Setting atoms # Atoms: 2 Setting initial Setting goal Setting actions # Actions: 2 Setting other actions (0, '/', 2) Setting action card Setting mutexes Setting relevant actions Setting splitting Setting compatible actions (0, '/', 2) 2.88486480713e-05 ================================================= Trying with 2 states Looking for strong plans: True Fair actions: True # Atoms: 2 # Actions: 2 SAT formula generation time = 0.000351 # Clauses = 70 # Variables = 26 Creating formula... Done creating formula. Calling solver... SAT solver called with 4096 MB and 3599 seconds Done solver. Round time: 0.015620 Cumulated solver time: 0.015620 ... Solved with 2 states Elapsed total time (s): 0.115060 Elapsed solver time (s): 0.015620 Elapsed solver time (s): [0.015619993209838867] Looking for strong plans: True Fair actions: True \u6211\u7684stupid road demo run in Ipython/Jupyter \u00b6 main.py \u00b6 from CNF import CNF import os import sys from myTask import MyTask from timeit import default_timer as timer import time import argparse from parser import Parser def clean_and_exit(n1, n2, n3, n4, n5, msg): print(msg) os.system('rm %s %s %s %s %s' % (n1, n2, n3, n4, n5)) exit() def generateControllerStates(i): controllerStates = ['n0'] for j in range(i): controllerStates.append('n' + str(j + 1)) controllerStates.append('ng') return controllerStates \u66ff\u6362args\u8f93\u5165\u53c2\u6570\u5b57\u5178\uff0c\u76f4\u63a5\u8f93\u5165\u6211\u60f3\u8981\u7684\u5b57\u5178\uff0c\u5305\u62ec\u4f20\u8fdb\u53bb\u7684\u6570\u503c\u53c2\u6570 \u00b6 # my stuppid example: params={'time_limit': 3600, 'inc': 1, 'path_domain': '../mystupidroad/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 1, 'path_instance': '../mystupidroad/stupid.pddl', 'name_temp': 'temp'} #print params dictionary #print(params) #raw_input() # Run code below in ipython # params={'time_limit': 3600, 'inc': 1, 'path_domain': '../F-domains/islands/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../F-domains/islands/p03.pddl', 'name_temp': 'temp'} # my stuppid example: #params={'time_limit': 3600, 'inc': 1, 'path_domain': '../mystupidroad/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 1, 'path_instance': '../mystupidroad/stupid.pddl', 'name_temp': 'temp'} time_start = timer() time_limit = params['time_limit'] #3600 default time_buffer = 2 mem_limit = params['mem_limit'] #4096 default p = Parser() p.set_domain(params['path_domain']) #path_domain p.set_problem(params['path_instance']) #path_instance name_formula_file = 'formula-' + params['name_temp'] + '.txt' #name_formula_file formula-temp.txt formula-temp.txtheader cnf diff In ---> p cnf 656 7458 --- > p cnf 1 1 name_formula_file_extra = 'formula-extra-' + params['name_temp'] + '.txt' #name_formula_file_extra :formula-extra-temp.txt blank name_output_satsolver = 'outsat-' + params['name_temp'] + '.txt' #name_output_satsolver : outsat-temp.txt name_sas_file = 'outputtrans-' + params['name_temp'] + '.sas' #name_sas_file outputtrans-temp.sas #time_limit 3600 default #mem_limit 4096 default #path_domain #path_instance # params={'time_limit': 3600, 'inc': 1, 'path_domain': '../F-domains/islands/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../F-domains/islands/p03.pddl', 'name_temp': 'temp'} # my stuppid example: #params={'time_limit': 3600, 'inc': 1, 'path_domain': '../mystupidroad/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../mystupidroad/stupid.pddl', 'name_temp': 'temp'} # middle Files to be clean and exit #name_formula_file :formula-temp.txt formula-temp.txtheader cnf diff in ---> p cnf 656 7458 --- > p cnf 1 1 #name_formula_file_extra :formula-extra-temp.txt blank #name_output_satsolver : outsat-temp.txt #name_sas_file ;outputtrans-temp.sas p.generate_file(name_sas_file) \u76f8\u5f53\u4e8e\u547d\u4ee4\u884c\u6267\u884c\uff1a command = 'python translate/translate.py ' + str(time_limit) + ' ' + self.domain + ' ' + self.problem + ' ' + sas_file_name + ' | grep \"noprint\"' \u4f7f\u7528domain\u6587\u4ef6\u548c\u95ee\u9898\u63cf\u8ff0\u6587\u4ef6pddl\u901a\u8fc7translate.py\u751f\u6210\u7ffb\u8bd1\u540e\u7684sas\u6587\u4ef6 \u00b6 begin_version 3 end_version begin_metric 0 end_metric 1 begin_variable var0 -1 2 Atom person-at(l1) Atom person-at(l2) end_variable 1 begin_mutex_group 2 0 0 0 1 end_mutex_group begin_state 0 end_state begin_goal 1 0 1 end_goal 2 begin_operator\u6709\u591a\u5c11\u4e2a\u64cd\u4f5c\u5168\u90e8\u90fd\u5199\u5728\u8fd9\u91cc\uff0c\u6bd4\u5982L3\u67094\u4e2a\u64cd\u4f5c move l1 l2 0 1 0 0 0 1 0 end_operator begin_operator move l2 l1 0 1 0 0 1 0 0 end_operator 0\u8fd9\u884c\u56fa\u5b9a\u7684 \u63a5\u7740 p.generate_task(name_sas_file) #\u8bfb\u53d6sas\u6587\u4ef6\uff0c\u4fdd\u5b58\u6570\u636e >>> my_task = p.translate_to_atomic() #\u5b58\u8fdbmy_task\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61my_task\u4e2d Setting atoms # Atoms: 3 Setting initial Setting goal Setting actions # Actions: 4 Setting other actions (0, '/', 4) Setting action card Setting mutexes Setting relevant actions Setting splitting Setting compatible actions (0, '/', 4) 0.00387597084045 \u5728Parser\u7c7b\u7684\u65b9\u6cd5\u4e2d\u7ffb\u8bd1\u6210\uff0c\u4fdd\u5b58\u6210mytask\u7c7b\u7684\u6570\u636e\uff1a \u00b6 parser.py\u4e2dp.translate_to_atomic task = MyTask() debug = False#\u8fd9\u4e2a\u5e94\u8be5\u662f\u5f00\u53d1\u7684\u65f6\u5019\u65b9\u4fbf\u8c03\u8bd5\u53ef\u4ee5\u8bbe\u7f6eTrue print('Setting atoms')#\u539f\u5b50\u547d\u9898 task.set_atoms(self.get_atoms(), debug) print('Setting initial')#\u521d\u6001 task.set_initial(self.get_initial_atomic(), debug) print('Setting goal')#\u7ec8\u6001 task.set_goal(self.get_goal_atomic(), debug) print('Setting actions')#\u8bbe\u5b9a\u52a8\u4f5c task.set_actions_atomic(self.get_actions_atomic(), debug) print('Setting mutexes')#\u8bbe\u5b9a\u4e92\u65a5\u91cf\uff1f task.set_mutex_groups(self.get_mutex_groups_atomic(), debug) print('Setting relevant actions')#\u8bbe\u7f6e\u76f8\u5173\u52a8\u4f5c task.set_relevant_actions(debug) print('Setting splitting')#\u5206\u88c2 task.initialize_splitting(debug) start = timer() print('Setting compatible actions')#\u8bbe\u7f6e\u76f8\u5bb9\u53ef\u4ee5\u5e76\u5b58\u7684\u52a8\u4f5c task.create_compatible_actions(debug) print(timer() - start) return task \u800c\u67e5\u770bmy_task\u7c7b\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf class MyTask(): def __init__(self): self.atoms = None # Set self.initial = None # Set of atoms self.goal = None # Set of atoms self.actions = None # Dictionary, name --> [precs, adds, dels] self.action_nondet = {} # name --> list other actions self.action_cardinality = {} # name --> number self.mutex_groups = None # list of list; each sub-list has atoms belonging to the same mutex group self.compatible_actions = {} # action name --> set of compatible actions self.mutex_groups_set = [] # list of sets of mutex groups self.relevant_actions_atom = {} # dictionary: atom --> relevant actions self.relevant_actions_atom_aname = {} # dictionary: (atom, a_name) --> relevant actions self.action_names = None # set self.other_actions_name = {} # Dictionary name --> list of other actions self.action_name_to_actions = {} # action_name --> list of actions ...... def is_fair(self): for a in self.actions: if '_unfair_' in a: return False return True ...... \u56de\u5230main.py fair = my_task.is_fair()#\u5224\u65adTrue/False,demo p03 is True,\u672c\u9898\u8bbe\u7f6e\u4e3aTrue print_policy = True if params['policy'] == 0: print_policy = False strong = True if params['strong'] == 0: strong = False show_gen_info = True if params['gen_info'] == 0: show_gen_info = False #\u6839\u636e\u8f93\u5165\u53c2\u6570\u51b3\u5b9a\u663e\u793a\u7ed3\u679c cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong) #\u91cd\u70b9\uff0c\u6839\u636e\u516c\u5f0f\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4f7f\u7528fair\uff0cstrong\u53d6\u503c\u51b3\u5b9a\u7b56\u7565 \u63a5\u4e0b\u6765\u8fd9\u4e2a\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u6ce8\u610f\u7559\u610f\u91cd\u70b9\uff1a \u00b6 solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!!\u6bcf\u6b21\u5faa\u73afk\u8ffd\u52a0nk,\u6bd4\u5982\u4f8b\u5b50\u4e2dcontrollerStates = ['n0', 'ng'] ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... \u56e0\u4e3a\u5927\u5faa\u73af\u5bf9\u6253\u65ad\uff0c\u6240\u4ee5\u6211\u5728\u5927\u5faa\u73af\u533a\u57df\u4e0a\u4e0b\u52a0\u5206\u5272\u7ebf solver_time = [] for i in range(1000): if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') controllerStates = generateControllerStates(i * params['inc']) print('=================================================') print('Trying with %i states' % len(controllerStates)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) print('# Atoms: %i' % len(my_task.get_atoms())) print('# Actions: %i' % len(my_task.get_actions())) '''\u8f93\u51fa \u7b2c\u4e00\u904d ================================================= Trying with 2 states Looking for strong plans: True Fair actions: True # Atoms: 3 # Actions: 4 \u7b2c\u4e8c\u904d3 states\u6709\u7b54\u6848 ================================================= Trying with 3 states Looking for strong plans: True Fair actions: True # Atoms: 3 # Actions: 4 ''' cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) print('SAT formula generation time = %f' % (timer() - start_g)) print('# Clauses = %i' % cnf.getNumberClauses()) print('# Variables = %i' % cnf.getNumberVariables()) '''\u8f93\u51fa \u7b2c\u4e00\u904d SAT formula generation time = 0.000691 # Clauses = 99 # Variables = 32 \u7b2c\u4e8c\u904d SAT formula generation time = 0.001249 # Clauses = 234 # Variables = 66 ''' if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') print('Creating formula...') name_final = cnf.generateInputSat(name_formula_file) print('Done creating formula. Calling solver...') '''\u8f93\u51fa \u7b2c\u4e00\u904d Creating formula... Done creating formula. Calling solver... \u7b2c\u4e8c\u904d Creating formula... Done creating formula. Calling solver... ''' start_solv = timer() time_for_sat = int(time_limit - (timer() - time_start)) if time_for_sat < time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') command = './minisat %s %s' % (name_formula_file, name_output_satsolver) # command = '/path/to/SATsolver/minisat -mem-lim=%i -cpu-lim=%i %s %s' % (mem_limit, time_for_sat, name_formula_file, name_output_satsolver) print('SAT solver called with %i MB and %i seconds' % (mem_limit, time_for_sat)) '''\u8f93\u51fa \u7b2c\u4e00\u904d SAT solver called with 4096 MB and 1287 seconds \u7b2c\u4e8c\u904d SAT solver called with 4096 MB and 1286 seconds ''' os.system(command) '''\u8c03\u7528minisat\u6c42\u89e3\u5f97\u5230\u8f93\u51fa\uff1a \u7b2c\u4e00\u904d restarts : 0 conflicts : 0 (0 /sec) decisions : 0 (0 /sec) propagations : 19 (1216 /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.79 MB CPU time : 0.015625 s UNSATISFIABLE\u7b2c\u4e00\u904d2 states\u6ca1\u627e\u5230\u7b54\u6848 \u7b2c\u4e8c\u904d\u627e\u5230\u7b54\u6848 ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 52 240 | 17 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 0 (-nan /sec) decisions : 3 (inf /sec) propagations : 66 (inf /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.79 MB CPU time : 0 s SATISFIABLE\u7b2c\u4e8c\u904d3 states\u6ee1\u8db3 ''' end_solv = timer() solver_time.append(end_solv - start_solv) print('Done solver. Round time: %f' % (end_solv - start_solv)) print('Cumulated solver time: %f' % sum(solver_time)) '''\u8f93\u51fa \u7b2c\u4e00\u904d 5120 Done solver. Round time: 0.164243 Cumulated solver time: 0.164243 \u7b2c\u4e8c\u904d ''' result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) if result is None: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME/MEM')#\u8d85\u51fa\u9650\u5b9a\u7684\u5185\u5b58\u548c\u65f6\u95f4\u4e5f\u627e\u4e0d\u5230\u7b54\u6848\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u89e3 if result: break print('UNSATISFIABLE')#\u65e0\u89e3 '''\u8f93\u51fa \u7b2c\u4e00\u904d2 states\u6ca1\u7ed3\u679cUNSATISFIABLE \u7b2c\u4e8c\u904d 2560 Done solver. Round time: 0.208893 Cumulated solver time: 0.373136 \u548c\u7b2c\u4e00\u6b21\u4e0d\u540c\u7684\u662f\u8fd9\u6b21\u6709\u89e3\uff0c\u8f93\u51fa\u7b54\u6848\u7b56\u7565\u8f68\u8ff9\u5e8f\u5217\u3002 \u8fd9\u90e8\u5206\u662f\u6839\u636eCNF.py\u4e2d\u7684def parseOutput(self, nameFile, controllerStates, parser, print_policy = False):\u7684\u8f93\u51fa\u7ed3\u679c =================== =================== Controller -- CS = Controller State =================== =================== Atom (CS) ___________________ ---------- Atom person-at(l1) (n0) ---------- Atom person-at(l2) (n1) ---------- Atom person-at(l3) (ng) =================== =================== (CS, Action with arguments) ___________________ (n0,move) (n0,move(l1,l2)) (n1,move(l2,l3)) (n1,move) =================== =================== (CS, Action name, CS) ___________________ (n0,move,n1) (n1,move,ng) =================== (CS, CS) ___________________ (n1,ng) (n0,n1) =================== Solved with 3 states ''' \u6838\u5fc3\u5faa\u73af\u5230\u6b64\u7ed3\u675f main.py\u5feb\u7ed3\u675f\u4e86 print('Elapsed total time (s): %f' % (timer() - time_start)) print('Elapsed solver time (s): %f' % sum(solver_time)) print('Elapsed solver time (s): %s' % str(solver_time)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, 'Done')#\u6e05\u7406\u4e2d\u95f4\u6587\u4ef6","title":"\u4f8b\u89e3FOND"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#stupid","text":"","title":"stupid"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#domainpddl","text":"(define (problem line-0) (:domain line) (:objects L1 - location L2 - location ) (:init (person-at L1) (road L1 L2) (road L2 L1) ) (:goal (person-at L2)) ) problem 2 grid move right ; Stupid Examples for me to understand this programe (define (domain line) (:requirements :typing) (:types location) (:predicates (person-at ?loc - location) (road ?from - location ?to - location) ) (:action move ;move\u52a8\u4f5c\u547d\u540d\u4e3amove\u624d\u5408\u7406\u3002\u4e00\u5f00\u59cb\u4f8b\u5b50\u6ca1\u5199\u597d\uff0c\u53cd\u6b63\u540e\u7eed\u201cmove\u201d\u90fd\u7406\u89e3\u4e3amove\u5c31\u597d\u3002\u524d\u63d0\u7ea6\u675f\u597d\u50cf\u4e5f\u6709\u70b9\u5c0f\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd\u540e\u7eed\u7406\u89e3\uff0c\u5c31\u61d2\u5f97\u6539\u52a8\u4e86\u3002 :parameters (?from - location ?to - location) :precondition (and (person-at ?from) (road ?from ?to)) :effect (and (person-at ?to) (not (person-at ?from))) ) ) /src$ python main.py ../mystupidroad/domain.pddl ../mystupidroad/stupid.pddl -strong 1 -policy 1 \u4e2d\u95f4\u6587\u4ef6\uff1a","title":"domain.pddl"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#sas","text":"begin_version 3 end_version begin_metric 0 end_metric 1 begin_variable var0 -1 2 Atom person-at(l1) Atom person-at(l2) end_variable 1 begin_mutex_group 2 0 0 0 1 end_mutex_group begin_state 0 end_state begin_goal 1 0 1 end_goal 2 begin_operator move l1 l2 0 1 0 0 0 1 0 end_operator begin_operator move l2 l1 0 1 0 0 1 0 0 end_operator 0","title":"\u5148\u751f\u6210sas\u6587\u4ef6"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#pparsersasmy_taskmy_task","text":">>> my_task.print_task() ATOMS ================================================ (var0=1) (var0=0) INITIAL ============================================== (var0=0) GOAL ================================================= (var0=1) ACTIONS ============================================== ('move(l1,l2)', []) ('move(l1,l2)', [['(var0=0)'], ['(var0=1)'], ['(var0=0)']]) ('move(l2,l1)', []) ('move(l2,l1)', [['(var0=1)'], ['(var0=0)'], ['(var0=1)']]) >>> print(my_task.action_nondet) {'move(l1,l2)': [], 'move(l2,l1)': []} >>> print(my_task.action_cardinality) {'move': 1, 'move(l1,l2)': 1, 'move(l2,l1)': 1} >>> print(my_task.mutex_groups) [['(var0=0)', '(var0=1)']] >>> print(my_task.compatible_actions) {'move(l1,l2)': set([]), 'move(l2,l1)': set([])} >>> print(my_task.mutex_groups_set) [set(['(var0=1)', '(var0=0)'])] >>> print(my_task.relevant_actions_atom) {'(var0=1)': set(['move(l1,l2)', 'move(l2,l1)']), '(var0=0)': set(['move(l1,l2)', 'move(l2,l1)'])} >>> print(my_task.relevant_actions_atom_aname) {} >>> print(my_task.action_names) set(['move']) >>> print(my_task.other_actions_name) {'move': []} >>> print(my_task.action_name_to_actions) {'move': ['move(l1,l2)', 'move(l2,l1)']}","title":"\u7136\u540ep=Parser()\u8bfb\u53d6sas\u6587\u4ef6\u751f\u6210my_task()\u5bf9\u8c61my_task\u6570\u636e\u5bf9\u8c61\u5b58\u50a8\u7ed3\u6784\uff1a"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#clauses-70-variables-26","text":"\u5b9e\u9645\u7684\u8f93\u51fa\u4e2d\uff1a SAT formula generation time = 0.000351 # Clauses = 70 # Variables = 26 \u7136\u540e\u5728cnf=CNF\u7c7b\u7684\u5bf9\u8c61\u8f93\u5165my_task\u6570\u636e, main.py\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u7559\u610f\u91cd\u70b9\uff1a solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!! \u4f20\u5165\u5b57\u7b26'n0', \u7ec8\u6001'ng' >>> print(controllerStates) ['n0', 'n1', 'ng']\u8fd9\u4e2a\u662f3\u683c\u7684\u60c5\u51b5\uff0c2\u683c\u7684\u65f6\u5019\u662f['n0','ng'] >>> len(controllerStates) 3 >>> print(show_gen_info) False\u61d2\u5f97\u663e\u793a\u8fd9\u90e8\u5206\uff0c\u56e0\u4e3a\u548c\u6211\u8981\u5173\u5fc3\u7684\u91cd\u70b9\u6ca1\u5173\u7cfb \u8fd9\u91cc\u7684p\u662fParser\u5b9e\u4f8b\uff0c\u53ef\u80fd\u7528\u91cc\u9762\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u57fa\u672c\u770b\u7740\u90fd\u662f\u79c1\u6709\u53d8\u91cf ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... \u751f\u6210Fomula-temp.txt\uff0c\u548cformula-temp.txtheader\u552f\u4e00\u533a\u522b\u7b2c\u4e00\u884c\uff0ccnf 1,1\u3002\u91cc\u9762\u4fdd\u5b58\u7740\u6240\u6709Clause\u7684cnf\u683c\u5f0f\u5408\u53d6\u8303\u5f0f\u516c\u5f0f\u7f16\u53f7\uff0c\u7b26\u53f7\u6b63\u8d1f\u5e94\u8be5\u4ee3\u8868\u5bf9\u5e94\u5b50\u5f0fClauses\u6b63\u8d1f\u6587\u5b57\uff0c 26Variables\u751f\u621070Clauses\u7684cnf\u6587\u4ef6 Variables 26 >>> cnf.printVariables() reachableG(ng,0) (ng,move,n0) (ng,move(l1,l2)) reachableI(n0) (n0,move) (ng,move(l2,l1)) (n0,move,ng) (ng,move,ng) reachableI(ng) reachableG(n0,0) (var0=0)(n0) (ng,move) (n0,n0) reachableG(ng,1) YR1-n0-n0-0 (ng,n0) (var0=0)(ng) YR1-n0-ng-0 (var0=1)(n0) (n0,move(l2,l1)) (ng,ng) (n0,ng) (n0,move,n0) (var0=1)(ng) (n0,move(l1,l2)) reachableG(n0,1) p cnf 1 1 -1 0 2 0 -3 4 0 -5 1 0 -6 7 0 -8 2 0 -11 -12 0 -12 -11 0 -3 9 0 -5 9 0 -9 11 12 0 -9 3 5 0 -13 -14 0 -14 -13 0 -6 10 0 -8 10 0 -10 13 14 0 -10 6 8 0 -11 9 0 -12 9 0 -13 10 0 -14 10 0 9 0 -11 -5 -1 0 -15 1 -1 3 0 -11 -3 -4 0 -15 4 -4 5 0 -12 -5 -2 0 -16 1 -2 3 0 -12 -3 -7 0 -16 4 -7 5 0 -13 -8 -1 0 -17 2 -1 6 0 -13 -6 -4 0 -17 7 -4 8 0 -14 -8 -2 0 -18 2 -2 6 0 -14 -6 -7 0 -18 7 -7 8 0 -11 15 0 -15 11 0 -12 16 0 -16 12 0 -13 17 0 -17 13 0 -14 18 0 -18 14 0 19 0 -15 -19 19 0 -16 -19 20 0 -17 -20 19 0 -18 -20 20 0 -19 21 0 -20 22 0 23 0 22 0 -24 0 -24 21 0 -23 22 0 -25 -15 24 0 -24 25 0 15 25 0 -26 -16 23 0 -23 26 0 16 26 0 -21 25 0 -21 26 0 21 -25 -26 0 -4 -1 0 -7 -2 0 \u5bf9\u5e94\u547d\u9898cnf\u5c31\u662fClauses 70 p cnf 1 1 '(var0=1)(n0)' 0 '(var0=1)(ng)' 0 \u8d1f'(n0,move(l1,l2))' '(var0=0)(n0)' 0 \u8d1f'(n0,move(l2,l1))' '(var0=1)(n0)' 0 \u8d1f'(ng,move(l1,l2))' '(var0=0)(ng)' 0 \u8d1f'(ng,move(l2,l1))' '(var0=1)(ng)' 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move,ng)' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move,n0)' 0 \u8d1f'(n0,move(l1,l2))' '(n0,move)' 0 \u8d1f'(n0,move(l2,l1))' '(n0,move)' 0 \u8d1f'(n0,move)' '(n0,move,n0)' '(n0,move,ng)' 0 \u8d1f'(n0,move)' '(n0,move(l1,l2))' '(n0,move(l2,l1))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move,ng)' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move,n0)' 0 \u8d1f'(ng,move(l1,l2))' '(ng,move)' 0 \u8d1f'(ng,move(l2,l1))' '(ng,move)' 0 \u8d1f'(ng,move)' '(ng,move,n0)' '(ng,move,ng)' 0 \u8d1f'(ng,move)' '(ng,move(l1,l2))' '(ng,move(l2,l1))' 0 \u8d1f'(n0,move,n0)' '(n0,move)' 0 \u8d1f'(n0,move,ng)' '(n0,move)' 0 \u8d1f'(ng,move,n0)' '(ng,move)' 0 \u8d1f'(ng,move,ng)' '(ng,move)' 0 '(n0,move)' 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move(l2,l1))' '(var0=1)(n0)' 0 \u8d1f'(n0,n0)' '(var0=1)(n0)' '(var0=1)(n0)' '(n0,move(l1,l2))' 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move(l1,l2))' \u8d1f'(var0=0)(n0)' 0 \u8d1f'(n0,n0)' '(var0=0)(n0)' \u8d1f'(var0=0)(n0)' '(n0,move(l2,l1))' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move(l2,l1))' \u8d1f'(var0=1)(ng)' 0 \u8d1f'(n0,ng)' '(var0=1)(n0)' \u8d1f'(var0=1)(ng)' '(n0,move(l1,l2))' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move(l1,l2))' \u8d1f'(var0=0)(ng)' 0 \u8d1f'(n0,ng)' '(var0=0)(n0)' \u8d1f'(var0=0)(ng)' '(n0,move(l2,l1))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move(l2,l1))' '(var0=1)(n0)' 0 \u8d1f'(ng,n0)' '(var0=1)(ng)' '(var0=1)(n0)' '(ng,move(l1,l2))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move(l1,l2))' \u8d1f'(var0=0)(n0)' 0 \u8d1f'(ng,n0)' '(var0=0)(ng)' \u8d1f'(var0=0)(n0)' '(ng,move(l2,l1))' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move(l2,l1))' \u8d1f'(var0=1)(ng)' 0 \u8d1f'(ng,ng)' '(var0=1)(ng)' \u8d1f'(var0=1)(ng)' '(ng,move(l1,l2))' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move(l1,l2))' \u8d1f'(var0=0)(ng)' 0 \u8d1f'(ng,ng)' '(var0=0)(ng)' \u8d1f'(var0=0)(ng)' '(ng,move(l2,l1))' 0 \u8d1f'(n0,move,n0)' '(n0,n0)' 0 \u8d1f'(n0,n0)' '(n0,move,n0)' 0 \u8d1f'(n0,move,ng)' '(n0,ng)' 0 \u8d1f'(n0,ng)' '(n0,move,ng)' 0 \u8d1f'(ng,move,n0)' '(ng,n0)' 0 \u8d1f'(ng,n0)' '(ng,move,n0)' 0 \u8d1f'(ng,move,ng)' '(ng,ng)' 0 \u8d1f'(ng,ng)' '(ng,move,ng)' 0 'reachableI(n0)' 0 \u8d1f'(n0,n0)' \u8d1f'reachableI(n0)' 'reachableI(n0)' 0 \u8d1f'(n0,ng)' \u8d1f'reachableI(n0)' 'reachableI(ng)' 0 \u8d1f'(ng,n0)' \u8d1f'reachableI(ng)' 'reachableI(n0)' 0 \u8d1f'(ng,ng)' \u8d1f'reachableI(ng)' 'reachableI(ng)' 0 \u8d1f'reachableI(n0)' 'reachableG(n0,1)' 0 \u8d1f'reachableI(ng)' 'reachableG(ng,1)' 0 'reachableG(ng,0)' 0 'reachableG(ng,1)' 0 \u8d1f'reachableG(n0,0)' 0 \u8d1f'reachableG(n0,0)' 'reachableG(n0,1)' 0 \u8d1f'reachableG(ng,0)' 'reachableG(ng,1)' 0 \u8d1f'YR1-n0-n0-0' \u8d1f'(n0,n0)' 'reachableG(n0,0)' 0 \u8d1f'reachableG(n0,0)' 'YR1-n0-n0-0' 0 '(n0,n0)' 'YR1-n0-n0-0' 0 \u8d1f'YR1-n0-ng-0' \u8d1f'(n0,ng)' 'reachableG(ng,0)' 0 \u8d1f'reachableG(ng,0)' 'YR1-n0-ng-0' 0 '(n0,ng)' 'YR1-n0-ng-0' 0 \u8d1f'reachableG(n0,1)' 'YR1-n0-n0-0' 0 \u8d1f'reachableG(n0,1)' 'YR1-n0-ng-0' 0 'reachableG(n0,1)' \u8d1f'YR1-n0-n0-0' \u8d1f'YR1-n0-ng-0' 0 \u8d1f'(var0=0)(n0)' '(var0=1)(n0)' 0 \u8d1f'(var0=0)(ng)' \u8d1f'(var0=1)(ng)' 0 cnf.py ########################################### ############## GENERATION ################# ########################################### #def generate_clauses(self, task, initialCState, goalCState, controllerStates, k, parser = None, debug = False): def generate_clauses(self, task, initialCState, goalCState, controllerStates, k, parser = None, debug = True): self.generateInitial(task, initialCState, debug) self.generateGoal(task, goalCState, debug) self.generatePreconditions(task, controllerStates, debug) self.generatePossibleNonDet(task, controllerStates, debug) self.generateOneSuccessor(task, controllerStates, debug) self.generateTripletForcesBin(task, controllerStates, debug) self.generateAtLeastOneAction(task, controllerStates, debug) self.generateNegativeForwardPropagation(task, controllerStates, debug) self.generateGeneralizeConnection(task, controllerStates, debug) self.generateReachableIClauses(task, initialCState, controllerStates, k, debug) self.generateReachableGClauses(task, controllerStates, goalCState, k, debug) self.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) self.generateMutexGroupsClauses(task, controllerStates, debug) ### cnf.26Variables \u2192 70Clauses \u5bf9\u5e94\u7684\u5b50\u53e5\u751f\u6210\u5982\u4e0b\u6240\u793a\uff1a >>> cnf.reset() p cnf 1 1 >>> start_g = timer() >>> task=my_task >>> initialCState='n0' >>> goalCState='ng' >>> debug=True >>> k=len(controllerStates) self.generateInitial(task, initialCState, debug) # -p(n0) for all p not in initial state \u7ed3\u679c >>> cnf.generateInitial(task, initialCState, debug) -1 0 \u8d1f'(var0=1)(n0)' 0 Generation: Initial v 1 c : 1 0.000241 self.generateGoal(task, goalCState, debug) # p(ng) for all p in goal state \u7ed3\u679c >>> cnf.generateGoal(task, goalCState, debug) 2 0 '(var0=1)(ng)' 0 Generation: Goal v 1 c : 1 0.000200 self.generatePreconditions(task, controllerStates, debug) # p(ng) for all p in goal state \u7ed3\u679c >>> cnf.generatePreconditions(task, controllerStates, debug) -3 4 0 -5 1 0 -6 7 0 -8 2 0 \u8d1f'(n0,move(l1,l2))' '(var0=0)(n0)' 0 \u8d1f'(n0,move(l2,l1))' 1 0 \u8d1f'(ng,move(l1,l2))' '(var0=0)(ng)' 0 \u8d1f'(ng,move(l2,l1))' '(var0=1)(ng)' 0 self.generatePossibleNonDet(task, controllerStates, debug) # 1. (n, act) --> (n, act') // act, act' are non det act of equal det action (action names) # 2. (n, act) --> -(n, act'') // # 3. (n, b) --> (n, b') // b, b' are siblings # 4. (n, b) --> -(n, b'') // b, b'' belong to same act \u7ed3\u679c >>> cnf.generatePossibleNonDet(task, controllerStates, debug) Generation: Non Det v 2 c : 0 0.000035 self.generateOneSuccessor(task, controllerStates, debug) # 1. (n, act) --> \\OR_{b} (n, b) // for b with name act # 2. (n, act) --> \\OR_{n'} (n, act, n') # 3. -(n, act, n') \\lor -(n, act, n'') # 4. (n, b) --> (n, act) \u7ed3\u679c >>> cnf.generateOneSuccessor(task, controllerStates, debug) -11 -12 0 -12 -11 0 -3 9 0 -5 9 0 -9 11 12 0 -9 3 5 0 -13 -14 0 -14 -13 0 -6 10 0 -8 10 0 -10 13 14 0 -10 6 8 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move,ng)' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move,n0)' 0 \u8d1f'(n0,move(l1,l2))' '(n0,move)' 0 \u8d1f'(n0,move(l2,l1))' '(n0,move)' 0 \u8d1f'(n0,move)' '(n0,move,n0)' '(n0,move,ng)' 0 \u8d1f'(n0,move)' '(n0,move(l1,l2))' '(n0,move(l2,l1))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move,ng)' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move,n0)' 0 \u8d1f'(ng,move(l1,l2))' '(ng,move)' 0 \u8d1f'(ng,move(l2,l1))' '(ng,move)' 0 \u8d1f'(ng,move)' '(ng,move,n0)' '(ng,move,ng)' 0 \u8d1f'(ng,move)' '(ng,move(l1,l2))' '(ng,move(l2,l1))' 0 Generation: One succ v 4 c : 12 0.085124 self.generateTripletForcesBin(task, controllerStates, debug) # (n, act, n') --> (n, act) \u7ed3\u679c >>> cnf.generateTripletForcesBin(task, controllerStates, debug) -11 9 0 -12 9 0 -13 10 0 -14 10 0 \u8d1f'(n0,move,n0)' '(n0,move)' 0 \u8d1f'(n0,move,ng)' '(n0,move)' 0 \u8d1f'(ng,move,n0)' '(ng,move)' 0 \u8d1f'(ng,move,ng)' '(ng,move)' 0 Generation: Trip bin v 0 c : 4 0.030731 self.generateAtLeastOneAction(task, controllerStates, debug) # \\OR_{act_name} (n, act) for all n except goal, ng \u7ed3\u679c >>> cnf.generateAtLeastOneAction(task, controllerStates, debug) 9 0 '(n0,move)' 0 Generation: One act v 0 c : 1 0.005008 self.generateNegativeForwardPropagation(task, controllerStates, debug) # 1. (n, act, n') \\land (n, b) --> -p(n') // if p in delete list # 2. (n, n') \\land -p(n) --> -p(n') \\lor \\OR_{b: p \\in add(b)} (n, b) # 3. (n, act, n') \\land (n, b) \\land -p(n) --> -p(n') // if p \\not \\in add(b) # and some sibling of b adds p # for a in actions: # print(a, task.get_del_list(a)) # print(a, task.get_add_list(a)) 2.(n, n') \\(\\land\\) -p(n) \u2192 -p(n') \\(\\lor\\) \\(\\lor_{b: p \\in add(b)}\\) \uff08n,b\uff09 \u7ed3\u679c >>> cnf.generateNegativeForwardPropagation(task, controllerStates, debug) -11 -5 -1 0 -15 1 -1 3 0 -11 -3 -4 0 -15 4 -4 5 0 -12 -5 -2 0 -16 1 -2 3 0 -12 -3 -7 0 -16 4 -7 5 0 -13 -8 -1 0 -17 2 -1 6 0 -13 -6 -4 0 -17 7 -4 8 0 -14 -8 -2 0 -18 2 -2 6 0 -14 -6 -7 0 -18 7 -7 8 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move(l2,l1))' \u8d1f'(var0=1)(n0)' 0 \u8d1f'(n0,n0)' '(var0=1)(n0)' \u8d1f'(var0=1)(n0)' '(n0,move(l1,l2))' 0 \u8d1f'(n0,move,n0)' \u8d1f'(n0,move(l1,l2))' \u8d1f'(var0=0)(n0)' 0 \u8d1f'(n0,n0)' '(var0=0)(n0)' \u8d1f'(var0=0)(n0)' '(n0,move(l2,l1))' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move(l2,l1))' \u8d1f'(var0=1)(ng)' 0 \u8d1f'(n0,ng)' '(var0=1)(n0)' \u8d1f'(var0=1)(ng)' '(n0,move(l1,l2))' 0 \u8d1f'(n0,move,ng)' \u8d1f'(n0,move(l1,l2))' \u8d1f'(var0=0)(ng)' 0 \u8d1f'(n0,ng)' '(var0=0)(n0)' \u8d1f'(var0=0)(ng)' '(n0,move(l2,l1))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move(l2,l1))' \u8d1f'(var0=1)(n0)' 0 \u8d1f'(ng,n0)' '(var0=1)(ng)' \u8d1f'(var0=1)(n0)' '(ng,move(l1,l2))' 0 \u8d1f'(ng,move,n0)' \u8d1f'(ng,move(l1,l2))' \u8d1f'(var0=0)(n0)' 0 \u8d1f'(ng,n0)' '(var0=0)(ng)' \u8d1f'(var0=0)(n0)' '(ng,move(l2,l1))' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move(l2,l1))' \u8d1f'(var0=1)(ng)' 0 \u8d1f'(ng,ng)' '(var0=1)(ng)' \u8d1f'(var0=1)(ng)' '(ng,move(l1,l2))' 0 \u8d1f'(ng,move,ng)' \u8d1f'(ng,move(l1,l2))' \u8d1f'(var0=0)(ng)' 0 \u8d1f'(ng,ng)' '(var0=0)(ng)' \u8d1f'(var0=0)(ng)' '(ng,move(l2,l1))' 0 Generation: Neg Prop v 4 c : 16 0.135173 self.generateGeneralizeConnection(task, controllerStates, debug) # (n, n') <--> \\OR_{act} (n, act, n') \u7ed3\u679c >>> cnf.generateGeneralizeConnection(task, controllerStates, debug) -11 15 0 -15 11 0 -12 16 0 -16 12 0 -13 17 0 -17 13 0 -14 18 0 -18 14 0 \u8d1f'(n0,move,n0)' '(n0,n0)' 0 \u8d1f'(n0,n0)' '(n0,move,n0)' 0 \u8d1f'(n0,move,ng)' '(n0,ng)' 0 \u8d1f'(n0,ng)' '(n0,move,ng)' 0 \u8d1f'(ng,move,n0)' '(ng,n0)' 0 \u8d1f'(ng,n0)' '(ng,move,n0)' 0 \u8d1f'(ng,move,ng)' '(ng,ng)' 0 \u8d1f'(ng,ng)' '(ng,move,ng)' 0 Generation: Gen conn v 0 c : 8 0.048381 self.generateReachableIClauses(task, initialCState, controllerStates, k, debug) \u7ed3\u679c >>> cnf.generateReachableIClauses(task, initialCState, controllerStates, k, debug) 19 0 'reachableI(n0)' 0 Generation: RI init v 1 c : 1 0.005257 -15 -19 19 0 -16 -19 20 0 -17 -20 19 0 -18 -20 20 0 \u8d1f'(n0,n0)' \u8d1f'reachableI(n0)' 'reachableI(n0)' 0 \u8d1f'(n0,ng)' \u8d1f'reachableI(n0)' 'reachableI(ng)' 0 \u8d1f'(ng,n0)' \u8d1f'reachableI(ng)' 'reachableI(n0)' 0 \u8d1f'(ng,ng)' \u8d1f'reachableI(ng)' 'reachableI(ng)' 0 Generation: RI prop v 1 c : 4 0.030447 -19 21 0 -20 22 0 \u8d1f'reachableI(n0)' 'reachableG(n0,1)' 0 \u8d1f'reachableI(ng)' 'reachableG(ng,1)' 0 Generation: IG prop v 2 c : 2 0.007711 self.generateReachableGClauses(task, controllerStates, goalCState, k, debug) def generateReachableGClauses(self, task, controllerStates, goalCState, k, debug = True): self.generateReachableGInitial(task, goalCState, controllerStates, k - 1, debug) # ReachG(ng,0), ReachG(ng,1), ... # -ReachG(n, 0) for n != ng # set the initial values for goal state # set the negation for non goal states self.generateCompletionReachabilityG(task, controllerStates, k - 1, debug) # ReachG(n,j) --> ReachG(n, j+1) if self.strong: self.generatePropagationReachableGStrong(task, controllerStates, k - 1, debug) # ReachG(n, j+1) <--> \\AND_{n'} [(n,n') --> ReachG(n', j)] # Force the equivalences # Right arrow # Left arrow else: if not self.fair: self.generatePropagationReachableGUnfair(task, controllerStates, k - 1, debug) # ReachG(n, j+1) <--> [1] # [1] = [2] \\lor [3] # [2] = (n, unfair) \\land \\AND_{n'} [(n,n') --> RG(n',j)] # [3] = \\OR_{n'} [(n, fair) \\land (n,n') \\land RG(n',j)] c1, v1 = self.get_num_cl_vars() start = timer() # Set variables (n, fair) and (n, unfair) self.setFairUnfairActions(task, controllerStates) # Force the equivalences for [2] # [(n,n') --> RG(n',j)] <-> Repl(n,n',j) # Force the equivalences for [3] # [(n, fair) \\land (n,n') \\land RG(n',j)] <-> Repl3(n,n',j) # Right arrow # Left arrow else: self.generatePropagationReachableGCyclic(task, controllerStates, k - 1, debug) # ReachG(n, j+1) <--> \\OR_{n'} [(n,n') \\land ReachG(n', j)] c1, v1 = self.get_num_cl_vars() start = timer() # Force the equivalences # Right arrow # Left arrow \u7ed3\u679c >>> cnf.generateReachableGClauses(task, controllerStates, goalCState, k, debug) 23 0 22 0 -24 0 'reachableG(ng,0)' 0 'reachableG(ng,1)' 0 \u8d1f'reachableG(n0,0)' 0 Generation: RG init v 2 c : 3 0.009479 -24 21 0 -23 22 0 \u8d1f'reachableG(n0,0)' 'reachableG(n0,1)' 0 \u8d1f'reachableG(ng,0)' 'reachableG(ng,1)' 0 Generation: RG compl v 0 c : 2 0.012321 -25 -15 24 0 -24 25 0 15 25 0 -26 -16 23 0 -23 26 0 16 26 0 -21 25 0 -21 26 0 21 -25 -26 0 \u8d1f'YR1-n0-n0-0' \u8d1f'(n0,n0)' 'reachableG(n0,0)' 0 \u8d1f'reachableG(n0,0)' 'YR1-n0-n0-0' 0 '(n0,n0)' 'YR1-n0-n0-0' 0 \u8d1f'YR1-n0-ng-0' \u8d1f'(n0,ng)' 'reachableG(ng,0)' 0 \u8d1f'reachableG(ng,0)' 'YR1-n0-ng-0' 0 '(n0,ng)' 'YR1-n0-ng-0' 0 \u8d1f'reachableG(n0,1)' 'YR1-n0-n0-0' 0 \u8d1f'reachableG(n0,1)' 'YR1-n0-ng-0' 0 'reachableG(n0,1)' \u8d1f'YR1-n0-n0-0' \u8d1f'YR1-n0-ng-0' 0 Generation: RG prop v 2 c : 9 0.059131 self.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) # (na, nb) --> \\OR_{i<=a} (n_i, n_{b-1}) \u7ed3\u679c >>> cnf.generateSymmetryBreaking(task, controllerStates, initialCState, goalCState, debug) Generation: Sym brk v 0 c : 0 0.000004 self.generateMutexGroupsClauses(task, controllerStates, debug) \u7ed3\u679c >>> cnf.generateMutexGroupsClauses(task, controllerStates, debug) -4 -1 0 -7 -2 0 \u8d1f'(var0=0)(n0)' \u8d1f'(var0=1)(n0)' 0 \u8d1f'(var0=0)(ng)' \u8d1f'(var0=1)(ng)' 0 Generation: Mutex v 0 c : 2 0.010046","title":"Clauses = 70  Variables = 26"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#minisatcnfoutsat-temptx","text":"land : \\(\\land\\) lor: \\(lor\\) \u4e5f\u5c31\u662f\u8bf4\u5728\u547d\u4ee4\u884c\u8f93\u5165\uff1a >./minisat formula-temp.txt outsat-temp.txt [MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 21 69 | 7 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 0 (-nan /sec) decisions : 3 (inf /sec) propagations : 26 (inf /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.79 MB CPU time : 0 s SATISFIABLE \u6839\u636e\u4e0acnf\u6587\u4ef6\u751f\u6210\u7684outsat-temp.txt SAT -1 2 3 4 -5 -6 -7 -8 9 -10 -11 12 -13 -14 -15 16 -17 -18 19 20 21 22 23 -24 25 26 0 \u4e5f\u5c31\u662fsat\u5bf9\u5e94\u7684\u516c\u5f0f\u7ed3\u8bba \u7136\u540epython\u8bfb\u53d6\u8fd9\u4e2a\u6ee1\u8db3cnf\u5408\u53d6\u8303\u5f0f\u95ee\u9898\u7684\u53ef\u6ee1\u8db3sat\u89e3\uff0c\u627e\u5230\u5bf9\u5e94\u7f16\u53f7\u7684\u516c\u5f0f\u7ffb\u8bd1\u51fa\u6765\u53d8\u6210\u65b9\u6848\u3002 \u6839\u636e\u4e0b\u9762\u7684","title":"\u901a\u8fc7\u8c03\u7528minisat\u6839\u636e\u4e0acnf\u6587\u4ef6\u751f\u6210\u7684outsat-temp.tx"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#_1","text":">>> print(cnf.mapNumberVariable) {1: '(var0=1)(n0)', 2: '(var0=1)(ng)', 3: '(n0,move(l1,l2))', 4: '(var0=0)(n0)', 5: '(n0,move(l2,l1))', 6: '(ng,move(l1,l2))', 7: '(var0=0)(ng)', 8: '(ng,move(l2,l1))', 9: '(n0,move)', 10: '(ng,move)', 11: '(n0,move,n0)', 12: '(n0,move,ng)', 13: '(ng,move,n0)', 14: '(ng,move,ng)', 15: '(n0,n0)', 16: '(n0,ng)', 17: '(ng,n0)', 18: '(ng,ng)', 19: 'reachableI(n0)', 20: 'reachableI(ng)', 21: 'reachableG(n0,1)', 22: 'reachableG(ng,1)', 23: 'reachableG(ng,0)', 24: 'reachableG(n0,0)', 25: 'YR1-n0-n0-0', 26: 'YR1-n0-ng-0'} >>> print(cnf.mapVariableType) {'reachableG(ng,0)': 5, '(ng,move,n0)': 3, '(ng,move(l1,l2))': 2, 'reachableI(n0)': 4, '(n0,move)': 2, '(ng,move(l2,l1))': 2, '(n0,move,ng)': 3, '(ng,move,ng)': 3, 'reachableI(ng)': 4, 'reachableG(n0,0)': 5, '(var0=0)(n0)': 1, '(ng,move)': 2, '(n0,n0)': 7, 'reachableG(ng,1)': 5, 'YR1-n0-n0-0': 6, '(ng,n0)': 7, '(var0=0)(ng)': 1, 'YR1-n0-ng-0': 6, '(var0=1)(n0)': 1, '(n0,move(l2,l1))': 2, '(ng,ng)': 7, '(n0,ng)': 7, '(n0,move,n0)': 3, '(var0=1)(ng)': 1, '(n0,move(l1,l2))': 2, 'reachableG(n0,1)': 5} >>> print(cnf.mapVariableNumber) {'reachableG(ng,0)': 23, '(ng,move,n0)': 13, '(ng,move(l1,l2))': 6, 'reachableI(n0)': 19, '(n0,move)': 9, '(ng,move(l2,l1))': 8, '(n0,move,ng)': 12, '(ng,move,ng)': 14, 'reachableI(ng)': 20, 'reachableG(n0,0)': 24, '(var0=0)(n0)': 4, '(ng,move)': 10, '(n0,n0)': 15, 'reachableG(ng,1)': 22, 'YR1-n0-n0-0': 25, '(ng,n0)': 17, '(var0=0)(ng)': 7, 'YR1-n0-ng-0': 26, '(var0=1)(n0)': 1, '(n0,move(l2,l1))': 5, '(ng,ng)': 18, '(n0,ng)': 16, '(n0,move,n0)': 11, '(var0=1)(ng)': 2, '(n0,move(l1,l2))': 3, 'reachableG(n0,1)': 21} SAT -1 2 3 4 -5 -6 -7 -8 9 -10 -11 12 -13 -14 -15 16 -17 -18 19 20 21 22 23 -24 25 26 0 \u662f\u8fd9\u4e9bcnf\u5408\u53d6\u8303\u5f0f\u8d77\u6765\u5f97\u5230\u7684\u7ed3\u679c 2: '(var0=1)(ng)', 3: '(n0,move(l1,l2))', 4: '(var0=0)(n0)', 9: '(n0,move)', 12: '(n0,move,ng)', 16: '(n0,ng)', 19: 'reachableI(n0)', 20: 'reachableI(ng)', 21: 'reachableG(n0,1)', 22: 'reachableG(ng,1)', 23: 'reachableG(ng,0)', 25: 'YR1-n0-n0-0', 26: 'YR1-n0-ng-0'} =================== =================== Controller -- CS = Controller State =================== =================== Atom (CS) ___________________ ---------- Atom person-at(l1) (n0) ---------- Atom person-at(l2) (ng) =================== =================== (CS, Action with arguments) ___________________ (n0,move(l1,l2)) (n0,move) =================== =================== (CS, Action name, CS) ___________________ (n0,move,ng) =================== (CS, CS) ___________________ (n0,ng) ===================","title":"\u516c\u5f0f\u6620\u5c04"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#_2","text":"==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 21 69 | 7 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 0 (-nan /sec) decisions : 3 (inf /sec) propagations : 26 (inf /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.79 MB CPU time : 0 s SATISFIABLE Setting atoms # Atoms: 2 Setting initial Setting goal Setting actions # Actions: 2 Setting other actions (0, '/', 2) Setting action card Setting mutexes Setting relevant actions Setting splitting Setting compatible actions (0, '/', 2) 2.88486480713e-05 ================================================= Trying with 2 states Looking for strong plans: True Fair actions: True # Atoms: 2 # Actions: 2 SAT formula generation time = 0.000351 # Clauses = 70 # Variables = 26 Creating formula... Done creating formula. Calling solver... SAT solver called with 4096 MB and 3599 seconds Done solver. Round time: 0.015620 Cumulated solver time: 0.015620 ... Solved with 2 states Elapsed total time (s): 0.115060 Elapsed solver time (s): 0.015620 Elapsed solver time (s): [0.015619993209838867] Looking for strong plans: True Fair actions: True","title":"\u6700\u7ec8\u7ed3\u679c\uff1a"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#stupid-road-demo-run-in-ipythonjupyter","text":"","title":"\u6211\u7684stupid road demo run in Ipython/Jupyter"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#mainpy","text":"from CNF import CNF import os import sys from myTask import MyTask from timeit import default_timer as timer import time import argparse from parser import Parser def clean_and_exit(n1, n2, n3, n4, n5, msg): print(msg) os.system('rm %s %s %s %s %s' % (n1, n2, n3, n4, n5)) exit() def generateControllerStates(i): controllerStates = ['n0'] for j in range(i): controllerStates.append('n' + str(j + 1)) controllerStates.append('ng') return controllerStates","title":"main.py"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#args","text":"# my stuppid example: params={'time_limit': 3600, 'inc': 1, 'path_domain': '../mystupidroad/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 1, 'path_instance': '../mystupidroad/stupid.pddl', 'name_temp': 'temp'} #print params dictionary #print(params) #raw_input() # Run code below in ipython # params={'time_limit': 3600, 'inc': 1, 'path_domain': '../F-domains/islands/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../F-domains/islands/p03.pddl', 'name_temp': 'temp'} # my stuppid example: #params={'time_limit': 3600, 'inc': 1, 'path_domain': '../mystupidroad/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 1, 'path_instance': '../mystupidroad/stupid.pddl', 'name_temp': 'temp'} time_start = timer() time_limit = params['time_limit'] #3600 default time_buffer = 2 mem_limit = params['mem_limit'] #4096 default p = Parser() p.set_domain(params['path_domain']) #path_domain p.set_problem(params['path_instance']) #path_instance name_formula_file = 'formula-' + params['name_temp'] + '.txt' #name_formula_file formula-temp.txt formula-temp.txtheader cnf diff In ---> p cnf 656 7458 --- > p cnf 1 1 name_formula_file_extra = 'formula-extra-' + params['name_temp'] + '.txt' #name_formula_file_extra :formula-extra-temp.txt blank name_output_satsolver = 'outsat-' + params['name_temp'] + '.txt' #name_output_satsolver : outsat-temp.txt name_sas_file = 'outputtrans-' + params['name_temp'] + '.sas' #name_sas_file outputtrans-temp.sas #time_limit 3600 default #mem_limit 4096 default #path_domain #path_instance # params={'time_limit': 3600, 'inc': 1, 'path_domain': '../F-domains/islands/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../F-domains/islands/p03.pddl', 'name_temp': 'temp'} # my stuppid example: #params={'time_limit': 3600, 'inc': 1, 'path_domain': '../mystupidroad/domain.pddl', 'gen_info': 0, 'policy': 1, 'mem_limit': 4096, 'strong': 0, 'path_instance': '../mystupidroad/stupid.pddl', 'name_temp': 'temp'} # middle Files to be clean and exit #name_formula_file :formula-temp.txt formula-temp.txtheader cnf diff in ---> p cnf 656 7458 --- > p cnf 1 1 #name_formula_file_extra :formula-extra-temp.txt blank #name_output_satsolver : outsat-temp.txt #name_sas_file ;outputtrans-temp.sas p.generate_file(name_sas_file) \u76f8\u5f53\u4e8e\u547d\u4ee4\u884c\u6267\u884c\uff1a command = 'python translate/translate.py ' + str(time_limit) + ' ' + self.domain + ' ' + self.problem + ' ' + sas_file_name + ' | grep \"noprint\"'","title":"\u66ff\u6362args\u8f93\u5165\u53c2\u6570\u5b57\u5178\uff0c\u76f4\u63a5\u8f93\u5165\u6211\u60f3\u8981\u7684\u5b57\u5178\uff0c\u5305\u62ec\u4f20\u8fdb\u53bb\u7684\u6570\u503c\u53c2\u6570"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#domainpddltranslatepysas","text":"begin_version 3 end_version begin_metric 0 end_metric 1 begin_variable var0 -1 2 Atom person-at(l1) Atom person-at(l2) end_variable 1 begin_mutex_group 2 0 0 0 1 end_mutex_group begin_state 0 end_state begin_goal 1 0 1 end_goal 2 begin_operator\u6709\u591a\u5c11\u4e2a\u64cd\u4f5c\u5168\u90e8\u90fd\u5199\u5728\u8fd9\u91cc\uff0c\u6bd4\u5982L3\u67094\u4e2a\u64cd\u4f5c move l1 l2 0 1 0 0 0 1 0 end_operator begin_operator move l2 l1 0 1 0 0 1 0 0 end_operator 0\u8fd9\u884c\u56fa\u5b9a\u7684 \u63a5\u7740 p.generate_task(name_sas_file) #\u8bfb\u53d6sas\u6587\u4ef6\uff0c\u4fdd\u5b58\u6570\u636e >>> my_task = p.translate_to_atomic() #\u5b58\u8fdbmy_task\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61my_task\u4e2d Setting atoms # Atoms: 3 Setting initial Setting goal Setting actions # Actions: 4 Setting other actions (0, '/', 4) Setting action card Setting mutexes Setting relevant actions Setting splitting Setting compatible actions (0, '/', 4) 0.00387597084045","title":"\u4f7f\u7528domain\u6587\u4ef6\u548c\u95ee\u9898\u63cf\u8ff0\u6587\u4ef6pddl\u901a\u8fc7translate.py\u751f\u6210\u7ffb\u8bd1\u540e\u7684sas\u6587\u4ef6"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#parsermytask","text":"parser.py\u4e2dp.translate_to_atomic task = MyTask() debug = False#\u8fd9\u4e2a\u5e94\u8be5\u662f\u5f00\u53d1\u7684\u65f6\u5019\u65b9\u4fbf\u8c03\u8bd5\u53ef\u4ee5\u8bbe\u7f6eTrue print('Setting atoms')#\u539f\u5b50\u547d\u9898 task.set_atoms(self.get_atoms(), debug) print('Setting initial')#\u521d\u6001 task.set_initial(self.get_initial_atomic(), debug) print('Setting goal')#\u7ec8\u6001 task.set_goal(self.get_goal_atomic(), debug) print('Setting actions')#\u8bbe\u5b9a\u52a8\u4f5c task.set_actions_atomic(self.get_actions_atomic(), debug) print('Setting mutexes')#\u8bbe\u5b9a\u4e92\u65a5\u91cf\uff1f task.set_mutex_groups(self.get_mutex_groups_atomic(), debug) print('Setting relevant actions')#\u8bbe\u7f6e\u76f8\u5173\u52a8\u4f5c task.set_relevant_actions(debug) print('Setting splitting')#\u5206\u88c2 task.initialize_splitting(debug) start = timer() print('Setting compatible actions')#\u8bbe\u7f6e\u76f8\u5bb9\u53ef\u4ee5\u5e76\u5b58\u7684\u52a8\u4f5c task.create_compatible_actions(debug) print(timer() - start) return task \u800c\u67e5\u770bmy_task\u7c7b\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf class MyTask(): def __init__(self): self.atoms = None # Set self.initial = None # Set of atoms self.goal = None # Set of atoms self.actions = None # Dictionary, name --> [precs, adds, dels] self.action_nondet = {} # name --> list other actions self.action_cardinality = {} # name --> number self.mutex_groups = None # list of list; each sub-list has atoms belonging to the same mutex group self.compatible_actions = {} # action name --> set of compatible actions self.mutex_groups_set = [] # list of sets of mutex groups self.relevant_actions_atom = {} # dictionary: atom --> relevant actions self.relevant_actions_atom_aname = {} # dictionary: (atom, a_name) --> relevant actions self.action_names = None # set self.other_actions_name = {} # Dictionary name --> list of other actions self.action_name_to_actions = {} # action_name --> list of actions ...... def is_fair(self): for a in self.actions: if '_unfair_' in a: return False return True ...... \u56de\u5230main.py fair = my_task.is_fair()#\u5224\u65adTrue/False,demo p03 is True,\u672c\u9898\u8bbe\u7f6e\u4e3aTrue print_policy = True if params['policy'] == 0: print_policy = False strong = True if params['strong'] == 0: strong = False show_gen_info = True if params['gen_info'] == 0: show_gen_info = False #\u6839\u636e\u8f93\u5165\u53c2\u6570\u51b3\u5b9a\u663e\u793a\u7ed3\u679c cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong) #\u91cd\u70b9\uff0c\u6839\u636e\u516c\u5f0f\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4f7f\u7528fair\uff0cstrong\u53d6\u503c\u51b3\u5b9a\u7b56\u7565","title":"\u5728Parser\u7c7b\u7684\u65b9\u6cd5\u4e2d\u7ffb\u8bd1\u6210\uff0c\u4fdd\u5b58\u6210mytask\u7c7b\u7684\u6570\u636e\uff1a"},{"location":"SolversBaseOnPDDL/GP_Numerical/QNP_FONS_SAT/%E4%BE%8B%E8%A7%A3FOND%2BCNF/#_3","text":"solver_time = [] for i in range(1000): cnf = CNF(name_formula_file, name_formula_file_extra, fair, strong)#\u6587\u4ef6formula-temp.txt\u8fd9\u65f6\u5019\u662f\u7a7a\u767d\u7684\uff0cformula-extra-temp\u6b64\u65f6\u7a7a\u767d\uff0c\u4ec5\u4ec5\u662f\u4f20\u5165\u5730\u5740\u65b9\u4fbf\u6700\u7ec8\u7ed3\u679c\u5b58\u5165\u6570\u636e ...... cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info)#\u751f\u6210\u5b50\u53e5Clauses\u548c\u5199\u5165cnf\u6587\u4ef6\u5408\u53d6\u8303\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801!!!\u6bcf\u6b21\u5faa\u73afk\u8ffd\u52a0nk,\u6bd4\u5982\u4f8b\u5b50\u4e2dcontrollerStates = ['n0', 'ng'] ...... command = './minisat %s %s' % (name_formula_file, name_output_satsolver)#\u8c03\u7528minisat ...... result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy)#\u8bfb\u53d6\u6587\u4ef6name_output_satsolver : outsat-temp.txt\u8f93\u51fa\u7ed3\u679c ...... \u56e0\u4e3a\u5927\u5faa\u73af\u5bf9\u6253\u65ad\uff0c\u6240\u4ee5\u6211\u5728\u5927\u5faa\u73af\u533a\u57df\u4e0a\u4e0b\u52a0\u5206\u5272\u7ebf solver_time = [] for i in range(1000): if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') controllerStates = generateControllerStates(i * params['inc']) print('=================================================') print('Trying with %i states' % len(controllerStates)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) print('# Atoms: %i' % len(my_task.get_atoms())) print('# Actions: %i' % len(my_task.get_actions())) '''\u8f93\u51fa \u7b2c\u4e00\u904d ================================================= Trying with 2 states Looking for strong plans: True Fair actions: True # Atoms: 3 # Actions: 4 \u7b2c\u4e8c\u904d3 states\u6709\u7b54\u6848 ================================================= Trying with 3 states Looking for strong plans: True Fair actions: True # Atoms: 3 # Actions: 4 ''' cnf.reset() start_g = timer() cnf.generate_clauses(my_task, 'n0', 'ng', controllerStates, len(controllerStates), p, show_gen_info) print('SAT formula generation time = %f' % (timer() - start_g)) print('# Clauses = %i' % cnf.getNumberClauses()) print('# Variables = %i' % cnf.getNumberVariables()) '''\u8f93\u51fa \u7b2c\u4e00\u904d SAT formula generation time = 0.000691 # Clauses = 99 # Variables = 32 \u7b2c\u4e8c\u904d SAT formula generation time = 0.001249 # Clauses = 234 # Variables = 66 ''' if timer() - time_start > time_limit - time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') print('Creating formula...') name_final = cnf.generateInputSat(name_formula_file) print('Done creating formula. Calling solver...') '''\u8f93\u51fa \u7b2c\u4e00\u904d Creating formula... Done creating formula. Calling solver... \u7b2c\u4e8c\u904d Creating formula... Done creating formula. Calling solver... ''' start_solv = timer() time_for_sat = int(time_limit - (timer() - time_start)) if time_for_sat < time_buffer: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME') command = './minisat %s %s' % (name_formula_file, name_output_satsolver) # command = '/path/to/SATsolver/minisat -mem-lim=%i -cpu-lim=%i %s %s' % (mem_limit, time_for_sat, name_formula_file, name_output_satsolver) print('SAT solver called with %i MB and %i seconds' % (mem_limit, time_for_sat)) '''\u8f93\u51fa \u7b2c\u4e00\u904d SAT solver called with 4096 MB and 1287 seconds \u7b2c\u4e8c\u904d SAT solver called with 4096 MB and 1286 seconds ''' os.system(command) '''\u8c03\u7528minisat\u6c42\u89e3\u5f97\u5230\u8f93\u51fa\uff1a \u7b2c\u4e00\u904d restarts : 0 conflicts : 0 (0 /sec) decisions : 0 (0 /sec) propagations : 19 (1216 /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.79 MB CPU time : 0.015625 s UNSATISFIABLE\u7b2c\u4e00\u904d2 states\u6ca1\u627e\u5230\u7b54\u6848 \u7b2c\u4e8c\u904d\u627e\u5230\u7b54\u6848 ==================================[MINISAT]=================================== | Conflicts | ORIGINAL | LEARNT | Progress | | | Clauses Literals | Limit Clauses Literals Lit/Cl | | ============================================================================== | 0 | 52 240 | 17 0 0 -nan | 0.000 % | ============================================================================== restarts : 1 conflicts : 0 (-nan /sec) decisions : 3 (inf /sec) propagations : 66 (inf /sec) conflict literals : 0 (-nan % deleted) Memory used : 13.79 MB CPU time : 0 s SATISFIABLE\u7b2c\u4e8c\u904d3 states\u6ee1\u8db3 ''' end_solv = timer() solver_time.append(end_solv - start_solv) print('Done solver. Round time: %f' % (end_solv - start_solv)) print('Cumulated solver time: %f' % sum(solver_time)) '''\u8f93\u51fa \u7b2c\u4e00\u904d 5120 Done solver. Round time: 0.164243 Cumulated solver time: 0.164243 \u7b2c\u4e8c\u904d ''' result = cnf.parseOutput(name_output_satsolver, controllerStates, p, print_policy) if result is None: clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, '-> OUT OF TIME/MEM')#\u8d85\u51fa\u9650\u5b9a\u7684\u5185\u5b58\u548c\u65f6\u95f4\u4e5f\u627e\u4e0d\u5230\u7b54\u6848\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u89e3 if result: break print('UNSATISFIABLE')#\u65e0\u89e3 '''\u8f93\u51fa \u7b2c\u4e00\u904d2 states\u6ca1\u7ed3\u679cUNSATISFIABLE \u7b2c\u4e8c\u904d 2560 Done solver. Round time: 0.208893 Cumulated solver time: 0.373136 \u548c\u7b2c\u4e00\u6b21\u4e0d\u540c\u7684\u662f\u8fd9\u6b21\u6709\u89e3\uff0c\u8f93\u51fa\u7b54\u6848\u7b56\u7565\u8f68\u8ff9\u5e8f\u5217\u3002 \u8fd9\u90e8\u5206\u662f\u6839\u636eCNF.py\u4e2d\u7684def parseOutput(self, nameFile, controllerStates, parser, print_policy = False):\u7684\u8f93\u51fa\u7ed3\u679c =================== =================== Controller -- CS = Controller State =================== =================== Atom (CS) ___________________ ---------- Atom person-at(l1) (n0) ---------- Atom person-at(l2) (n1) ---------- Atom person-at(l3) (ng) =================== =================== (CS, Action with arguments) ___________________ (n0,move) (n0,move(l1,l2)) (n1,move(l2,l3)) (n1,move) =================== =================== (CS, Action name, CS) ___________________ (n0,move,n1) (n1,move,ng) =================== (CS, CS) ___________________ (n1,ng) (n0,n1) =================== Solved with 3 states ''' \u6838\u5fc3\u5faa\u73af\u5230\u6b64\u7ed3\u675f main.py\u5feb\u7ed3\u675f\u4e86 print('Elapsed total time (s): %f' % (timer() - time_start)) print('Elapsed solver time (s): %f' % sum(solver_time)) print('Elapsed solver time (s): %s' % str(solver_time)) print('Looking for strong plans: %s' % str(strong)) print('Fair actions: %s' % str(fair)) clean_and_exit(name_formula_file, name_output_satsolver, name_sas_file, name_formula_file_extra, name_final, 'Done')#\u6e05\u7406\u4e2d\u95f4\u6587\u4ef6","title":"\u63a5\u4e0b\u6765\u8fd9\u4e2a\u5927\u5faa\u73af\u5c31\u662f\u9ad8\u6f6e\u90e8\u5206\uff1a\u6ce8\u610f\u7559\u610f\u91cd\u70b9\uff1a"},{"location":"Syntax/PDDL%20axioms/","text":"PDDL axioms https://icaps16.icaps-conference.org/proceedings/summer-school/Rintanen.pdf Computational Complexity in AutomatedPlanning and Scheduling PDDL\u65f6\u95f4\u4e0a\u770b\u4e0d\u662f\u56fe\u7075\u5b8c\u5907\uff0c\u56e0\u4e3a\u4e0d\u662f\u65e0\u9650\u957f\u7684\u7eb8\u5e26 [In defense of PDDL axioms]( https://www.sciencedirect.com/science/article/pii/S0004370205000810 <domain> ::= (define (domain <name>) [<constant-def>] [<predicates-def>] [<axiom-def>*] <action-def>*) <constants-def> ::= (:constants <name>+) <predicate-def> ::= (:predicates <skeleton>+) <skeleton> ::= (<predicate> <variable>*) <predicate> ::= <name> <variable> ::= ?<name> <axiom-def> ::= (:derived <skeleton> <formula>) <formula> ::= <atomic-formula> <formula> ::= (not <formula>) <formula> ::= (and <formula> <formula>+) <formula> ::= (or <formula> <formula>+) <formula> ::= (imply <formula> <formula>) <formula> ::= (exists (<variable>+) <formula>) <formula> ::= (forall (<variable>+) <formula>) <atomic-formula> ::= (<predicate> <term>*) <ground-atomic-formula> ::= (<predicate> <name>*) <term> ::= <name> <term> ::= <variable> <action-def> ::= (:action <name>:parameters (<variable>*)<action-def body>) <action-def body> ::= [:precondition <formula>]:effect <eff-formula> <eff-formula> ::= <one-eff-formula> <eff-formula> ::= (and <one-eff-formula><one-eff-formula>+) <one-eff-formula> ::= <atomic-effs> <one-eff-formula> ::= (when <formula> <atomic-effs>) <one-eff-formula> ::= (forall (<variable>+) <atomic-effs>) <one-eff-formula> ::= (forall (<variable>+)(when <formula> <atomic-effs>)) <atomic-effs> ::= <literal> <atomic-effs> ::= (and <literal> <literal>+) <literal> ::= <atomic-formula> <literal> ::= (not <atomic-formula>) <task> ::= (define (task <name>)(:domain <name>)<object declaration><init><goal>) <object declaration> ::= (:objects <name>*) <init> ::= (:init <ground-atomic-formula>*) <goal> ::= (:goal <formula>)","title":"\u8bed\u6cd5\u603b\u89c8"},{"location":"Syntax/PDDLParser/","text":"pddl3BNF https://github.com/nergmada/planning-wiki/blob/master/_citedpapers/pddl3bnf.pdf PDDLParser https://cn.bing.com/search?q=PDDL+parser&ensearch=1&FORM=BESBTP&PC=U316 \u5408\u96c6 github.com/topics/pddl python github.com/pucrs-automated-planning/pddl-parser github.com/boompig/pddl-parser-2 github.com/makintunde/ply-pddl-parser java github.com/gerryai/pddl-parser universal-pddl-parser https://github.com/wisdompoet/universal-pddl-parser https://www.upf.edu/web/ai-ml/universal-pddl-parser \u5176\u5b66\u6821\u4ecb\u7ecd\u8f6f\u4ef6\u7684\u7f51\u9875 AIG\u8f6f\u4ef6\u8d44\u6599\u5e93 UPF\u4eba\u5de5\u667a\u80fd\u4e0e\u673a\u5668\u5b66\u4e60\u5c0f\u7ec4\uff0c\u5df4\u585e\u7f57\u90a3","title":"Parser"},{"location":"Usage/LocalSolvers/","text":"","title":"\u672c\u5730\u73af\u5883\u4f7f\u7528"},{"location":"Usage/OnlineSolver/","text":"","title":"\u7ebf\u4e0a\u6c42\u89e3\u5668\u4f7f\u7528"},{"location":"Usage/VSCode/","text":"Every time you run Visual studio code you can see this","title":"Visual Studio Code\u4f7f\u7528"}]}